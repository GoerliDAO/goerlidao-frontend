{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC1155BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts_",
          "type": "uint256[]"
        }
      ],
      "name": "batchRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        }
      ],
      "name": "getTokenNameAndSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016002553480156200001657600080fd5b5060405162004d3838038062004d3883398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051614b7e620001ba600039600081816111940152612a2d0152600081816113f80152611d840152614b7e6000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b5f565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bb9565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613bea565b6106ca565b005b61027a61028a366004613c07565b6107ce565b61027a61029d366004613cb2565b6108d2565b61027a6102b0366004613def565b610cc7565b6102c86102c3366004613eb3565b610dfa565b604051610208929190613f42565b6102e96102e4366004613f70565b610eb4565b6040516102089190613fdc565b610380610304366004613eb3565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614020565b61102c565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c07565b6114e3565b61027a61041e366004614071565b611640565b61027a610431366004613bea565b6116c3565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614093565b6117e2565b61027a61049c3660046140da565b611897565b6004546102509065ffffffffffff1681565b61027a6104c1366004613bea565b61192e565b6104d96104d4366004614108565b611a3f565b60408051928352602083019190915201610208565b6102506104fc366004613c07565b611e2f565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c07565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614093565b611e6d565b610250620186a081565b6101fe610574366004614149565b600560209081526000928352604080842090915290825290205481565b61022461059f366004614149565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd366004613f70565b611f1b565b61027a6105e0366004614177565b612027565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b84831461093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff8916148061098f575073ffffffffffffffffffffffffffffffffffffffff8816600090815260076020908152604080832033845290915290205460ff165b6109f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b87811015610ace57888882818110610a1557610a156141f3565b905060200201359250868682818110610a3057610a306141f3565b73ffffffffffffffffffffffffffffffffffffffff8e16600090815260066020908152604080832089845282528220805493909102949094013595508593925090610a7c908490614251565b909155505073ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020908152604080832086845290915281208054849290610ac1908490614268565b90915550506001016109fb565b508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610b4994939291906142cf565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff89163b15610c3b576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff8b169063bc197c8190610bd09033908f908e908e908e908e908e908e9060040161434a565b6020604051808303816000875af1158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1391906143bb565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c55565b73ffffffffffffffffffffffffffffffffffffffff891615155b610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050505050505050565b600254600114610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610def576000848281518110610d5857610d586141f3565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610ddc5733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610ddc908683612442565b505080610de8906143d8565b9050610d3c565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ea7916125b2565b9097909650945050505050565b6060838214610f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8367ffffffffffffffff811115610f3857610f38613d71565b604051908082528060200260200182016040528015610f61578160200160208202803683370190505b50905060005b848110156110235760066000878784818110610f8557610f856141f3565b9050602002016020810190610f9a9190613c07565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858584818110610fe857610fe86141f3565b90506020020135815260200190815260200160002054828281518110611010576110106141f3565b6020908102919091010152600101610f67565b50949350505050565b60008060025460011461109b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110e4908a9065ffffffffffff16620186a0612953565b73ffffffffffffffffffffffffffffffffffffffff8c16600090815260036020526040812054600454929350909183916111409161112d9165ffffffffffff9081169116614410565b8c9065ffffffffffff16620186a0612953565b61114a9190614251565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff919061443a565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa158015611270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190614457565b50919b509950975090915060009050836112ae868f614251565b6112b89190614251565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611308939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906144d4565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113dc9190614268565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290611445908490614268565b9091555061146090508b8b8561145b8587614268565b612a25565b600061146e8e8589886130cc565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114c2929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115c657506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c691906144ed565b6115cf57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116ba8282613163565b50506001600255565b6116f1336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b611757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff908116908216111561179f576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836117f36201518085614539565b60405160200161185992919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61195c336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b6119c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a06576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611aae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ac16201518086614539565b611ace906201518061455e565b9050428165ffffffffffff161015611b12576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b1e87836117e2565b60008181526008602052604090205490915060ff16611b8f576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2091906144d4565b9050611c4473ffffffffffffffffffffffffffffffffffffffff89163330896132c9565b611c4e8682614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdc91906144d4565b1015611d14576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e0857600454600090611d6d90611d5a9065ffffffffffff660100000000000082048116911661458c565b889065ffffffffffff16620186a0612953565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611dd6908490614268565b90915550611df090503384611deb848b614251565b61343a565b82611dfb8289614251565b9550955050505050611e20565b611e1333838861343a565b509250839150611e209050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff9081169116614410565b6000600254600114611edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611eeb84846117e2565b60008181526008602052604090205490915060ff16611f0f57611f0f81858561347d565b60016002559392505050565b600254600114611f87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fc5576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561201a5761200a868683818110611fe557611fe56141f3565b90506020020135858584818110611ffe57611ffe6141f3565b90506020020135613163565b612013816143d8565b9050611fc8565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff8716148061207b575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6120e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260066020908152604080832087845290915281208054859290612121908490614251565b909155505073ffffffffffffffffffffffffffffffffffffffff8516600090815260066020908152604080832087845290915281208054859290612166908490614268565b9091555050604080518581526020810185905273ffffffffffffffffffffffffffffffffffffffff808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff85163b156122a9576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff87169063f23a6e619061223e9033908b908a908a908a908a906004016145b3565b6020604051808303816000875af115801561225d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228191906143bb565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122c3565b73ffffffffffffffffffffffffffffffffffffffff851615155b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061241557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241591906144ed565b8061243a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124d99190614605565b6000604051808303816000865af19150503d8060008114612516576040519150601f19603f3d011682016040523d82523d6000602084013e61251b565b606091505b509150915081801561254557508051158061254557508080602001905181019061254591906144ed565b6125ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b5050505050565b60608060008080806125c76201518088614621565b905060006125d88262010bd9614635565b6125e59062253d8c614635565b9050600062023ab16125f88360046146a9565b6126029190614765565b905060046126138262023ab16146a9565b61261e906003614635565b6126289190614765565b61263290836147cd565b9150600062164b09612645846001614635565b61265190610fa06146a9565b61265b9190614765565b9050600461266b826105b56146a9565b6126759190614765565b61267f90846147cd565b61268a90601f614635565b9250600061098f61269c8560506146a9565b6126a69190614765565b9050600060506126b88361098f6146a9565b6126c29190614765565b6126cc90866147cd565b90506126d9600b83614765565b94506126e685600c6146a9565b6126f1836002614635565b6126fb91906147cd565b9150848361270a6031876147cd565b6127159060646146a9565b61271f9190614635565b6127299190614635565b985090965094506000935061274e92506127499150612710905086614841565b6136fb565b90506000600a841061276857612763846136fb565b612791565b612771846136fb565b6040516020016127819190614855565b6040516020818303038152906040525b90506000600a84106127ab576127a6846136fb565b6127d4565b6127b4846136fb565b6040516020016127c49190614855565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612821573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612867919081019061489a565b83838360405160200161287d9493929190614943565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261291f919081019061489a565b83838360405160200161293594939291906149f8565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129aa576000841161299f57600080fd5b508290049050612a1e565b8084116129b657600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8691815260200190565b602060405180830381865afa158015612aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac7919061443a565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0191815260200190565b60c060405180830381865afa158015612b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b429190614457565b5050935093509350935060008588612b5a9190614251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bee91906144d4565b9050612c1273ffffffffffffffffffffffffffffffffffffffff841633308c6132c9565b612c1c8982614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612caa91906144d4565b1015612ce2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1957612d1f73ffffffffffffffffffffffffffffffffffffffff84168684612442565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db091906144d4565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2957600080fd5b505af1158015612e3d573d6000803e3d6000fd5b505050508881612e4d9190614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edb91906144d4565b1015612f13576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610cbb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612faa91906144d4565b9050612fce73ffffffffffffffffffffffffffffffffffffffff861688308c6132c9565b612fd88982614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613042573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306691906144d4565b101561309e576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130bf73ffffffffffffffffffffffffffffffffffffffff85168885612442565b5050505050505050505050565b600065ffffffffffff8216156131425762015180806130eb4285614410565b6130f59190614539565b6130ff919061455e565b9050600061310d84836117e2565b60008181526008602052604090205490915060ff166131315761313181858461347d565b61313c86828761343a565b5061243a565b61243a73ffffffffffffffffffffffffffffffffffffffff84168686612442565b60008281526008602052604090205460ff166131ab576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132935760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b61329e338484613852565b60208101516132c49073ffffffffffffffffffffffffffffffffffffffff163384612442565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916133689190614605565b6000604051808303816000865af19150503d80600081146133a5576040519150601f19603f3d011682016040523d82523d6000602084013e6133aa565b606091505b50915091508180156133d45750805115806133d45750808060200190518101906133d491906144ed565b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b6000828152600860205260408120600101805483929061345b908490614268565b925050819055506132c483838360405180602001604052806000815250613884565b600061348c6201518083614539565b613499906201518061455e565b9050428165ffffffffffff1610156134dd576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061357c9190614a7e565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361373e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156137685780613752816143d8565b91506137619050600a83614621565b9150613742565b60008167ffffffffffffffff81111561378357613783613d71565b6040519080825280601f01601f1916602001820160405280156137ad576020820181803683370190505b509050815b8515611023576137c3600182614251565b905060006137d2600a88614621565b6137dd90600a614aa1565b6137e79088614251565b6137f2906030614ade565b905060008160f81b90508084848151811061380f5761380f6141f3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613849600a89614621565b975050506137b2565b60008281526008602052604081206001018054839290613873908490614251565b909155506132c49050838383613a8a565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138c4908490614268565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a04576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e6190613999903390600090899089908990600401614b03565b6020604051808303816000875af11580156139b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139dc91906143bb565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a1e565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613aca908490614251565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b4c57600080fd5b50565b8035613b5a81613b2a565b919050565b60008060408385031215613b7257600080fd5b8235613b7d81613b2a565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b4c57600080fd5b600060208284031215613bcb57600080fd5b8135612a1e81613b8b565b65ffffffffffff81168114613b4c57600080fd5b600060208284031215613bfc57600080fd5b8135612a1e81613bd6565b600060208284031215613c1957600080fd5b8135612a1e81613b2a565b60008083601f840112613c3657600080fd5b50813567ffffffffffffffff811115613c4e57600080fd5b6020830191508360208260051b8501011115613c6957600080fd5b9250929050565b60008083601f840112613c8257600080fd5b50813567ffffffffffffffff811115613c9a57600080fd5b602083019150836020828501011115613c6957600080fd5b60008060008060008060008060a0898b031215613cce57600080fd5b8835613cd981613b2a565b97506020890135613ce981613b2a565b9650604089013567ffffffffffffffff80821115613d0657600080fd5b613d128c838d01613c24565b909850965060608b0135915080821115613d2b57600080fd5b613d378c838d01613c24565b909650945060808b0135915080821115613d5057600080fd5b50613d5d8b828c01613c70565b999c989b5096995094979396929594505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613de757613de7613d71565b604052919050565b60008060408385031215613e0257600080fd5b823567ffffffffffffffff80821115613e1a57600080fd5b818501915085601f830112613e2e57600080fd5b8135602082821115613e4257613e42613d71565b8160051b9250613e53818401613da0565b8281529284018101928181019089851115613e6d57600080fd5b948201945b84861015613e975785359350613e8784613b2a565b8382529482019490820190613e72565b9650613ea69050878201613b4f565b9450505050509250929050565b600060208284031215613ec557600080fd5b5035919050565b60005b83811015613ee7578181015183820152602001613ecf565b83811115613a845750506000910152565b60008151808452613f10816020860160208601613ecc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613f556040830185613ef8565b8281036020840152613f678185613ef8565b95945050505050565b60008060008060408587031215613f8657600080fd5b843567ffffffffffffffff80821115613f9e57600080fd5b613faa88838901613c24565b90965094506020870135915080821115613fc357600080fd5b50613fd087828801613c24565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561401457835183529284019291840191600101613ff8565b50909695505050505050565b600080600080600060a0868803121561403857600080fd5b853561404381613b2a565b9450602086013561405381613b2a565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561408457600080fd5b50508035926020909101359150565b600080604083850312156140a657600080fd5b82356140b181613b2a565b915060208301356140c181613bd6565b809150509250929050565b8015158114613b4c57600080fd5b600080604083850312156140ed57600080fd5b82356140f881613b2a565b915060208301356140c1816140cc565b60008060006060848603121561411d57600080fd5b833561412881613b2a565b9250602084013561413881613bd6565b929592945050506040919091013590565b6000806040838503121561415c57600080fd5b823561416781613b2a565b915060208301356140c181613b2a565b60008060008060008060a0878903121561419057600080fd5b863561419b81613b2a565b955060208701356141ab81613b2a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156141d557600080fd5b6141e189828a01613c70565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561426357614263614222565b500390565b6000821982111561427b5761427b614222565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156142b257600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006142e3604083018688614280565b82810360208401526142f6818587614280565b979650505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff808b168352808a1660208401525060a0604083015261438460a08301888a614280565b8281036060840152614397818789614280565b905082810360808401526143ac818587614301565b9b9a5050505050505050505050565b6000602082840312156143cd57600080fd5b8151612a1e81613b8b565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361440957614409614222565b5060010190565b600065ffffffffffff80831681851680830382111561443157614431614222565b01949350505050565b60006020828403121561444c57600080fd5b8151612a1e81613b2a565b60008060008060008060c0878903121561447057600080fd5b865161447b81613b2a565b602088015190965061448c81613b2a565b604088015190955061449d81613b2a565b60608801519094506144ae81613b2a565b60808801519093506144bf81613bd6565b8092505060a087015190509295509295509295565b6000602082840312156144e657600080fd5b5051919050565b6000602082840312156144ff57600080fd5b8151612a1e816140cc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff808416806145525761455261450a565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561458357614583614222565b02949350505050565b600065ffffffffffff838116908316818110156145ab576145ab614222565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301526145f960a083018486614301565b98975050505050505050565b60008251614617818460208701613ecc565b9190910192915050565b6000826146305761463061450a565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561466f5761466f614222565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156146a3576146a3614222565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156146ea576146ea614222565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561472557614725614222565b6000871292508782058712848416161561474157614741614222565b8785058712818416161561475757614757614222565b505050929093029392505050565b6000826147745761477461450a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156147c8576147c8614222565b500590565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561480757614807614222565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561483b5761483b614222565b50500390565b6000826148505761485061450a565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161488d816001850160208701613ecc565b9190910160010192915050565b6000602082840312156148ac57600080fd5b815167ffffffffffffffff808211156148c457600080fd5b818401915084601f8301126148d857600080fd5b8151818111156148ea576148ea613d71565b61491b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613da0565b915080825285602082850101111561493257600080fd5b611023816020840160208601613ecc565b60008551614955818460208a01613ecc565b7f2000000000000000000000000000000000000000000000000000000000000000908301908152855161498f816001840160208a01613ecc565b8082019150507f2d0000000000000000000000000000000000000000000000000000000000000080600183015285516149cf816002850160208a01613ecc565b600292019182015283516149ea816003840160208801613ecc565b016003019695505050505050565b60008551614a0a818460208a01613ecc565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614a44816001840160208a01613ecc565b8551910190614a5a816001840160208901613ecc565b8451910190614a70816001840160208801613ecc565b016001019695505050505050565b600060208284031215614a9057600080fd5b815160ff81168114612a1e57600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614ad957614ad9614222565b500290565b600060ff821660ff84168060ff03821115614afb57614afb614222565b019392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526142f660a0830184613ef856fea2646970667358221220b030c66ab95c6f2d7136a1480cc4b3f3e4e3de2f9fd8c1efddad67fcc9d6340664736f6c634300080f0033",
    "sourceMap": "1527:9600:179:-:0;;;451:1:14;426:26;;2015:208:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:7;:14;;-1:-1:-1;;;;;;671:14:7;;;-1:-1:-1;;;;;671:14:7;;;;;;;;-1:-1:-1;695:22:7;;;;;;;;;;;;733:32;;2174:9:179;;2185:11;;671:14:7;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:7;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3857:21:178;;::::1;;::::0;-1:-1:-1;3889:25:178::1;;::::0;-1:-1:-1;;3991:11:178::1;:15:::0;;-1:-1:-1;;;;;;4017:21:178;;;-1:-1:-1;1527:9600:179;;-1:-1:-1;1527:9600:179;14:131:183;-1:-1:-1;;;;;89:31:183;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:183;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:183;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:183;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:183;;-1:-1:-1;;150:698:183:o;:::-;1527:9600:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b5f565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bb9565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613bea565b6106ca565b005b61027a61028a366004613c07565b6107ce565b61027a61029d366004613cb2565b6108d2565b61027a6102b0366004613def565b610cc7565b6102c86102c3366004613eb3565b610dfa565b604051610208929190613f42565b6102e96102e4366004613f70565b610eb4565b6040516102089190613fdc565b610380610304366004613eb3565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614020565b61102c565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c07565b6114e3565b61027a61041e366004614071565b611640565b61027a610431366004613bea565b6116c3565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614093565b6117e2565b61027a61049c3660046140da565b611897565b6004546102509065ffffffffffff1681565b61027a6104c1366004613bea565b61192e565b6104d96104d4366004614108565b611a3f565b60408051928352602083019190915201610208565b6102506104fc366004613c07565b611e2f565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c07565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614093565b611e6d565b610250620186a081565b6101fe610574366004614149565b600560209081526000928352604080842090915290825290205481565b61022461059f366004614149565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd366004613f70565b611f1b565b61027a6105e0366004614177565b612027565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b84831461093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff8916148061098f575073ffffffffffffffffffffffffffffffffffffffff8816600090815260076020908152604080832033845290915290205460ff165b6109f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b87811015610ace57888882818110610a1557610a156141f3565b905060200201359250868682818110610a3057610a306141f3565b73ffffffffffffffffffffffffffffffffffffffff8e16600090815260066020908152604080832089845282528220805493909102949094013595508593925090610a7c908490614251565b909155505073ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020908152604080832086845290915281208054849290610ac1908490614268565b90915550506001016109fb565b508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610b4994939291906142cf565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff89163b15610c3b576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff8b169063bc197c8190610bd09033908f908e908e908e908e908e908e9060040161434a565b6020604051808303816000875af1158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1391906143bb565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c55565b73ffffffffffffffffffffffffffffffffffffffff891615155b610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050505050505050565b600254600114610d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610def576000848281518110610d5857610d586141f3565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610ddc5733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610ddc908683612442565b505080610de8906143d8565b9050610d3c565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ea7916125b2565b9097909650945050505050565b6060838214610f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8367ffffffffffffffff811115610f3857610f38613d71565b604051908082528060200260200182016040528015610f61578160200160208202803683370190505b50905060005b848110156110235760066000878784818110610f8557610f856141f3565b9050602002016020810190610f9a9190613c07565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858584818110610fe857610fe86141f3565b90506020020135815260200190815260200160002054828281518110611010576110106141f3565b6020908102919091010152600101610f67565b50949350505050565b60008060025460011461109b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110e4908a9065ffffffffffff16620186a0612953565b73ffffffffffffffffffffffffffffffffffffffff8c16600090815260036020526040812054600454929350909183916111409161112d9165ffffffffffff9081169116614410565b8c9065ffffffffffff16620186a0612953565b61114a9190614251565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff919061443a565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa158015611270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190614457565b50919b509950975090915060009050836112ae868f614251565b6112b89190614251565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611308939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906144d4565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113dc9190614268565b909155505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290611445908490614268565b9091555061146090508b8b8561145b8587614268565b612a25565b600061146e8e8589886130cc565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114c2929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115c657506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c691906144ed565b6115cf57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116ba8282613163565b50506001600255565b6116f1336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b611757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff908116908216111561179f576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836117f36201518085614539565b60405160200161185992919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61195c336000357fffffffff0000000000000000000000000000000000000000000000000000000016612331565b6119c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a06576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611aae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ac16201518086614539565b611ace906201518061455e565b9050428165ffffffffffff161015611b12576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b1e87836117e2565b60008181526008602052604090205490915060ff16611b8f576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2091906144d4565b9050611c4473ffffffffffffffffffffffffffffffffffffffff89163330896132c9565b611c4e8682614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdc91906144d4565b1015611d14576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e0857600454600090611d6d90611d5a9065ffffffffffff660100000000000082048116911661458c565b889065ffffffffffff16620186a0612953565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611dd6908490614268565b90915550611df090503384611deb848b614251565b61343a565b82611dfb8289614251565b9550955050505050611e20565b611e1333838861343a565b509250839150611e209050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff9081169116614410565b6000600254600114611edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611eeb84846117e2565b60008181526008602052604090205490915060ff16611f0f57611f0f81858561347d565b60016002559392505050565b600254600114611f87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fc5576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561201a5761200a868683818110611fe557611fe56141f3565b90506020020135858584818110611ffe57611ffe6141f3565b90506020020135613163565b612013816143d8565b9050611fc8565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff8716148061207b575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6120e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260066020908152604080832087845290915281208054859290612121908490614251565b909155505073ffffffffffffffffffffffffffffffffffffffff8516600090815260066020908152604080832087845290915281208054859290612166908490614268565b9091555050604080518581526020810185905273ffffffffffffffffffffffffffffffffffffffff808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff85163b156122a9576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff87169063f23a6e619061223e9033908b908a908a908a908a906004016145b3565b6020604051808303816000875af115801561225d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228191906143bb565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122c3565b73ffffffffffffffffffffffffffffffffffffffff851615155b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b505050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061241557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241591906144ed565b8061243a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124d99190614605565b6000604051808303816000865af19150503d8060008114612516576040519150601f19603f3d011682016040523d82523d6000602084013e61251b565b606091505b509150915081801561254557508051158061254557508080602001905181019061254591906144ed565b6125ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b5050505050565b60608060008080806125c76201518088614621565b905060006125d88262010bd9614635565b6125e59062253d8c614635565b9050600062023ab16125f88360046146a9565b6126029190614765565b905060046126138262023ab16146a9565b61261e906003614635565b6126289190614765565b61263290836147cd565b9150600062164b09612645846001614635565b61265190610fa06146a9565b61265b9190614765565b9050600461266b826105b56146a9565b6126759190614765565b61267f90846147cd565b61268a90601f614635565b9250600061098f61269c8560506146a9565b6126a69190614765565b9050600060506126b88361098f6146a9565b6126c29190614765565b6126cc90866147cd565b90506126d9600b83614765565b94506126e685600c6146a9565b6126f1836002614635565b6126fb91906147cd565b9150848361270a6031876147cd565b6127159060646146a9565b61271f9190614635565b6127299190614635565b985090965094506000935061274e92506127499150612710905086614841565b6136fb565b90506000600a841061276857612763846136fb565b612791565b612771846136fb565b6040516020016127819190614855565b6040516020818303038152906040525b90506000600a84106127ab576127a6846136fb565b6127d4565b6127b4846136fb565b6040516020016127c49190614855565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612821573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612867919081019061489a565b83838360405160200161287d9493929190614943565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261291f919081019061489a565b83838360405160200161293594939291906149f8565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129aa576000841161299f57600080fd5b508290049050612a1e565b8084116129b657600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8691815260200190565b602060405180830381865afa158015612aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac7919061443a565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0191815260200190565b60c060405180830381865afa158015612b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b429190614457565b5050935093509350935060008588612b5a9190614251565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bee91906144d4565b9050612c1273ffffffffffffffffffffffffffffffffffffffff841633308c6132c9565b612c1c8982614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612caa91906144d4565b1015612ce2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1957612d1f73ffffffffffffffffffffffffffffffffffffffff84168684612442565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db091906144d4565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2957600080fd5b505af1158015612e3d573d6000803e3d6000fd5b505050508881612e4d9190614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edb91906144d4565b1015612f13576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610cbb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612faa91906144d4565b9050612fce73ffffffffffffffffffffffffffffffffffffffff861688308c6132c9565b612fd88982614268565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613042573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306691906144d4565b101561309e576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130bf73ffffffffffffffffffffffffffffffffffffffff85168885612442565b5050505050505050505050565b600065ffffffffffff8216156131425762015180806130eb4285614410565b6130f59190614539565b6130ff919061455e565b9050600061310d84836117e2565b60008181526008602052604090205490915060ff166131315761313181858461347d565b61313c86828761343a565b5061243a565b61243a73ffffffffffffffffffffffffffffffffffffffff84168686612442565b60008281526008602052604090205460ff166131ab576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132935760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b61329e338484613852565b60208101516132c49073ffffffffffffffffffffffffffffffffffffffff163384612442565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916133689190614605565b6000604051808303816000865af19150503d80600081146133a5576040519150601f19603f3d011682016040523d82523d6000602084013e6133aa565b606091505b50915091508180156133d45750805115806133d45750808060200190518101906133d491906144ed565b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b6000828152600860205260408120600101805483929061345b908490614268565b925050819055506132c483838360405180602001604052806000815250613884565b600061348c6201518083614539565b613499906201518061455e565b9050428165ffffffffffff1610156134dd576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061357c9190614a7e565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361373e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156137685780613752816143d8565b91506137619050600a83614621565b9150613742565b60008167ffffffffffffffff81111561378357613783613d71565b6040519080825280601f01601f1916602001820160405280156137ad576020820181803683370190505b509050815b8515611023576137c3600182614251565b905060006137d2600a88614621565b6137dd90600a614aa1565b6137e79088614251565b6137f2906030614ade565b905060008160f81b90508084848151811061380f5761380f6141f3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613849600a89614621565b975050506137b2565b60008281526008602052604081206001018054839290613873908490614251565b909155506132c49050838383613a8a565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138c4908490614268565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a04576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e6190613999903390600090899089908990600401614b03565b6020604051808303816000875af11580156139b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139dc91906143bb565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a1e565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613aca908490614251565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b4c57600080fd5b50565b8035613b5a81613b2a565b919050565b60008060408385031215613b7257600080fd5b8235613b7d81613b2a565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b4c57600080fd5b600060208284031215613bcb57600080fd5b8135612a1e81613b8b565b65ffffffffffff81168114613b4c57600080fd5b600060208284031215613bfc57600080fd5b8135612a1e81613bd6565b600060208284031215613c1957600080fd5b8135612a1e81613b2a565b60008083601f840112613c3657600080fd5b50813567ffffffffffffffff811115613c4e57600080fd5b6020830191508360208260051b8501011115613c6957600080fd5b9250929050565b60008083601f840112613c8257600080fd5b50813567ffffffffffffffff811115613c9a57600080fd5b602083019150836020828501011115613c6957600080fd5b60008060008060008060008060a0898b031215613cce57600080fd5b8835613cd981613b2a565b97506020890135613ce981613b2a565b9650604089013567ffffffffffffffff80821115613d0657600080fd5b613d128c838d01613c24565b909850965060608b0135915080821115613d2b57600080fd5b613d378c838d01613c24565b909650945060808b0135915080821115613d5057600080fd5b50613d5d8b828c01613c70565b999c989b5096995094979396929594505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613de757613de7613d71565b604052919050565b60008060408385031215613e0257600080fd5b823567ffffffffffffffff80821115613e1a57600080fd5b818501915085601f830112613e2e57600080fd5b8135602082821115613e4257613e42613d71565b8160051b9250613e53818401613da0565b8281529284018101928181019089851115613e6d57600080fd5b948201945b84861015613e975785359350613e8784613b2a565b8382529482019490820190613e72565b9650613ea69050878201613b4f565b9450505050509250929050565b600060208284031215613ec557600080fd5b5035919050565b60005b83811015613ee7578181015183820152602001613ecf565b83811115613a845750506000910152565b60008151808452613f10816020860160208601613ecc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613f556040830185613ef8565b8281036020840152613f678185613ef8565b95945050505050565b60008060008060408587031215613f8657600080fd5b843567ffffffffffffffff80821115613f9e57600080fd5b613faa88838901613c24565b90965094506020870135915080821115613fc357600080fd5b50613fd087828801613c24565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561401457835183529284019291840191600101613ff8565b50909695505050505050565b600080600080600060a0868803121561403857600080fd5b853561404381613b2a565b9450602086013561405381613b2a565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561408457600080fd5b50508035926020909101359150565b600080604083850312156140a657600080fd5b82356140b181613b2a565b915060208301356140c181613bd6565b809150509250929050565b8015158114613b4c57600080fd5b600080604083850312156140ed57600080fd5b82356140f881613b2a565b915060208301356140c1816140cc565b60008060006060848603121561411d57600080fd5b833561412881613b2a565b9250602084013561413881613bd6565b929592945050506040919091013590565b6000806040838503121561415c57600080fd5b823561416781613b2a565b915060208301356140c181613b2a565b60008060008060008060a0878903121561419057600080fd5b863561419b81613b2a565b955060208701356141ab81613b2a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156141d557600080fd5b6141e189828a01613c70565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561426357614263614222565b500390565b6000821982111561427b5761427b614222565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156142b257600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006142e3604083018688614280565b82810360208401526142f6818587614280565b979650505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff808b168352808a1660208401525060a0604083015261438460a08301888a614280565b8281036060840152614397818789614280565b905082810360808401526143ac818587614301565b9b9a5050505050505050505050565b6000602082840312156143cd57600080fd5b8151612a1e81613b8b565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361440957614409614222565b5060010190565b600065ffffffffffff80831681851680830382111561443157614431614222565b01949350505050565b60006020828403121561444c57600080fd5b8151612a1e81613b2a565b60008060008060008060c0878903121561447057600080fd5b865161447b81613b2a565b602088015190965061448c81613b2a565b604088015190955061449d81613b2a565b60608801519094506144ae81613b2a565b60808801519093506144bf81613bd6565b8092505060a087015190509295509295509295565b6000602082840312156144e657600080fd5b5051919050565b6000602082840312156144ff57600080fd5b8151612a1e816140cc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff808416806145525761455261450a565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561458357614583614222565b02949350505050565b600065ffffffffffff838116908316818110156145ab576145ab614222565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301526145f960a083018486614301565b98975050505050505050565b60008251614617818460208701613ecc565b9190910192915050565b6000826146305761463061450a565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561466f5761466f614222565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156146a3576146a3614222565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156146ea576146ea614222565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561472557614725614222565b6000871292508782058712848416161561474157614741614222565b8785058712818416161561475757614757614222565b505050929093029392505050565b6000826147745761477461450a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156147c8576147c8614222565b500590565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561480757614807614222565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561483b5761483b614222565b50500390565b6000826148505761485061450a565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161488d816001850160208701613ecc565b9190910160010192915050565b6000602082840312156148ac57600080fd5b815167ffffffffffffffff808211156148c457600080fd5b818401915084601f8301126148d857600080fd5b8151818111156148ea576148ea613d71565b61491b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613da0565b915080825285602082850101111561493257600080fd5b611023816020840160208601613ecc565b60008551614955818460208a01613ecc565b7f2000000000000000000000000000000000000000000000000000000000000000908301908152855161498f816001840160208a01613ecc565b8082019150507f2d0000000000000000000000000000000000000000000000000000000000000080600183015285516149cf816002850160208a01613ecc565b600292019182015283516149ea816003840160208801613ecc565b016003019695505050505050565b60008551614a0a818460208a01613ecc565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614a44816001840160208a01613ecc565b8551910190614a5a816001840160208901613ecc565b8451910190614a70816001840160208801613ecc565b016001019695505050505050565b600060208284031215614a9057600080fd5b815160ff81168114612a1e57600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614ad957614ad9614222565b500290565b600060ff821660ff84168060ff03821115614afb57614afb614222565b019392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526142f660a0830184613ef856fea2646970667358221220b030c66ab95c6f2d7136a1480cc4b3f3e4e3de2f9fd8c1efddad67fcc9d6340664736f6c634300080f0033",
    "sourceMap": "1527:9600:179:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:64:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:25:183;;;766:2;751:18;1116:64:11;;;;;;;;4529:340;;;;;;:::i;:::-;;:::i;:::-;;;1411:14:183;;1404:22;1386:41;;1374:2;1359:18;4529:340:11;1246:187:183;3233:31:178;;;;;;;;;;;;;;;1612:14:183;1600:27;;;1582:46;;1570:2;1555:18;3233:31:178;1438:196:183;4087:174:178;;;;;;:::i;:::-;;:::i;:::-;;1944:147:7;;;;;;:::i;:::-;;:::i;2543:1209:11:-;;;;;;:::i;:::-;;:::i;4741:425:178:-;;;;;;:::i;:::-;;:::i;10730:394:179:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3758:583:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1879:54:179:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:14:183;;8836:22;8818:41;;8907:42;8895:55;;;8890:2;8875:18;;8868:83;8999:4;8987:17;;;8967:18;;;8960:45;;;;9053:14;9041:27;;;9036:2;9021:18;;9014:55;9100:3;9085:19;;9078:35;8805:3;8790:19;1879:54:179;8556:563:183;5427:1883:178;;;;;;:::i;:::-;;:::i;:::-;;;;9895:25:183;;;9968:14;9956:27;;;9951:2;9936:18;;9929:55;9868:18;5427:1883:178;9723:267:183;1504:434:7;;;;;;:::i;:::-;;:::i;7061:125:179:-;;;;;;:::i;:::-;;:::i;4504:196:178:-;;;;;;:::i;:::-;;:::i;551:20:7:-;;;;;;;;;;;;10695:42:183;10683:55;;;10665:74;;10653:2;10638:18;551:20:7;10519:226:183;10291:389:179;;;;;;:::i;:::-;;:::i;1629:203:11:-;;;;;;:::i;:::-;;:::i;3003:25:178:-;;;;;;;;;4302:161;;;;;;:::i;:::-;;:::i;4486:1876:179:-;;;;;;:::i;:::-;;:::i;:::-;;;;12314:25:183;;;12370:2;12355:18;;12348:34;;;;12287:18;4486:1876:179;12140:248:183;5207:129:178;;;;;;:::i;:::-;;:::i;578:26:7:-;;;;;;;;;2874:46:178;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7695:398:179;;;;;;:::i;:::-;;:::i;3273:41:178:-;;3311:3;3273:41;;3404:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1187:68:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;7236:361:179;;;;;;:::i;:::-;;:::i;1838:699:11:-;;;;;;:::i;:::-;;:::i;4529:340::-;4605:4;4640:25;;;;;;:100;;-1:-1:-1;4715:25:11;;;;;4640:100;:176;;;-1:-1:-1;4791:25:11;;;;;4640:176;4621:195;4529:340;-1:-1:-1;;4529:340:11:o;4087:174:178:-;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;;;;;;;;;555:1;546:10;;4177:3:178::1;4170:10;::::0;::::1;;4166:45;;;4189:22;;;;;;;;;;;;;;4166:45;4235:10;4222:24;::::0;;;:12:::1;:24;::::0;;;;:31;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;579:6:14;:10;4087:174:178:o;1944:147:7:-;883:33;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;15591:2:183;875:58:7;;;15573:21:183;15630:2;15610:18;;;15603:30;15669:14;15649:18;;;15642:42;15701:18;;875:58:7;15389:336:183;875:58:7;2018:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;2543:1209:11:-;2752:28;;;2744:56;;;;;;;15932:2:183;2744:56:11;;;15914:21:183;15971:2;15951:18;;;15944:30;16010:17;15990:18;;;15983:45;16045:18;;2744:56:11;15730:339:183;2744:56:11;2819:10;:18;;;;;:56;;-1:-1:-1;2841:22:11;;;;;;;:16;:22;;;;;;;;2864:10;2841:34;;;;;;;;;;2819:56;2811:83;;;;;;;16276:2:183;2811:83:11;;;16258:21:183;16315:2;16295:18;;;16288:30;16354:16;16334:18;;;16327:44;16388:18;;2811:83:11;16074:338:183;2811:83:11;2976:10;2996:14;3026:9;3021:352;3041:14;;;3021:352;;;3078:3;;3082:1;3078:6;;;;;;;:::i;:::-;;;;;;;3073:11;;3107:7;;3115:1;3107:10;;;;;;;:::i;:::-;3132:15;;;;;;;:9;3107:10;3132:15;;;;;;;:19;;;;;;;:29;;3107:10;;;;;;;;;;-1:-1:-1;3107:10:11;;3132:19;-1:-1:-1;3132:15:11;:29;;3107:10;;3132:29;:::i;:::-;;;;-1:-1:-1;;3175:13:11;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;3196:6;;3175:13;:27;;3196:6;;3175:27;:::i;:::-;;;;-1:-1:-1;;3345:3:11;;3021:352;;;;3420:2;3388:49;;3414:4;3388:49;;3402:10;3388:49;;;3424:3;;3429:7;;3388:49;;;;;;;;;:::i;:::-;;;;;;;;3469:14;;;;:19;:234;;3542:85;;3651:52;3542:85;;;3651:52;3542:47;;;;3651:52;;3542:85;;3590:10;;3602:4;;3608:3;;;;3613:7;;;;3622:4;;;;3542:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:161;;;3469:234;;;3507:16;;;;;3469:234;3448:297;;;;;;;19709:2:183;3448:297:11;;;19691:21:183;19748:2;19728:18;;;19721:30;19787:18;19767;;;19760:46;19823:18;;3448:297:11;19507:340:183;3448:297:11;2734:1018;;2543:1209;;;;;;;;:::o;4741:425:178:-;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;4853:14:178;;4839:11:::1;4878:281;4898:3;4894:1;:7;4878:281;;;4923:11;4937:7;4945:1;4937:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4985::::1;4962:12;4977:19:::0;;;:7:::1;:19:::0;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;;;;4937:10;;-1:-1:-1;5024:9:178;;5020:128:::1;;5062:10;5083:1;5054:19:::0;;;:7:::1;:19;::::0;;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;:30;;;;5103:29:::1;::::0;5122:3;5127:4;5103:18:::1;:29::i;:::-;4908:251;;4903:3;;;;:::i;:::-;;;4878:281;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;4741:425:178:o;10730:394:179:-;10893:25;10921:23;;;:13;:23;;;;;;;;10893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10847:13;10893:51;;;;;;;;;;;;;;;10847:13;;;;10893:25;;;;11000:84;;:17;:84::i;:::-;10955:129;;;;-1:-1:-1;10730:394:179;-1:-1:-1;;;;;10730:394:179:o;3758:583:11:-;3894:25;3943:27;;;3935:55;;;;;;;15932:2:183;3935:55:11;;;15914:21:183;15971:2;15951:18;;;15944:30;16010:17;15990:18;;;15983:45;16045:18;;3935:55:11;15730:339:183;3935:55:11;4026:6;4012:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4012:28:11;;4001:39;;4211:9;4206:119;4226:17;;;4206:119;;;4282:9;:20;4292:6;;4299:1;4292:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4282:20;;;;;;;;;;;;;;;:28;4303:3;;4307:1;4303:6;;;;;;;:::i;:::-;;;;;;;4282:28;;;;;;;;;;;;4268:8;4277:1;4268:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4245:3;;4206:119;;;;3758:583;;;;;;:::o;5427:1883:178:-;5628:7;5637:6;509::14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;6047:23:178::1;::::0;::::1;5656:17;6047:23:::0;;;:12:::1;:23;::::0;;;;;5656:17;;;;;;;;6032:53:::1;::::0;:7;;6047:23:::1;;3311:3;6032:14;:53::i;:::-;6146:23;::::0;::::1;6096:18;6146:23:::0;;;:12:::1;:23;::::0;;;;;6132:11:::1;::::0;6011:74;;-1:-1:-1;6096:18:178;;6011:74;;6117:67:::1;::::0;6132:37:::1;::::0;6146:23:::1;::::0;;::::1;::::0;6132:11:::1;:37;:::i;:::-;6117:7:::0;;:67:::1;;3311:3;6117:14;:67::i;:::-;:93;;;;:::i;:::-;6267:30;::::0;;;;::::1;::::0;::::1;778:25:183::0;;;6096:114:178;;-1:-1:-1;6238:26:178::1;::::0;6267:25:::1;:11;:25;::::0;::::1;::::0;751:18:183;;6267:30:178::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6388:72;::::0;;;;::::1;::::0;::::1;778:25:183::0;;;6238:59:178;;-1:-1:-1;6312:13:178::1;::::0;6388:35:::1;::::0;::::1;::::0;::::1;::::0;751:18:183;;6388:72:178::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6340:120:178;;-1:-1:-1;6340:120:178;-1:-1:-1;6340:120:178;-1:-1:-1;6340:120:178;;-1:-1:-1;6549:21:178::1;::::0;-1:-1:-1;6596:10:178;6573:20:::1;6583:10:::0;6573:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6549:57;;6630:10;:23;;;6654:3;6659:13;6674;6630:58;;;;;;;;;;;;;;;;21656:25:183::0;;;21712:2;21697:18;;21690:34;;;;21755:2;21740:18;;21733:34;21644:2;21629:18;;21454:319;6630:58:178::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6621:67;;6223:477;;;6797:10;6763:7;:18;6771:9;6763:18;;;;;;;;;;;;;;;:30;6782:10;6763:30;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6818:18:178::1;6826:9;6818:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6852:10;;6818:18;:44:::1;::::0;6852:10;;6818:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6967:63:178::1;::::0;-1:-1:-1;6984:3:178;6989:7;6998:6;7006:23:::1;7019:10:::0;7006;:23:::1;:::i;:::-;6967:16;:63::i;:::-;7138:13;7154:55;7168:10;7180:6;7188:11;7201:7;7154:13;:55::i;:::-;7138:71;;7239:9;7227:39;;7234:3;7227:39;7250:7;7259:6;7227:39;;;;;;12314:25:183::0;;;12370:2;12355:18;;12348:34;12302:2;12287:18;;12140:248;7227:39:178::1;;;;;;;;588:1:14::0;579:6;:10;7287:6:178;;;;-1:-1:-1;5427:1883:178;;-1:-1:-1;;;;;;;;;;;5427:1883:178:o;1504:434:7:-;1775:5;;;;1761:10;:19;;:76;;-1:-1:-1;1784:9:7;;:53;;;;;1802:10;1784:53;;;22228:34:183;1822:4:7;22278:18:183;;;22271:43;1784:9:7;1829:7;;;22330:18:183;;;22323:107;1784:9:7;;;;;:17;;22140:18:183;;1784:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;;;;;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:7;1504:434;:::o;7061:125:179:-;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;7152:26:179::1;7160:8:::0;7170:7;7152::::1;:26::i;:::-;-1:-1:-1::0;;588:1:14;579:6;:10;7061:125:179:o;4504:196:178:-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;15591:2:183;875:58:7;;;15573:21:183;15630:2;15610:18;;;15603:30;15669:14;15649:18;;;15642:42;15701:18;;875:58:7;15389:336:183;875:58:7;4610:11:178::1;::::0;::::1;::::0;;::::1;4598:23:::0;;::::1;;4594:58;;;4630:22;;;;;;;;;;;;;;4594:58;4663:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4504:196::o;10291:389:179:-;10376:7;;10597:11;10610:24;10627:6;10610:7;:24;:::i;:::-;10580:55;;;;;;;;23270:2:183;23266:15;;;;23283:66;23262:88;23250:101;;23389:3;23385:16;23403:66;23381:89;23376:2;23367:12;;23360:111;23496:2;23487:12;;23080:425;10580:55:179;;;;;;;;;;;;;;10570:66;;10580:55;10570:66;;;;;10291:389;-1:-1:-1;;;;10291:389:179:o;1629:203:11:-;1731:10;1714:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;1779:46;;1386:41:183;;;1714:38:11;;1731:10;1779:46;;1359:18:183;1779:46:11;;;;;;;1629:203;;:::o;4302:161:178:-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;15591:2:183;875:58:7;;;15573:21:183;15630:2;15610:18;;;15603:30;15669:14;15649:18;;;15642:42;15701:18;;875:58:7;15389:336:183;875:58:7;4392:3:178::1;4385:4;:10;;;4381:45;;;4404:22;;;;;;;;;;;;;;4381:45;4437:11;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4302:161::o;4486:1876:179:-;4628:7;4637;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;4813:13:179::1;4836:16;4846:6;4836:7:::0;:16:::1;:::i;:::-;4829:33;::::0;4856:6:::1;4829:33;:::i;:::-;4813:49;;4932:15;4923:6;:24;;;4919:59;;;4956:22;;;;;;;;;;;;;;4919:59;4991:15;5009:31;5020:11;5033:6;5009:10;:31::i;:::-;5120:22;::::0;;;:13:::1;:22;::::0;;;;:29;4991:49;;-1:-1:-1;5120:29:179::1;;5115:88;;5158:45;::::0;::::1;::::0;;23998:42:183;23986:55;;5158:45:179::1;::::0;::::1;23968:74:183::0;24090:14;24078:27;;24058:18;;;24051:55;23941:18;;5158:45:179::1;23781:331:183::0;5115:88:179::1;5429:36;::::0;;;;5459:4:::1;5429:36;::::0;::::1;10665:74:183::0;5408:18:179::1;::::0;5429:21:::1;::::0;::::1;::::0;::::1;::::0;10638:18:183;;5429:36:179::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5408:57:::0;-1:-1:-1;5476:64:179::1;:28;::::0;::::1;5505:10;5525:4;5532:7:::0;5476:28:::1;:64::i;:::-;5594:20;5607:7:::0;5594:10;:20:::1;:::i;:::-;5555:36;::::0;;;;5585:4:::1;5555:36;::::0;::::1;10665:74:183::0;5555:21:179::1;::::0;::::1;::::0;::::1;::::0;10638:18:183;;5555:36:179::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5551:110;;;5636:25;;;;;;;;;;;;;;5551:110;5820:17;::::0;::::1;::::0;;::::1;::::0;::::1;5806:11:::0;::::1;:31;5802:553;;;5940:17;::::0;5891::::1;::::0;5911:61:::1;::::0;5926:31:::1;::::0;5940:17:::1;::::0;;::::1;::::0;::::1;::::0;5926:11:::1;:31;:::i;:::-;5911:7:::0;;:61:::1;;3311:3:178;5911:14:179;:61::i;:::-;5987:18;5995:9;5987:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5891:81;;-1:-1:-1;5891:81:179;;5987:31;;:18;:44:::1;::::0;5891:81;;5987:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6085:52:179::1;::::0;-1:-1:-1;6096:10:179::1;6108:7:::0;6117:19:::1;6127:9:::0;6117:7;:19:::1;:::i;:::-;6085:10;:52::i;:::-;6162:7:::0;6171:19:::1;6181:9:::0;6171:7;:19:::1;:::i;:::-;6154:37;;;;;;;;;;5802:553;6261:40;6272:10;6284:7;6293;6261:10;:40::i;:::-;-1:-1:-1::0;6326:7:179;-1:-1:-1;6335:7:179;;-1:-1:-1;6318:25:179::1;::::0;-1:-1:-1;6318:25:179::1;567:1:14;588::::0;579:6;:10;4486:1876:179;;;;-1:-1:-1;4486:1876:179;-1:-1:-1;;4486:1876:179:o;5207:129:178:-;5305:23;;;5265:6;5305:23;;;:12;:23;;;;;;5291:11;;:37;;5305:23;;;;;5291:11;:37;:::i;7695:398:179:-;7822:7;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;7847:15:179::1;7865:32;7876:11:::0;7889:7;7865:10:::1;:32::i;:::-;7965:22;::::0;;;:13:::1;:22;::::0;;;;:29;7847:50;;-1:-1:-1;7965:29:179::1;;7960:101;;8011:38;8019:7;8028:11;8041:7;8011;:38::i;:::-;588:1:14::0;579:6;:10;8078:7:179;7695:398;-1:-1:-1;;;7695:398:179:o;7236:361::-;509:6:14;;519:1;509:11;501:34;;;;;;;15252:2:183;501:34:14;;;15234:21:183;15291:2;15271:18;;;15264:30;15330:12;15310:18;;;15303:40;15360:18;;501:34:14;15050:334:183;501:34:14;555:1;546:10;;7404:9:179;7435:22;;::::1;7431:57;;7466:22;;;;;;;;;;;;;;7431:57;7504:9;7499:91;7519:3;7515:1;:7;7499:91;;;7544:34;7552:9;;7562:1;7552:12;;;;;;;:::i;:::-;;;;;;;7566:8;;7575:1;7566:11;;;;;;;:::i;:::-;;;;;;;7544:7;:34::i;:::-;7524:3;::::0;::::1;:::i;:::-;;;7499:91;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;;;7236:361:179:o;1838:699:11:-;2018:10;:18;;;;;:56;;-1:-1:-1;2040:22:11;;;;;;;:16;:22;;;;;;;;2063:10;2040:34;;;;;;;;;;2018:56;2010:83;;;;;;;16276:2:183;2010:83:11;;;16258:21:183;16315:2;16295:18;;;16288:30;16354:16;16334:18;;;16327:44;16388:18;;2010:83:11;16074:338:183;2010:83:11;2104:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;2127:6;;2104:15;:29;;2127:6;;2104:29;:::i;:::-;;;;-1:-1:-1;;2143:13:11;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;2164:6;;2143:13;:27;;2164:6;;2143:27;:::i;:::-;;;;-1:-1:-1;;2186:48:11;;;12314:25:183;;;12370:2;12355:18;;12348:34;;;2186:48:11;;;;;;;;;2201:10;;2186:48;;12287:18:183;2186:48:11;;;;;;;2266:14;;;;:19;:222;;2339:78;;2441:47;2339:78;;;2441:47;2339:42;;;;2441:47;;2339:78;;2382:10;;2394:4;;2400:2;;2404:6;;2412:4;;;;2339:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:149;;;2266:222;;;2304:16;;;;;2266:222;2245:285;;;;;;;19709:2:183;2245:285:11;;;19691:21:183;19748:2;19728:18;;;19721:30;19787:18;19767;;;19760:46;19823:18;;2245:285:11;19507:340:183;2245:285:11;1838:699;;;;;;:::o;958:540:7:-;1078:9;;1045:4;;1078:9;;1396:27;;;;;:77;;-1:-1:-1;1427:46:7;;;;;:12;22246:15:183;;;1427:46:7;;;22228:34:183;1454:4:7;22278:18:183;;;22271:43;22362:66;22350:79;;22330:18;;;22323:107;1427:12:7;;;;;22140:18:183;;1427:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:7;;;1478:13;;;1486:5;;1478:13;1395:96;1388:103;958:540;-1:-1:-1;;;;958:540:7:o;784:353:89:-;965:59;;;932:19;25154:55:183;;;965:59:89;;;25136:74:183;25226:18;;;;25219:34;;;965:59:89;;;;;;;;;;25109:18:183;;;;965:59:89;;;;;;;;;988:23;965:59;;;932:102;;-1:-1:-1;;;;932:19:89;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:89;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;;;;25745:2:183;1045:85:89;;;25727:21:183;25784:2;25764:18;;;25757:30;25823:17;25803:18;;;25796:45;25858:18;;1045:85:89;25543:339:183;1045:85:89;886:251;;784:353;;;:::o;11131:1787:178:-;11244:18;;11527:12;;;;11634:16;11644:6;11634:7;:16;:::i;:::-;11611:40;-1:-1:-1;11668:11:178;11682:14;11611:40;11691:5;11682:14;:::i;:::-;:24;;11699:7;11682:24;:::i;:::-;11668:38;-1:-1:-1;11749:11:178;11776:6;11764:8;11668:38;11764:1;:8;:::i;:::-;11763:19;;;;:::i;:::-;11749:33;-1:-1:-1;11833:1:178;11812:13;11749:33;11812:6;:13;:::i;:::-;:17;;11828:1;11812:17;:::i;:::-;11811:23;;;;:::i;:::-;11804:30;;:4;:30;:::i;:::-;11797:37;-1:-1:-1;11849:12:178;11886:7;11873:8;11797:37;11880:1;11873:8;:::i;:::-;11865:17;;:4;:17;:::i;:::-;11864:29;;;;:::i;:::-;11849:44;-1:-1:-1;11939:1:178;11923:12;11849:44;11923:4;:12;:::i;:::-;11922:18;;;;:::i;:::-;11915:25;;:4;:25;:::i;:::-;:30;;11943:2;11915:30;:::i;:::-;11908:37;-1:-1:-1;11960:13:178;11990:4;11977:9;11908:37;11977:2;:9;:::i;:::-;11976:18;;;;:::i;:::-;11960:34;-1:-1:-1;12009:11:178;12048:2;12031:13;11960:34;12031:4;:13;:::i;:::-;12030:20;;;;:::i;:::-;12023:27;;:4;:27;:::i;:::-;12009:41;-1:-1:-1;12072:11:178;12081:2;12072:6;:11;:::i;:::-;12065:18;-1:-1:-1;12120:9:178;12065:18;12120:2;:9;:::i;:::-;12107:10;:6;12116:1;12107:10;:::i;:::-;:22;;;;:::i;:::-;12098:31;-1:-1:-1;12180:4:178;12172:5;12159:9;12166:2;12159:4;:9;:::i;:::-;12152:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;12144:40;-1:-1:-1;12253:6:178;;-1:-1:-1;12289:4:178;-1:-1:-1;12318:21:178;;-1:-1:-1;12342:23:178;;-1:-1:-1;12352:12:178;;-1:-1:-1;12359:5:178;;-1:-1:-1;12144:40:178;12352:12;:::i;:::-;12342:9;:23::i;:::-;12318:47;;12376:22;12409:2;12401:5;:10;:105;;12490:16;12500:5;12490:9;:16::i;:::-;12401:105;;;12456:16;12466:5;12456:9;:16::i;:::-;12434:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12401:105;12376:130;;12517:20;12546:2;12540:3;:8;:99;;12625:14;12635:3;12625:9;:14::i;:::-;12540:99;;;12593:14;12603:3;12593:9;:14::i;:::-;12571:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12540:99;12517:122;;12740:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12765:7;12779:8;12794:6;12723:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12695:117;;12856:11;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12883:7;12892:8;12902:6;12839:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12823:87;;11291:1627;;;;;;11131:1787;;;;;:::o;742:4147:86:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:86;;;;-1:-1:-1;1787:13:86;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:86;;;;;;:::o;7401:2527:178:-;7593:13;7608:20;7630:17;7649:16;7673:11;:39;;;7713:3;7673:44;;;;;;;;;;;;;778:25:183;;766:2;751:18;;632:177;7673:44:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:83;;;7757:3;7673:88;;;;;;;;;;;;;778:25:183;;766:2;751:18;;632:177;7673:88:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7592:169;;;;;;;;;;7815:21;7849:8;7839:7;:18;;;;:::i;:::-;8140:35;;;;;8169:4;8140:35;;;10665:74:183;7815:42:178;;-1:-1:-1;8117:20:178;;8140;;;;;;10638:18:183;;8140:35:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8117:58;-1:-1:-1;8186:63:178;:27;;;8214:10;8234:4;8241:7;8186:27;:63::i;:::-;8302:22;8317:7;8302:12;:22;:::i;:::-;8264:35;;;;;8293:4;8264:35;;;10665:74:183;8264:20:178;;;;;;10638:18:183;;8264:35:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8260:111;;;8346:25;;;;;;;;;;;;;;8260:111;8566:26;;;;8562:1359;;8706:52;:23;;;8730:12;8744:13;8706:23;:52::i;:::-;8878:36;;;;;8908:4;8878:36;;;10665:74:183;8854:21:178;;8878;;;;;;10638:18:183;;8878:36:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8929:65;;;;;;;;21656:25:183;;;21697:18;;;21690:34;;;21740:18;;;21733:34;;;8854:60:178;;-1:-1:-1;8929:36:178;;;;;;21629:18:183;;8929:65:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9183:7;9167:13;:23;;;;:::i;:::-;9127:36;;;;;9157:4;9127:36;;;10665:74:183;9127:21:178;;;;;;10638:18:183;;9127:36:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9123:118;;;9217:24;;;;;;;;;;;;;;9123:118;8594:659;8562:1359;;;9603:36;;;;;9633:4;9603:36;;;10665:74:183;9579:21:178;;9603;;;;;;10638:18:183;;9603:36:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9579:60;-1:-1:-1;9654:59:178;:28;;;9683:5;9698:4;9705:7;9654:28;:59::i;:::-;9772:23;9788:7;9772:13;:23;:::i;:::-;9732:36;;;;;9762:4;9732:36;;;10665:74:183;9732:21:178;;;;;;10638:18:183;;9732:36:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9728:119;;;9822:25;;;;;;;;;;;;;;9728:119;9864:45;:23;;;9888:5;9895:13;9864:23;:45::i;:::-;9259:662;7544:2384;;;;;;7401:2527;;;;:::o;2640:1748:179:-;2807:13;3534;;;;3530:851;;3722:6;;3659:34;3677:15;3659:8;:34;:::i;:::-;3658:53;;;;:::i;:::-;3657:72;;;;:::i;:::-;3648:81;;3883:15;3901:32;3912:12;3926:6;3901:10;:32::i;:::-;4017:22;;;;:13;:22;;;;;:29;3883:50;;-1:-1:-1;4017:29:179;;4012:109;;4067:38;4075:7;4084:12;4098:6;4067:7;:38::i;:::-;4182:40;4193:10;4205:7;4214;4182:10;:40::i;:::-;3549:685;3530:851;;;4323:46;:25;;;4349:10;4361:7;4323:25;:46::i;6412:599::-;6534:23;;;;:13;:23;;;;;:30;;;6529:66;;6573:22;;;;;;;;;;;;;;6529:66;6641:25;6669:23;;;:13;:23;;;;;;;;;6641:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6754:15;:29;6750:77;;;6815:11;;;;6792:35;;;;;1612:14:183;1600:27;;;6792:35:179;;;1582:46:183;1555:18;;6792:35:179;1438:196:183;6750:77:179;6902:41;6913:10;6925:8;6935:7;6902:10;:41::i;:::-;6954:15;;;;:49;;:28;;6983:10;6995:7;6954:28;:49::i;:::-;6473:538;6412:599;;:::o;384:394:89:-;591:69;;;558:19;31618:15:183;;;591:69:89;;;31600:34:183;31670:15;;;31650:18;;;31643:43;31702:18;;;;31695:34;;;591:69:89;;;;;;;;;;31512:18:183;;;;591:69:89;;;;;;;;;614:27;591:69;;;558:112;;-1:-1:-1;;;;558:19:89;;;;:112;;591:69;558:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:148;;;;689:7;:57;;;;-1:-1:-1;701:11:89;;:16;;:44;;;732:4;721:24;;;;;;;;;;;;:::i;:::-;681:90;;;;;;;31942:2:183;681:90:89;;;31924:21:183;31981:2;31961:18;;;31954:30;32020:22;32000:18;;;31993:50;32060:18;;681:90:89;31740:344:183;9516:222:179;9638:23;;;;:13;:23;;;;;:30;;:41;;9672:7;;9638:23;:41;;9672:7;;9638:41;:::i;:::-;;;;;;;;9690:40;9696:3;9701:8;9711:7;9720:9;;;;;;;;;;;;9690:5;:40::i;8521:756::-;8801:13;8824:16;8834:6;8824:7;:16;:::i;:::-;8817:33;;8844:6;8817:33;:::i;:::-;8801:49;;8929:15;8919:6;8911:15;;:33;8907:68;;;8953:22;;;;;;;;;;;;;;8907:68;9047:150;;;;;;;;9075:4;9047:150;;;;;;9094:11;9047:150;;;;;;9126:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9047:150;;;;;;;;;;;;;;;;;-1:-1:-1;9047:150:179;;;;;;;9021:23;;;:13;:23;;;;;:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9021:176:179;;;;;;;9215:54;;778:25:183;;;9047:150:179;;9215:54;;;;;;751:18:183;9215:54:179;;;;;;;8634:643;8521:756;;;:::o;13141:576:178:-;13195:13;13225:2;13231:1;13225:7;13221:50;;-1:-1:-1;;13249:10:178;;;;;;;;;;;;;;;;;;13141:576::o;13221:50::-;13293:2;13281:9;13328:69;13335:6;;13328:69;;13358:5;;;;:::i;:::-;;-1:-1:-1;13378:7:178;;-1:-1:-1;13383:2:178;13378:7;;:::i;:::-;;;13328:69;;;13407:17;13437:3;13427:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13427:14:178;-1:-1:-1;13407:34:178;-1:-1:-1;13464:3:178;13478:202;13485:7;;13478:202;;13513:5;13517:1;13513;:5;:::i;:::-;13509:9;-1:-1:-1;13533:10:178;13564:7;13569:2;13564;:7;:::i;:::-;13563:14;;13575:2;13563:14;:::i;:::-;13558:19;;:2;:19;:::i;:::-;13547:31;;:2;:31;:::i;:::-;13533:46;;13594:9;13613:4;13606:12;;13594:24;;13643:2;13633:4;13638:1;13633:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;13660:8:178;13666:2;13660:8;;:::i;:::-;;;13494:186;;13478:202;;9978:215:179;10102:23;;;;:13;:23;;;;;:30;;:41;;10136:7;;10102:23;:41;;10136:7;;10102:41;:::i;:::-;;;;-1:-1:-1;10154:31:179;;-1:-1:-1;10160:5:179;10167:8;10177:7;10154:5;:31::i;5063:545:11:-;5202:13;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5223:6;;5202:13;:27;;5223:6;;5202:27;:::i;:::-;;;;-1:-1:-1;;5245:54:11;;;12314:25:183;;;12370:2;12355:18;;12348:34;;;5245:54:11;;;;5280:1;;5260:10;;5245:54;;12287:18:183;5245:54:11;;;;;;;5331:14;;;;:19;:228;;5404:84;;5512:47;5404:84;;;5512:47;5404:42;;;;5512:47;;5404:84;;5447:10;;5467:1;;5471:2;;5475:6;;5483:4;;5404:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:155;;;5331:228;;;5369:16;;;;;5331:228;5310:291;;;;;;;19709:2:183;5310:291:11;;;19691:21:183;19748:2;19728:18;;;19721:30;19787:18;19767;;;19760:46;19823:18;;5310:291:11;19507:340:183;5310:291:11;5063:545;;;;:::o;7163:222::-;7277:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;7300:6;;7277:15;:29;;7300:6;;7277:29;:::i;:::-;;;;-1:-1:-1;;7322:56:11;;;12314:25:183;;;12370:2;12355:18;;12348:34;;;7363:1:11;;7322:56;;;;7337:10;;7322:56;;12287:18:183;7322:56:11;;;;;;;7163:222;;;:::o;14:154:183:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;617:2;602:18;;;;589:32;;-1:-1:-1;;;312:315:183:o;814:177::-;899:66;892:5;888:78;881:5;878:89;868:117;;981:1;978;971:12;996:245;1054:6;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;1162:9;1149:23;1181:30;1205:5;1181:30;:::i;1639:125::-;1724:14;1717:5;1713:26;1706:5;1703:37;1693:65;;1754:1;1751;1744:12;1769:245;1827:6;1880:2;1868:9;1859:7;1855:23;1851:32;1848:52;;;1896:1;1893;1886:12;1848:52;1935:9;1922:23;1954:30;1978:5;1954:30;:::i;2019:247::-;2078:6;2131:2;2119:9;2110:7;2106:23;2102:32;2099:52;;;2147:1;2144;2137:12;2099:52;2186:9;2173:23;2205:31;2230:5;2205:31;:::i;2271:367::-;2334:8;2344:6;2398:3;2391:4;2383:6;2379:17;2375:27;2365:55;;2416:1;2413;2406:12;2365:55;-1:-1:-1;2439:20:183;;2482:18;2471:30;;2468:50;;;2514:1;2511;2504:12;2468:50;2551:4;2543:6;2539:17;2527:29;;2611:3;2604:4;2594:6;2591:1;2587:14;2579:6;2575:27;2571:38;2568:47;2565:67;;;2628:1;2625;2618:12;2565:67;2271:367;;;;;:::o;2643:347::-;2694:8;2704:6;2758:3;2751:4;2743:6;2739:17;2735:27;2725:55;;2776:1;2773;2766:12;2725:55;-1:-1:-1;2799:20:183;;2842:18;2831:30;;2828:50;;;2874:1;2871;2864:12;2828:50;2911:4;2903:6;2899:17;2887:29;;2963:3;2956:4;2947:6;2939;2935:19;2931:30;2928:39;2925:59;;;2980:1;2977;2970:12;2995:1338;3155:6;3163;3171;3179;3187;3195;3203;3211;3264:3;3252:9;3243:7;3239:23;3235:33;3232:53;;;3281:1;3278;3271:12;3232:53;3320:9;3307:23;3339:31;3364:5;3339:31;:::i;:::-;3389:5;-1:-1:-1;3446:2:183;3431:18;;3418:32;3459:33;3418:32;3459:33;:::i;:::-;3511:7;-1:-1:-1;3569:2:183;3554:18;;3541:32;3592:18;3622:14;;;3619:34;;;3649:1;3646;3639:12;3619:34;3688:70;3750:7;3741:6;3730:9;3726:22;3688:70;:::i;:::-;3777:8;;-1:-1:-1;3662:96:183;-1:-1:-1;3865:2:183;3850:18;;3837:32;;-1:-1:-1;3881:16:183;;;3878:36;;;3910:1;3907;3900:12;3878:36;3949:72;4013:7;4002:8;3991:9;3987:24;3949:72;:::i;:::-;4040:8;;-1:-1:-1;3923:98:183;-1:-1:-1;4128:3:183;4113:19;;4100:33;;-1:-1:-1;4145:16:183;;;4142:36;;;4174:1;4171;4164:12;4142:36;;4213:60;4265:7;4254:8;4243:9;4239:24;4213:60;:::i;:::-;2995:1338;;;;-1:-1:-1;2995:1338:183;;-1:-1:-1;2995:1338:183;;;;;;4292:8;-1:-1:-1;;;2995:1338:183:o;4338:184::-;4390:77;4387:1;4380:88;4487:4;4484:1;4477:15;4511:4;4508:1;4501:15;4527:334;4598:2;4592:9;4654:2;4644:13;;4659:66;4640:86;4628:99;;4757:18;4742:34;;4778:22;;;4739:62;4736:88;;;4804:18;;:::i;:::-;4840:2;4833:22;4527:334;;-1:-1:-1;4527:334:183:o;4866:1112::-;4974:6;4982;5035:2;5023:9;5014:7;5010:23;5006:32;5003:52;;;5051:1;5048;5041:12;5003:52;5091:9;5078:23;5120:18;5161:2;5153:6;5150:14;5147:34;;;5177:1;5174;5167:12;5147:34;5215:6;5204:9;5200:22;5190:32;;5260:7;5253:4;5249:2;5245:13;5241:27;5231:55;;5282:1;5279;5272:12;5231:55;5318:2;5305:16;5340:4;5363:2;5359;5356:10;5353:36;;;5369:18;;:::i;:::-;5415:2;5412:1;5408:10;5398:20;;5438:28;5462:2;5458;5454:11;5438:28;:::i;:::-;5500:15;;;5570:11;;;5566:20;;;5531:12;;;;5598:19;;;5595:39;;;5630:1;5627;5620:12;5595:39;5654:11;;;;5674:217;5690:6;5685:3;5682:15;5674:217;;;5770:3;5757:17;5744:30;;5787:31;5812:5;5787:31;:::i;:::-;5831:18;;;5707:12;;;;5869;;;;5674:217;;;5910:5;-1:-1:-1;5934:38:183;;-1:-1:-1;5953:18:183;;;5934:38;:::i;:::-;5924:48;;;;;;4866:1112;;;;;:::o;5983:180::-;6042:6;6095:2;6083:9;6074:7;6070:23;6066:32;6063:52;;;6111:1;6108;6101:12;6063:52;-1:-1:-1;6134:23:183;;5983:180;-1:-1:-1;5983:180:183:o;6168:258::-;6240:1;6250:113;6264:6;6261:1;6258:13;6250:113;;;6340:11;;;6334:18;6321:11;;;6314:39;6286:2;6279:10;6250:113;;;6381:6;6378:1;6375:13;6372:48;;;-1:-1:-1;;6416:1:183;6398:16;;6391:27;6168:258::o;6431:317::-;6473:3;6511:5;6505:12;6538:6;6533:3;6526:19;6554:63;6610:6;6603:4;6598:3;6594:14;6587:4;6580:5;6576:16;6554:63;:::i;:::-;6662:2;6650:15;6667:66;6646:88;6637:98;;;;6737:4;6633:109;;6431:317;-1:-1:-1;;6431:317:183:o;6753:383::-;6950:2;6939:9;6932:21;6913:4;6976:45;7017:2;7006:9;7002:18;6994:6;6976:45;:::i;:::-;7069:9;7061:6;7057:22;7052:2;7041:9;7037:18;7030:50;7097:33;7123:6;7115;7097:33;:::i;:::-;7089:41;6753:383;-1:-1:-1;;;;;6753:383:183:o;7141:773::-;7263:6;7271;7279;7287;7340:2;7328:9;7319:7;7315:23;7311:32;7308:52;;;7356:1;7353;7346:12;7308:52;7396:9;7383:23;7425:18;7466:2;7458:6;7455:14;7452:34;;;7482:1;7479;7472:12;7452:34;7521:70;7583:7;7574:6;7563:9;7559:22;7521:70;:::i;:::-;7610:8;;-1:-1:-1;7495:96:183;-1:-1:-1;7698:2:183;7683:18;;7670:32;;-1:-1:-1;7714:16:183;;;7711:36;;;7743:1;7740;7733:12;7711:36;;7782:72;7846:7;7835:8;7824:9;7820:24;7782:72;:::i;:::-;7141:773;;;;-1:-1:-1;7873:8:183;-1:-1:-1;;;;7141:773:183:o;7919:632::-;8090:2;8142:21;;;8212:13;;8115:18;;;8234:22;;;8061:4;;8090:2;8313:15;;;;8287:2;8272:18;;;8061:4;8356:169;8370:6;8367:1;8364:13;8356:169;;;8431:13;;8419:26;;8500:15;;;;8465:12;;;;8392:1;8385:9;8356:169;;;-1:-1:-1;8542:3:183;;7919:632;-1:-1:-1;;;;;;7919:632:183:o;9124:594::-;9219:6;9227;9235;9243;9251;9304:3;9292:9;9283:7;9279:23;9275:33;9272:53;;;9321:1;9318;9311:12;9272:53;9360:9;9347:23;9379:31;9404:5;9379:31;:::i;:::-;9429:5;-1:-1:-1;9486:2:183;9471:18;;9458:32;9499:33;9458:32;9499:33;:::i;:::-;9124:594;;9551:7;;-1:-1:-1;;;;9605:2:183;9590:18;;9577:32;;9656:2;9641:18;;9628:32;;9707:3;9692:19;;;9679:33;;-1:-1:-1;9124:594:183:o;10266:248::-;10334:6;10342;10395:2;10383:9;10374:7;10370:23;10366:32;10363:52;;;10411:1;10408;10401:12;10363:52;-1:-1:-1;;10434:23:183;;;10504:2;10489:18;;;10476:32;;-1:-1:-1;10266:248:183:o;10750:401::-;10832:6;10840;10893:2;10881:9;10872:7;10868:23;10864:32;10861:52;;;10909:1;10906;10899:12;10861:52;10948:9;10935:23;10967:31;10992:5;10967:31;:::i;:::-;11017:5;-1:-1:-1;11074:2:183;11059:18;;11046:32;11087;11046;11087;:::i;:::-;11138:7;11128:17;;;10750:401;;;;;:::o;11156:118::-;11242:5;11235:13;11228:21;11221:5;11218:32;11208:60;;11264:1;11261;11254:12;11279:382;11344:6;11352;11405:2;11393:9;11384:7;11380:23;11376:32;11373:52;;;11421:1;11418;11411:12;11373:52;11460:9;11447:23;11479:31;11504:5;11479:31;:::i;:::-;11529:5;-1:-1:-1;11586:2:183;11571:18;;11558:32;11599:30;11558:32;11599:30;:::i;11666:469::-;11757:6;11765;11773;11826:2;11814:9;11805:7;11801:23;11797:32;11794:52;;;11842:1;11839;11832:12;11794:52;11881:9;11868:23;11900:31;11925:5;11900:31;:::i;:::-;11950:5;-1:-1:-1;12007:2:183;11992:18;;11979:32;12020;11979;12020;:::i;:::-;11666:469;;12071:7;;-1:-1:-1;;;12125:2:183;12110:18;;;;12097:32;;11666:469::o;12643:403::-;12726:6;12734;12787:2;12775:9;12766:7;12762:23;12758:32;12755:52;;;12803:1;12800;12793:12;12755:52;12842:9;12829:23;12861:31;12886:5;12861:31;:::i;:::-;12911:5;-1:-1:-1;12968:2:183;12953:18;;12940:32;12981:33;12940:32;12981:33;:::i;14222:823::-;14328:6;14336;14344;14352;14360;14368;14421:3;14409:9;14400:7;14396:23;14392:33;14389:53;;;14438:1;14435;14428:12;14389:53;14477:9;14464:23;14496:31;14521:5;14496:31;:::i;:::-;14546:5;-1:-1:-1;14603:2:183;14588:18;;14575:32;14616:33;14575:32;14616:33;:::i;:::-;14668:7;-1:-1:-1;14722:2:183;14707:18;;14694:32;;-1:-1:-1;14773:2:183;14758:18;;14745:32;;-1:-1:-1;14828:3:183;14813:19;;14800:33;14856:18;14845:30;;14842:50;;;14888:1;14885;14878:12;14842:50;14927:58;14977:7;14968:6;14957:9;14953:22;14927:58;:::i;:::-;14222:823;;;;-1:-1:-1;14222:823:183;;-1:-1:-1;14222:823:183;;15004:8;;14222:823;-1:-1:-1;;;14222:823:183:o;16417:184::-;16469:77;16466:1;16459:88;16566:4;16563:1;16556:15;16590:4;16587:1;16580:15;16606:184;16658:77;16655:1;16648:88;16755:4;16752:1;16745:15;16779:4;16776:1;16769:15;16795:125;16835:4;16863:1;16860;16857:8;16854:34;;;16868:18;;:::i;:::-;-1:-1:-1;16905:9:183;;16795:125::o;16925:128::-;16965:3;16996:1;16992:6;16989:1;16986:13;16983:39;;;17002:18;;:::i;:::-;-1:-1:-1;17038:9:183;;16925:128::o;17058:401::-;17158:6;17153:3;17146:19;17128:3;17188:66;17180:6;17177:78;17174:98;;;17268:1;17265;17258:12;17174:98;17304:6;17301:1;17297:14;17356:8;17349:5;17342:4;17337:3;17333:14;17320:45;17433:1;17388:18;;17408:4;17384:29;17422:13;;;-1:-1:-1;17384:29:183;;17058:401;-1:-1:-1;;17058:401:183:o;17464:519::-;17741:2;17730:9;17723:21;17704:4;17767:73;17836:2;17825:9;17821:18;17813:6;17805;17767:73;:::i;:::-;17888:9;17880:6;17876:22;17871:2;17860:9;17856:18;17849:50;17916:61;17970:6;17962;17954;17916:61;:::i;:::-;17908:69;17464:519;-1:-1:-1;;;;;;;17464:519:183:o;17988:325::-;18076:6;18071:3;18064:19;18128:6;18121:5;18114:4;18109:3;18105:14;18092:43;;18180:1;18173:4;18164:6;18159:3;18155:16;18151:27;18144:38;18046:3;18302:4;18232:66;18227:2;18219:6;18215:15;18211:88;18206:3;18202:98;18198:109;18191:116;;17988:325;;;;:::o;18318:930::-;18670:4;18699:42;18780:2;18772:6;18768:15;18757:9;18750:34;18832:2;18824:6;18820:15;18815:2;18804:9;18800:18;18793:43;;18872:3;18867:2;18856:9;18852:18;18845:31;18899:74;18968:3;18957:9;18953:19;18945:6;18937;18899:74;:::i;:::-;19021:9;19013:6;19009:22;19004:2;18993:9;18989:18;18982:50;19055:61;19109:6;19101;19093;19055:61;:::i;:::-;19041:75;;19165:9;19157:6;19153:22;19147:3;19136:9;19132:19;19125:51;19193:49;19235:6;19227;19219;19193:49;:::i;:::-;19185:57;18318:930;-1:-1:-1;;;;;;;;;;;18318:930:183:o;19253:249::-;19322:6;19375:2;19363:9;19354:7;19350:23;19346:32;19343:52;;;19391:1;19388;19381:12;19343:52;19423:9;19417:16;19442:30;19466:5;19442:30;:::i;19852:195::-;19891:3;19922:66;19915:5;19912:77;19909:103;;19992:18;;:::i;:::-;-1:-1:-1;20039:1:183;20028:13;;19852:195::o;20052:232::-;20091:3;20119:14;20160:2;20157:1;20153:10;20190:2;20187:1;20183:10;20221:3;20217:2;20213:12;20208:3;20205:21;20202:47;;;20229:18;;:::i;:::-;20265:13;;20052:232;-1:-1:-1;;;;20052:232:183:o;20289:276::-;20384:6;20437:2;20425:9;20416:7;20412:23;20408:32;20405:52;;;20453:1;20450;20443:12;20405:52;20485:9;20479:16;20504:31;20529:5;20504:31;:::i;20570:879::-;20714:6;20722;20730;20738;20746;20754;20807:3;20795:9;20786:7;20782:23;20778:33;20775:53;;;20824:1;20821;20814:12;20775:53;20856:9;20850:16;20875:31;20900:5;20875:31;:::i;:::-;20975:2;20960:18;;20954:25;20925:5;;-1:-1:-1;20988:33:183;20954:25;20988:33;:::i;:::-;21092:2;21077:18;;21071:25;21040:7;;-1:-1:-1;21105:33:183;21071:25;21105:33;:::i;:::-;21209:2;21194:18;;21188:25;21157:7;;-1:-1:-1;21222:33:183;21188:25;21222:33;:::i;:::-;21326:3;21311:19;;21305:26;21274:7;;-1:-1:-1;21340:32:183;21305:26;21340:32;:::i;:::-;21391:7;21381:17;;;21438:3;21427:9;21423:19;21417:26;21407:36;;20570:879;;;;;;;;:::o;21778:184::-;21848:6;21901:2;21889:9;21880:7;21876:23;21872:32;21869:52;;;21917:1;21914;21907:12;21869:52;-1:-1:-1;21940:16:183;;21778:184;-1:-1:-1;21778:184:183:o;22441:245::-;22508:6;22561:2;22549:9;22540:7;22536:23;22532:32;22529:52;;;22577:1;22574;22567:12;22529:52;22609:9;22603:16;22628:28;22650:5;22628:28;:::i;22691:184::-;22743:77;22740:1;22733:88;22840:4;22837:1;22830:15;22864:4;22861:1;22854:15;22880:195;22919:1;22945:14;22986:2;22983:1;22979:10;23008:3;22998:37;;23015:18;;:::i;:::-;23053:10;;23049:20;;;;;22880:195;-1:-1:-1;;22880:195:183:o;23510:266::-;23549:7;23581:14;23622:2;23619:1;23615:10;23652:2;23649:1;23645:10;23708:3;23704:2;23700:12;23695:3;23692:21;23685:3;23678:11;23671:19;23667:47;23664:73;;;23717:18;;:::i;:::-;23757:13;;23510:266;-1:-1:-1;;;;23510:266:183:o;24117:225::-;24156:4;24185:14;24249:10;;;;24219;;24271:12;;;24268:38;;;24286:18;;:::i;:::-;24323:13;;24117:225;-1:-1:-1;;;24117:225:183:o;24347:610::-;24579:4;24608:42;24689:2;24681:6;24677:15;24666:9;24659:34;24741:2;24733:6;24729:15;24724:2;24713:9;24709:18;24702:43;;24781:6;24776:2;24765:9;24761:18;24754:34;24824:6;24819:2;24808:9;24804:18;24797:34;24868:3;24862;24851:9;24847:19;24840:32;24889:62;24946:3;24935:9;24931:19;24923:6;24915;24889:62;:::i;:::-;24881:70;24347:610;-1:-1:-1;;;;;;;;24347:610:183:o;25264:274::-;25393:3;25431:6;25425:13;25447:53;25493:6;25488:3;25481:4;25473:6;25469:17;25447:53;:::i;:::-;25516:16;;;;;25264:274;-1:-1:-1;;25264:274:183:o;25887:120::-;25927:1;25953;25943:35;;25958:18;;:::i;:::-;-1:-1:-1;25992:9:183;;25887:120::o;26012:367::-;26051:3;26086:1;26083;26079:9;26195:1;26127:66;26123:74;26120:1;26116:82;26111:2;26104:10;26100:99;26097:125;;;26202:18;;:::i;:::-;26321:1;26253:66;26249:74;26246:1;26242:82;26238:2;26234:91;26231:117;;;26328:18;;:::i;:::-;-1:-1:-1;;26364:9:183;;26012:367::o;26384:655::-;26423:7;26455:66;26547:1;26544;26540:9;26575:1;26572;26568:9;26620:1;26616:2;26612:10;26609:1;26606:17;26601:2;26597;26593:11;26589:35;26586:61;;;26627:18;;:::i;:::-;26666:66;26758:1;26755;26751:9;26805:1;26801:2;26796:11;26793:1;26789:19;26784:2;26780;26776:11;26772:37;26769:63;;;26812:18;;:::i;:::-;26858:1;26855;26851:9;26841:19;;26905:1;26901:2;26896:11;26893:1;26889:19;26884:2;26880;26876:11;26872:37;26869:63;;;26912:18;;:::i;:::-;26977:1;26973:2;26968:11;26965:1;26961:19;26956:2;26952;26948:11;26944:37;26941:63;;;26984:18;;:::i;:::-;-1:-1:-1;;;27024:9:183;;;;;26384:655;-1:-1:-1;;;26384:655:183:o;27044:308::-;27083:1;27109;27099:35;;27114:18;;:::i;:::-;27231:66;27228:1;27225:73;27156:66;27153:1;27150:73;27146:153;27143:179;;;27302:18;;:::i;:::-;-1:-1:-1;27336:10:183;;27044:308::o;27357:369::-;27396:4;27432:1;27429;27425:9;27541:1;27473:66;27469:74;27466:1;27462:82;27457:2;27450:10;27446:99;27443:125;;;27548:18;;:::i;:::-;27667:1;27599:66;27595:74;27592:1;27588:82;27584:2;27580:91;27577:117;;;27674:18;;:::i;:::-;-1:-1:-1;;27711:9:183;;27357:369::o;27731:112::-;27763:1;27789;27779:35;;27794:18;;:::i;:::-;-1:-1:-1;27828:9:183;;27731:112::o;27848:418::-;28110:3;28105;28098:16;28080:3;28143:6;28137:13;28159:61;28213:6;28209:1;28204:3;28200:11;28193:4;28185:6;28181:17;28159:61;:::i;:::-;28240:16;;;;28258:1;28236:24;;27848:418;-1:-1:-1;;27848:418:183:o;28271:765::-;28351:6;28404:2;28392:9;28383:7;28379:23;28375:32;28372:52;;;28420:1;28417;28410:12;28372:52;28453:9;28447:16;28482:18;28523:2;28515:6;28512:14;28509:34;;;28539:1;28536;28529:12;28509:34;28577:6;28566:9;28562:22;28552:32;;28622:7;28615:4;28611:2;28607:13;28603:27;28593:55;;28644:1;28641;28634:12;28593:55;28673:2;28667:9;28695:2;28691;28688:10;28685:36;;;28701:18;;:::i;:::-;28743:112;28851:2;28782:66;28775:4;28771:2;28767:13;28763:86;28759:95;28743:112;:::i;:::-;28730:125;;28878:2;28871:5;28864:17;28918:7;28913:2;28908;28904;28900:11;28896:20;28893:33;28890:53;;;28939:1;28936;28929:12;28890:53;28952:54;29003:2;28998;28991:5;28987:14;28982:2;28978;28974:11;28952:54;:::i;29041:1286::-;29619:3;29657:6;29651:13;29673:53;29719:6;29714:3;29707:4;29699:6;29695:17;29673:53;:::i;:::-;29787:3;29748:16;;;29773:18;;;29816:13;;29838:65;29816:13;29890:1;29879:13;;29872:4;29860:17;;29838:65;:::i;:::-;29933:8;29926:5;29922:20;29912:30;;;29961:3;29992:2;29988:1;29984:2;29980:10;29973:22;30026:6;30020:13;30042:62;30095:8;30091:1;30087:2;30083:10;30076:4;30068:6;30064:17;30042:62;:::i;:::-;30164:1;30123:17;;30156:10;;;30149:22;30196:13;;30218:62;30196:13;30267:1;30259:10;;30252:4;30240:17;;30218:62;:::i;:::-;30300:17;30319:1;30296:25;;29041:1286;-1:-1:-1;;;;;;29041:1286:183:o;30332:1000::-;30708:3;30746:6;30740:13;30762:53;30808:6;30803:3;30796:4;30788:6;30784:17;30762:53;:::i;:::-;30876:3;30837:16;;;30862:18;;;30905:13;;30927:65;30905:13;30979:1;30968:13;;30961:4;30949:17;;30927:65;:::i;:::-;31056:13;;31011:20;;;31078:62;31056:13;31127:1;31119:10;;31112:4;31100:17;;31078:62;:::i;:::-;31201:13;;31159:17;;;31223:62;31201:13;31272:1;31264:10;;31257:4;31245:17;;31223:62;:::i;:::-;31305:17;31324:1;31301:25;;30332:1000;-1:-1:-1;;;;;;30332:1000:183:o;32089:273::-;32157:6;32210:2;32198:9;32189:7;32185:23;32181:32;32178:52;;;32226:1;32223;32216:12;32178:52;32258:9;32252:16;32308:4;32301:5;32297:16;32290:5;32287:27;32277:55;;32328:1;32325;32318:12;32367:228;32407:7;32533:1;32465:66;32461:74;32458:1;32455:81;32450:1;32443:9;32436:17;32432:105;32429:131;;;32540:18;;:::i;:::-;-1:-1:-1;32580:9:183;;32367:228::o;32600:204::-;32638:3;32674:4;32671:1;32667:12;32706:4;32703:1;32699:12;32741:3;32735:4;32731:14;32726:3;32723:23;32720:49;;;32749:18;;:::i;:::-;32785:13;;32600:204;-1:-1:-1;;;32600:204:183:o;32809:584::-;33031:4;33060:42;33141:2;33133:6;33129:15;33118:9;33111:34;33193:2;33185:6;33181:15;33176:2;33165:9;33161:18;33154:43;;33233:6;33228:2;33217:9;33213:18;33206:34;33276:6;33271:2;33260:9;33256:18;33249:34;33320:3;33314;33303:9;33299:19;33292:32;33341:46;33382:3;33371:9;33367:19;33359:6;33341:46;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "101267": [
        {
          "start": 5112,
          "length": 32
        },
        {
          "start": 7556,
          "length": 32
        }
      ],
      "101270": [
        {
          "start": 4500,
          "length": 32
        },
        {
          "start": 10797,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchRedeem(uint256[],uint256[])": "e9dc30f3",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getFee(address)": "b88c9148",
    "getTokenId(address,uint48)": "92593277",
    "getTokenNameAndSymbol(uint256)": "35312c85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(uint256,uint256)": "7cbc2373",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint256)": "6914db60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC1155BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"batchRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenNameAndSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"params\":{\"amounts_\":\"Array of amounts of bond tokens to redeem\",\"tokenIds_\":\"Array of bond token ids\"}},\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token received\",\"_1\":\"Amount of the ERC1155 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token being created\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"getTokenId(address,uint48)\":{\"params\":{\"expiry_\":\"Expiry of the bond\",\"payoutToken_\":\"Payout token of bond\"},\"returns\":{\"_0\":\"ID of the bond token\"}},\"getTokenNameAndSymbol(uint256)\":{\"params\":{\"tokenId_\":\"ID of the bond token\"},\"returns\":{\"_0\":\"name        Bond token name\",\"_1\":\"symbol      Bond token symbol\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(uint256,uint256)\":{\"params\":{\"amount_\":\"Amount of bond token to redeem\",\"tokenId_\":\"ID of the bond token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"notice\":\"Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC1155 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"\\\"Deploy\\\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"getTokenId(address,uint48)\":{\"notice\":\"Get token ID from token and expiry\"},\"getTokenNameAndSymbol(uint256)\":{\"notice\":\"Get the token name and symbol for a bond token\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem a fixed-term bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"removed uri logic (unnecessary for fixed-term bonds)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v2/BondFixedTermTeller.sol\":\"BondFixedTermTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x93bcc23ee9b053b29853d7a75616e7266bd0b92a6239e13a7b7701beb3abd256\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c3611b8ab2929d37b23a5c60de9db4219d8a161cc9b777181f0eada0f86dc09\",\"dweb:/ipfs/QmS9eELn5eDtgHYXB6Yss2ENoHuLvQfCE8Yqsend8zaAw9\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xf039dc09889a2c59663bd642ec7580ffbc0cfe1dda6ba6640df092770f4c34f6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9bb8e3dd384d9f056b87d3140b5689efa51554c85d8e981f0796356b9fe5f056\",\"dweb:/ipfs/QmR9ACQp2JzLrP5zS5Cy6RSCaVqECgGunj8FsNkzkAFQ5w\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/v2/BondBaseTeller.sol\":{\"keccak256\":\"0xa297809ce991803a10c7a45c7888e2adeaa784db23d0730e4989afadc3fe38a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de0b68b9282bb9cac20d45d8a3654ae849e35679b2fa90d4c2cea62522f20032\",\"dweb:/ipfs/QmedV7GD7srEHVL4PS8yHsu5SWrtk94h2LhBzbibKruRJz\"]},\"src/v2/BondFixedTermTeller.sol\":{\"keccak256\":\"0xfa39ffb56bc52d16f16a4682c6433619105e51f7566e9fe1a63e5565689da015\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd2abd29d2c0d00cc4c4c0966909de39f6826f72130200bb75cfb21f9b8d3065\",\"dweb:/ipfs/QmZLiQVpV2TZpruCW1jEDUACV8RGdyajcHk6iSPP5LAzfV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC1155BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRedeem"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenNameAndSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "params": {
              "amounts_": "Array of amounts of bond tokens to redeem",
              "tokenIds_": "Array of bond token ids"
            }
          },
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token received",
              "_1": "Amount of the ERC1155 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token being created"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "getTokenId(address,uint48)": {
            "params": {
              "expiry_": "Expiry of the bond",
              "payoutToken_": "Payout token of bond"
            },
            "returns": {
              "_0": "ID of the bond token"
            }
          },
          "getTokenNameAndSymbol(uint256)": {
            "params": {
              "tokenId_": "ID of the bond token"
            },
            "returns": {
              "_0": "name        Bond token name",
              "_1": "symbol      Bond token symbol"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(uint256,uint256)": {
            "params": {
              "amount_": "Amount of bond token to redeem",
              "tokenId_": "ID of the bond token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "notice": "Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC1155 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "\"Deploy\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "getTokenId(address,uint48)": {
            "notice": "Get token ID from token and expiry"
          },
          "getTokenNameAndSymbol(uint256)": {
            "notice": "Get the token name and symbol for a bond token"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem a fixed-term bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/v2/BondFixedTermTeller.sol": "BondFixedTermTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC1155.sol": {
        "keccak256": "0x93bcc23ee9b053b29853d7a75616e7266bd0b92a6239e13a7b7701beb3abd256",
        "urls": [
          "bzz-raw://3c3611b8ab2929d37b23a5c60de9db4219d8a161cc9b777181f0eada0f86dc09",
          "dweb:/ipfs/QmS9eELn5eDtgHYXB6Yss2ENoHuLvQfCE8Yqsend8zaAw9"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xf039dc09889a2c59663bd642ec7580ffbc0cfe1dda6ba6640df092770f4c34f6",
        "urls": [
          "bzz-raw://9bb8e3dd384d9f056b87d3140b5689efa51554c85d8e981f0796356b9fe5f056",
          "dweb:/ipfs/QmR9ACQp2JzLrP5zS5Cy6RSCaVqECgGunj8FsNkzkAFQ5w"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/v2/BondBaseTeller.sol": {
        "keccak256": "0xa297809ce991803a10c7a45c7888e2adeaa784db23d0730e4989afadc3fe38a9",
        "urls": [
          "bzz-raw://de0b68b9282bb9cac20d45d8a3654ae849e35679b2fa90d4c2cea62522f20032",
          "dweb:/ipfs/QmedV7GD7srEHVL4PS8yHsu5SWrtk94h2LhBzbibKruRJz"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/v2/BondFixedTermTeller.sol": {
        "keccak256": "0xfa39ffb56bc52d16f16a4682c6433619105e51f7566e9fe1a63e5565689da015",
        "urls": [
          "bzz-raw://fd2abd29d2c0d00cc4c4c0966909de39f6826f72130200bb75cfb21f9b8d3065",
          "dweb:/ipfs/QmZLiQVpV2TZpruCW1jEDUACV8RGdyajcHk6iSPP5LAzfV"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v2/BondFixedTermTeller.sol",
    "id": 102732,
    "exportedSymbols": {
      "Authority": [
        23835
      ],
      "BondBaseTeller": [
        102116
      ],
      "BondFixedTermTeller": [
        102731
      ],
      "ERC1155": [
        25307
      ],
      "ERC20": [
        25731
      ],
      "FullMath": [
        37546
      ],
      "IBondAggregator": [
        35812
      ],
      "IBondFixedTermTeller": [
        36120
      ],
      "TransferHelper": [
        38101
      ]
    },
    "nodeType": "SourceUnit",
    "src": "47:11080:179",
    "nodes": [
      {
        "id": 102118,
        "nodeType": "PragmaDirective",
        "src": "47:23:179",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 102120,
        "nodeType": "ImportDirective",
        "src": "74:47:179",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 25732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102119,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "82:5:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102124,
        "nodeType": "ImportDirective",
        "src": "125:80:179",
        "nodes": [],
        "absolutePath": "src/v2/BondBaseTeller.sol",
        "file": "./BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 102117,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102121,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 102116,
              "src": "133:14:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 102122,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35812,
              "src": "149:15:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 102123,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23835,
              "src": "166:9:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102126,
        "nodeType": "ImportDirective",
        "src": "207:76:179",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedTermTeller.sol",
        "file": "../interfaces/IBondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 36121,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102125,
              "name": "IBondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36120,
              "src": "215:20:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102128,
        "nodeType": "ImportDirective",
        "src": "287:63:179",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "../libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 38102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102127,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38101,
              "src": "295:14:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102130,
        "nodeType": "ImportDirective",
        "src": "352:51:179",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "../libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 37547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102129,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37546,
              "src": "360:8:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102132,
        "nodeType": "ImportDirective",
        "src": "405:51:179",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC1155.sol",
        "file": "solmate/tokens/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102732,
        "sourceUnit": 25352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102131,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25307,
              "src": "413:7:179",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102731,
        "nodeType": "ContractDefinition",
        "src": "1527:9600:179",
        "nodes": [
          {
            "id": 102143,
            "nodeType": "UsingForDirective",
            "src": "1612:31:179",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 102140,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38101,
              "src": "1618:14:179"
            },
            "typeName": {
              "id": 102142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 102141,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25731,
                "src": "1637:5:179"
              },
              "referencedDeclaration": 25731,
              "src": "1637:5:179",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25731",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 102146,
            "nodeType": "UsingForDirective",
            "src": "1649:27:179",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 102144,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37546,
              "src": "1655:8:179"
            },
            "typeName": {
              "id": 102145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1668:7:179",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 102155,
            "nodeType": "EventDefinition",
            "src": "1724:96:179",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27",
            "name": "ERC1155BondTokenCreated",
            "nameLocation": "1730:23:179",
            "parameters": {
              "id": 102154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1762:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102155,
                  "src": "1754:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102151,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1785:10:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102155,
                  "src": "1771:24:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102149,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "1771:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "1771:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102153,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1812:6:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102155,
                  "src": "1797:21:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102152,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:66:179"
            }
          },
          {
            "id": 102160,
            "nodeType": "VariableDeclaration",
            "src": "1879:54:179",
            "nodes": [],
            "constant": false,
            "functionSelector": "6914db60",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1920:13:179",
            "scope": 102731,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
              "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
            },
            "typeName": {
              "id": 102159,
              "keyType": {
                "id": 102156,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1887:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1879:33:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
              },
              "valueType": {
                "id": 102158,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 102157,
                  "name": "TokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36054,
                  "src": "1898:13:179"
                },
                "referencedDeclaration": 36054,
                "src": "1898:13:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage_ptr",
                  "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 102180,
            "nodeType": "FunctionDefinition",
            "src": "2015:208:179",
            "nodes": [],
            "body": {
              "id": 102179,
              "nodeType": "Block",
              "src": "2221:2:179",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102173,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102162,
                    "src": "2174:9:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 102174,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102165,
                    "src": "2185:11:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$35812",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 102175,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102167,
                    "src": "2198:9:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 102176,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102170,
                    "src": "2209:10:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 102177,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 102172,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102116,
                  "src": "2159:14:179"
                },
                "nodeType": "ModifierInvocation",
                "src": "2159:61:179"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 102171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102162,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "2045:9:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102180,
                  "src": "2037:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102165,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "2081:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102180,
                  "src": "2065:27:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$35812",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 102164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102163,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35812,
                      "src": "2065:15:179"
                    },
                    "referencedDeclaration": 35812,
                    "src": "2065:15:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$35812",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102167,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "2111:9:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102180,
                  "src": "2103:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102170,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2141:10:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102180,
                  "src": "2131:20:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$23835",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 102169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102168,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23835,
                      "src": "2131:9:179"
                    },
                    "referencedDeclaration": 23835,
                    "src": "2131:9:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2026:132:179"
            },
            "returnParameters": {
              "id": 102178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102258,
            "nodeType": "FunctionDefinition",
            "src": "2640:1748:179",
            "nodes": [],
            "body": {
              "id": 102257,
              "nodeType": "Block",
              "src": "2822:1566:179",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102196,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102190,
                      "src": "3534:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 102197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3546:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3534:13:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102255,
                    "nodeType": "Block",
                    "src": "4240:141:179",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102251,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102183,
                              "src": "4349:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102252,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102185,
                              "src": "4361:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 102248,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102188,
                              "src": "4323:12:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 102250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38051,
                            "src": "4323:25:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 102253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:46:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102254,
                        "nodeType": "ExpressionStatement",
                        "src": "4323:46:179"
                      }
                    ]
                  },
                  "id": 102256,
                  "nodeType": "IfStatement",
                  "src": "3530:851:179",
                  "trueBody": {
                    "id": 102247,
                    "nodeType": "Block",
                    "src": "3549:685:179",
                    "statements": [
                      {
                        "expression": {
                          "id": 102219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 102199,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102194,
                            "src": "3648:6:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 102218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  "id": 102212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        },
                                        "id": 102206,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 102200,
                                          "name": "vesting_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 102190,
                                          "src": "3659:8:179",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 102203,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3677:5:179",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 102204,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3677:15:179",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 102202,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3670:6:179",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint48_$",
                                              "typeString": "type(uint48)"
                                            },
                                            "typeName": {
                                              "id": 102201,
                                              "name": "uint48",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3670:6:179",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 102205,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3670:23:179",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "src": "3659:34:179",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      }
                                    ],
                                    "id": 102207,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3658:36:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 102210,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3704:6:179",
                                        "subdenomination": "days",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        }
                                      ],
                                      "id": 102209,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3697:6:179",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint48_$",
                                        "typeString": "type(uint48)"
                                      },
                                      "typeName": {
                                        "id": 102208,
                                        "name": "uint48",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3697:6:179",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 102211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3697:14:179",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "3658:53:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "id": 102213,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3657:55:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 102216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3722:6:179",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  }
                                ],
                                "id": 102215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3715:6:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 102214,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3715:6:179",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 102217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3715:14:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "3657:72:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3648:81:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 102220,
                        "nodeType": "ExpressionStatement",
                        "src": "3648:81:179"
                      },
                      {
                        "assignments": [
                          102222
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 102222,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3891:7:179",
                            "nodeType": "VariableDeclaration",
                            "scope": 102247,
                            "src": "3883:15:179",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 102221,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3883:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 102227,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 102224,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102188,
                              "src": "3912:12:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 102225,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102194,
                              "src": "3926:6:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 102223,
                            "name": "getTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102696,
                            "src": "3901:10:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                              "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                            }
                          },
                          "id": 102226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3901:32:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3883:50:179"
                      },
                      {
                        "condition": {
                          "id": 102232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4016:30:179",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 102228,
                                "name": "tokenMetadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102160,
                                "src": "4017:13:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                                  "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                                }
                              },
                              "id": 102230,
                              "indexExpression": {
                                "id": 102229,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102222,
                                "src": "4031:7:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4017:22:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                                "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                              }
                            },
                            "id": 102231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36044,
                            "src": "4017:29:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102240,
                        "nodeType": "IfStatement",
                        "src": "4012:109:179",
                        "trueBody": {
                          "id": 102239,
                          "nodeType": "Block",
                          "src": "4048:73:179",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 102234,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102222,
                                    "src": "4075:7:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 102235,
                                    "name": "payoutToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102188,
                                    "src": "4084:12:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$25731",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "id": 102236,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102194,
                                    "src": "4098:6:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$25731",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  ],
                                  "id": 102233,
                                  "name": "_deploy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102611,
                                  "src": "4067:7:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                                    "typeString": "function (uint256,contract ERC20,uint48)"
                                  }
                                },
                                "id": 102237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4067:38:179",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 102238,
                              "nodeType": "ExpressionStatement",
                              "src": "4067:38:179"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102242,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102183,
                              "src": "4193:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102243,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102222,
                              "src": "4205:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102244,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102185,
                              "src": "4214:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102241,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102639,
                            "src": "4182:10:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4182:40:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102246,
                        "nodeType": "ExpressionStatement",
                        "src": "4182:40:179"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              101780
            ],
            "documentation": {
              "id": 102181,
              "nodeType": "StructuredDocumentation",
              "src": "2275:359:179",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param payoutToken_   Token to be paid out\n @param vesting_     Amount of time to vest from current timestamp\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "2649:13:179",
            "overrides": {
              "id": 102192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2789:8:179"
            },
            "parameters": {
              "id": 102191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102183,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "2681:10:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102258,
                  "src": "2673:18:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102185,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "2710:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102258,
                  "src": "2702:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102188,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "2734:12:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102258,
                  "src": "2728:18:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102187,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102186,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "2728:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "2728:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102190,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "2764:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102258,
                  "src": "2757:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102189,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2662:117:179"
            },
            "returnParameters": {
              "id": 102195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102194,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2814:6:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102258,
                  "src": "2807:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102193,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2806:15:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102401,
            "nodeType": "FunctionDefinition",
            "src": "4486:1876:179",
            "nodes": [],
            "body": {
              "id": 102400,
              "nodeType": "Block",
              "src": "4646:1716:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102277,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4820:6:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102400,
                      "src": "4813:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 102276,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102286,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 102282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102280,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102264,
                            "src": "4836:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 102281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4846:6:179",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4836:16:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4829:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 102278,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4829:6:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4829:24:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 102284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4856:6:179",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4829:33:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:49:179"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102287,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102277,
                      "src": "4923:6:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102288,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4932:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4932:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4923:24:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102294,
                  "nodeType": "IfStatement",
                  "src": "4919:59:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102291,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101233,
                        "src": "4956:20:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4956:22:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102293,
                    "nodeType": "RevertStatement",
                    "src": "4949:29:179"
                  }
                },
                {
                  "assignments": [
                    102296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102296,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "4999:7:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102400,
                      "src": "4991:15:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4991:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102298,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102262,
                        "src": "5020:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102299,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102277,
                        "src": "5033:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102297,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102696,
                      "src": "5009:10:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 102300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:31:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4991:49:179"
                },
                {
                  "condition": {
                    "id": 102306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5119:30:179",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102302,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102160,
                          "src": "5120:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102304,
                        "indexExpression": {
                          "id": 102303,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102296,
                          "src": "5134:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5120:22:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36044,
                      "src": "5120:29:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102312,
                  "nodeType": "IfStatement",
                  "src": "5115:88:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 102308,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102262,
                          "src": "5183:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 102309,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102277,
                          "src": "5196:6:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102307,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101229,
                        "src": "5158:24:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 102310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5158:45:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102311,
                    "nodeType": "RevertStatement",
                    "src": "5151:52:179"
                  }
                },
                {
                  "assignments": [
                    102314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102314,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5416:10:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102400,
                      "src": "5408:18:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5408:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102322,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 102319,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5459:4:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 102318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5451:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5451:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5451:13:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 102315,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102262,
                        "src": "5429:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "5429:21:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 102321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:36:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5408:57:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5505:3:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5505:10:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102330,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5525:4:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 102329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5517:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102328,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5517:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5517:13:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102332,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102266,
                        "src": "5532:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102323,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102262,
                        "src": "5476:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38002,
                      "src": "5476:28:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 102333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5476:64:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102334,
                  "nodeType": "ExpressionStatement",
                  "src": "5476:64:179"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 102339,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5585:4:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$102731",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 102338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5577:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102337,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5577:7:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5577:13:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 102335,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102262,
                          "src": "5555:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 102336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "5555:21:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 102341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5555:36:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 102344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 102342,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102314,
                        "src": "5594:10:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 102343,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102266,
                        "src": "5607:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5594:20:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5555:59:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102349,
                  "nodeType": "IfStatement",
                  "src": "5551:110:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102346,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101231,
                        "src": "5636:23:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5636:25:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102348,
                    "nodeType": "RevertStatement",
                    "src": "5629:32:179"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102350,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101251,
                      "src": "5806:11:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 102351,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101254,
                      "src": "5820:17:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5806:31:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102398,
                    "nodeType": "Block",
                    "src": "6209:146:179",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 102388,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6272:3:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6272:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102390,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102296,
                              "src": "6284:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102391,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102266,
                              "src": "6293:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102387,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102639,
                            "src": "6261:10:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6261:40:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102393,
                        "nodeType": "ExpressionStatement",
                        "src": "6261:40:179"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 102394,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102296,
                              "src": "6326:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102395,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102266,
                              "src": "6335:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 102396,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6325:18:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 102275,
                        "id": 102397,
                        "nodeType": "Return",
                        "src": "6318:25:179"
                      }
                    ]
                  },
                  "id": 102399,
                  "nodeType": "IfStatement",
                  "src": "5802:553:179",
                  "trueBody": {
                    "id": 102386,
                    "nodeType": "Block",
                    "src": "5839:364:179",
                    "statements": [
                      {
                        "assignments": [
                          102354
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 102354,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5899:9:179",
                            "nodeType": "VariableDeclaration",
                            "scope": 102386,
                            "src": "5891:17:179",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 102353,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5891:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 102362,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 102359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102357,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101251,
                                "src": "5926:11:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102358,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101254,
                                "src": "5940:17:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5926:31:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 102360,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101257,
                              "src": "5959:12:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 102355,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102266,
                              "src": "5911:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 102356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37501,
                            "src": "5911:14:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 102361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:61:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5891:81:179"
                      },
                      {
                        "expression": {
                          "id": 102369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 102363,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101265,
                                "src": "5987:7:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$25731_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 102366,
                              "indexExpression": {
                                "id": 102364,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101267,
                                "src": "5995:9:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5987:18:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$25731_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 102367,
                            "indexExpression": {
                              "id": 102365,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102262,
                              "src": "6006:11:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5987:31:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 102368,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102354,
                            "src": "6022:9:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5987:44:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102370,
                        "nodeType": "ExpressionStatement",
                        "src": "5987:44:179"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 102372,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6096:3:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6096:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102374,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102296,
                              "src": "6108:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 102377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102375,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102266,
                                "src": "6117:7:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102376,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102354,
                                "src": "6127:9:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6117:19:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102371,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102639,
                            "src": "6085:10:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6085:52:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102379,
                        "nodeType": "ExpressionStatement",
                        "src": "6085:52:179"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 102380,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102296,
                              "src": "6162:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 102383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102381,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102266,
                                "src": "6171:7:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102382,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102354,
                                "src": "6181:9:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6171:19:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 102384,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6161:30:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 102275,
                        "id": 102385,
                        "nodeType": "Return",
                        "src": "6154:37:179"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              36069
            ],
            "documentation": {
              "id": 102259,
              "nodeType": "StructuredDocumentation",
              "src": "4444:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102269,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "4606:12:179"
                },
                "nodeType": "ModifierInvocation",
                "src": "4606:12:179"
              }
            ],
            "name": "create",
            "nameLocation": "4495:6:179",
            "overrides": {
              "id": 102268,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4597:8:179"
            },
            "parameters": {
              "id": 102267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102262,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4518:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102401,
                  "src": "4512:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102261,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102260,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "4512:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "4512:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102264,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4547:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102401,
                  "src": "4540:14:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102263,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102266,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4573:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102401,
                  "src": "4565:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4565:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4501:86:179"
            },
            "returnParameters": {
              "id": 102275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102401,
                  "src": "4628:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102401,
                  "src": "4637:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4637:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:18:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102453,
            "nodeType": "FunctionDefinition",
            "src": "6412:599:179",
            "nodes": [],
            "body": {
              "id": 102452,
              "nodeType": "Block",
              "src": "6473:538:179",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 102412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6533:31:179",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102408,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102160,
                          "src": "6534:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102410,
                        "indexExpression": {
                          "id": 102409,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102403,
                          "src": "6548:8:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6534:23:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36044,
                      "src": "6534:30:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102416,
                  "nodeType": "IfStatement",
                  "src": "6529:66:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102413,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101233,
                        "src": "6573:20:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6573:22:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102415,
                    "nodeType": "RevertStatement",
                    "src": "6566:29:179"
                  }
                },
                {
                  "assignments": [
                    102419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102419,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6662:4:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102452,
                      "src": "6641:25:179",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 102418,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102417,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36054,
                          "src": "6641:13:179"
                        },
                        "referencedDeclaration": 36054,
                        "src": "6641:13:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102423,
                  "initialValue": {
                    "baseExpression": {
                      "id": 102420,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102160,
                      "src": "6669:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 102422,
                    "indexExpression": {
                      "id": 102421,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102403,
                      "src": "6683:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6669:23:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6641:51:179"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 102424,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6754:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6754:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102426,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102419,
                        "src": "6772:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                        }
                      },
                      "id": 102427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36051,
                      "src": "6772:11:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6754:29:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102434,
                  "nodeType": "IfStatement",
                  "src": "6750:77:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102430,
                            "name": "meta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102419,
                            "src": "6815:4:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                              "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                            }
                          },
                          "id": 102431,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36051,
                          "src": "6815:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102429,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101220,
                        "src": "6792:22:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 102432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6792:35:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102433,
                    "nodeType": "RevertStatement",
                    "src": "6785:42:179"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102436,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6913:3:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6913:10:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102438,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102403,
                        "src": "6925:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102439,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102405,
                        "src": "6935:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102435,
                      "name": "_burnToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102663,
                      "src": "6902:10:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 102440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6902:41:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102441,
                  "nodeType": "ExpressionStatement",
                  "src": "6902:41:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6983:3:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6983:10:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102449,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102405,
                        "src": "6995:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 102442,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102419,
                          "src": "6954:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36047,
                        "src": "6954:15:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38051,
                      "src": "6954:28:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 102450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6954:49:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102451,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:49:179"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "6421:7:179",
            "parameters": {
              "id": 102406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102403,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6437:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102453,
                  "src": "6429:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6429:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102405,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6455:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102453,
                  "src": "6447:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6447:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6428:35:179"
            },
            "returnParameters": {
              "id": 102407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6473:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102470,
            "nodeType": "FunctionDefinition",
            "src": "7061:125:179",
            "nodes": [],
            "body": {
              "id": 102469,
              "nodeType": "Block",
              "src": "7141:45:179",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102465,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102456,
                        "src": "7160:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102466,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102458,
                        "src": "7170:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102464,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102453,
                      "src": "7152:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 102467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7152:26:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102468,
                  "nodeType": "ExpressionStatement",
                  "src": "7152:26:179"
                }
              ]
            },
            "baseFunctions": [
              36088
            ],
            "documentation": {
              "id": 102454,
              "nodeType": "StructuredDocumentation",
              "src": "7019:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "7cbc2373",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102461,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "7128:12:179"
                },
                "nodeType": "ModifierInvocation",
                "src": "7128:12:179"
              }
            ],
            "name": "redeem",
            "nameLocation": "7070:6:179",
            "overrides": {
              "id": 102460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7119:8:179"
            },
            "parameters": {
              "id": 102459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102456,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "7085:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102470,
                  "src": "7077:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7077:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102458,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "7103:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102470,
                  "src": "7095:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7095:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7076:35:179"
            },
            "returnParameters": {
              "id": 102463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7141:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102517,
            "nodeType": "FunctionDefinition",
            "src": "7236:361:179",
            "nodes": [],
            "body": {
              "id": 102516,
              "nodeType": "Block",
              "src": "7379:218:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102484,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7398:3:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102516,
                      "src": "7390:11:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7390:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102487,
                  "initialValue": {
                    "expression": {
                      "id": 102485,
                      "name": "tokenIds_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102474,
                      "src": "7404:9:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 102486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7404:16:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7390:30:179"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102488,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102484,
                      "src": "7435:3:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 102489,
                        "name": "amounts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102477,
                        "src": "7442:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 102490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7442:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7435:22:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102495,
                  "nodeType": "IfStatement",
                  "src": "7431:57:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102492,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101233,
                        "src": "7466:20:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7466:22:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102494,
                    "nodeType": "RevertStatement",
                    "src": "7459:29:179"
                  }
                },
                {
                  "body": {
                    "id": 102514,
                    "nodeType": "Block",
                    "src": "7529:61:179",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 102506,
                                "name": "tokenIds_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102474,
                                "src": "7552:9:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 102508,
                              "indexExpression": {
                                "id": 102507,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102497,
                                "src": "7562:1:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7552:12:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 102509,
                                "name": "amounts_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102477,
                                "src": "7566:8:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 102511,
                              "indexExpression": {
                                "id": 102510,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102497,
                                "src": "7575:1:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7566:11:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102505,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102453,
                            "src": "7544:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 102512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7544:34:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102513,
                        "nodeType": "ExpressionStatement",
                        "src": "7544:34:179"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102499,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102497,
                      "src": "7515:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 102500,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102484,
                      "src": "7519:3:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7515:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102515,
                  "initializationExpression": {
                    "assignments": [
                      102497
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 102497,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7512:1:179",
                        "nodeType": "VariableDeclaration",
                        "scope": 102515,
                        "src": "7504:9:179",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7504:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 102498,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7504:9:179"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 102503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7524:3:179",
                      "subExpression": {
                        "id": 102502,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102497,
                        "src": "7526:1:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102504,
                    "nodeType": "ExpressionStatement",
                    "src": "7524:3:179"
                  },
                  "nodeType": "ForStatement",
                  "src": "7499:91:179"
                }
              ]
            },
            "baseFunctions": [
              36098
            ],
            "documentation": {
              "id": 102471,
              "nodeType": "StructuredDocumentation",
              "src": "7194:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "e9dc30f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102480,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "7361:12:179"
                },
                "nodeType": "ModifierInvocation",
                "src": "7361:12:179"
              }
            ],
            "name": "batchRedeem",
            "nameLocation": "7245:11:179",
            "overrides": {
              "id": 102479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7343:8:179"
            },
            "parameters": {
              "id": 102478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102474,
                  "mutability": "mutable",
                  "name": "tokenIds_",
                  "nameLocation": "7276:9:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102517,
                  "src": "7257:28:179",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102472,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7257:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102473,
                    "nodeType": "ArrayTypeName",
                    "src": "7257:9:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102477,
                  "mutability": "mutable",
                  "name": "amounts_",
                  "nameLocation": "7306:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102517,
                  "src": "7287:27:179",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102475,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7287:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102476,
                    "nodeType": "ArrayTypeName",
                    "src": "7287:9:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7256:59:179"
            },
            "returnParameters": {
              "id": 102482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102554,
            "nodeType": "FunctionDefinition",
            "src": "7695:398:179",
            "nodes": [],
            "body": {
              "id": 102553,
              "nodeType": "Block",
              "src": "7836:257:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102532,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "7855:7:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102553,
                      "src": "7847:15:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7847:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102537,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102534,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102521,
                        "src": "7876:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102535,
                        "name": "expiry_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102523,
                        "src": "7889:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102533,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102696,
                      "src": "7865:10:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 102536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:32:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7847:50:179"
                },
                {
                  "condition": {
                    "id": 102542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7964:30:179",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102538,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102160,
                          "src": "7965:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102540,
                        "indexExpression": {
                          "id": 102539,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102532,
                          "src": "7979:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7965:22:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36044,
                      "src": "7965:29:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102550,
                  "nodeType": "IfStatement",
                  "src": "7960:101:179",
                  "trueBody": {
                    "id": 102549,
                    "nodeType": "Block",
                    "src": "7996:65:179",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102544,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102532,
                              "src": "8019:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102545,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102521,
                              "src": "8028:11:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 102546,
                              "name": "expiry_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102523,
                              "src": "8041:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 102543,
                            "name": "_deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102611,
                            "src": "8011:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256,contract ERC20,uint48)"
                            }
                          },
                          "id": 102547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8011:38:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102548,
                        "nodeType": "ExpressionStatement",
                        "src": "8011:38:179"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 102551,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102532,
                    "src": "8078:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102530,
                  "id": 102552,
                  "nodeType": "Return",
                  "src": "8071:14:179"
                }
              ]
            },
            "baseFunctions": [
              36080
            ],
            "documentation": {
              "id": 102518,
              "nodeType": "StructuredDocumentation",
              "src": "7653:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102527,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102526,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "7791:12:179"
                },
                "nodeType": "ModifierInvocation",
                "src": "7791:12:179"
              }
            ],
            "name": "deploy",
            "nameLocation": "7704:6:179",
            "overrides": {
              "id": 102525,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7773:8:179"
            },
            "parameters": {
              "id": 102524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102521,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7717:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102554,
                  "src": "7711:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102520,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102519,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "7711:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "7711:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102523,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7737:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102554,
                  "src": "7730:14:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102522,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7730:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7710:35:179"
            },
            "returnParameters": {
              "id": 102530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102529,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102554,
                  "src": "7822:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7822:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7821:9:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102611,
            "nodeType": "FunctionDefinition",
            "src": "8521:756:179",
            "nodes": [],
            "body": {
              "id": 102610,
              "nodeType": "Block",
              "src": "8634:643:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102566,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8808:6:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102610,
                      "src": "8801:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 102565,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8801:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102575,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 102571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102569,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102562,
                            "src": "8824:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 102570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8834:6:179",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8824:16:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8817:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 102567,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "8817:6:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8817:24:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 102573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8844:6:179",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "8817:33:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8801:49:179"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 102578,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102566,
                          "src": "8919:6:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8911:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 102576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8911:7:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8911:15:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102580,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8929:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8929:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8911:33:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102586,
                  "nodeType": "IfStatement",
                  "src": "8907:68:179",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102583,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101233,
                        "src": "8953:20:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8953:22:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102585,
                    "nodeType": "RevertStatement",
                    "src": "8946:29:179"
                  }
                },
                {
                  "expression": {
                    "id": 102602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102587,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102160,
                        "src": "9021:13:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                          "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                        }
                      },
                      "id": 102589,
                      "indexExpression": {
                        "id": 102588,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102557,
                        "src": "9035:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9021:23:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 102591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9075:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 102592,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102560,
                          "src": "9094:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 102595,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102560,
                                  "src": "9126:11:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25731",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 102596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25376,
                                "src": "9126:20:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 102597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9126:22:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 102594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9120:5:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 102593,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "9120:5:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9120:29:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 102599,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102566,
                          "src": "9164:6:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 102600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9185:1:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102590,
                        "name": "TokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36054,
                        "src": "9047:13:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenMetadata_$36054_storage_ptr_$",
                          "typeString": "type(struct IBondFixedTermTeller.TokenMetadata storage pointer)"
                        }
                      },
                      "id": 102601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9047:150:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                      }
                    },
                    "src": "9021:176:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "id": 102603,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:176:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 102605,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102557,
                        "src": "9239:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102606,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102560,
                        "src": "9249:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102607,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102566,
                        "src": "9262:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102604,
                      "name": "ERC1155BondTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102155,
                      "src": "9215:23:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256,contract ERC20,uint48)"
                      }
                    },
                    "id": 102608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9215:54:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102609,
                  "nodeType": "EmitStatement",
                  "src": "9210:59:179"
                }
              ]
            },
            "documentation": {
              "id": 102555,
              "nodeType": "StructuredDocumentation",
              "src": "8101:414:179",
              "text": "@notice             \"Deploy\" a new ERC1155 bond token and stores its ID\n @dev                ERC1155 tokens used for fixed term bonds\n @param tokenId_     Calculated ID of new bond token (from getTokenId)\n @param underlying_  Underlying token to be paid out when the bond token vests\n @param expiry_      Timestamp that the token will vest at, will be rounded to the nearest day"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "8530:7:179",
            "parameters": {
              "id": 102563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102557,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "8556:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102611,
                  "src": "8548:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102560,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8581:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102611,
                  "src": "8575:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102558,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "8575:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "8575:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102562,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8610:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102611,
                  "src": "8603:14:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102561,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8603:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8537:87:179"
            },
            "returnParameters": {
              "id": 102564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8634:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102639,
            "nodeType": "FunctionDefinition",
            "src": "9516:222:179",
            "nodes": [],
            "body": {
              "id": 102638,
              "nodeType": "Block",
              "src": "9627:111:179",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 102621,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102160,
                          "src": "9638:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102623,
                        "indexExpression": {
                          "id": 102622,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102616,
                          "src": "9652:8:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9638:23:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36053,
                      "src": "9638:30:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 102625,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102618,
                      "src": "9672:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9638:41:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102627,
                  "nodeType": "ExpressionStatement",
                  "src": "9638:41:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102629,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102614,
                        "src": "9696:3:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102630,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102616,
                        "src": "9701:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102631,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102618,
                        "src": "9711:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 102634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9726:2:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 102633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9720:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 102632,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9720:5:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9720:9:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 102628,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25116,
                      "src": "9690:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 102636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9690:40:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102637,
                  "nodeType": "ExpressionStatement",
                  "src": "9690:40:179"
                }
              ]
            },
            "documentation": {
              "id": 102612,
              "nodeType": "StructuredDocumentation",
              "src": "9285:225:179",
              "text": "@notice             Mint bond token and update supply\n @param to_          Address to mint tokens to\n @param tokenId_     ID of bond token to mint\n @param amount_      Amount of bond tokens to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToken",
            "nameLocation": "9525:10:179",
            "parameters": {
              "id": 102619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102614,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "9554:3:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102639,
                  "src": "9546:11:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9546:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102616,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9576:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102639,
                  "src": "9568:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9568:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102618,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9603:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102639,
                  "src": "9595:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9595:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9535:82:179"
            },
            "returnParameters": {
              "id": 102620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9627:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102663,
            "nodeType": "FunctionDefinition",
            "src": "9978:215:179",
            "nodes": [],
            "body": {
              "id": 102662,
              "nodeType": "Block",
              "src": "10091:102:179",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 102649,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102160,
                          "src": "10102:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102651,
                        "indexExpression": {
                          "id": 102650,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102644,
                          "src": "10116:8:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10102:23:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36053,
                      "src": "10102:30:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 102653,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102646,
                      "src": "10136:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10102:41:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102655,
                  "nodeType": "ExpressionStatement",
                  "src": "10102:41:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102657,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102642,
                        "src": "10160:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102658,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102644,
                        "src": "10167:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102659,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102646,
                        "src": "10177:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102656,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25306,
                      "src": "10154:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 102660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10154:31:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102661,
                  "nodeType": "ExpressionStatement",
                  "src": "10154:31:179"
                }
              ]
            },
            "documentation": {
              "id": 102640,
              "nodeType": "StructuredDocumentation",
              "src": "9746:226:179",
              "text": "@notice             Burn bond token and update supply\n @param from_        Address to burn tokens from\n @param tokenId_     ID of bond token to burn\n @param amount_      Amount of bond token to burn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnToken",
            "nameLocation": "9987:10:179",
            "parameters": {
              "id": 102647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102642,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "10016:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102663,
                  "src": "10008:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10008:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102644,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10040:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102663,
                  "src": "10032:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10032:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102646,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "10067:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102663,
                  "src": "10059:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10059:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9997:84:179"
            },
            "returnParameters": {
              "id": 102648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10091:0:179"
            },
            "scope": 102731,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102696,
            "nodeType": "FunctionDefinition",
            "src": "10291:389:179",
            "nodes": [],
            "body": {
              "id": 102695,
              "nodeType": "Block",
              "src": "10385:295:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102676,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10538:7:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102695,
                      "src": "10530:15:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102675,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10530:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102692,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102682,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102667,
                                "src": "10597:11:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$25731",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                "id": 102688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 102683,
                                  "name": "expiry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102669,
                                  "src": "10610:7:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 102686,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10627:6:179",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      }
                                    ],
                                    "id": 102685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10620:6:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 102684,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10620:6:179",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 102687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10620:14:179",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "10610:24:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$25731",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              ],
                              "expression": {
                                "id": 102680,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10580:3:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 102681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10580:16:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 102689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10580:55:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 102679,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10570:9:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 102690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10570:66:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 102678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10548:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 102677,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10548:7:179",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 102691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10548:99:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10530:117:179"
                },
                {
                  "expression": {
                    "id": 102693,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102676,
                    "src": "10665:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102674,
                  "id": 102694,
                  "nodeType": "Return",
                  "src": "10658:14:179"
                }
              ]
            },
            "baseFunctions": [
              36109
            ],
            "documentation": {
              "id": 102664,
              "nodeType": "StructuredDocumentation",
              "src": "10249:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "92593277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenId",
            "nameLocation": "10300:10:179",
            "overrides": {
              "id": 102671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10358:8:179"
            },
            "parameters": {
              "id": 102670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102667,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "10317:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102696,
                  "src": "10311:17:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102665,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "10311:5:179"
                    },
                    "referencedDeclaration": 25731,
                    "src": "10311:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102669,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "10337:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102696,
                  "src": "10330:14:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102668,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "10330:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10310:35:179"
            },
            "returnParameters": {
              "id": 102674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102696,
                  "src": "10376:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10375:9:179"
            },
            "scope": 102731,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102730,
            "nodeType": "FunctionDefinition",
            "src": "10730:394:179",
            "nodes": [],
            "body": {
              "id": 102729,
              "nodeType": "Block",
              "src": "10882:242:179",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102709,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "10914:4:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102729,
                      "src": "10893:25:179",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 102708,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102707,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36054,
                          "src": "10893:13:179"
                        },
                        "referencedDeclaration": 36054,
                        "src": "10893:13:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102713,
                  "initialValue": {
                    "baseExpression": {
                      "id": 102710,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102160,
                      "src": "10921:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$36054_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 102712,
                    "indexExpression": {
                      "id": 102711,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102699,
                      "src": "10935:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10921:23:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$36054_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10893:51:179"
                },
                {
                  "assignments": [
                    102715,
                    102717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102715,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "10970:4:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102729,
                      "src": "10956:18:179",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 102714,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10956:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 102717,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "10990:6:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 102729,
                      "src": "10976:20:179",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 102716,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10976:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102724,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102719,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102709,
                          "src": "11032:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102720,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36047,
                        "src": "11032:15:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 102721,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102709,
                          "src": "11062:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$36054_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102722,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36051,
                        "src": "11062:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102718,
                      "name": "_getNameAndSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102020,
                      "src": "11000:17:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$25731_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                      }
                    },
                    "id": 102723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11000:84:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10955:129:179"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 102725,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "11103:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 102726,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102717,
                        "src": "11109:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 102727,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11102:14:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 102706,
                  "id": 102728,
                  "nodeType": "Return",
                  "src": "11095:21:179"
                }
              ]
            },
            "baseFunctions": [
              36119
            ],
            "documentation": {
              "id": 102697,
              "nodeType": "StructuredDocumentation",
              "src": "10688:36:179",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "35312c85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNameAndSymbol",
            "nameLocation": "10739:21:179",
            "overrides": {
              "id": 102701,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10820:8:179"
            },
            "parameters": {
              "id": 102700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102699,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10769:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 102730,
                  "src": "10761:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10761:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10760:18:179"
            },
            "returnParameters": {
              "id": 102706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102730,
                  "src": "10847:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102702,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10847:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102730,
                  "src": "10862:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102704,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10862:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10846:30:179"
            },
            "scope": 102731,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 102134,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 102116,
              "src": "1559:14:179"
            },
            "id": 102135,
            "nodeType": "InheritanceSpecifier",
            "src": "1559:14:179"
          },
          {
            "baseName": {
              "id": 102136,
              "name": "IBondFixedTermTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36120,
              "src": "1575:20:179"
            },
            "id": 102137,
            "nodeType": "InheritanceSpecifier",
            "src": "1575:20:179"
          },
          {
            "baseName": {
              "id": 102138,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25307,
              "src": "1597:7:179"
            },
            "id": 102139,
            "nodeType": "InheritanceSpecifier",
            "src": "1597:7:179"
          }
        ],
        "canonicalName": "BondFixedTermTeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 102133,
          "nodeType": "StructuredDocumentation",
          "src": "1469:58:179",
          "text": "removed uri logic (unnecessary for fixed-term bonds)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          102731,
          25307,
          36120,
          102116,
          25876,
          23822,
          36306
        ],
        "name": "BondFixedTermTeller",
        "nameLocation": "1536:19:179",
        "scope": 102732,
        "usedErrors": [
          101216,
          101220,
          101222,
          101229,
          101231,
          101233
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 179
}