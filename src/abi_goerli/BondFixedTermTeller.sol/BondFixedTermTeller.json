{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC1155BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts_",
          "type": "uint256[]"
        }
      ],
      "name": "batchRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        }
      ],
      "name": "getTokenNameAndSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016002553480156200001657600080fd5b5060405162003a9b38038062003a9b83398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a0516138e1620001ba60003960008181610c010152611d85015260008181610df1015261140501526138e16000f3fe608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a7146101a157806306692a37146101c45780630d4dfc21146101f457806313af4035146102095780632eb2c2d61461021c5780632f6fa94e1461022f57806335312c85146102425780634e1273f4146102635780636914db60146102835780636de5b4cd1461031c5780637a9e5e4b1461034b5780637cbc23731461035e57806381690927146103715780638da5cb5b1461038457806392593277146103a4578063a22cb465146103b7578063b0e21e8a146103ca578063b1e55529146103dc578063b7314ef9146103ef578063b88c914814610410578063bf7e214f14610423578063c23135dd14610436578063c6e38a4b1461045e578063ccf288c614610471578063e70b9e271461047b578063e985e9c5146104a6578063e9dc30f3146104d4578063f242432a146104e7575b600080fd5b61018e610171366004612a4e565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101b46101af366004612a90565b6104fa565b6040519015158152602001610198565b6004546101dd90600160301b900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610198565b610207610202366004612ac1565b61054c565b005b610207610217366004612ade565b6105d8565b61020761022a366004612b87565b610655565b61020761023d366004612c8b565b6108b9565b610255610250366004612d4e565b610988565b604051610198929190612dbf565b610276610271366004612ded565b610a10565b6040516101989190612e58565b6102db610291366004612d4e565b6008602052600090815260409020805460019091015460ff8083169261010081046001600160a01b031692600160a81b820490921691600160b01b90910465ffffffffffff169085565b6040805195151586526001600160a01b03909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610198565b61032f61032a366004612e9c565b610b23565b6040805192835265ffffffffffff909116602083015201610198565b610207610359366004612ade565b610ec6565b61020761036c366004612eed565b610fb0565b61020761037f366004612ac1565b610fe9565b600054610397906001600160a01b031681565b6040516101989190612f0f565b61018e6103b2366004612f23565b611074565b6102076103c5366004612f6a565b6110db565b6004546101dd9065ffffffffffff1681565b6102076103ea366004612ac1565b611147565b6104026103fd366004612f98565b6111c4565b604051610198929190612fd9565b6101dd61041e366004612ade565b6114b0565b600154610397906001600160a01b031681565b6101dd610444366004612ade565b60036020526000908152604090205465ffffffffffff1681565b61018e61046c366004612f23565b6114e1565b6101dd620186a081565b61018e610489366004612fe7565b600560209081526000928352604080842090915290825290205481565b6101b46104b4366004612fe7565b600760209081526000928352604080842090915290825290205460ff1681565b6102076104e2366004612ded565b611545565b6102076104f5366004613015565b6115ee565b60006301ffc9a760e01b6001600160e01b03198316148061052b5750636cdb3d1360e11b6001600160e01b03198316145b8061054657506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001146105775760405162461bcd60e51b815260040161056e90613090565b60405180910390fd5b6002805561138865ffffffffffff821611156105a65760405163e94b8f2760e01b815260040160405180910390fd5b336000908152600360205260409020805465ffffffffffff191665ffffffffffff929092169190911790556001600255565b6105ee336000356001600160e01b0319166117c7565b61060a5760405162461bcd60e51b815260040161056e906130b4565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b8483146106745760405162461bcd60e51b815260040161056e906130da565b336001600160a01b03891614806106ae57506001600160a01b038816600090815260076020908152604080832033845290915290205460ff165b6106ca5760405162461bcd60e51b815260040161056e90613103565b60008060005b87811015610789578888828181106106ea576106ea61312b565b9050602002013592508686828181106107055761070561312b565b6001600160a01b038e16600090815260066020908152604080832089845282528220805493909102949094013595508593925090610744908490613157565b90915550506001600160a01b038a1660009081526006602090815260408083208684529091528120805484929061077c90849061316e565b90915550506001016106d0565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516107dd94939291906131bc565b60405180910390a46001600160a01b0389163b156108845760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906108319033908f908e908e908e908e908e908e90600401613217565b6020604051808303816000875af1158015610850573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610874919061327b565b6001600160e01b03191614610891565b6001600160a01b03891615155b6108ad5760405162461bcd60e51b815260040161056e90613298565b50505050505050505050565b6002546001146108db5760405162461bcd60e51b815260040161056e90613090565b60028055815160005b8181101561097d5760008482815181106109005761090061312b565b6020908102919091018101513360009081526005835260408082206001600160a01b03841683529093529190912054909150801561096a573360009081526005602090815260408083206001600160a01b038616808552925282209190915561096a908683611871565b505080610976906132c2565b90506108e4565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff8082161515835261010082046001600160a01b0316958301869052600160a81b82041693820193909352600160b01b90920465ffffffffffff16606080840182905260019092015460808401529093849390918291610a039161197e565b9097909650945050505050565b6060838214610a315760405162461bcd60e51b815260040161056e906130da565b836001600160401b03811115610a4957610a49612c45565b604051908082528060200260200182016040528015610a72578160200160208202803683370190505b50905060005b84811015610b1a5760066000878784818110610a9657610a9661312b565b9050602002016020810190610aab9190612ade565b6001600160a01b03166001600160a01b031681526020019081526020016000206000858584818110610adf57610adf61312b565b90506020020135815260200190815260200160002054828281518110610b0757610b0761312b565b6020908102919091010152600101610a78565b50949350505050565b600080600254600114610b485760405162461bcd60e51b815260040161056e90613090565b600280556001600160a01b0386166000908152600360205260408120548190819081908190610b84908a9065ffffffffffff16620186a0611cc9565b6001600160a01b038c1660009081526003602052604081205460045492935090918391610bd391610bc09165ffffffffffff90811691166132db565b8c9065ffffffffffff16620186a0611cc9565b610bdd9190613157565b6040516329023ca160e11b8152600481018d90529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6c9190613305565b604051632b3155c360e21b8152600481018e90529091506000906001600160a01b0383169063acc5570c9060240160c060405180830381865afa158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb9190613322565b50919b50995097509091506000905083610cf5868f613157565b610cff9190613157565b9050826001600160a01b031663e007fa978f838f6040518463ffffffff1660e01b8152600401610d42939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d85919061339f565b955050505081600560008e6001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b031681526020019081526020016000206000828254610de2919061316e565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e3e90849061316e565b90915550610e5990508b8b85610e54858761316e565b611d7d565b6000610e678e858988612290565b90508c6001600160a01b03168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ea5929190612fd9565b60405180910390a36001600255929d929c50919a5050505050505050505050565b6000546001600160a01b0316331480610f5b575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f1a90339030906001600160e01b031960003516906004016133b8565b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b91906133e5565b610f6457600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b600254600114610fd25760405162461bcd60e51b815260040161056e90613090565b60028055610fe0828261231a565b50506001600255565b610fff336000356001600160e01b0319166117c7565b61101b5760405162461bcd60e51b815260040161056e906130b4565b60045465ffffffffffff908116908216111561104a5760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff909216600160301b0265ffffffffffff60301b19909216919091179055565b600080836110856201518085613418565b6040516020016110bb92919060609290921b6001600160601b031916825260d01b6001600160d01b0319166014820152601a0190565b60408051808303601f190181529190528051602090910120949350505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61115d336000356001600160e01b0319166117c7565b6111795760405162461bcd60e51b815260040161056e906130b4565b6113888165ffffffffffff1611156111a45760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff191665ffffffffffff92909216919091179055565b6000806002546001146111e95760405162461bcd60e51b815260040161056e90613090565b6002805560006111fc6201518086613418565b611209906201518061343d565b9050428165ffffffffffff1610156112345760405163e94b8f2760e01b815260040160405180910390fd5b60006112408783611074565b60008181526008602052604090205490915060ff1661128b5760405163cb66c9db60e01b81526001600160a01b038816600482015265ffffffffffff8316602482015260440161056e565b6040516370a0823160e01b81526000906001600160a01b038916906370a08231906112ba903090600401612f0f565b602060405180830381865afa1580156112d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fb919061339f565b90506113126001600160a01b03891633308961240f565b61131c868261316e565b6040516370a0823160e01b81526001600160a01b038a16906370a0823190611348903090600401612f0f565b602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611389919061339f565b10156113a8576040516334d5114960e21b815260040160405180910390fd5b60045465ffffffffffff600160301b8204811691161115611489576004546000906113fb906113e89065ffffffffffff600160301b82048116911661346b565b889065ffffffffffff16620186a0611cc9565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e1683529290529081208054929350839290919061145790849061316e565b909155506114719050338461146c848b613157565b612522565b8261147c8289613157565b95509550505050506114a1565b611494338388612522565b5092508391506114a19050565b60016002559094909350915050565b6001600160a01b0381166000908152600360205260408120546004546105469165ffffffffffff90811691166132db565b60006002546001146115055760405162461bcd60e51b815260040161056e90613090565b6002805560006115158484611074565b60008181526008602052604090205490915060ff1661153957611539818585612565565b60016002559392505050565b6002546001146115675760405162461bcd60e51b815260040161056e90613090565b600280558281811461158c5760405163e94b8f2760e01b815260040160405180910390fd5b60005b818110156115e1576115d18686838181106115ac576115ac61312b565b905060200201358585848181106115c5576115c561312b565b9050602002013561231a565b6115da816132c2565b905061158f565b5050600160025550505050565b336001600160a01b038716148061162857506001600160a01b038616600090815260076020908152604080832033845290915290205460ff165b6116445760405162461bcd60e51b815260040161056e90613103565b6001600160a01b038616600090815260066020908152604080832087845290915281208054859290611677908490613157565b90915550506001600160a01b0385166000908152600660209081526040808320878452909152812080548592906116af90849061316e565b92505081905550846001600160a01b0316866001600160a01b0316336001600160a01b031660008051602061388c83398151915287876040516116f3929190612fd9565b60405180910390a46001600160a01b0385163b156117965760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906117439033908b908a908a908a908a90600401613492565b6020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611786919061327b565b6001600160e01b031916146117a3565b6001600160a01b03851615155b6117bf5760405162461bcd60e51b815260040161056e90613298565b505050505050565b6001546000906001600160a01b03168015801590611851575060405163b700961360e01b81526001600160a01b0382169063b700961390611810908790309088906004016133b8565b602060405180830381865afa15801561182d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185191906133e5565b8061186957506000546001600160a01b038581169116145b949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118cd91906134d9565b6000604051808303816000865af19150503d806000811461190a576040519150601f19603f3d011682016040523d82523d6000602084013e61190f565b606091505b509150915081801561193957508051158061193957508080602001905181019061193991906133e5565b6119775760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161056e565b5050505050565b606080600080808061199362015180886134f5565b905060006119a48262010bd9613509565b6119b19062253d8c613509565b9050600062023ab16119c483600461354a565b6119ce91906135cf565b905060046119df8262023ab161354a565b6119ea906003613509565b6119f491906135cf565b6119fe90836135fd565b9150600062164b09611a11846001613509565b611a1d90610fa061354a565b611a2791906135cf565b90506004611a37826105b561354a565b611a4191906135cf565b611a4b90846135fd565b611a5690601f613509565b9250600061098f611a6885605061354a565b611a7291906135cf565b905060006050611a848361098f61354a565b611a8e91906135cf565b611a9890866135fd565b9050611aa5600b836135cf565b9450611ab285600c61354a565b611abd836002613509565b611ac791906135fd565b91508483611ad66031876135fd565b611ae190606461354a565b611aeb9190613509565b611af59190613509565b9850909650945060009350611b1a9250611b15915061271090508661363c565b612724565b90506000600a8410611b3457611b2f84612724565b611b5d565b611b3d84612724565b604051602001611b4d9190613650565b6040516020818303038152906040525b90506000600a8410611b7757611b7284612724565b611ba0565b611b8084612724565b604051602001611b909190613650565b6040516020818303038152906040525b9050896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c089190810190613679565b838383604051602001611c1e9493929190613703565b6040516020818303038152906040529750896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c959190810190613679565b838383604051602001611cab9493929190613780565b60405160208183030381529060405296505050505050509250929050565b6000808060001985870985870292508281108382030391505080600003611d025760008411611cf757600080fd5b508290049050611d76565b808411611d0e57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166352047942896040518263ffffffff1660e01b8152600401611dd191815260200190565b602060405180830381865afa158015611dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e129190613305565b6001600160a01b031663acc5570c896040518263ffffffff1660e01b8152600401611e3f91815260200190565b60c060405180830381865afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e809190613322565b5050935093509350935060008588611e989190613157565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611ec89190612f0f565b602060405180830381865afa158015611ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f09919061339f565b9050611f206001600160a01b03841633308c61240f565b611f2a898261316e565b6040516370a0823160e01b81526001600160a01b038516906370a0823190611f56903090600401612f0f565b602060405180830381865afa158015611f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f97919061339f565b1015611fb6576040516334d5114960e21b815260040160405180910390fd5b6001600160a01b0385161561215257611fd96001600160a01b0384168684611871565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612008903090600401612f0f565b602060405180830381865afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061339f565b6040516312e779df60e21b8152600481018d905260248101859052604481018b90529091506001600160a01b03871690634b9de77c90606401600060405180830381600087803b15801561209c57600080fd5b505af11580156120b0573d6000803e3d6000fd5b5050505088816120c0919061316e565b6040516370a0823160e01b81526001600160a01b038716906370a08231906120ec903090600401612f0f565b602060405180830381865afa158015612109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212d919061339f565b101561214c57604051637152badd60e11b815260040160405180910390fd5b506108ad565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612181903090600401612f0f565b602060405180830381865afa15801561219e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c2919061339f565b90506121d96001600160a01b03861688308c61240f565b6121e3898261316e565b6040516370a0823160e01b81526001600160a01b038716906370a082319061220f903090600401612f0f565b602060405180830381865afa15801561222c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612250919061339f565b101561226f576040516334d5114960e21b815260040160405180910390fd5b6122836001600160a01b0385168885611871565b5050505050505050505050565b600065ffffffffffff8216156123065762015180806122af42856132db565b6122b99190613418565b6122c3919061343d565b905060006122d18483611074565b60008181526008602052604090205490915060ff166122f5576122f5818584612565565b612300868287612522565b50611869565b6118696001600160a01b0384168686611871565b60008281526008602052604090205460ff166123495760405163e94b8f2760e01b815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff8082161515835261010082046001600160a01b031694830194909452600160a81b810490931693810193909352600160b01b90910465ffffffffffff166060830181905260019091015460808301524210156123e6576060810151604051634fb1e97360e01b815265ffffffffffff909116600482015260240161056e565b6123f1338484612846565b602081015161240a906001600160a01b03163384611871565b505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161247391906134d9565b6000604051808303816000865af19150503d80600081146124b0576040519150601f19603f3d011682016040523d82523d6000602084013e6124b5565b606091505b50915091508180156124df5750805115806124df5750808060200190518101906124df91906133e5565b6117bf5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161056e565b6000828152600860205260408120600101805483929061254390849061316e565b9250508190555061240a83838360405180602001604052806000815250612878565b60006125746201518083613418565b612581906201518061343d565b9050428165ffffffffffff1610156125ac5760405163e94b8f2760e01b815260040160405180910390fd5b6040518060a00160405280600115158152602001846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561260d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263191906137ea565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716600160b01b0265ffffffffffff60b01b1997909816600160a81b029690961666ffffffffffffff60a81b196001600160a01b0397881661010002610100600160a81b0319941515949094166001600160a81b03199093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361274b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612775578061275f816132c2565b915061276e9050600a836134f5565b915061274f565b6000816001600160401b0381111561278f5761278f612c45565b6040519080825280601f01601f1916602001820160405280156127b9576020820181803683370190505b509050815b8515610b1a576127cf600182613157565b905060006127de600a886134f5565b6127e990600a61380d565b6127f39088613157565b6127fe90603061382c565b905060008160f81b90508084848151811061281b5761281b61312b565b60200101906001600160f81b031916908160001a90535061283d600a896134f5565b975050506127be565b60008281526008602052604081206001018054839290612867908490613157565b9091555061240a90508383836129b1565b6001600160a01b0384166000908152600660209081526040808320868452909152812080548492906128ab90849061316e565b90915550506040516001600160a01b03851690600090339060008051602061388c833981519152906128e09088908890612fd9565b60405180910390a46001600160a01b0384163b156129825760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061292f903390600090899089908990600401613851565b6020604051808303816000875af115801561294e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612972919061327b565b6001600160e01b0319161461298f565b6001600160a01b03841615155b6129ab5760405162461bcd60e51b815260040161056e90613298565b50505050565b6001600160a01b0383166000908152600660209081526040808320858452909152812080548392906129e4908490613157565b90915550506040516000906001600160a01b03851690339060008051602061388c83398151915290612a199087908790612fd9565b60405180910390a4505050565b6001600160a01b0381168114612a3b57600080fd5b50565b8035612a4981612a26565b919050565b60008060408385031215612a6157600080fd5b8235612a6c81612a26565b946020939093013593505050565b6001600160e01b031981168114612a3b57600080fd5b600060208284031215612aa257600080fd5b8135611d7681612a7a565b65ffffffffffff81168114612a3b57600080fd5b600060208284031215612ad357600080fd5b8135611d7681612aad565b600060208284031215612af057600080fd5b8135611d7681612a26565b60008083601f840112612b0d57600080fd5b5081356001600160401b03811115612b2457600080fd5b6020830191508360208260051b8501011115612b3f57600080fd5b9250929050565b60008083601f840112612b5857600080fd5b5081356001600160401b03811115612b6f57600080fd5b602083019150836020828501011115612b3f57600080fd5b60008060008060008060008060a0898b031215612ba357600080fd5b8835612bae81612a26565b97506020890135612bbe81612a26565b965060408901356001600160401b0380821115612bda57600080fd5b612be68c838d01612afb565b909850965060608b0135915080821115612bff57600080fd5b612c0b8c838d01612afb565b909650945060808b0135915080821115612c2457600080fd5b50612c318b828c01612b46565b999c989b5096995094979396929594505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c8357612c83612c45565b604052919050565b60008060408385031215612c9e57600080fd5b82356001600160401b0380821115612cb557600080fd5b818501915085601f830112612cc957600080fd5b8135602082821115612cdd57612cdd612c45565b8160051b9250612cee818401612c5b565b8281529284018101928181019089851115612d0857600080fd5b948201945b84861015612d325785359350612d2284612a26565b8382529482019490820190612d0d565b9650612d419050878201612a3e565b9450505050509250929050565b600060208284031215612d6057600080fd5b5035919050565b60005b83811015612d82578181015183820152602001612d6a565b838111156129ab5750506000910152565b60008151808452612dab816020860160208601612d67565b601f01601f19169290920160200192915050565b604081526000612dd26040830185612d93565b8281036020840152612de48185612d93565b95945050505050565b60008060008060408587031215612e0357600080fd5b84356001600160401b0380821115612e1a57600080fd5b612e2688838901612afb565b90965094506020870135915080821115612e3f57600080fd5b50612e4c87828801612afb565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015612e9057835183529284019291840191600101612e74565b50909695505050505050565b600080600080600060a08688031215612eb457600080fd5b8535612ebf81612a26565b94506020860135612ecf81612a26565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215612f0057600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60008060408385031215612f3657600080fd5b8235612f4181612a26565b91506020830135612f5181612aad565b809150509250929050565b8015158114612a3b57600080fd5b60008060408385031215612f7d57600080fd5b8235612f8881612a26565b91506020830135612f5181612f5c565b600080600060608486031215612fad57600080fd5b8335612fb881612a26565b92506020840135612fc881612aad565b929592945050506040919091013590565b918252602082015260400190565b60008060408385031215612ffa57600080fd5b823561300581612a26565b91506020830135612f5181612a26565b60008060008060008060a0878903121561302e57600080fd5b863561303981612a26565b9550602087013561304981612a26565b9450604087013593506060870135925060808701356001600160401b0381111561307257600080fd5b61307e89828a01612b46565b979a9699509497509295939492505050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561316957613169613141565b500390565b6000821982111561318157613181613141565b500190565b81835260006001600160fb1b0383111561319f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006131d0604083018688613186565b82810360208401526131e3818587613186565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090613244908301888a613186565b8281036060840152613257818789613186565b9050828103608084015261326c8185876131ee565b9b9a5050505050505050505050565b60006020828403121561328d57600080fd5b8151611d7681612a7a565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000600182016132d4576132d4613141565b5060010190565b600065ffffffffffff8083168185168083038211156132fc576132fc613141565b01949350505050565b60006020828403121561331757600080fd5b8151611d7681612a26565b60008060008060008060c0878903121561333b57600080fd5b865161334681612a26565b602088015190965061335781612a26565b604088015190955061336881612a26565b606088015190945061337981612a26565b608088015190935061338a81612aad565b8092505060a087015190509295509295509295565b6000602082840312156133b157600080fd5b5051919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156133f757600080fd5b8151611d7681612f5c565b634e487b7160e01b600052601260045260246000fd5b600065ffffffffffff8084168061343157613431613402565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561346257613462613141565b02949350505050565b600065ffffffffffff8381169083168181101561348a5761348a613141565b039392505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a0608082018190526000906134cd90830184866131ee565b98975050505050505050565b600082516134eb818460208701612d67565b9190910192915050565b60008261350457613504613402565b500490565b600080821280156001600160ff1b038490038513161561352b5761352b613141565b600160ff1b839003841281161561354457613544613141565b50500190565b60006001600160ff1b038184138284138082168684048611161561357057613570613141565b600160ff1b600087128281168783058912161561358f5761358f613141565b600087129250878205871284841616156135ab576135ab613141565b878505871281841616156135c1576135c1613141565b505050929093029392505050565b6000826135de576135de613402565b600160ff1b8214600019841416156135f8576135f8613141565b500590565b60008083128015600160ff1b85018412161561361b5761361b613141565b6001600160ff1b038401831381161561363657613636613141565b50500390565b60008261364b5761364b613402565b500690565b600360fc1b81526000825161366c816001850160208701612d67565b9190910160010192915050565b60006020828403121561368b57600080fd5b81516001600160401b03808211156136a257600080fd5b818401915084601f8301126136b657600080fd5b8151818111156136c8576136c8612c45565b6136db601f8201601f1916602001612c5b565b91508082528560208285010111156136f257600080fd5b610b1a816020840160208601612d67565b60008551613715818460208a01612d67565b600160fd1b9083019081528551613733816001840160208a01612d67565b808201915050602d60f81b8060018301528551613757816002850160208a01612d67565b60029201918201528351613772816003840160208801612d67565b016003019695505050505050565b60008551613792818460208a01612d67565b602d60f81b90830190815285516137b0816001840160208a01612d67565b85519101906137c6816001840160208901612d67565b84519101906137dc816001840160208801612d67565b016001019695505050505050565b6000602082840312156137fc57600080fd5b815160ff81168114611d7657600080fd5b600081600019048311821515161561382757613827613141565b500290565b600060ff821660ff84168060ff0382111561384957613849613141565b019392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906131e390830184612d9356fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a26469706673582212200f286ac0e94c0d3e7bcf4a204ec945da656231f2aef4fca3dad054006929926f64736f6c634300080f0033",
    "sourceMap": "1527:9600:180:-:0;;;451:1:14;426:26;;2015:208:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:7;:14;;-1:-1:-1;;;;;;671:14:7;;;-1:-1:-1;;;;;671:14:7;;;;;;;;-1:-1:-1;695:22:7;;;;;;;;;;;;733:32;;2174:9:180;;2185:11;;671:14:7;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:7;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3857:21:179;;::::1;;::::0;-1:-1:-1;3889:25:179::1;;::::0;-1:-1:-1;;3991:11:179::1;:15:::0;;-1:-1:-1;;;;;;4017:21:179;;;-1:-1:-1;1527:9600:180;;-1:-1:-1;1527:9600:180;14:131:184;-1:-1:-1;;;;;89:31:184;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:184;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:184;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:184;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:184;;-1:-1:-1;;150:698:184:o;:::-;1527:9600:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a7146101a157806306692a37146101c45780630d4dfc21146101f457806313af4035146102095780632eb2c2d61461021c5780632f6fa94e1461022f57806335312c85146102425780634e1273f4146102635780636914db60146102835780636de5b4cd1461031c5780637a9e5e4b1461034b5780637cbc23731461035e57806381690927146103715780638da5cb5b1461038457806392593277146103a4578063a22cb465146103b7578063b0e21e8a146103ca578063b1e55529146103dc578063b7314ef9146103ef578063b88c914814610410578063bf7e214f14610423578063c23135dd14610436578063c6e38a4b1461045e578063ccf288c614610471578063e70b9e271461047b578063e985e9c5146104a6578063e9dc30f3146104d4578063f242432a146104e7575b600080fd5b61018e610171366004612a4e565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101b46101af366004612a90565b6104fa565b6040519015158152602001610198565b6004546101dd90600160301b900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610198565b610207610202366004612ac1565b61054c565b005b610207610217366004612ade565b6105d8565b61020761022a366004612b87565b610655565b61020761023d366004612c8b565b6108b9565b610255610250366004612d4e565b610988565b604051610198929190612dbf565b610276610271366004612ded565b610a10565b6040516101989190612e58565b6102db610291366004612d4e565b6008602052600090815260409020805460019091015460ff8083169261010081046001600160a01b031692600160a81b820490921691600160b01b90910465ffffffffffff169085565b6040805195151586526001600160a01b03909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610198565b61032f61032a366004612e9c565b610b23565b6040805192835265ffffffffffff909116602083015201610198565b610207610359366004612ade565b610ec6565b61020761036c366004612eed565b610fb0565b61020761037f366004612ac1565b610fe9565b600054610397906001600160a01b031681565b6040516101989190612f0f565b61018e6103b2366004612f23565b611074565b6102076103c5366004612f6a565b6110db565b6004546101dd9065ffffffffffff1681565b6102076103ea366004612ac1565b611147565b6104026103fd366004612f98565b6111c4565b604051610198929190612fd9565b6101dd61041e366004612ade565b6114b0565b600154610397906001600160a01b031681565b6101dd610444366004612ade565b60036020526000908152604090205465ffffffffffff1681565b61018e61046c366004612f23565b6114e1565b6101dd620186a081565b61018e610489366004612fe7565b600560209081526000928352604080842090915290825290205481565b6101b46104b4366004612fe7565b600760209081526000928352604080842090915290825290205460ff1681565b6102076104e2366004612ded565b611545565b6102076104f5366004613015565b6115ee565b60006301ffc9a760e01b6001600160e01b03198316148061052b5750636cdb3d1360e11b6001600160e01b03198316145b8061054657506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001146105775760405162461bcd60e51b815260040161056e90613090565b60405180910390fd5b6002805561138865ffffffffffff821611156105a65760405163e94b8f2760e01b815260040160405180910390fd5b336000908152600360205260409020805465ffffffffffff191665ffffffffffff929092169190911790556001600255565b6105ee336000356001600160e01b0319166117c7565b61060a5760405162461bcd60e51b815260040161056e906130b4565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b8483146106745760405162461bcd60e51b815260040161056e906130da565b336001600160a01b03891614806106ae57506001600160a01b038816600090815260076020908152604080832033845290915290205460ff165b6106ca5760405162461bcd60e51b815260040161056e90613103565b60008060005b87811015610789578888828181106106ea576106ea61312b565b9050602002013592508686828181106107055761070561312b565b6001600160a01b038e16600090815260066020908152604080832089845282528220805493909102949094013595508593925090610744908490613157565b90915550506001600160a01b038a1660009081526006602090815260408083208684529091528120805484929061077c90849061316e565b90915550506001016106d0565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516107dd94939291906131bc565b60405180910390a46001600160a01b0389163b156108845760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906108319033908f908e908e908e908e908e908e90600401613217565b6020604051808303816000875af1158015610850573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610874919061327b565b6001600160e01b03191614610891565b6001600160a01b03891615155b6108ad5760405162461bcd60e51b815260040161056e90613298565b50505050505050505050565b6002546001146108db5760405162461bcd60e51b815260040161056e90613090565b60028055815160005b8181101561097d5760008482815181106109005761090061312b565b6020908102919091018101513360009081526005835260408082206001600160a01b03841683529093529190912054909150801561096a573360009081526005602090815260408083206001600160a01b038616808552925282209190915561096a908683611871565b505080610976906132c2565b90506108e4565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff8082161515835261010082046001600160a01b0316958301869052600160a81b82041693820193909352600160b01b90920465ffffffffffff16606080840182905260019092015460808401529093849390918291610a039161197e565b9097909650945050505050565b6060838214610a315760405162461bcd60e51b815260040161056e906130da565b836001600160401b03811115610a4957610a49612c45565b604051908082528060200260200182016040528015610a72578160200160208202803683370190505b50905060005b84811015610b1a5760066000878784818110610a9657610a9661312b565b9050602002016020810190610aab9190612ade565b6001600160a01b03166001600160a01b031681526020019081526020016000206000858584818110610adf57610adf61312b565b90506020020135815260200190815260200160002054828281518110610b0757610b0761312b565b6020908102919091010152600101610a78565b50949350505050565b600080600254600114610b485760405162461bcd60e51b815260040161056e90613090565b600280556001600160a01b0386166000908152600360205260408120548190819081908190610b84908a9065ffffffffffff16620186a0611cc9565b6001600160a01b038c1660009081526003602052604081205460045492935090918391610bd391610bc09165ffffffffffff90811691166132db565b8c9065ffffffffffff16620186a0611cc9565b610bdd9190613157565b6040516329023ca160e11b8152600481018d90529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6c9190613305565b604051632b3155c360e21b8152600481018e90529091506000906001600160a01b0383169063acc5570c9060240160c060405180830381865afa158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb9190613322565b50919b50995097509091506000905083610cf5868f613157565b610cff9190613157565b9050826001600160a01b031663e007fa978f838f6040518463ffffffff1660e01b8152600401610d42939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d85919061339f565b955050505081600560008e6001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b031681526020019081526020016000206000828254610de2919061316e565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e3e90849061316e565b90915550610e5990508b8b85610e54858761316e565b611d7d565b6000610e678e858988612290565b90508c6001600160a01b03168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ea5929190612fd9565b60405180910390a36001600255929d929c50919a5050505050505050505050565b6000546001600160a01b0316331480610f5b575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f1a90339030906001600160e01b031960003516906004016133b8565b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b91906133e5565b610f6457600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b600254600114610fd25760405162461bcd60e51b815260040161056e90613090565b60028055610fe0828261231a565b50506001600255565b610fff336000356001600160e01b0319166117c7565b61101b5760405162461bcd60e51b815260040161056e906130b4565b60045465ffffffffffff908116908216111561104a5760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff909216600160301b0265ffffffffffff60301b19909216919091179055565b600080836110856201518085613418565b6040516020016110bb92919060609290921b6001600160601b031916825260d01b6001600160d01b0319166014820152601a0190565b60408051808303601f190181529190528051602090910120949350505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61115d336000356001600160e01b0319166117c7565b6111795760405162461bcd60e51b815260040161056e906130b4565b6113888165ffffffffffff1611156111a45760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff191665ffffffffffff92909216919091179055565b6000806002546001146111e95760405162461bcd60e51b815260040161056e90613090565b6002805560006111fc6201518086613418565b611209906201518061343d565b9050428165ffffffffffff1610156112345760405163e94b8f2760e01b815260040160405180910390fd5b60006112408783611074565b60008181526008602052604090205490915060ff1661128b5760405163cb66c9db60e01b81526001600160a01b038816600482015265ffffffffffff8316602482015260440161056e565b6040516370a0823160e01b81526000906001600160a01b038916906370a08231906112ba903090600401612f0f565b602060405180830381865afa1580156112d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fb919061339f565b90506113126001600160a01b03891633308961240f565b61131c868261316e565b6040516370a0823160e01b81526001600160a01b038a16906370a0823190611348903090600401612f0f565b602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611389919061339f565b10156113a8576040516334d5114960e21b815260040160405180910390fd5b60045465ffffffffffff600160301b8204811691161115611489576004546000906113fb906113e89065ffffffffffff600160301b82048116911661346b565b889065ffffffffffff16620186a0611cc9565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e1683529290529081208054929350839290919061145790849061316e565b909155506114719050338461146c848b613157565b612522565b8261147c8289613157565b95509550505050506114a1565b611494338388612522565b5092508391506114a19050565b60016002559094909350915050565b6001600160a01b0381166000908152600360205260408120546004546105469165ffffffffffff90811691166132db565b60006002546001146115055760405162461bcd60e51b815260040161056e90613090565b6002805560006115158484611074565b60008181526008602052604090205490915060ff1661153957611539818585612565565b60016002559392505050565b6002546001146115675760405162461bcd60e51b815260040161056e90613090565b600280558281811461158c5760405163e94b8f2760e01b815260040160405180910390fd5b60005b818110156115e1576115d18686838181106115ac576115ac61312b565b905060200201358585848181106115c5576115c561312b565b9050602002013561231a565b6115da816132c2565b905061158f565b5050600160025550505050565b336001600160a01b038716148061162857506001600160a01b038616600090815260076020908152604080832033845290915290205460ff165b6116445760405162461bcd60e51b815260040161056e90613103565b6001600160a01b038616600090815260066020908152604080832087845290915281208054859290611677908490613157565b90915550506001600160a01b0385166000908152600660209081526040808320878452909152812080548592906116af90849061316e565b92505081905550846001600160a01b0316866001600160a01b0316336001600160a01b031660008051602061388c83398151915287876040516116f3929190612fd9565b60405180910390a46001600160a01b0385163b156117965760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906117439033908b908a908a908a908a90600401613492565b6020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611786919061327b565b6001600160e01b031916146117a3565b6001600160a01b03851615155b6117bf5760405162461bcd60e51b815260040161056e90613298565b505050505050565b6001546000906001600160a01b03168015801590611851575060405163b700961360e01b81526001600160a01b0382169063b700961390611810908790309088906004016133b8565b602060405180830381865afa15801561182d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185191906133e5565b8061186957506000546001600160a01b038581169116145b949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118cd91906134d9565b6000604051808303816000865af19150503d806000811461190a576040519150601f19603f3d011682016040523d82523d6000602084013e61190f565b606091505b509150915081801561193957508051158061193957508080602001905181019061193991906133e5565b6119775760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161056e565b5050505050565b606080600080808061199362015180886134f5565b905060006119a48262010bd9613509565b6119b19062253d8c613509565b9050600062023ab16119c483600461354a565b6119ce91906135cf565b905060046119df8262023ab161354a565b6119ea906003613509565b6119f491906135cf565b6119fe90836135fd565b9150600062164b09611a11846001613509565b611a1d90610fa061354a565b611a2791906135cf565b90506004611a37826105b561354a565b611a4191906135cf565b611a4b90846135fd565b611a5690601f613509565b9250600061098f611a6885605061354a565b611a7291906135cf565b905060006050611a848361098f61354a565b611a8e91906135cf565b611a9890866135fd565b9050611aa5600b836135cf565b9450611ab285600c61354a565b611abd836002613509565b611ac791906135fd565b91508483611ad66031876135fd565b611ae190606461354a565b611aeb9190613509565b611af59190613509565b9850909650945060009350611b1a9250611b15915061271090508661363c565b612724565b90506000600a8410611b3457611b2f84612724565b611b5d565b611b3d84612724565b604051602001611b4d9190613650565b6040516020818303038152906040525b90506000600a8410611b7757611b7284612724565b611ba0565b611b8084612724565b604051602001611b909190613650565b6040516020818303038152906040525b9050896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c089190810190613679565b838383604051602001611c1e9493929190613703565b6040516020818303038152906040529750896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c959190810190613679565b838383604051602001611cab9493929190613780565b60405160208183030381529060405296505050505050509250929050565b6000808060001985870985870292508281108382030391505080600003611d025760008411611cf757600080fd5b508290049050611d76565b808411611d0e57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166352047942896040518263ffffffff1660e01b8152600401611dd191815260200190565b602060405180830381865afa158015611dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e129190613305565b6001600160a01b031663acc5570c896040518263ffffffff1660e01b8152600401611e3f91815260200190565b60c060405180830381865afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e809190613322565b5050935093509350935060008588611e989190613157565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611ec89190612f0f565b602060405180830381865afa158015611ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f09919061339f565b9050611f206001600160a01b03841633308c61240f565b611f2a898261316e565b6040516370a0823160e01b81526001600160a01b038516906370a0823190611f56903090600401612f0f565b602060405180830381865afa158015611f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f97919061339f565b1015611fb6576040516334d5114960e21b815260040160405180910390fd5b6001600160a01b0385161561215257611fd96001600160a01b0384168684611871565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612008903090600401612f0f565b602060405180830381865afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061339f565b6040516312e779df60e21b8152600481018d905260248101859052604481018b90529091506001600160a01b03871690634b9de77c90606401600060405180830381600087803b15801561209c57600080fd5b505af11580156120b0573d6000803e3d6000fd5b5050505088816120c0919061316e565b6040516370a0823160e01b81526001600160a01b038716906370a08231906120ec903090600401612f0f565b602060405180830381865afa158015612109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212d919061339f565b101561214c57604051637152badd60e11b815260040160405180910390fd5b506108ad565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612181903090600401612f0f565b602060405180830381865afa15801561219e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c2919061339f565b90506121d96001600160a01b03861688308c61240f565b6121e3898261316e565b6040516370a0823160e01b81526001600160a01b038716906370a082319061220f903090600401612f0f565b602060405180830381865afa15801561222c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612250919061339f565b101561226f576040516334d5114960e21b815260040160405180910390fd5b6122836001600160a01b0385168885611871565b5050505050505050505050565b600065ffffffffffff8216156123065762015180806122af42856132db565b6122b99190613418565b6122c3919061343d565b905060006122d18483611074565b60008181526008602052604090205490915060ff166122f5576122f5818584612565565b612300868287612522565b50611869565b6118696001600160a01b0384168686611871565b60008281526008602052604090205460ff166123495760405163e94b8f2760e01b815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff8082161515835261010082046001600160a01b031694830194909452600160a81b810490931693810193909352600160b01b90910465ffffffffffff166060830181905260019091015460808301524210156123e6576060810151604051634fb1e97360e01b815265ffffffffffff909116600482015260240161056e565b6123f1338484612846565b602081015161240a906001600160a01b03163384611871565b505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161247391906134d9565b6000604051808303816000865af19150503d80600081146124b0576040519150601f19603f3d011682016040523d82523d6000602084013e6124b5565b606091505b50915091508180156124df5750805115806124df5750808060200190518101906124df91906133e5565b6117bf5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161056e565b6000828152600860205260408120600101805483929061254390849061316e565b9250508190555061240a83838360405180602001604052806000815250612878565b60006125746201518083613418565b612581906201518061343d565b9050428165ffffffffffff1610156125ac5760405163e94b8f2760e01b815260040160405180910390fd5b6040518060a00160405280600115158152602001846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561260d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263191906137ea565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716600160b01b0265ffffffffffff60b01b1997909816600160a81b029690961666ffffffffffffff60a81b196001600160a01b0397881661010002610100600160a81b0319941515949094166001600160a81b03199093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361274b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612775578061275f816132c2565b915061276e9050600a836134f5565b915061274f565b6000816001600160401b0381111561278f5761278f612c45565b6040519080825280601f01601f1916602001820160405280156127b9576020820181803683370190505b509050815b8515610b1a576127cf600182613157565b905060006127de600a886134f5565b6127e990600a61380d565b6127f39088613157565b6127fe90603061382c565b905060008160f81b90508084848151811061281b5761281b61312b565b60200101906001600160f81b031916908160001a90535061283d600a896134f5565b975050506127be565b60008281526008602052604081206001018054839290612867908490613157565b9091555061240a90508383836129b1565b6001600160a01b0384166000908152600660209081526040808320868452909152812080548492906128ab90849061316e565b90915550506040516001600160a01b03851690600090339060008051602061388c833981519152906128e09088908890612fd9565b60405180910390a46001600160a01b0384163b156129825760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061292f903390600090899089908990600401613851565b6020604051808303816000875af115801561294e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612972919061327b565b6001600160e01b0319161461298f565b6001600160a01b03841615155b6129ab5760405162461bcd60e51b815260040161056e90613298565b50505050565b6001600160a01b0383166000908152600660209081526040808320858452909152812080548392906129e4908490613157565b90915550506040516000906001600160a01b03851690339060008051602061388c83398151915290612a199087908790612fd9565b60405180910390a4505050565b6001600160a01b0381168114612a3b57600080fd5b50565b8035612a4981612a26565b919050565b60008060408385031215612a6157600080fd5b8235612a6c81612a26565b946020939093013593505050565b6001600160e01b031981168114612a3b57600080fd5b600060208284031215612aa257600080fd5b8135611d7681612a7a565b65ffffffffffff81168114612a3b57600080fd5b600060208284031215612ad357600080fd5b8135611d7681612aad565b600060208284031215612af057600080fd5b8135611d7681612a26565b60008083601f840112612b0d57600080fd5b5081356001600160401b03811115612b2457600080fd5b6020830191508360208260051b8501011115612b3f57600080fd5b9250929050565b60008083601f840112612b5857600080fd5b5081356001600160401b03811115612b6f57600080fd5b602083019150836020828501011115612b3f57600080fd5b60008060008060008060008060a0898b031215612ba357600080fd5b8835612bae81612a26565b97506020890135612bbe81612a26565b965060408901356001600160401b0380821115612bda57600080fd5b612be68c838d01612afb565b909850965060608b0135915080821115612bff57600080fd5b612c0b8c838d01612afb565b909650945060808b0135915080821115612c2457600080fd5b50612c318b828c01612b46565b999c989b5096995094979396929594505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c8357612c83612c45565b604052919050565b60008060408385031215612c9e57600080fd5b82356001600160401b0380821115612cb557600080fd5b818501915085601f830112612cc957600080fd5b8135602082821115612cdd57612cdd612c45565b8160051b9250612cee818401612c5b565b8281529284018101928181019089851115612d0857600080fd5b948201945b84861015612d325785359350612d2284612a26565b8382529482019490820190612d0d565b9650612d419050878201612a3e565b9450505050509250929050565b600060208284031215612d6057600080fd5b5035919050565b60005b83811015612d82578181015183820152602001612d6a565b838111156129ab5750506000910152565b60008151808452612dab816020860160208601612d67565b601f01601f19169290920160200192915050565b604081526000612dd26040830185612d93565b8281036020840152612de48185612d93565b95945050505050565b60008060008060408587031215612e0357600080fd5b84356001600160401b0380821115612e1a57600080fd5b612e2688838901612afb565b90965094506020870135915080821115612e3f57600080fd5b50612e4c87828801612afb565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015612e9057835183529284019291840191600101612e74565b50909695505050505050565b600080600080600060a08688031215612eb457600080fd5b8535612ebf81612a26565b94506020860135612ecf81612a26565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215612f0057600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60008060408385031215612f3657600080fd5b8235612f4181612a26565b91506020830135612f5181612aad565b809150509250929050565b8015158114612a3b57600080fd5b60008060408385031215612f7d57600080fd5b8235612f8881612a26565b91506020830135612f5181612f5c565b600080600060608486031215612fad57600080fd5b8335612fb881612a26565b92506020840135612fc881612aad565b929592945050506040919091013590565b918252602082015260400190565b60008060408385031215612ffa57600080fd5b823561300581612a26565b91506020830135612f5181612a26565b60008060008060008060a0878903121561302e57600080fd5b863561303981612a26565b9550602087013561304981612a26565b9450604087013593506060870135925060808701356001600160401b0381111561307257600080fd5b61307e89828a01612b46565b979a9699509497509295939492505050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561316957613169613141565b500390565b6000821982111561318157613181613141565b500190565b81835260006001600160fb1b0383111561319f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006131d0604083018688613186565b82810360208401526131e3818587613186565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090613244908301888a613186565b8281036060840152613257818789613186565b9050828103608084015261326c8185876131ee565b9b9a5050505050505050505050565b60006020828403121561328d57600080fd5b8151611d7681612a7a565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000600182016132d4576132d4613141565b5060010190565b600065ffffffffffff8083168185168083038211156132fc576132fc613141565b01949350505050565b60006020828403121561331757600080fd5b8151611d7681612a26565b60008060008060008060c0878903121561333b57600080fd5b865161334681612a26565b602088015190965061335781612a26565b604088015190955061336881612a26565b606088015190945061337981612a26565b608088015190935061338a81612aad565b8092505060a087015190509295509295509295565b6000602082840312156133b157600080fd5b5051919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156133f757600080fd5b8151611d7681612f5c565b634e487b7160e01b600052601260045260246000fd5b600065ffffffffffff8084168061343157613431613402565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561346257613462613141565b02949350505050565b600065ffffffffffff8381169083168181101561348a5761348a613141565b039392505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a0608082018190526000906134cd90830184866131ee565b98975050505050505050565b600082516134eb818460208701612d67565b9190910192915050565b60008261350457613504613402565b500490565b600080821280156001600160ff1b038490038513161561352b5761352b613141565b600160ff1b839003841281161561354457613544613141565b50500190565b60006001600160ff1b038184138284138082168684048611161561357057613570613141565b600160ff1b600087128281168783058912161561358f5761358f613141565b600087129250878205871284841616156135ab576135ab613141565b878505871281841616156135c1576135c1613141565b505050929093029392505050565b6000826135de576135de613402565b600160ff1b8214600019841416156135f8576135f8613141565b500590565b60008083128015600160ff1b85018412161561361b5761361b613141565b6001600160ff1b038401831381161561363657613636613141565b50500390565b60008261364b5761364b613402565b500690565b600360fc1b81526000825161366c816001850160208701612d67565b9190910160010192915050565b60006020828403121561368b57600080fd5b81516001600160401b03808211156136a257600080fd5b818401915084601f8301126136b657600080fd5b8151818111156136c8576136c8612c45565b6136db601f8201601f1916602001612c5b565b91508082528560208285010111156136f257600080fd5b610b1a816020840160208601612d67565b60008551613715818460208a01612d67565b600160fd1b9083019081528551613733816001840160208a01612d67565b808201915050602d60f81b8060018301528551613757816002850160208a01612d67565b60029201918201528351613772816003840160208801612d67565b016003019695505050505050565b60008551613792818460208a01612d67565b602d60f81b90830190815285516137b0816001840160208a01612d67565b85519101906137c6816001840160208901612d67565b84519101906137dc816001840160208801612d67565b016001019695505050505050565b6000602082840312156137fc57600080fd5b815160ff81168114611d7657600080fd5b600081600019048311821515161561382757613827613141565b500290565b600060ff821660ff84168060ff0382111561384957613849613141565b019392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906131e390830184612d9356fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a26469706673582212200f286ac0e94c0d3e7bcf4a204ec945da656231f2aef4fca3dad054006929926f64736f6c634300080f0033",
    "sourceMap": "1527:9600:180:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:64:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:25:184;;;743:2;728:18;1116:64:11;;;;;;;;4529:340;;;;;;:::i;:::-;;:::i;:::-;;;1342:14:184;;1335:22;1317:41;;1305:2;1290:18;4529:340:11;1177:187:184;3233:31:179;;;;;-1:-1:-1;;;3233:31:179;;;;;;;;;1543:14:184;1531:27;;;1513:46;;1501:2;1486:18;3233:31:179;1369:196:184;4087:174:179;;;;;;:::i;:::-;;:::i;:::-;;1944:147:7;;;;;;:::i;:::-;;:::i;2543:1209:11:-;;;;;;:::i;:::-;;:::i;4741:425:179:-;;;;;;:::i;:::-;;:::i;10730:394:180:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3758:583:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1879:54:180:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1879:54:180;;-1:-1:-1;;;1879:54:180;;;;;;-1:-1:-1;;;1879:54:180;;;;;;;;;;;;8599:14:184;;8592:22;8574:41;;-1:-1:-1;;;;;8651:32:184;;;8646:2;8631:18;;8624:60;8732:4;8720:17;;;8700:18;;;8693:45;;;;8786:14;8774:27;;;8769:2;8754:18;;8747:55;8833:3;8818:19;;8811:35;8561:3;8546:19;1879:54:180;8312:540:184;5427:1883:179;;;;;;:::i;:::-;;:::i;:::-;;;;9628:25:184;;;9701:14;9689:27;;;9684:2;9669:18;;9662:55;9601:18;5427:1883:179;9456:267:184;1504:434:7;;;;;;:::i;:::-;;:::i;7061:125:180:-;;;;;;:::i;:::-;;:::i;4504:196:179:-;;;;;;:::i;:::-;;:::i;551:20:7:-;;;;;-1:-1:-1;;;;;551:20:7;;;;;;;;;;:::i;10291:389:180:-;;;;;;:::i;:::-;;:::i;1629:203:11:-;;;;;;:::i;:::-;;:::i;3003:25:179:-;;;;;;;;;4302:161;;;;;;:::i;:::-;;:::i;4486:1876:180:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5207:129:179:-;;;;;;:::i;:::-;;:::i;578:26:7:-;;;;;-1:-1:-1;;;;;578:26:7;;;2874:46:179;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7695:398:180;;;;;;:::i;:::-;;:::i;3273:41:179:-;;3311:3;3273:41;;3404:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1187:68:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;7236:361:180;;;;;;:::i;:::-;;:::i;1838:699:11:-;;;;;;:::i;:::-;;:::i;4529:340::-;4605:4;-1:-1:-1;;;;;;;;;4640:25:11;;;;:100;;-1:-1:-1;;;;;;;;;;4715:25:11;;;4640:100;:176;;;-1:-1:-1;;;;;;;;;;4791:25:11;;;4640:176;4621:195;4529:340;-1:-1:-1;;4529:340:11:o;4087:174:179:-;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;;;;;;;;;555:1;546:10;;4177:3:179::1;4170:10;::::0;::::1;;4166:45;;;4189:22;;-1:-1:-1::0;;;4189:22:179::1;;;;;;;;;;;4166:45;4235:10;4222:24;::::0;;;:12:::1;:24;::::0;;;;:31;;-1:-1:-1;;4222:31:179::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;579:6:14;:10;4087:174:179:o;1944:147:7:-;883:33;896:10;908:7;;-1:-1:-1;;;;;;908:7:7;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:7;;;;;;;:::i;:::-;2018:5:::1;:16:::0;;-1:-1:-1;;;;;;2018:16:7::1;-1:-1:-1::0;;;;;2018:16:7;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;2543:1209:11:-;2752:28;;;2744:56;;;;-1:-1:-1;;;2744:56:11;;;;;;;:::i;:::-;2819:10;-1:-1:-1;;;;;2819:18:11;;;;:56;;-1:-1:-1;;;;;;2841:22:11;;;;;;:16;:22;;;;;;;;2864:10;2841:34;;;;;;;;;;2819:56;2811:83;;;;-1:-1:-1;;;2811:83:11;;;;;;;:::i;:::-;2976:10;2996:14;3026:9;3021:352;3041:14;;;3021:352;;;3078:3;;3082:1;3078:6;;;;;;;:::i;:::-;;;;;;;3073:11;;3107:7;;3115:1;3107:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;3132:15:11;;;;;;:9;3107:10;3132:15;;;;;;;:19;;;;;;;:29;;3107:10;;;;;;;;;;-1:-1:-1;3107:10:11;;3132:19;-1:-1:-1;3132:15:11;:29;;3107:10;;3132:29;:::i;:::-;;;;-1:-1:-1;;;;;;;3175:13:11;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;3196:6;;3175:13;:27;;3196:6;;3175:27;:::i;:::-;;;;-1:-1:-1;;3345:3:11;;3021:352;;;;3420:2;-1:-1:-1;;;;;3388:49:11;3414:4;-1:-1:-1;;;;;3388:49:11;3402:10;-1:-1:-1;;;;;3388:49:11;;3424:3;;3429:7;;3388:49;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3469:14:11;;;:19;:234;;3542:85;;-1:-1:-1;;;3542:85:11;;;3651:52;-1:-1:-1;;;;;3542:47:11;;;3651:52;;3542:85;;3590:10;;3602:4;;3608:3;;;;3613:7;;;;3622:4;;;;3542:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3542:161:11;;3469:234;;;-1:-1:-1;;;;;3507:16:11;;;;3469:234;3448:297;;;;-1:-1:-1;;;3448:297:11;;;;;;;:::i;:::-;2734:1018;;2543:1209;;;;;;;;:::o;4741:425:179:-;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;4853:14:179;;4839:11:::1;4878:281;4898:3;4894:1;:7;4878:281;;;4923:11;4937:7;4945:1;4937:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4985::::1;4962:12;4977:19:::0;;;:7:::1;:19:::0;;;;;;-1:-1:-1;;;;;4977:26:179;::::1;::::0;;;;;;;;;;4937:10;;-1:-1:-1;5024:9:179;;5020:128:::1;;5062:10;5083:1;5054:19:::0;;;:7:::1;:19;::::0;;;;;;;-1:-1:-1;;;;;5054:26:179;::::1;::::0;;;;;;;:30;;;;5103:29:::1;::::0;5122:3;5127:4;5103:18:::1;:29::i;:::-;4908:251;;4903:3;;;;:::i;:::-;;;4878:281;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;4741:425:179:o;10730:394:180:-;10893:25;10921:23;;;:13;:23;;;;;;;;10893:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10893:51:180;;;;;;;-1:-1:-1;;;10893:51:180;;;;;;;;;;-1:-1:-1;;;10893:51:180;;;;;10847:13;10893:51;;;;;;;;;;;;;;;10847:13;;;;10893:25;;;;11000:84;;:17;:84::i;:::-;10955:129;;;;-1:-1:-1;10730:394:180;-1:-1:-1;;;;;10730:394:180:o;3758:583:11:-;3894:25;3943:27;;;3935:55;;;;-1:-1:-1;;;3935:55:11;;;;;;;:::i;:::-;4026:6;-1:-1:-1;;;;;4012:28:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4012:28:11;;4001:39;;4211:9;4206:119;4226:17;;;4206:119;;;4282:9;:20;4292:6;;4299:1;4292:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4282:20:11;-1:-1:-1;;;;;4282:20:11;;;;;;;;;;;;:28;4303:3;;4307:1;4303:6;;;;;;;:::i;:::-;;;;;;;4282:28;;;;;;;;;;;;4268:8;4277:1;4268:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4245:3;;4206:119;;;;3758:583;;;;;;:::o;5427:1883:179:-;5628:7;5637:6;509::14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;-1:-1:-1;;;;;6047:23:179;::::1;5656:17;6047:23:::0;;;:12:::1;:23;::::0;;;;;5656:17;;;;;;;;6032:53:::1;::::0;:7;;6047:23:::1;;3311:3;6032:14;:53::i;:::-;-1:-1:-1::0;;;;;6146:23:179;::::1;6096:18;6146:23:::0;;;:12:::1;:23;::::0;;;;;6132:11:::1;::::0;6011:74;;-1:-1:-1;6096:18:179;;6011:74;;6117:67:::1;::::0;6132:37:::1;::::0;6146:23:::1;::::0;;::::1;::::0;6132:11:::1;:37;:::i;:::-;6117:7:::0;;:67:::1;;3311:3;6117:14;:67::i;:::-;:93;;;;:::i;:::-;6267:30;::::0;-1:-1:-1;;;6267:30:179;;::::1;::::0;::::1;755:25:184::0;;;6096:114:179;;-1:-1:-1;6238:26:179::1;::::0;-1:-1:-1;;;;;6267:11:179::1;:25;::::0;::::1;::::0;728:18:184;;6267:30:179::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6388:72;::::0;-1:-1:-1;;;6388:72:179;;::::1;::::0;::::1;755:25:184::0;;;6238:59:179;;-1:-1:-1;6312:13:179::1;::::0;-1:-1:-1;;;;;6388:35:179;::::1;::::0;::::1;::::0;728:18:184;;6388:72:179::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6340:120:179;;-1:-1:-1;6340:120:179;-1:-1:-1;6340:120:179;-1:-1:-1;6340:120:179;;-1:-1:-1;6549:21:179::1;::::0;-1:-1:-1;6596:10:179;6573:20:::1;6583:10:::0;6573:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6549:57;;6630:10;-1:-1:-1::0;;;;;6630:23:179::1;;6654:3;6659:13;6674;6630:58;;;;;;;;;;;;;;;;21040:25:184::0;;;21096:2;21081:18;;21074:34;;;;21139:2;21124:18;;21117:34;21028:2;21013:18;;20838:319;6630:58:179::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6621:67;;6223:477;;;6797:10;6763:7;:18;6771:9;-1:-1:-1::0;;;;;6763:18:179::1;-1:-1:-1::0;;;;;6763:18:179::1;;;;;;;;;;;;:30;6782:10;-1:-1:-1::0;;;;;6763:30:179::1;-1:-1:-1::0;;;;;6763:30:179::1;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6826:9:179::1;6818:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6852:10;;6818:18;:44:::1;::::0;6852:10;;6818:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6967:63:179::1;::::0;-1:-1:-1;6984:3:179;6989:7;6998:6;7006:23:::1;7019:10:::0;7006;:23:::1;:::i;:::-;6967:16;:63::i;:::-;7138:13;7154:55;7168:10;7180:6;7188:11;7201:7;7154:13;:55::i;:::-;7138:71;;7239:9;-1:-1:-1::0;;;;;7227:39:179::1;7234:3;7227:39;7250:7;7259:6;7227:39;;;;;;;:::i;:::-;;;;;;;;588:1:14::0;579:6;:10;7287:6:179;;;;-1:-1:-1;5427:1883:179;;-1:-1:-1;;;;;;;;;;;5427:1883:179:o;1504:434:7:-;1775:5;;-1:-1:-1;;;;;1775:5:7;1761:10;:19;;:76;;-1:-1:-1;1784:9:7;;:53;;-1:-1:-1;;;1784:53:7;;-1:-1:-1;;;;;1784:9:7;;;;:17;;:53;;1802:10;;1822:4;;-1:-1:-1;;;;;;1784:9:7;1829:7;;;1784:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;-1:-1:-1;;;;;;1849:24:7;-1:-1:-1;;;;;1849:24:7;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:7;1504:434;:::o;7061:125:180:-;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;7152:26:180::1;7160:8:::0;7170:7;7152::::1;:26::i;:::-;-1:-1:-1::0;;588:1:14;579:6;:10;7061:125:180:o;4504:196:179:-;883:33:7;896:10;908:7;;-1:-1:-1;;;;;;908:7:7;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:7;;;;;;;:::i;:::-;4610:11:179::1;::::0;::::1;::::0;;::::1;4598:23:::0;;::::1;;4594:58;;;4630:22;;-1:-1:-1::0;;;4630:22:179::1;;;;;;;;;;;4594:58;4663:17;:29:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4663:29:179::1;-1:-1:-1::0;;;;4663:29:179;;::::1;::::0;;;::::1;::::0;;4504:196::o;10291:389:180:-;10376:7;;10597:11;10610:24;10627:6;10610:7;:24;:::i;:::-;10580:55;;;;;;;;22553:2:184;22524:15;;;;-1:-1:-1;;;;;;22520:45:184;22508:58;;22630:3;22600:16;-1:-1:-1;;;;;;22596:47:184;22591:2;22582:12;;22575:69;22669:2;22660:12;;22338:340;10580:55:180;;;;;;;-1:-1:-1;;10580:55:180;;;;;;10570:66;;10580:55;10570:66;;;;;10291:389;-1:-1:-1;;;;10291:389:180:o;1629:203:11:-;1731:10;1714:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;1714:38:11;;;;;;;;;;;;:49;;-1:-1:-1;;1714:49:11;;;;;;;;;;1779:46;;1317:41:184;;;1714:38:11;;1731:10;1779:46;;1290:18:184;1779:46:11;;;;;;;1629:203;;:::o;4302:161:179:-;883:33:7;896:10;908:7;;-1:-1:-1;;;;;;908:7:7;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:7;;;;;;;:::i;:::-;4392:3:179::1;4385:4;:10;;;4381:45;;;4404:22;;-1:-1:-1::0;;;4404:22:179::1;;;;;;;;;;;4381:45;4437:11;:18:::0;;-1:-1:-1;;4437:18:179::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4302:161::o;4486:1876:180:-;4628:7;4637;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;4813:13:180::1;4836:16;4846:6;4836:7:::0;:16:::1;:::i;:::-;4829:33;::::0;4856:6:::1;4829:33;:::i;:::-;4813:49;;4932:15;4923:6;:24;;;4919:59;;;4956:22;;-1:-1:-1::0;;;4956:22:180::1;;;;;;;;;;;4919:59;4991:15;5009:31;5020:11;5033:6;5009:10;:31::i;:::-;5120:22;::::0;;;:13:::1;:22;::::0;;;;:29;4991:49;;-1:-1:-1;5120:29:180::1;;5115:88;;5158:45;::::0;-1:-1:-1;;;5158:45:180;;-1:-1:-1;;;;;23159:32:184;;5158:45:180::1;::::0;::::1;23141:51:184::0;23240:14;23228:27;;23208:18;;;23201:55;23114:18;;5158:45:180::1;22954:308:184::0;5115:88:180::1;5429:36;::::0;-1:-1:-1;;;5429:36:180;;5408:18:::1;::::0;-1:-1:-1;;;;;5429:21:180;::::1;::::0;::::1;::::0;:36:::1;::::0;5459:4:::1;::::0;5429:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5408:57:::0;-1:-1:-1;5476:64:180::1;-1:-1:-1::0;;;;;5476:28:180;::::1;5505:10;5525:4;5532:7:::0;5476:28:::1;:64::i;:::-;5594:20;5607:7:::0;5594:10;:20:::1;:::i;:::-;5555:36;::::0;-1:-1:-1;;;5555:36:180;;-1:-1:-1;;;;;5555:21:180;::::1;::::0;::::1;::::0;:36:::1;::::0;5585:4:::1;::::0;5555:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5551:110;;;5636:25;;-1:-1:-1::0;;;5636:25:180::1;;;;;;;;;;;5551:110;5820:17;::::0;::::1;-1:-1:-1::0;;;5820:17:180;::::1;::::0;::::1;5806:11:::0;::::1;:31;5802:553;;;5940:17;::::0;5891::::1;::::0;5911:61:::1;::::0;5926:31:::1;::::0;5940:17:::1;-1:-1:-1::0;;;5940:17:180;::::1;::::0;::::1;::::0;5926:11:::1;:31;:::i;:::-;5911:7:::0;;:61:::1;;3311:3:179;5911:14:180;:61::i;:::-;-1:-1:-1::0;;;;;5995:9:180::1;5987:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5891:81;;-1:-1:-1;5891:81:180;;5987:31;;:18;:44:::1;::::0;5891:81;;5987:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6085:52:180::1;::::0;-1:-1:-1;6096:10:180::1;6108:7:::0;6117:19:::1;6127:9:::0;6117:7;:19:::1;:::i;:::-;6085:10;:52::i;:::-;6162:7:::0;6171:19:::1;6181:9:::0;6171:7;:19:::1;:::i;:::-;6154:37;;;;;;;;;;5802:553;6261:40;6272:10;6284:7;6293;6261:10;:40::i;:::-;-1:-1:-1::0;6326:7:180;-1:-1:-1;6335:7:180;;-1:-1:-1;6318:25:180::1;::::0;-1:-1:-1;6318:25:180::1;567:1:14;588::::0;579:6;:10;4486:1876:180;;;;-1:-1:-1;4486:1876:180;-1:-1:-1;;4486:1876:180:o;5207:129:179:-;-1:-1:-1;;;;;5305:23:179;;5265:6;5305:23;;;:12;:23;;;;;;5291:11;;:37;;5305:23;;;;;5291:11;:37;:::i;7695:398:180:-;7822:7;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;7847:15:180::1;7865:32;7876:11:::0;7889:7;7865:10:::1;:32::i;:::-;7965:22;::::0;;;:13:::1;:22;::::0;;;;:29;7847:50;;-1:-1:-1;7965:29:180::1;;7960:101;;8011:38;8019:7;8028:11;8041:7;8011;:38::i;:::-;588:1:14::0;579:6;:10;8078:7:180;7695:398;-1:-1:-1;;;7695:398:180:o;7236:361::-;509:6:14;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:14;;;;;;;:::i;:::-;555:1;546:10;;7404:9:180;7435:22;;::::1;7431:57;;7466:22;;-1:-1:-1::0;;;7466:22:180::1;;;;;;;;;;;7431:57;7504:9;7499:91;7519:3;7515:1;:7;7499:91;;;7544:34;7552:9;;7562:1;7552:12;;;;;;;:::i;:::-;;;;;;;7566:8;;7575:1;7566:11;;;;;;;:::i;:::-;;;;;;;7544:7;:34::i;:::-;7524:3;::::0;::::1;:::i;:::-;;;7499:91;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;;;7236:361:180:o;1838:699:11:-;2018:10;-1:-1:-1;;;;;2018:18:11;;;;:56;;-1:-1:-1;;;;;;2040:22:11;;;;;;:16;:22;;;;;;;;2063:10;2040:34;;;;;;;;;;2018:56;2010:83;;;;-1:-1:-1;;;2010:83:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2104:15:11;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;2127:6;;2104:15;:29;;2127:6;;2104:29;:::i;:::-;;;;-1:-1:-1;;;;;;;2143:13:11;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;2164:6;;2143:13;:27;;2164:6;;2143:27;:::i;:::-;;;;;;;;2219:2;-1:-1:-1;;;;;2186:48:11;2213:4;-1:-1:-1;;;;;2186:48:11;2201:10;-1:-1:-1;;;;;2186:48:11;-1:-1:-1;;;;;;;;;;;2223:2:11;2227:6;2186:48;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2266:14:11;;;:19;:222;;2339:78;;-1:-1:-1;;;2339:78:11;;;2441:47;-1:-1:-1;;;;;2339:42:11;;;2441:47;;2339:78;;2382:10;;2394:4;;2400:2;;2404:6;;2412:4;;;;2339:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2339:149:11;;2266:222;;;-1:-1:-1;;;;;2304:16:11;;;;2266:222;2245:285;;;;-1:-1:-1;;;2245:285:11;;;;;;;:::i;:::-;1838:699;;;;;;:::o;958:540:7:-;1078:9;;1045:4;;-1:-1:-1;;;;;1078:9:7;1396:27;;;;;:77;;-1:-1:-1;1427:46:7;;-1:-1:-1;;;1427:46:7;;-1:-1:-1;;;;;1427:12:7;;;;;:46;;1440:4;;1454;;1461:11;;1427:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:7;;-1:-1:-1;;;;;1478:13:7;;;1486:5;;1478:13;1395:96;1388:103;958:540;-1:-1:-1;;;;958:540:7:o;784:353:90:-;965:59;;;-1:-1:-1;;;;;24281:32:184;;;965:59:90;;;24263:51:184;24330:18;;;;24323:34;;;965:59:90;;;;;;;;;;24236:18:184;;;;965:59:90;;;;;;;-1:-1:-1;;;;;965:59:90;-1:-1:-1;;;965:59:90;;;932:102;;-1:-1:-1;;;;932:19:90;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:90;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;-1:-1:-1;;;1045:85:90;;24849:2:184;1045:85:90;;;24831:21:184;24888:2;24868:18;;;24861:30;-1:-1:-1;;;24907:18:184;;;24900:45;24962:18;;1045:85:90;24647:339:184;1045:85:90;886:251;;784:353;;;:::o;11131:1787:179:-;11244:18;;11527:12;;;;11634:16;11644:6;11634:7;:16;:::i;:::-;11611:40;-1:-1:-1;11668:11:179;11682:14;11611:40;11691:5;11682:14;:::i;:::-;:24;;11699:7;11682:24;:::i;:::-;11668:38;-1:-1:-1;11749:11:179;11776:6;11764:8;11668:38;11764:1;:8;:::i;:::-;11763:19;;;;:::i;:::-;11749:33;-1:-1:-1;11833:1:179;11812:13;11749:33;11812:6;:13;:::i;:::-;:17;;11828:1;11812:17;:::i;:::-;11811:23;;;;:::i;:::-;11804:30;;:4;:30;:::i;:::-;11797:37;-1:-1:-1;11849:12:179;11886:7;11873:8;11797:37;11880:1;11873:8;:::i;:::-;11865:17;;:4;:17;:::i;:::-;11864:29;;;;:::i;:::-;11849:44;-1:-1:-1;11939:1:179;11923:12;11849:44;11923:4;:12;:::i;:::-;11922:18;;;;:::i;:::-;11915:25;;:4;:25;:::i;:::-;:30;;11943:2;11915:30;:::i;:::-;11908:37;-1:-1:-1;11960:13:179;11990:4;11977:9;11908:37;11977:2;:9;:::i;:::-;11976:18;;;;:::i;:::-;11960:34;-1:-1:-1;12009:11:179;12048:2;12031:13;11960:34;12031:4;:13;:::i;:::-;12030:20;;;;:::i;:::-;12023:27;;:4;:27;:::i;:::-;12009:41;-1:-1:-1;12072:11:179;12081:2;12072:6;:11;:::i;:::-;12065:18;-1:-1:-1;12120:9:179;12065:18;12120:2;:9;:::i;:::-;12107:10;:6;12116:1;12107:10;:::i;:::-;:22;;;;:::i;:::-;12098:31;-1:-1:-1;12180:4:179;12172:5;12159:9;12166:2;12159:4;:9;:::i;:::-;12152:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;12144:40;-1:-1:-1;12253:6:179;;-1:-1:-1;12289:4:179;-1:-1:-1;12318:21:179;;-1:-1:-1;12342:23:179;;-1:-1:-1;12352:12:179;;-1:-1:-1;12359:5:179;;-1:-1:-1;12144:40:179;12352:12;:::i;:::-;12342:9;:23::i;:::-;12318:47;;12376:22;12409:2;12401:5;:10;:105;;12490:16;12500:5;12490:9;:16::i;:::-;12401:105;;;12456:16;12466:5;12456:9;:16::i;:::-;12434:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12401:105;12376:130;;12517:20;12546:2;12540:3;:8;:99;;12625:14;12635:3;12625:9;:14::i;:::-;12540:99;;;12593:14;12603:3;12593:9;:14::i;:::-;12571:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12540:99;12517:122;;12740:11;-1:-1:-1;;;;;12740:16:179;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12740:18:179;;;;;;;;;;;;:::i;:::-;12765:7;12779:8;12794:6;12723:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12695:117;;12856:11;-1:-1:-1;;;;;12856:18:179;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12856:20:179;;;;;;;;;;;;:::i;:::-;12883:7;12892:8;12902:6;12839:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12823:87;;11291:1627;;;;;;11131:1787;;;;;:::o;742:4147:87:-;854:14;;;-1:-1:-1;;1417:1:87;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:87;;;;-1:-1:-1;1787:13:87;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:87;;;;;;:::o;7401:2527:179:-;7593:13;7608:20;7630:17;7649:16;7673:11;-1:-1:-1;;;;;7673:39:179;;7713:3;7673:44;;;;;;;;;;;;;755:25:184;;743:2;728:18;;609:177;7673:44:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7673:83:179;;7757:3;7673:88;;;;;;;;;;;;;755:25:184;;743:2;728:18;;609:177;7673:88:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7592:169;;;;;;;;;;7815:21;7849:8;7839:7;:18;;;;:::i;:::-;7815:42;;8117:20;8140:10;-1:-1:-1;;;;;8140:20:179;;8169:4;8140:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8117:58;-1:-1:-1;8186:63:179;-1:-1:-1;;;;;8186:27:179;;8214:10;8234:4;8241:7;8186:27;:63::i;:::-;8302:22;8317:7;8302:12;:22;:::i;:::-;8264:35;;-1:-1:-1;;;8264:35:179;;-1:-1:-1;;;;;8264:20:179;;;;;:35;;8293:4;;8264:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8260:111;;;8346:25;;-1:-1:-1;;;8346:25:179;;;;;;;;;;;8260:111;-1:-1:-1;;;;;8566:26:179;;;8562:1359;;8706:52;-1:-1:-1;;;;;8706:23:179;;8730:12;8744:13;8706:23;:52::i;:::-;8878:36;;-1:-1:-1;;;8878:36:179;;8854:21;;-1:-1:-1;;;;;8878:21:179;;;;;:36;;8908:4;;8878:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8929:65;;-1:-1:-1;;;8929:65:179;;;;;21040:25:184;;;21081:18;;;21074:34;;;21124:18;;;21117:34;;;8854:60:179;;-1:-1:-1;;;;;;8929:36:179;;;;;21013:18:184;;8929:65:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9183:7;9167:13;:23;;;;:::i;:::-;9127:36;;-1:-1:-1;;;9127:36:179;;-1:-1:-1;;;;;9127:21:179;;;;;:36;;9157:4;;9127:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9123:118;;;9217:24;;-1:-1:-1;;;9217:24:179;;;;;;;;;;;9123:118;8594:659;8562:1359;;;9603:36;;-1:-1:-1;;;9603:36:179;;9579:21;;-1:-1:-1;;;;;9603:21:179;;;;;:36;;9633:4;;9603:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9579:60;-1:-1:-1;9654:59:179;-1:-1:-1;;;;;9654:28:179;;9683:5;9698:4;9705:7;9654:28;:59::i;:::-;9772:23;9788:7;9772:13;:23;:::i;:::-;9732:36;;-1:-1:-1;;;9732:36:179;;-1:-1:-1;;;;;9732:21:179;;;;;:36;;9762:4;;9732:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9728:119;;;9822:25;;-1:-1:-1;;;9822:25:179;;;;;;;;;;;9728:119;9864:45;-1:-1:-1;;;;;9864:23:179;;9888:5;9895:13;9864:23;:45::i;:::-;9259:662;7544:2384;;;;;;7401:2527;;;;:::o;2640:1748:180:-;2807:13;3534;;;;3530:851;;3722:6;;3659:34;3677:15;3659:8;:34;:::i;:::-;3658:53;;;;:::i;:::-;3657:72;;;;:::i;:::-;3648:81;;3883:15;3901:32;3912:12;3926:6;3901:10;:32::i;:::-;4017:22;;;;:13;:22;;;;;:29;3883:50;;-1:-1:-1;4017:29:180;;4012:109;;4067:38;4075:7;4084:12;4098:6;4067:7;:38::i;:::-;4182:40;4193:10;4205:7;4214;4182:10;:40::i;:::-;3549:685;3530:851;;;4323:46;-1:-1:-1;;;;;4323:25:180;;4349:10;4361:7;4323:25;:46::i;6412:599::-;6534:23;;;;:13;:23;;;;;:30;;;6529:66;;6573:22;;-1:-1:-1;;;6573:22:180;;;;;;;;;;;6529:66;6641:25;6669:23;;;:13;:23;;;;;;;;;6641:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6641:51:180;;;;;;;;-1:-1:-1;;;6641:51:180;;;;;;;;;;;;-1:-1:-1;;;6641:51:180;;;;;;;;;;;;;;;;;;;;6754:15;:29;6750:77;;;6815:11;;;;6792:35;;-1:-1:-1;;;6792:35:180;;1543:14:184;1531:27;;;6792:35:180;;;1513:46:184;1486:18;;6792:35:180;1369:196:184;6750:77:180;6902:41;6913:10;6925:8;6935:7;6902:10;:41::i;:::-;6954:15;;;;:49;;-1:-1:-1;;;;;6954:28:180;6983:10;6995:7;6954:28;:49::i;:::-;6473:538;6412:599;;:::o;384:394:90:-;591:69;;;-1:-1:-1;;;;;30219:15:184;;;591:69:90;;;30201:34:184;30271:15;;;30251:18;;;30244:43;30303:18;;;;30296:34;;;591:69:90;;;;;;;;;;30136:18:184;;;;591:69:90;;;;;;;-1:-1:-1;;;;;591:69:90;-1:-1:-1;;;591:69:90;;;558:112;;-1:-1:-1;;;;558:19:90;;;;:112;;591:69;558:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:148;;;;689:7;:57;;;;-1:-1:-1;701:11:90;;:16;;:44;;;732:4;721:24;;;;;;;;;;;;:::i;:::-;681:90;;;;-1:-1:-1;;;681:90:90;;30543:2:184;681:90:90;;;30525:21:184;30582:2;30562:18;;;30555:30;-1:-1:-1;;;30601:18:184;;;30594:50;30661:18;;681:90:90;30341:344:184;9516:222:180;9638:23;;;;:13;:23;;;;;:30;;:41;;9672:7;;9638:23;:41;;9672:7;;9638:41;:::i;:::-;;;;;;;;9690:40;9696:3;9701:8;9711:7;9720:9;;;;;;;;;;;;9690:5;:40::i;8521:756::-;8801:13;8824:16;8834:6;8824:7;:16;:::i;:::-;8817:33;;8844:6;8817:33;:::i;:::-;8801:49;;8929:15;8919:6;8911:15;;:33;8907:68;;;8953:22;;-1:-1:-1;;;8953:22:180;;;;;;;;;;;8907:68;9047:150;;;;;;;;9075:4;9047:150;;;;;;9094:11;-1:-1:-1;;;;;9047:150:180;;;;;9126:11;-1:-1:-1;;;;;9126:20:180;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9047:150;;;;;;;;;;;;;;;;;-1:-1:-1;9047:150:180;;;;;;;9021:23;;;:13;:23;;;;;:176;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9021:176:180;-1:-1:-1;;;;9021:176:180;;;;-1:-1:-1;;;9021:176:180;;;;;-1:-1:-1;;;;;;;;;9021:176:180;;;;;-1:-1:-1;;;;;;9021:176:180;;;;;;;-1:-1:-1;;;;;;9021:176:180;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9021:176:180;;;;;;;9215:54;;755:25:184;;;9047:150:180;;9215:54;;;;;;728:18:184;9215:54:180;;;;;;;8634:643;8521:756;;;:::o;13141:576:179:-;13195:13;13225:2;13231:1;13225:7;13221:50;;-1:-1:-1;;13249:10:179;;;;;;;;;;;;-1:-1:-1;;;13249:10:179;;;;;13141:576::o;13221:50::-;13293:2;13281:9;13328:69;13335:6;;13328:69;;13358:5;;;;:::i;:::-;;-1:-1:-1;13378:7:179;;-1:-1:-1;13383:2:179;13378:7;;:::i;:::-;;;13328:69;;;13407:17;13437:3;-1:-1:-1;;;;;13427:14:179;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13427:14:179;-1:-1:-1;13407:34:179;-1:-1:-1;13464:3:179;13478:202;13485:7;;13478:202;;13513:5;13517:1;13513;:5;:::i;:::-;13509:9;-1:-1:-1;13533:10:179;13564:7;13569:2;13564;:7;:::i;:::-;13563:14;;13575:2;13563:14;:::i;:::-;13558:19;;:2;:19;:::i;:::-;13547:31;;:2;:31;:::i;:::-;13533:46;;13594:9;13613:4;13606:12;;13594:24;;13643:2;13633:4;13638:1;13633:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;13633:12:179;;;;;;;;-1:-1:-1;13660:8:179;13666:2;13660:8;;:::i;:::-;;;13494:186;;13478:202;;9978:215:180;10102:23;;;;:13;:23;;;;;:30;;:41;;10136:7;;10102:23;:41;;10136:7;;10102:41;:::i;:::-;;;;-1:-1:-1;10154:31:180;;-1:-1:-1;10160:5:180;10167:8;10177:7;10154:5;:31::i;5063:545:11:-;-1:-1:-1;;;;;5202:13:11;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5223:6;;5202:13;:27;;5223:6;;5202:27;:::i;:::-;;;;-1:-1:-1;;5245:54:11;;-1:-1:-1;;;;;5245:54:11;;;5280:1;;5260:10;;-1:-1:-1;;;;;;;;;;;5245:54:11;;;5288:2;;5292:6;;5245:54;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5331:14:11;;;:19;:228;;5404:84;;-1:-1:-1;;;5404:84:11;;;5512:47;-1:-1:-1;;;;;5404:42:11;;;5512:47;;5404:84;;5447:10;;5467:1;;5471:2;;5475:6;;5483:4;;5404:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5404:155:11;;5331:228;;;-1:-1:-1;;;;;5369:16:11;;;;5331:228;5310:291;;;;-1:-1:-1;;;5310:291:11;;;;;;;:::i;:::-;5063:545;;;;:::o;7163:222::-;-1:-1:-1;;;;;7277:15:11;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;7300:6;;7277:15;:29;;7300:6;;7277:29;:::i;:::-;;;;-1:-1:-1;;7322:56:11;;7363:1;;-1:-1:-1;;;;;7322:56:11;;;7337:10;;-1:-1:-1;;;;;;;;;;;7322:56:11;;;7367:2;;7371:6;;7322:56;:::i;:::-;;;;;;;;7163:222;;;:::o;14:131:184:-;-1:-1:-1;;;;;89:31:184;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:184:o;791:131::-;-1:-1:-1;;;;;;865:32:184;;855:43;;845:71;;912:1;909;902:12;927:245;985:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:52;;;1054:1;1051;1044:12;1006:52;1093:9;1080:23;1112:30;1136:5;1112:30;:::i;1570:125::-;1655:14;1648:5;1644:26;1637:5;1634:37;1624:65;;1685:1;1682;1675:12;1700:245;1758:6;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1866:9;1853:23;1885:30;1909:5;1885:30;:::i;1950:247::-;2009:6;2062:2;2050:9;2041:7;2037:23;2033:32;2030:52;;;2078:1;2075;2068:12;2030:52;2117:9;2104:23;2136:31;2161:5;2136:31;:::i;2202:367::-;2265:8;2275:6;2329:3;2322:4;2314:6;2310:17;2306:27;2296:55;;2347:1;2344;2337:12;2296:55;-1:-1:-1;2370:20:184;;-1:-1:-1;;;;;2402:30:184;;2399:50;;;2445:1;2442;2435:12;2399:50;2482:4;2474:6;2470:17;2458:29;;2542:3;2535:4;2525:6;2522:1;2518:14;2510:6;2506:27;2502:38;2499:47;2496:67;;;2559:1;2556;2549:12;2496:67;2202:367;;;;;:::o;2574:347::-;2625:8;2635:6;2689:3;2682:4;2674:6;2670:17;2666:27;2656:55;;2707:1;2704;2697:12;2656:55;-1:-1:-1;2730:20:184;;-1:-1:-1;;;;;2762:30:184;;2759:50;;;2805:1;2802;2795:12;2759:50;2842:4;2834:6;2830:17;2818:29;;2894:3;2887:4;2878:6;2870;2866:19;2862:30;2859:39;2856:59;;;2911:1;2908;2901:12;2926:1338;3086:6;3094;3102;3110;3118;3126;3134;3142;3195:3;3183:9;3174:7;3170:23;3166:33;3163:53;;;3212:1;3209;3202:12;3163:53;3251:9;3238:23;3270:31;3295:5;3270:31;:::i;:::-;3320:5;-1:-1:-1;3377:2:184;3362:18;;3349:32;3390:33;3349:32;3390:33;:::i;:::-;3442:7;-1:-1:-1;3500:2:184;3485:18;;3472:32;-1:-1:-1;;;;;3553:14:184;;;3550:34;;;3580:1;3577;3570:12;3550:34;3619:70;3681:7;3672:6;3661:9;3657:22;3619:70;:::i;:::-;3708:8;;-1:-1:-1;3593:96:184;-1:-1:-1;3796:2:184;3781:18;;3768:32;;-1:-1:-1;3812:16:184;;;3809:36;;;3841:1;3838;3831:12;3809:36;3880:72;3944:7;3933:8;3922:9;3918:24;3880:72;:::i;:::-;3971:8;;-1:-1:-1;3854:98:184;-1:-1:-1;4059:3:184;4044:19;;4031:33;;-1:-1:-1;4076:16:184;;;4073:36;;;4105:1;4102;4095:12;4073:36;;4144:60;4196:7;4185:8;4174:9;4170:24;4144:60;:::i;:::-;2926:1338;;;;-1:-1:-1;2926:1338:184;;-1:-1:-1;2926:1338:184;;;;;;4223:8;-1:-1:-1;;;2926:1338:184:o;4269:127::-;4330:10;4325:3;4321:20;4318:1;4311:31;4361:4;4358:1;4351:15;4385:4;4382:1;4375:15;4401:275;4472:2;4466:9;4537:2;4518:13;;-1:-1:-1;;4514:27:184;4502:40;;-1:-1:-1;;;;;4557:34:184;;4593:22;;;4554:62;4551:88;;;4619:18;;:::i;:::-;4655:2;4648:22;4401:275;;-1:-1:-1;4401:275:184:o;4681:1112::-;4789:6;4797;4850:2;4838:9;4829:7;4825:23;4821:32;4818:52;;;4866:1;4863;4856:12;4818:52;4893:23;;-1:-1:-1;;;;;4965:14:184;;;4962:34;;;4992:1;4989;4982:12;4962:34;5030:6;5019:9;5015:22;5005:32;;5075:7;5068:4;5064:2;5060:13;5056:27;5046:55;;5097:1;5094;5087:12;5046:55;5133:2;5120:16;5155:4;5178:2;5174;5171:10;5168:36;;;5184:18;;:::i;:::-;5230:2;5227:1;5223:10;5213:20;;5253:28;5277:2;5273;5269:11;5253:28;:::i;:::-;5315:15;;;5385:11;;;5381:20;;;5346:12;;;;5413:19;;;5410:39;;;5445:1;5442;5435:12;5410:39;5469:11;;;;5489:217;5505:6;5500:3;5497:15;5489:217;;;5585:3;5572:17;5559:30;;5602:31;5627:5;5602:31;:::i;:::-;5646:18;;;5522:12;;;;5684;;;;5489:217;;;5725:5;-1:-1:-1;5749:38:184;;-1:-1:-1;5768:18:184;;;5749:38;:::i;:::-;5739:48;;;;;;4681:1112;;;;;:::o;5798:180::-;5857:6;5910:2;5898:9;5889:7;5885:23;5881:32;5878:52;;;5926:1;5923;5916:12;5878:52;-1:-1:-1;5949:23:184;;5798:180;-1:-1:-1;5798:180:184:o;5983:258::-;6055:1;6065:113;6079:6;6076:1;6073:13;6065:113;;;6155:11;;;6149:18;6136:11;;;6129:39;6101:2;6094:10;6065:113;;;6196:6;6193:1;6190:13;6187:48;;;-1:-1:-1;;6231:1:184;6213:16;;6206:27;5983:258::o;6246:::-;6288:3;6326:5;6320:12;6353:6;6348:3;6341:19;6369:63;6425:6;6418:4;6413:3;6409:14;6402:4;6395:5;6391:16;6369:63;:::i;:::-;6486:2;6465:15;-1:-1:-1;;6461:29:184;6452:39;;;;6493:4;6448:50;;6246:258;-1:-1:-1;;6246:258:184:o;6509:383::-;6706:2;6695:9;6688:21;6669:4;6732:45;6773:2;6762:9;6758:18;6750:6;6732:45;:::i;:::-;6825:9;6817:6;6813:22;6808:2;6797:9;6793:18;6786:50;6853:33;6879:6;6871;6853:33;:::i;:::-;6845:41;6509:383;-1:-1:-1;;;;;6509:383:184:o;6897:773::-;7019:6;7027;7035;7043;7096:2;7084:9;7075:7;7071:23;7067:32;7064:52;;;7112:1;7109;7102:12;7064:52;7139:23;;-1:-1:-1;;;;;7211:14:184;;;7208:34;;;7238:1;7235;7228:12;7208:34;7277:70;7339:7;7330:6;7319:9;7315:22;7277:70;:::i;:::-;7366:8;;-1:-1:-1;7251:96:184;-1:-1:-1;7454:2:184;7439:18;;7426:32;;-1:-1:-1;7470:16:184;;;7467:36;;;7499:1;7496;7489:12;7467:36;;7538:72;7602:7;7591:8;7580:9;7576:24;7538:72;:::i;:::-;6897:773;;;;-1:-1:-1;7629:8:184;-1:-1:-1;;;;6897:773:184:o;7675:632::-;7846:2;7898:21;;;7968:13;;7871:18;;;7990:22;;;7817:4;;7846:2;8069:15;;;;8043:2;8028:18;;;7817:4;8112:169;8126:6;8123:1;8120:13;8112:169;;;8187:13;;8175:26;;8256:15;;;;8221:12;;;;8148:1;8141:9;8112:169;;;-1:-1:-1;8298:3:184;;7675:632;-1:-1:-1;;;;;;7675:632:184:o;8857:594::-;8952:6;8960;8968;8976;8984;9037:3;9025:9;9016:7;9012:23;9008:33;9005:53;;;9054:1;9051;9044:12;9005:53;9093:9;9080:23;9112:31;9137:5;9112:31;:::i;:::-;9162:5;-1:-1:-1;9219:2:184;9204:18;;9191:32;9232:33;9191:32;9232:33;:::i;:::-;8857:594;;9284:7;;-1:-1:-1;;;;9338:2:184;9323:18;;9310:32;;9389:2;9374:18;;9361:32;;9440:3;9425:19;;;9412:33;;-1:-1:-1;8857:594:184:o;9999:248::-;10067:6;10075;10128:2;10116:9;10107:7;10103:23;10099:32;10096:52;;;10144:1;10141;10134:12;10096:52;-1:-1:-1;;10167:23:184;;;10237:2;10222:18;;;10209:32;;-1:-1:-1;9999:248:184:o;10252:203::-;-1:-1:-1;;;;;10416:32:184;;;;10398:51;;10386:2;10371:18;;10252:203::o;10460:401::-;10542:6;10550;10603:2;10591:9;10582:7;10578:23;10574:32;10571:52;;;10619:1;10616;10609:12;10571:52;10658:9;10645:23;10677:31;10702:5;10677:31;:::i;:::-;10727:5;-1:-1:-1;10784:2:184;10769:18;;10756:32;10797;10756;10797;:::i;:::-;10848:7;10838:17;;;10460:401;;;;;:::o;10866:118::-;10952:5;10945:13;10938:21;10931:5;10928:32;10918:60;;10974:1;10971;10964:12;10989:382;11054:6;11062;11115:2;11103:9;11094:7;11090:23;11086:32;11083:52;;;11131:1;11128;11121:12;11083:52;11170:9;11157:23;11189:31;11214:5;11189:31;:::i;:::-;11239:5;-1:-1:-1;11296:2:184;11281:18;;11268:32;11309:30;11268:32;11309:30;:::i;11376:469::-;11467:6;11475;11483;11536:2;11524:9;11515:7;11511:23;11507:32;11504:52;;;11552:1;11549;11542:12;11504:52;11591:9;11578:23;11610:31;11635:5;11610:31;:::i;:::-;11660:5;-1:-1:-1;11717:2:184;11702:18;;11689:32;11730;11689;11730;:::i;:::-;11376:469;;11781:7;;-1:-1:-1;;;11835:2:184;11820:18;;;;11807:32;;11376:469::o;11850:248::-;12024:25;;;12080:2;12065:18;;12058:34;12012:2;11997:18;;11850:248::o;12330:403::-;12413:6;12421;12474:2;12462:9;12453:7;12449:23;12445:32;12442:52;;;12490:1;12487;12480:12;12442:52;12529:9;12516:23;12548:31;12573:5;12548:31;:::i;:::-;12598:5;-1:-1:-1;12655:2:184;12640:18;;12627:32;12668:33;12627:32;12668:33;:::i;13909:823::-;14015:6;14023;14031;14039;14047;14055;14108:3;14096:9;14087:7;14083:23;14079:33;14076:53;;;14125:1;14122;14115:12;14076:53;14164:9;14151:23;14183:31;14208:5;14183:31;:::i;:::-;14233:5;-1:-1:-1;14290:2:184;14275:18;;14262:32;14303:33;14262:32;14303:33;:::i;:::-;14355:7;-1:-1:-1;14409:2:184;14394:18;;14381:32;;-1:-1:-1;14460:2:184;14445:18;;14432:32;;-1:-1:-1;14515:3:184;14500:19;;14487:33;-1:-1:-1;;;;;14532:30:184;;14529:50;;;14575:1;14572;14565:12;14529:50;14614:58;14664:7;14655:6;14644:9;14640:22;14614:58;:::i;:::-;13909:823;;;;-1:-1:-1;13909:823:184;;-1:-1:-1;13909:823:184;;14691:8;;13909:823;-1:-1:-1;;;13909:823:184:o;14737:334::-;14939:2;14921:21;;;14978:2;14958:18;;;14951:30;-1:-1:-1;;;15012:2:184;14997:18;;14990:40;15062:2;15047:18;;14737:334::o;15076:336::-;15278:2;15260:21;;;15317:2;15297:18;;;15290:30;-1:-1:-1;;;15351:2:184;15336:18;;15329:42;15403:2;15388:18;;15076:336::o;15417:339::-;15619:2;15601:21;;;15658:2;15638:18;;;15631:30;-1:-1:-1;;;15692:2:184;15677:18;;15670:45;15747:2;15732:18;;15417:339::o;15761:338::-;15963:2;15945:21;;;16002:2;15982:18;;;15975:30;-1:-1:-1;;;16036:2:184;16021:18;;16014:44;16090:2;16075:18;;15761:338::o;16104:127::-;16165:10;16160:3;16156:20;16153:1;16146:31;16196:4;16193:1;16186:15;16220:4;16217:1;16210:15;16236:127;16297:10;16292:3;16288:20;16285:1;16278:31;16328:4;16325:1;16318:15;16352:4;16349:1;16342:15;16368:125;16408:4;16436:1;16433;16430:8;16427:34;;;16441:18;;:::i;:::-;-1:-1:-1;16478:9:184;;16368:125::o;16498:128::-;16538:3;16569:1;16565:6;16562:1;16559:13;16556:39;;;16575:18;;:::i;:::-;-1:-1:-1;16611:9:184;;16498:128::o;16631:354::-;16719:19;;;16701:3;-1:-1:-1;;;;;16750:31:184;;16747:51;;;16794:1;16791;16784:12;16747:51;16830:6;16827:1;16823:14;16882:8;16875:5;16868:4;16863:3;16859:14;16846:45;16959:1;16914:18;;16934:4;16910:29;16948:13;;;-1:-1:-1;16910:29:184;;16631:354;-1:-1:-1;;16631:354:184:o;16990:519::-;17267:2;17256:9;17249:21;17230:4;17293:73;17362:2;17351:9;17347:18;17339:6;17331;17293:73;:::i;:::-;17414:9;17406:6;17402:22;17397:2;17386:9;17382:18;17375:50;17442:61;17496:6;17488;17480;17442:61;:::i;:::-;17434:69;16990:519;-1:-1:-1;;;;;;;16990:519:184:o;17514:266::-;17602:6;17597:3;17590:19;17654:6;17647:5;17640:4;17635:3;17631:14;17618:43;-1:-1:-1;17706:1:184;17681:16;;;17699:4;17677:27;;;17670:38;;;;17762:2;17741:15;;;-1:-1:-1;;17737:29:184;17728:39;;;17724:50;;17514:266::o;17785:907::-;-1:-1:-1;;;;;18212:15:184;;;18194:34;;18264:15;;18259:2;18244:18;;18237:43;18174:3;18311:2;18296:18;;18289:31;;;18137:4;;18343:74;;18397:19;;18389:6;18381;18343:74;:::i;:::-;18465:9;18457:6;18453:22;18448:2;18437:9;18433:18;18426:50;18499:61;18553:6;18545;18537;18499:61;:::i;:::-;18485:75;;18609:9;18601:6;18597:22;18591:3;18580:9;18576:19;18569:51;18637:49;18679:6;18671;18663;18637:49;:::i;:::-;18629:57;17785:907;-1:-1:-1;;;;;;;;;;;17785:907:184:o;18697:249::-;18766:6;18819:2;18807:9;18798:7;18794:23;18790:32;18787:52;;;18835:1;18832;18825:12;18787:52;18867:9;18861:16;18886:30;18910:5;18886:30;:::i;18951:340::-;19153:2;19135:21;;;19192:2;19172:18;;;19165:30;-1:-1:-1;;;19226:2:184;19211:18;;19204:46;19282:2;19267:18;;18951:340::o;19296:135::-;19335:3;19356:17;;;19353:43;;19376:18;;:::i;:::-;-1:-1:-1;19423:1:184;19412:13;;19296:135::o;19436:232::-;19475:3;19503:14;19544:2;19541:1;19537:10;19574:2;19571:1;19567:10;19605:3;19601:2;19597:12;19592:3;19589:21;19586:47;;;19613:18;;:::i;:::-;19649:13;;19436:232;-1:-1:-1;;;;19436:232:184:o;19673:276::-;19768:6;19821:2;19809:9;19800:7;19796:23;19792:32;19789:52;;;19837:1;19834;19827:12;19789:52;19869:9;19863:16;19888:31;19913:5;19888:31;:::i;19954:879::-;20098:6;20106;20114;20122;20130;20138;20191:3;20179:9;20170:7;20166:23;20162:33;20159:53;;;20208:1;20205;20198:12;20159:53;20240:9;20234:16;20259:31;20284:5;20259:31;:::i;:::-;20359:2;20344:18;;20338:25;20309:5;;-1:-1:-1;20372:33:184;20338:25;20372:33;:::i;:::-;20476:2;20461:18;;20455:25;20424:7;;-1:-1:-1;20489:33:184;20455:25;20489:33;:::i;:::-;20593:2;20578:18;;20572:25;20541:7;;-1:-1:-1;20606:33:184;20572:25;20606:33;:::i;:::-;20710:3;20695:19;;20689:26;20658:7;;-1:-1:-1;20724:32:184;20689:26;20724:32;:::i;:::-;20775:7;20765:17;;;20822:3;20811:9;20807:19;20801:26;20791:36;;19954:879;;;;;;;;:::o;21162:184::-;21232:6;21285:2;21273:9;21264:7;21260:23;21256:32;21253:52;;;21301:1;21298;21291:12;21253:52;-1:-1:-1;21324:16:184;;21162:184;-1:-1:-1;21162:184:184:o;21351:400::-;-1:-1:-1;;;;;21607:15:184;;;21589:34;;21659:15;;;;21654:2;21639:18;;21632:43;-1:-1:-1;;;;;;21711:33:184;;;21706:2;21691:18;;21684:61;21539:2;21524:18;;21351:400::o;21756:245::-;21823:6;21876:2;21864:9;21855:7;21851:23;21847:32;21844:52;;;21892:1;21889;21882:12;21844:52;21924:9;21918:16;21943:28;21965:5;21943:28;:::i;22006:127::-;22067:10;22062:3;22058:20;22055:1;22048:31;22098:4;22095:1;22088:15;22122:4;22119:1;22112:15;22138:195;22177:1;22203:14;22244:2;22241:1;22237:10;22266:3;22256:37;;22273:18;;:::i;:::-;22311:10;;22307:20;;;;;22138:195;-1:-1:-1;;22138:195:184:o;22683:266::-;22722:7;22754:14;22795:2;22792:1;22788:10;22825:2;22822:1;22818:10;22881:3;22877:2;22873:12;22868:3;22865:21;22858:3;22851:11;22844:19;22840:47;22837:73;;;22890:18;;:::i;:::-;22930:13;;22683:266;-1:-1:-1;;;;22683:266:184:o;23267:225::-;23306:4;23335:14;23399:10;;;;23369;;23421:12;;;23418:38;;;23436:18;;:::i;:::-;23473:13;;23267:225;-1:-1:-1;;;23267:225:184:o;23497:587::-;-1:-1:-1;;;;;23804:15:184;;;23786:34;;23856:15;;23851:2;23836:18;;23829:43;23903:2;23888:18;;23881:34;;;23946:2;23931:18;;23924:34;;;23766:3;23989;23974:19;;23967:32;;;23729:4;;24016:62;;24058:19;;24050:6;24042;24016:62;:::i;:::-;24008:70;23497:587;-1:-1:-1;;;;;;;;23497:587:184:o;24368:274::-;24497:3;24535:6;24529:13;24551:53;24597:6;24592:3;24585:4;24577:6;24573:17;24551:53;:::i;:::-;24620:16;;;;;24368:274;-1:-1:-1;;24368:274:184:o;24991:120::-;25031:1;25057;25047:35;;25062:18;;:::i;:::-;-1:-1:-1;25096:9:184;;24991:120::o;25116:265::-;25155:3;25183:9;;;25208:10;;-1:-1:-1;;;;;25227:27:184;;;25220:35;;25204:52;25201:78;;;25259:18;;:::i;:::-;-1:-1:-1;;;25306:19:184;;;25299:27;;25291:36;;25288:62;;;25330:18;;:::i;:::-;-1:-1:-1;;25366:9:184;;25116:265::o;25386:553::-;25425:7;-1:-1:-1;;;;;25495:9:184;;;25523;;;25548:11;;;25567:10;;;25561:17;;25544:35;25541:61;;;25582:18;;:::i;:::-;-1:-1:-1;;;25658:1:184;25651:9;;25676:11;;;25696;;;25689:19;;25672:37;25669:63;;;25712:18;;:::i;:::-;25758:1;25755;25751:9;25741:19;;25805:1;25801:2;25796:11;25793:1;25789:19;25784:2;25780;25776:11;25772:37;25769:63;;;25812:18;;:::i;:::-;25877:1;25873:2;25868:11;25865:1;25861:19;25856:2;25852;25848:11;25844:37;25841:63;;;25884:18;;:::i;:::-;-1:-1:-1;;;25924:9:184;;;;;25386:553;-1:-1:-1;;;25386:553:184:o;25944:193::-;25983:1;26009;25999:35;;26014:18;;:::i;:::-;-1:-1:-1;;;26050:18:184;;-1:-1:-1;;26070:13:184;;26046:38;26043:64;;;26087:18;;:::i;:::-;-1:-1:-1;26121:10:184;;25944:193::o;26142:267::-;26181:4;26210:9;;;26235:10;;-1:-1:-1;;;26254:19:184;;26247:27;;26231:44;26228:70;;;26278:18;;:::i;:::-;-1:-1:-1;;;;;26325:27:184;;26318:35;;26310:44;;26307:70;;;26357:18;;:::i;:::-;-1:-1:-1;;26394:9:184;;26142:267::o;26414:112::-;26446:1;26472;26462:35;;26477:18;;:::i;:::-;-1:-1:-1;26511:9:184;;26414:112::o;26531:418::-;-1:-1:-1;;;26788:3:184;26781:16;26763:3;26826:6;26820:13;26842:61;26896:6;26892:1;26887:3;26883:11;26876:4;26868:6;26864:17;26842:61;:::i;:::-;26923:16;;;;26941:1;26919:24;;26531:418;-1:-1:-1;;26531:418:184:o;26954:706::-;27034:6;27087:2;27075:9;27066:7;27062:23;27058:32;27055:52;;;27103:1;27100;27093:12;27055:52;27130:16;;-1:-1:-1;;;;;27195:14:184;;;27192:34;;;27222:1;27219;27212:12;27192:34;27260:6;27249:9;27245:22;27235:32;;27305:7;27298:4;27294:2;27290:13;27286:27;27276:55;;27327:1;27324;27317:12;27276:55;27356:2;27350:9;27378:2;27374;27371:10;27368:36;;;27384:18;;:::i;:::-;27426:53;27469:2;27450:13;;-1:-1:-1;;27446:27:184;27475:2;27442:36;27426:53;:::i;:::-;27413:66;;27502:2;27495:5;27488:17;27542:7;27537:2;27532;27528;27524:11;27520:20;27517:33;27514:53;;;27563:1;27560;27553:12;27514:53;27576:54;27627:2;27622;27615:5;27611:14;27606:2;27602;27598:11;27576:54;:::i;27665:1286::-;28243:3;28281:6;28275:13;28297:53;28343:6;28338:3;28331:4;28323:6;28319:17;28297:53;:::i;:::-;-1:-1:-1;;;28372:16:184;;;28397:18;;;28440:13;;28462:65;28440:13;28514:1;28503:13;;28496:4;28484:17;;28462:65;:::i;:::-;28557:8;28550:5;28546:20;28536:30;;;-1:-1:-1;;;28616:2:184;28612:1;28608:2;28604:10;28597:22;28650:6;28644:13;28666:62;28719:8;28715:1;28711:2;28707:10;28700:4;28692:6;28688:17;28666:62;:::i;:::-;28788:1;28747:17;;28780:10;;;28773:22;28820:13;;28842:62;28820:13;28891:1;28883:10;;28876:4;28864:17;;28842:62;:::i;:::-;28924:17;28943:1;28920:25;;27665:1286;-1:-1:-1;;;;;;27665:1286:184:o;28956:1000::-;29332:3;29370:6;29364:13;29386:53;29432:6;29427:3;29420:4;29412:6;29408:17;29386:53;:::i;:::-;-1:-1:-1;;;29461:16:184;;;29486:18;;;29529:13;;29551:65;29529:13;29603:1;29592:13;;29585:4;29573:17;;29551:65;:::i;:::-;29680:13;;29635:20;;;29702:62;29680:13;29751:1;29743:10;;29736:4;29724:17;;29702:62;:::i;:::-;29825:13;;29783:17;;;29847:62;29825:13;29896:1;29888:10;;29881:4;29869:17;;29847:62;:::i;:::-;29929:17;29948:1;29925:25;;28956:1000;-1:-1:-1;;;;;;28956:1000:184:o;30690:273::-;30758:6;30811:2;30799:9;30790:7;30786:23;30782:32;30779:52;;;30827:1;30824;30817:12;30779:52;30859:9;30853:16;30909:4;30902:5;30898:16;30891:5;30888:27;30878:55;;30929:1;30926;30919:12;30968:168;31008:7;31074:1;31070;31066:6;31062:14;31059:1;31056:21;31051:1;31044:9;31037:17;31033:45;31030:71;;;31081:18;;:::i;:::-;-1:-1:-1;31121:9:184;;30968:168::o;31141:204::-;31179:3;31215:4;31212:1;31208:12;31247:4;31244:1;31240:12;31282:3;31276:4;31272:14;31267:3;31264:23;31261:49;;;31290:18;;:::i;:::-;31326:13;;31141:204;-1:-1:-1;;;31141:204:184:o;31350:561::-;-1:-1:-1;;;;;31647:15:184;;;31629:34;;31699:15;;31694:2;31679:18;;31672:43;31746:2;31731:18;;31724:34;;;31789:2;31774:18;;31767:34;;;31609:3;31832;31817:19;;31810:32;;;31572:4;;31859:46;;31885:19;;31877:6;31859:46;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "101157": [
        {
          "start": 3569,
          "length": 32
        },
        {
          "start": 5125,
          "length": 32
        }
      ],
      "101160": [
        {
          "start": 3073,
          "length": 32
        },
        {
          "start": 7557,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchRedeem(uint256[],uint256[])": "e9dc30f3",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getFee(address)": "b88c9148",
    "getTokenId(address,uint48)": "92593277",
    "getTokenNameAndSymbol(uint256)": "35312c85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(uint256,uint256)": "7cbc2373",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint256)": "6914db60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC1155BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"batchRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenNameAndSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"params\":{\"amounts_\":\"Array of amounts of bond tokens to redeem\",\"tokenIds_\":\"Array of bond token ids\"}},\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token received\",\"_1\":\"Amount of the ERC1155 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token being created\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"getTokenId(address,uint48)\":{\"params\":{\"expiry_\":\"Expiry of the bond\",\"payoutToken_\":\"Payout token of bond\"},\"returns\":{\"_0\":\"ID of the bond token\"}},\"getTokenNameAndSymbol(uint256)\":{\"params\":{\"tokenId_\":\"ID of the bond token\"},\"returns\":{\"_0\":\"name        Bond token name\",\"_1\":\"symbol      Bond token symbol\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(uint256,uint256)\":{\"params\":{\"amount_\":\"Amount of bond token to redeem\",\"tokenId_\":\"ID of the bond token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"notice\":\"Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC1155 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"\\\"Deploy\\\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"getTokenId(address,uint48)\":{\"notice\":\"Get token ID from token and expiry\"},\"getTokenNameAndSymbol(uint256)\":{\"notice\":\"Get the token name and symbol for a bond token\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem a fixed-term bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"removed uri logic (unnecessary for fixed-term bonds)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v2/BondFixedTermTeller.sol\":\"BondFixedTermTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x93bcc23ee9b053b29853d7a75616e7266bd0b92a6239e13a7b7701beb3abd256\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c3611b8ab2929d37b23a5c60de9db4219d8a161cc9b777181f0eada0f86dc09\",\"dweb:/ipfs/QmS9eELn5eDtgHYXB6Yss2ENoHuLvQfCE8Yqsend8zaAw9\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xf039dc09889a2c59663bd642ec7580ffbc0cfe1dda6ba6640df092770f4c34f6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9bb8e3dd384d9f056b87d3140b5689efa51554c85d8e981f0796356b9fe5f056\",\"dweb:/ipfs/QmR9ACQp2JzLrP5zS5Cy6RSCaVqECgGunj8FsNkzkAFQ5w\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/v2/BondBaseTeller.sol\":{\"keccak256\":\"0xa297809ce991803a10c7a45c7888e2adeaa784db23d0730e4989afadc3fe38a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://de0b68b9282bb9cac20d45d8a3654ae849e35679b2fa90d4c2cea62522f20032\",\"dweb:/ipfs/QmedV7GD7srEHVL4PS8yHsu5SWrtk94h2LhBzbibKruRJz\"]},\"src/v2/BondFixedTermTeller.sol\":{\"keccak256\":\"0xfa39ffb56bc52d16f16a4682c6433619105e51f7566e9fe1a63e5565689da015\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd2abd29d2c0d00cc4c4c0966909de39f6826f72130200bb75cfb21f9b8d3065\",\"dweb:/ipfs/QmZLiQVpV2TZpruCW1jEDUACV8RGdyajcHk6iSPP5LAzfV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC1155BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRedeem"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenNameAndSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "params": {
              "amounts_": "Array of amounts of bond tokens to redeem",
              "tokenIds_": "Array of bond token ids"
            }
          },
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token received",
              "_1": "Amount of the ERC1155 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token being created"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "getTokenId(address,uint48)": {
            "params": {
              "expiry_": "Expiry of the bond",
              "payoutToken_": "Payout token of bond"
            },
            "returns": {
              "_0": "ID of the bond token"
            }
          },
          "getTokenNameAndSymbol(uint256)": {
            "params": {
              "tokenId_": "ID of the bond token"
            },
            "returns": {
              "_0": "name        Bond token name",
              "_1": "symbol      Bond token symbol"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(uint256,uint256)": {
            "params": {
              "amount_": "Amount of bond token to redeem",
              "tokenId_": "ID of the bond token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "notice": "Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC1155 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "\"Deploy\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "getTokenId(address,uint48)": {
            "notice": "Get token ID from token and expiry"
          },
          "getTokenNameAndSymbol(uint256)": {
            "notice": "Get the token name and symbol for a bond token"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem a fixed-term bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/v2/BondFixedTermTeller.sol": "BondFixedTermTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC1155.sol": {
        "keccak256": "0x93bcc23ee9b053b29853d7a75616e7266bd0b92a6239e13a7b7701beb3abd256",
        "urls": [
          "bzz-raw://3c3611b8ab2929d37b23a5c60de9db4219d8a161cc9b777181f0eada0f86dc09",
          "dweb:/ipfs/QmS9eELn5eDtgHYXB6Yss2ENoHuLvQfCE8Yqsend8zaAw9"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xf039dc09889a2c59663bd642ec7580ffbc0cfe1dda6ba6640df092770f4c34f6",
        "urls": [
          "bzz-raw://9bb8e3dd384d9f056b87d3140b5689efa51554c85d8e981f0796356b9fe5f056",
          "dweb:/ipfs/QmR9ACQp2JzLrP5zS5Cy6RSCaVqECgGunj8FsNkzkAFQ5w"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/v2/BondBaseTeller.sol": {
        "keccak256": "0xa297809ce991803a10c7a45c7888e2adeaa784db23d0730e4989afadc3fe38a9",
        "urls": [
          "bzz-raw://de0b68b9282bb9cac20d45d8a3654ae849e35679b2fa90d4c2cea62522f20032",
          "dweb:/ipfs/QmedV7GD7srEHVL4PS8yHsu5SWrtk94h2LhBzbibKruRJz"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/v2/BondFixedTermTeller.sol": {
        "keccak256": "0xfa39ffb56bc52d16f16a4682c6433619105e51f7566e9fe1a63e5565689da015",
        "urls": [
          "bzz-raw://fd2abd29d2c0d00cc4c4c0966909de39f6826f72130200bb75cfb21f9b8d3065",
          "dweb:/ipfs/QmZLiQVpV2TZpruCW1jEDUACV8RGdyajcHk6iSPP5LAzfV"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v2/BondFixedTermTeller.sol",
    "id": 102622,
    "exportedSymbols": {
      "Authority": [
        23330
      ],
      "BondBaseTeller": [
        102006
      ],
      "BondFixedTermTeller": [
        102621
      ],
      "ERC1155": [
        24802
      ],
      "ERC20": [
        25226
      ],
      "FullMath": [
        37436
      ],
      "IBondAggregator": [
        35702
      ],
      "IBondFixedTermTeller": [
        36010
      ],
      "TransferHelper": [
        37991
      ]
    },
    "nodeType": "SourceUnit",
    "src": "47:11080:180",
    "nodes": [
      {
        "id": 102008,
        "nodeType": "PragmaDirective",
        "src": "47:23:180",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 102010,
        "nodeType": "ImportDirective",
        "src": "74:47:180",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 25227,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102009,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25226,
              "src": "82:5:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102014,
        "nodeType": "ImportDirective",
        "src": "125:80:180",
        "nodes": [],
        "absolutePath": "src/v2/BondBaseTeller.sol",
        "file": "./BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 102007,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102011,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 102006,
              "src": "133:14:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 102012,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35702,
              "src": "149:15:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 102013,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23330,
              "src": "166:9:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102016,
        "nodeType": "ImportDirective",
        "src": "207:76:180",
        "nodes": [],
        "absolutePath": "src/interfaces/IBondFixedTermTeller.sol",
        "file": "../interfaces/IBondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 36011,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102015,
              "name": "IBondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36010,
              "src": "215:20:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102018,
        "nodeType": "ImportDirective",
        "src": "287:63:180",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "../libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 37992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102017,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37991,
              "src": "295:14:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102020,
        "nodeType": "ImportDirective",
        "src": "352:51:180",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "../libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 37437,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102019,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37436,
              "src": "360:8:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102022,
        "nodeType": "ImportDirective",
        "src": "405:51:180",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC1155.sol",
        "file": "solmate/tokens/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102622,
        "sourceUnit": 24847,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102021,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24802,
              "src": "413:7:180",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102621,
        "nodeType": "ContractDefinition",
        "src": "1527:9600:180",
        "nodes": [
          {
            "id": 102033,
            "nodeType": "UsingForDirective",
            "src": "1612:31:180",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 102030,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37991,
              "src": "1618:14:180"
            },
            "typeName": {
              "id": 102032,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 102031,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25226,
                "src": "1637:5:180"
              },
              "referencedDeclaration": 25226,
              "src": "1637:5:180",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25226",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 102036,
            "nodeType": "UsingForDirective",
            "src": "1649:27:180",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 102034,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37436,
              "src": "1655:8:180"
            },
            "typeName": {
              "id": 102035,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1668:7:180",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 102045,
            "nodeType": "EventDefinition",
            "src": "1724:96:180",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27",
            "name": "ERC1155BondTokenCreated",
            "nameLocation": "1730:23:180",
            "parameters": {
              "id": 102044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1762:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102045,
                  "src": "1754:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1785:10:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102045,
                  "src": "1771:24:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102039,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "1771:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "1771:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1812:6:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102045,
                  "src": "1797:21:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102042,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:66:180"
            }
          },
          {
            "id": 102050,
            "nodeType": "VariableDeclaration",
            "src": "1879:54:180",
            "nodes": [],
            "constant": false,
            "functionSelector": "6914db60",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1920:13:180",
            "scope": 102621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
              "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
            },
            "typeName": {
              "id": 102049,
              "keyType": {
                "id": 102046,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1887:7:180",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1879:33:180",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
              },
              "valueType": {
                "id": 102048,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 102047,
                  "name": "TokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35944,
                  "src": "1898:13:180"
                },
                "referencedDeclaration": 35944,
                "src": "1898:13:180",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage_ptr",
                  "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 102070,
            "nodeType": "FunctionDefinition",
            "src": "2015:208:180",
            "nodes": [],
            "body": {
              "id": 102069,
              "nodeType": "Block",
              "src": "2221:2:180",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102063,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102052,
                    "src": "2174:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 102064,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102055,
                    "src": "2185:11:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$35702",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 102065,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102057,
                    "src": "2198:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 102066,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102060,
                    "src": "2209:10:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23330",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 102067,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 102062,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102006,
                  "src": "2159:14:180"
                },
                "nodeType": "ModifierInvocation",
                "src": "2159:61:180"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 102061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102052,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "2045:9:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102070,
                  "src": "2037:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102055,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "2081:11:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102070,
                  "src": "2065:27:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$35702",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 102054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102053,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35702,
                      "src": "2065:15:180"
                    },
                    "referencedDeclaration": 35702,
                    "src": "2065:15:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$35702",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102057,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "2111:9:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102070,
                  "src": "2103:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102060,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2141:10:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102070,
                  "src": "2131:20:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$23330",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 102059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102058,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23330,
                      "src": "2131:9:180"
                    },
                    "referencedDeclaration": 23330,
                    "src": "2131:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23330",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2026:132:180"
            },
            "returnParameters": {
              "id": 102068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102148,
            "nodeType": "FunctionDefinition",
            "src": "2640:1748:180",
            "nodes": [],
            "body": {
              "id": 102147,
              "nodeType": "Block",
              "src": "2822:1566:180",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102086,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102080,
                      "src": "3534:8:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 102087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3546:1:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3534:13:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102145,
                    "nodeType": "Block",
                    "src": "4240:141:180",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102141,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102073,
                              "src": "4349:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102142,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102075,
                              "src": "4361:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 102138,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102078,
                              "src": "4323:12:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 102140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37941,
                            "src": "4323:25:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25226_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 102143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:46:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102144,
                        "nodeType": "ExpressionStatement",
                        "src": "4323:46:180"
                      }
                    ]
                  },
                  "id": 102146,
                  "nodeType": "IfStatement",
                  "src": "3530:851:180",
                  "trueBody": {
                    "id": 102137,
                    "nodeType": "Block",
                    "src": "3549:685:180",
                    "statements": [
                      {
                        "expression": {
                          "id": 102109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 102089,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102084,
                            "src": "3648:6:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 102108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  "id": 102102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        },
                                        "id": 102096,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 102090,
                                          "name": "vesting_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 102080,
                                          "src": "3659:8:180",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 102093,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3677:5:180",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 102094,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3677:15:180",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 102092,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3670:6:180",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint48_$",
                                              "typeString": "type(uint48)"
                                            },
                                            "typeName": {
                                              "id": 102091,
                                              "name": "uint48",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3670:6:180",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 102095,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3670:23:180",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "src": "3659:34:180",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      }
                                    ],
                                    "id": 102097,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3658:36:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 102100,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3704:6:180",
                                        "subdenomination": "days",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        }
                                      ],
                                      "id": 102099,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3697:6:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint48_$",
                                        "typeString": "type(uint48)"
                                      },
                                      "typeName": {
                                        "id": 102098,
                                        "name": "uint48",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3697:6:180",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 102101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3697:14:180",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "3658:53:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "id": 102103,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3657:55:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 102106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3722:6:180",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  }
                                ],
                                "id": 102105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3715:6:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 102104,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3715:6:180",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 102107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3715:14:180",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "3657:72:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3648:81:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 102110,
                        "nodeType": "ExpressionStatement",
                        "src": "3648:81:180"
                      },
                      {
                        "assignments": [
                          102112
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 102112,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3891:7:180",
                            "nodeType": "VariableDeclaration",
                            "scope": 102137,
                            "src": "3883:15:180",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 102111,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3883:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 102117,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 102114,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102078,
                              "src": "3912:12:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 102115,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102084,
                              "src": "3926:6:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 102113,
                            "name": "getTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102586,
                            "src": "3901:10:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25226_$_t_uint48_$returns$_t_uint256_$",
                              "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                            }
                          },
                          "id": 102116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3901:32:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3883:50:180"
                      },
                      {
                        "condition": {
                          "id": 102122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4016:30:180",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 102118,
                                "name": "tokenMetadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102050,
                                "src": "4017:13:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                                  "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                                }
                              },
                              "id": 102120,
                              "indexExpression": {
                                "id": 102119,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102112,
                                "src": "4031:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4017:22:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                                "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                              }
                            },
                            "id": 102121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35934,
                            "src": "4017:29:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102130,
                        "nodeType": "IfStatement",
                        "src": "4012:109:180",
                        "trueBody": {
                          "id": 102129,
                          "nodeType": "Block",
                          "src": "4048:73:180",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 102124,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102112,
                                    "src": "4075:7:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 102125,
                                    "name": "payoutToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102078,
                                    "src": "4084:12:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$25226",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "id": 102126,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102084,
                                    "src": "4098:6:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$25226",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  ],
                                  "id": 102123,
                                  "name": "_deploy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102501,
                                  "src": "4067:7:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25226_$_t_uint48_$returns$__$",
                                    "typeString": "function (uint256,contract ERC20,uint48)"
                                  }
                                },
                                "id": 102127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4067:38:180",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 102128,
                              "nodeType": "ExpressionStatement",
                              "src": "4067:38:180"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102132,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102073,
                              "src": "4193:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102133,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102112,
                              "src": "4205:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102134,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102075,
                              "src": "4214:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102131,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102529,
                            "src": "4182:10:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4182:40:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102136,
                        "nodeType": "ExpressionStatement",
                        "src": "4182:40:180"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              101670
            ],
            "documentation": {
              "id": 102071,
              "nodeType": "StructuredDocumentation",
              "src": "2275:359:180",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param payoutToken_   Token to be paid out\n @param vesting_     Amount of time to vest from current timestamp\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "2649:13:180",
            "overrides": {
              "id": 102082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2789:8:180"
            },
            "parameters": {
              "id": 102081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102073,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "2681:10:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102148,
                  "src": "2673:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102075,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "2710:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102148,
                  "src": "2702:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102078,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "2734:12:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102148,
                  "src": "2728:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102077,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102076,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "2728:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "2728:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102080,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "2764:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102148,
                  "src": "2757:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102079,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2662:117:180"
            },
            "returnParameters": {
              "id": 102085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102084,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2814:6:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102148,
                  "src": "2807:13:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102083,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2806:15:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102291,
            "nodeType": "FunctionDefinition",
            "src": "4486:1876:180",
            "nodes": [],
            "body": {
              "id": 102290,
              "nodeType": "Block",
              "src": "4646:1716:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102167,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4820:6:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102290,
                      "src": "4813:13:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 102166,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102176,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 102172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102170,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102154,
                            "src": "4836:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 102171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4846:6:180",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4836:16:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4829:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 102168,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4829:6:180",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4829:24:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 102174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4856:6:180",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4829:33:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:49:180"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102177,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102167,
                      "src": "4923:6:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102178,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4932:5:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4932:15:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4923:24:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102184,
                  "nodeType": "IfStatement",
                  "src": "4919:59:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102181,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101123,
                        "src": "4956:20:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4956:22:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102183,
                    "nodeType": "RevertStatement",
                    "src": "4949:29:180"
                  }
                },
                {
                  "assignments": [
                    102186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102186,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "4999:7:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102290,
                      "src": "4991:15:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4991:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102191,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102188,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102152,
                        "src": "5020:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102189,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102167,
                        "src": "5033:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102187,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102586,
                      "src": "5009:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25226_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 102190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:31:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4991:49:180"
                },
                {
                  "condition": {
                    "id": 102196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5119:30:180",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102192,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102050,
                          "src": "5120:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102194,
                        "indexExpression": {
                          "id": 102193,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102186,
                          "src": "5134:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5120:22:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35934,
                      "src": "5120:29:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102202,
                  "nodeType": "IfStatement",
                  "src": "5115:88:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 102198,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102152,
                          "src": "5183:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 102199,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102167,
                          "src": "5196:6:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102197,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101119,
                        "src": "5158:24:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$25226_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 102200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5158:45:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102201,
                    "nodeType": "RevertStatement",
                    "src": "5151:52:180"
                  }
                },
                {
                  "assignments": [
                    102204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102204,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5416:10:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102290,
                      "src": "5408:18:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5408:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102212,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 102209,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5459:4:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 102208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5451:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5451:7:180",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5451:13:180",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 102205,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102152,
                        "src": "5429:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "5429:21:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 102211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:36:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5408:57:180"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5505:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5505:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102220,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5525:4:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 102219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5517:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5517:7:180",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5517:13:180",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102222,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102156,
                        "src": "5532:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102213,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102152,
                        "src": "5476:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37892,
                      "src": "5476:28:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25226_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 102223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5476:64:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102224,
                  "nodeType": "ExpressionStatement",
                  "src": "5476:64:180"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 102229,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5585:4:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$102621",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 102228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5577:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5577:7:180",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5577:13:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 102225,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102152,
                          "src": "5555:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 102226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "5555:21:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 102231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5555:36:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 102234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 102232,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102204,
                        "src": "5594:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 102233,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102156,
                        "src": "5607:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5594:20:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5555:59:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102239,
                  "nodeType": "IfStatement",
                  "src": "5551:110:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102236,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101121,
                        "src": "5636:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5636:25:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102238,
                    "nodeType": "RevertStatement",
                    "src": "5629:32:180"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102240,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101141,
                      "src": "5806:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 102241,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101144,
                      "src": "5820:17:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5806:31:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102288,
                    "nodeType": "Block",
                    "src": "6209:146:180",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 102278,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6272:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6272:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102280,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102186,
                              "src": "6284:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102281,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102156,
                              "src": "6293:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102277,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102529,
                            "src": "6261:10:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6261:40:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102283,
                        "nodeType": "ExpressionStatement",
                        "src": "6261:40:180"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 102284,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102186,
                              "src": "6326:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102285,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102156,
                              "src": "6335:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 102286,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6325:18:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 102165,
                        "id": 102287,
                        "nodeType": "Return",
                        "src": "6318:25:180"
                      }
                    ]
                  },
                  "id": 102289,
                  "nodeType": "IfStatement",
                  "src": "5802:553:180",
                  "trueBody": {
                    "id": 102276,
                    "nodeType": "Block",
                    "src": "5839:364:180",
                    "statements": [
                      {
                        "assignments": [
                          102244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 102244,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5899:9:180",
                            "nodeType": "VariableDeclaration",
                            "scope": 102276,
                            "src": "5891:17:180",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 102243,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5891:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 102252,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 102249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102247,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101141,
                                "src": "5926:11:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102248,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101144,
                                "src": "5940:17:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5926:31:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 102250,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101147,
                              "src": "5959:12:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 102245,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102156,
                              "src": "5911:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 102246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37391,
                            "src": "5911:14:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 102251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:61:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5891:81:180"
                      },
                      {
                        "expression": {
                          "id": 102259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 102253,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101155,
                                "src": "5987:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$25226_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 102256,
                              "indexExpression": {
                                "id": 102254,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101157,
                                "src": "5995:9:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5987:18:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$25226_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 102257,
                            "indexExpression": {
                              "id": 102255,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102152,
                              "src": "6006:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5987:31:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 102258,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102244,
                            "src": "6022:9:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5987:44:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102260,
                        "nodeType": "ExpressionStatement",
                        "src": "5987:44:180"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 102262,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6096:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6096:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102264,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102186,
                              "src": "6108:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 102267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102265,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102156,
                                "src": "6117:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102266,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102244,
                                "src": "6127:9:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6117:19:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102261,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102529,
                            "src": "6085:10:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 102268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6085:52:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102269,
                        "nodeType": "ExpressionStatement",
                        "src": "6085:52:180"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 102270,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102186,
                              "src": "6162:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 102273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102271,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102156,
                                "src": "6171:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 102272,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102244,
                                "src": "6181:9:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6171:19:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 102274,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6161:30:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 102165,
                        "id": 102275,
                        "nodeType": "Return",
                        "src": "6154:37:180"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              35959
            ],
            "documentation": {
              "id": 102149,
              "nodeType": "StructuredDocumentation",
              "src": "4444:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102159,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25370,
                  "src": "4606:12:180"
                },
                "nodeType": "ModifierInvocation",
                "src": "4606:12:180"
              }
            ],
            "name": "create",
            "nameLocation": "4495:6:180",
            "overrides": {
              "id": 102158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4597:8:180"
            },
            "parameters": {
              "id": 102157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102152,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4518:11:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102291,
                  "src": "4512:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102150,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "4512:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "4512:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102154,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4547:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102291,
                  "src": "4540:14:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102153,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102156,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4573:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102291,
                  "src": "4565:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4565:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4501:86:180"
            },
            "returnParameters": {
              "id": 102165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102291,
                  "src": "4628:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102291,
                  "src": "4637:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4637:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4627:18:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102343,
            "nodeType": "FunctionDefinition",
            "src": "6412:599:180",
            "nodes": [],
            "body": {
              "id": 102342,
              "nodeType": "Block",
              "src": "6473:538:180",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 102302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6533:31:180",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102298,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102050,
                          "src": "6534:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102300,
                        "indexExpression": {
                          "id": 102299,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102293,
                          "src": "6548:8:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6534:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35934,
                      "src": "6534:30:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102306,
                  "nodeType": "IfStatement",
                  "src": "6529:66:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102303,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101123,
                        "src": "6573:20:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6573:22:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102305,
                    "nodeType": "RevertStatement",
                    "src": "6566:29:180"
                  }
                },
                {
                  "assignments": [
                    102309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102309,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6662:4:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102342,
                      "src": "6641:25:180",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 102308,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102307,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35944,
                          "src": "6641:13:180"
                        },
                        "referencedDeclaration": 35944,
                        "src": "6641:13:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102313,
                  "initialValue": {
                    "baseExpression": {
                      "id": 102310,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102050,
                      "src": "6669:13:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 102312,
                    "indexExpression": {
                      "id": 102311,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102293,
                      "src": "6683:8:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6669:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6641:51:180"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 102314,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6754:5:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6754:15:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102316,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102309,
                        "src": "6772:4:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                        }
                      },
                      "id": 102317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35941,
                      "src": "6772:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6754:29:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102324,
                  "nodeType": "IfStatement",
                  "src": "6750:77:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102320,
                            "name": "meta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102309,
                            "src": "6815:4:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                              "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                            }
                          },
                          "id": 102321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35941,
                          "src": "6815:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102319,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101110,
                        "src": "6792:22:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 102322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6792:35:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102323,
                    "nodeType": "RevertStatement",
                    "src": "6785:42:180"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6913:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6913:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102328,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102293,
                        "src": "6925:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102329,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102295,
                        "src": "6935:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102325,
                      "name": "_burnToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102553,
                      "src": "6902:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 102330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6902:41:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102331,
                  "nodeType": "ExpressionStatement",
                  "src": "6902:41:180"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6983:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6983:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102339,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102295,
                        "src": "6995:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 102332,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102309,
                          "src": "6954:4:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102335,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35937,
                        "src": "6954:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 102336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37941,
                      "src": "6954:28:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25226_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 102340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6954:49:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102341,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:49:180"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "6421:7:180",
            "parameters": {
              "id": 102296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102293,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6437:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102343,
                  "src": "6429:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6429:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102295,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6455:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102343,
                  "src": "6447:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6447:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6428:35:180"
            },
            "returnParameters": {
              "id": 102297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6473:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102360,
            "nodeType": "FunctionDefinition",
            "src": "7061:125:180",
            "nodes": [],
            "body": {
              "id": 102359,
              "nodeType": "Block",
              "src": "7141:45:180",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102355,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102346,
                        "src": "7160:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102356,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102348,
                        "src": "7170:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102354,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102343,
                      "src": "7152:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 102357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7152:26:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102358,
                  "nodeType": "ExpressionStatement",
                  "src": "7152:26:180"
                }
              ]
            },
            "baseFunctions": [
              35978
            ],
            "documentation": {
              "id": 102344,
              "nodeType": "StructuredDocumentation",
              "src": "7019:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "7cbc2373",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102352,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102351,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25370,
                  "src": "7128:12:180"
                },
                "nodeType": "ModifierInvocation",
                "src": "7128:12:180"
              }
            ],
            "name": "redeem",
            "nameLocation": "7070:6:180",
            "overrides": {
              "id": 102350,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7119:8:180"
            },
            "parameters": {
              "id": 102349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102346,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "7085:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102360,
                  "src": "7077:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7077:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102348,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "7103:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102360,
                  "src": "7095:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7095:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7076:35:180"
            },
            "returnParameters": {
              "id": 102353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7141:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102407,
            "nodeType": "FunctionDefinition",
            "src": "7236:361:180",
            "nodes": [],
            "body": {
              "id": 102406,
              "nodeType": "Block",
              "src": "7379:218:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102374,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7398:3:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102406,
                      "src": "7390:11:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7390:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102377,
                  "initialValue": {
                    "expression": {
                      "id": 102375,
                      "name": "tokenIds_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102364,
                      "src": "7404:9:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 102376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7404:16:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7390:30:180"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102378,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102374,
                      "src": "7435:3:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 102379,
                        "name": "amounts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102367,
                        "src": "7442:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 102380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7442:15:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7435:22:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102385,
                  "nodeType": "IfStatement",
                  "src": "7431:57:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102382,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101123,
                        "src": "7466:20:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7466:22:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102384,
                    "nodeType": "RevertStatement",
                    "src": "7459:29:180"
                  }
                },
                {
                  "body": {
                    "id": 102404,
                    "nodeType": "Block",
                    "src": "7529:61:180",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 102396,
                                "name": "tokenIds_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102364,
                                "src": "7552:9:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 102398,
                              "indexExpression": {
                                "id": 102397,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102387,
                                "src": "7562:1:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7552:12:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 102399,
                                "name": "amounts_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102367,
                                "src": "7566:8:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 102401,
                              "indexExpression": {
                                "id": 102400,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102387,
                                "src": "7575:1:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7566:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 102395,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102343,
                            "src": "7544:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 102402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7544:34:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102403,
                        "nodeType": "ExpressionStatement",
                        "src": "7544:34:180"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102389,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102387,
                      "src": "7515:1:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 102390,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102374,
                      "src": "7519:3:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7515:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102405,
                  "initializationExpression": {
                    "assignments": [
                      102387
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 102387,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7512:1:180",
                        "nodeType": "VariableDeclaration",
                        "scope": 102405,
                        "src": "7504:9:180",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7504:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 102388,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7504:9:180"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 102393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7524:3:180",
                      "subExpression": {
                        "id": 102392,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102387,
                        "src": "7526:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102394,
                    "nodeType": "ExpressionStatement",
                    "src": "7524:3:180"
                  },
                  "nodeType": "ForStatement",
                  "src": "7499:91:180"
                }
              ]
            },
            "baseFunctions": [
              35988
            ],
            "documentation": {
              "id": 102361,
              "nodeType": "StructuredDocumentation",
              "src": "7194:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "e9dc30f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102370,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25370,
                  "src": "7361:12:180"
                },
                "nodeType": "ModifierInvocation",
                "src": "7361:12:180"
              }
            ],
            "name": "batchRedeem",
            "nameLocation": "7245:11:180",
            "overrides": {
              "id": 102369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7343:8:180"
            },
            "parameters": {
              "id": 102368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102364,
                  "mutability": "mutable",
                  "name": "tokenIds_",
                  "nameLocation": "7276:9:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102407,
                  "src": "7257:28:180",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102362,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7257:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102363,
                    "nodeType": "ArrayTypeName",
                    "src": "7257:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102367,
                  "mutability": "mutable",
                  "name": "amounts_",
                  "nameLocation": "7306:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102407,
                  "src": "7287:27:180",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 102365,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7287:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102366,
                    "nodeType": "ArrayTypeName",
                    "src": "7287:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7256:59:180"
            },
            "returnParameters": {
              "id": 102372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102444,
            "nodeType": "FunctionDefinition",
            "src": "7695:398:180",
            "nodes": [],
            "body": {
              "id": 102443,
              "nodeType": "Block",
              "src": "7836:257:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102422,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "7855:7:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102443,
                      "src": "7847:15:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7847:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102427,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102424,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102411,
                        "src": "7876:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102425,
                        "name": "expiry_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102413,
                        "src": "7889:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102423,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102586,
                      "src": "7865:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25226_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 102426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:32:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7847:50:180"
                },
                {
                  "condition": {
                    "id": 102432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7964:30:180",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 102428,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102050,
                          "src": "7965:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102430,
                        "indexExpression": {
                          "id": 102429,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102422,
                          "src": "7979:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7965:22:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102431,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35934,
                      "src": "7965:29:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102440,
                  "nodeType": "IfStatement",
                  "src": "7960:101:180",
                  "trueBody": {
                    "id": 102439,
                    "nodeType": "Block",
                    "src": "7996:65:180",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102434,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102422,
                              "src": "8019:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 102435,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102411,
                              "src": "8028:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 102436,
                              "name": "expiry_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102413,
                              "src": "8041:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25226",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 102433,
                            "name": "_deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102501,
                            "src": "8011:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25226_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256,contract ERC20,uint48)"
                            }
                          },
                          "id": 102437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8011:38:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102438,
                        "nodeType": "ExpressionStatement",
                        "src": "8011:38:180"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 102441,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102422,
                    "src": "8078:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102420,
                  "id": 102442,
                  "nodeType": "Return",
                  "src": "8071:14:180"
                }
              ]
            },
            "baseFunctions": [
              35970
            ],
            "documentation": {
              "id": 102408,
              "nodeType": "StructuredDocumentation",
              "src": "7653:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102416,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25370,
                  "src": "7791:12:180"
                },
                "nodeType": "ModifierInvocation",
                "src": "7791:12:180"
              }
            ],
            "name": "deploy",
            "nameLocation": "7704:6:180",
            "overrides": {
              "id": 102415,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7773:8:180"
            },
            "parameters": {
              "id": 102414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102411,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7717:11:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102444,
                  "src": "7711:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102409,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "7711:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "7711:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102413,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7737:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102444,
                  "src": "7730:14:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102412,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7730:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7710:35:180"
            },
            "returnParameters": {
              "id": 102420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102444,
                  "src": "7822:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7822:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7821:9:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102501,
            "nodeType": "FunctionDefinition",
            "src": "8521:756:180",
            "nodes": [],
            "body": {
              "id": 102500,
              "nodeType": "Block",
              "src": "8634:643:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102456,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8808:6:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102500,
                      "src": "8801:13:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 102455,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8801:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102465,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 102464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 102461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102459,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102452,
                            "src": "8824:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 102460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8834:6:180",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8824:16:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8817:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 102457,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "8817:6:180",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8817:24:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 102463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8844:6:180",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "8817:33:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8801:49:180"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 102468,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102456,
                          "src": "8919:6:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 102467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8911:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 102466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8911:7:180",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8911:15:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102470,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8929:5:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8929:15:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8911:33:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102476,
                  "nodeType": "IfStatement",
                  "src": "8907:68:180",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102473,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101123,
                        "src": "8953:20:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 102474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8953:22:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 102475,
                    "nodeType": "RevertStatement",
                    "src": "8946:29:180"
                  }
                },
                {
                  "expression": {
                    "id": 102492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102477,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102050,
                        "src": "9021:13:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                          "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                        }
                      },
                      "id": 102479,
                      "indexExpression": {
                        "id": 102478,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102447,
                        "src": "9035:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9021:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 102481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9075:4:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 102482,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102450,
                          "src": "9094:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 102485,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102450,
                                  "src": "9126:11:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25226",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 102486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24871,
                                "src": "9126:20:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 102487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9126:22:180",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 102484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9120:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 102483,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "9120:5:180",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9120:29:180",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 102489,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102456,
                          "src": "9164:6:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 102490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9185:1:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25226",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102480,
                        "name": "TokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35944,
                        "src": "9047:13:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenMetadata_$35944_storage_ptr_$",
                          "typeString": "type(struct IBondFixedTermTeller.TokenMetadata storage pointer)"
                        }
                      },
                      "id": 102491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9047:150:180",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                      }
                    },
                    "src": "9021:176:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "id": 102493,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:176:180"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 102495,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102447,
                        "src": "9239:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102496,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102450,
                        "src": "9249:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 102497,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102456,
                        "src": "9262:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102494,
                      "name": "ERC1155BondTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102045,
                      "src": "9215:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_ERC20_$25226_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256,contract ERC20,uint48)"
                      }
                    },
                    "id": 102498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9215:54:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102499,
                  "nodeType": "EmitStatement",
                  "src": "9210:59:180"
                }
              ]
            },
            "documentation": {
              "id": 102445,
              "nodeType": "StructuredDocumentation",
              "src": "8101:414:180",
              "text": "@notice             \"Deploy\" a new ERC1155 bond token and stores its ID\n @dev                ERC1155 tokens used for fixed term bonds\n @param tokenId_     Calculated ID of new bond token (from getTokenId)\n @param underlying_  Underlying token to be paid out when the bond token vests\n @param expiry_      Timestamp that the token will vest at, will be rounded to the nearest day"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "8530:7:180",
            "parameters": {
              "id": 102453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102447,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "8556:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102501,
                  "src": "8548:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102450,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8581:11:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102501,
                  "src": "8575:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102449,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102448,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "8575:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "8575:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102452,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8610:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102501,
                  "src": "8603:14:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102451,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8603:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8537:87:180"
            },
            "returnParameters": {
              "id": 102454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8634:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102529,
            "nodeType": "FunctionDefinition",
            "src": "9516:222:180",
            "nodes": [],
            "body": {
              "id": 102528,
              "nodeType": "Block",
              "src": "9627:111:180",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 102511,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102050,
                          "src": "9638:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102513,
                        "indexExpression": {
                          "id": 102512,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102506,
                          "src": "9652:8:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9638:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102514,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35943,
                      "src": "9638:30:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 102515,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102508,
                      "src": "9672:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9638:41:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102517,
                  "nodeType": "ExpressionStatement",
                  "src": "9638:41:180"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102519,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102504,
                        "src": "9696:3:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102520,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102506,
                        "src": "9701:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102521,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102508,
                        "src": "9711:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 102524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9726:2:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 102523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9720:5:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 102522,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9720:5:180",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9720:9:180",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 102518,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24611,
                      "src": "9690:5:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 102526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9690:40:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102527,
                  "nodeType": "ExpressionStatement",
                  "src": "9690:40:180"
                }
              ]
            },
            "documentation": {
              "id": 102502,
              "nodeType": "StructuredDocumentation",
              "src": "9285:225:180",
              "text": "@notice             Mint bond token and update supply\n @param to_          Address to mint tokens to\n @param tokenId_     ID of bond token to mint\n @param amount_      Amount of bond tokens to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToken",
            "nameLocation": "9525:10:180",
            "parameters": {
              "id": 102509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102504,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "9554:3:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102529,
                  "src": "9546:11:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9546:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102506,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9576:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102529,
                  "src": "9568:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9568:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102508,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9603:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102529,
                  "src": "9595:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9595:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9535:82:180"
            },
            "returnParameters": {
              "id": 102510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9627:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102553,
            "nodeType": "FunctionDefinition",
            "src": "9978:215:180",
            "nodes": [],
            "body": {
              "id": 102552,
              "nodeType": "Block",
              "src": "10091:102:180",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 102539,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102050,
                          "src": "10102:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 102541,
                        "indexExpression": {
                          "id": 102540,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102534,
                          "src": "10116:8:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10102:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 102542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35943,
                      "src": "10102:30:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 102543,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102536,
                      "src": "10136:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10102:41:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102545,
                  "nodeType": "ExpressionStatement",
                  "src": "10102:41:180"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102547,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102532,
                        "src": "10160:5:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102548,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102534,
                        "src": "10167:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102549,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102536,
                        "src": "10177:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102546,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24801,
                      "src": "10154:5:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 102550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10154:31:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102551,
                  "nodeType": "ExpressionStatement",
                  "src": "10154:31:180"
                }
              ]
            },
            "documentation": {
              "id": 102530,
              "nodeType": "StructuredDocumentation",
              "src": "9746:226:180",
              "text": "@notice             Burn bond token and update supply\n @param from_        Address to burn tokens from\n @param tokenId_     ID of bond token to burn\n @param amount_      Amount of bond token to burn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnToken",
            "nameLocation": "9987:10:180",
            "parameters": {
              "id": 102537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102532,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "10016:5:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102553,
                  "src": "10008:13:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10008:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102534,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10040:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102553,
                  "src": "10032:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10032:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102536,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "10067:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102553,
                  "src": "10059:15:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10059:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9997:84:180"
            },
            "returnParameters": {
              "id": 102538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10091:0:180"
            },
            "scope": 102621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102586,
            "nodeType": "FunctionDefinition",
            "src": "10291:389:180",
            "nodes": [],
            "body": {
              "id": 102585,
              "nodeType": "Block",
              "src": "10385:295:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102566,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10538:7:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102585,
                      "src": "10530:15:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10530:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102572,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102557,
                                "src": "10597:11:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$25226",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                "id": 102578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 102573,
                                  "name": "expiry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102559,
                                  "src": "10610:7:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 102576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10627:6:180",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      }
                                    ],
                                    "id": 102575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10620:6:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 102574,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10620:6:180",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 102577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10620:14:180",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "10610:24:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$25226",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              ],
                              "expression": {
                                "id": 102570,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10580:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 102571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10580:16:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 102579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10580:55:180",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 102569,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10570:9:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 102580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10570:66:180",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 102568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10548:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 102567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10548:7:180",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 102581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10548:99:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10530:117:180"
                },
                {
                  "expression": {
                    "id": 102583,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102566,
                    "src": "10665:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102564,
                  "id": 102584,
                  "nodeType": "Return",
                  "src": "10658:14:180"
                }
              ]
            },
            "baseFunctions": [
              35999
            ],
            "documentation": {
              "id": 102554,
              "nodeType": "StructuredDocumentation",
              "src": "10249:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "92593277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenId",
            "nameLocation": "10300:10:180",
            "overrides": {
              "id": 102561,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10358:8:180"
            },
            "parameters": {
              "id": 102560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102557,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "10317:11:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102586,
                  "src": "10311:17:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25226",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 102556,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102555,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25226,
                      "src": "10311:5:180"
                    },
                    "referencedDeclaration": 25226,
                    "src": "10311:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25226",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102559,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "10337:7:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102586,
                  "src": "10330:14:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 102558,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "10330:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10310:35:180"
            },
            "returnParameters": {
              "id": 102564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102586,
                  "src": "10376:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10375:9:180"
            },
            "scope": 102621,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102620,
            "nodeType": "FunctionDefinition",
            "src": "10730:394:180",
            "nodes": [],
            "body": {
              "id": 102619,
              "nodeType": "Block",
              "src": "10882:242:180",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102599,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "10914:4:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102619,
                      "src": "10893:25:180",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 102598,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102597,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35944,
                          "src": "10893:13:180"
                        },
                        "referencedDeclaration": 35944,
                        "src": "10893:13:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102603,
                  "initialValue": {
                    "baseExpression": {
                      "id": 102600,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102050,
                      "src": "10921:13:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$35944_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 102602,
                    "indexExpression": {
                      "id": 102601,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102589,
                      "src": "10935:8:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10921:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$35944_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10893:51:180"
                },
                {
                  "assignments": [
                    102605,
                    102607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102605,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "10970:4:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102619,
                      "src": "10956:18:180",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 102604,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10956:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 102607,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "10990:6:180",
                      "nodeType": "VariableDeclaration",
                      "scope": 102619,
                      "src": "10976:20:180",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 102606,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10976:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102614,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102609,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102599,
                          "src": "11032:4:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102610,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35937,
                        "src": "11032:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 102611,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102599,
                          "src": "11062:4:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$35944_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 102612,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35941,
                        "src": "11062:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25226",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 102608,
                      "name": "_getNameAndSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101910,
                      "src": "11000:17:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$25226_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                      }
                    },
                    "id": 102613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11000:84:180",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10955:129:180"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 102615,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102605,
                        "src": "11103:4:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 102616,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102607,
                        "src": "11109:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 102617,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11102:14:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 102596,
                  "id": 102618,
                  "nodeType": "Return",
                  "src": "11095:21:180"
                }
              ]
            },
            "baseFunctions": [
              36009
            ],
            "documentation": {
              "id": 102587,
              "nodeType": "StructuredDocumentation",
              "src": "10688:36:180",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "35312c85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNameAndSymbol",
            "nameLocation": "10739:21:180",
            "overrides": {
              "id": 102591,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10820:8:180"
            },
            "parameters": {
              "id": 102590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102589,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10769:8:180",
                  "nodeType": "VariableDeclaration",
                  "scope": 102620,
                  "src": "10761:16:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10761:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10760:18:180"
            },
            "returnParameters": {
              "id": 102596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102620,
                  "src": "10847:13:180",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10847:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102620,
                  "src": "10862:13:180",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10862:6:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10846:30:180"
            },
            "scope": 102621,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 102024,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 102006,
              "src": "1559:14:180"
            },
            "id": 102025,
            "nodeType": "InheritanceSpecifier",
            "src": "1559:14:180"
          },
          {
            "baseName": {
              "id": 102026,
              "name": "IBondFixedTermTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36010,
              "src": "1575:20:180"
            },
            "id": 102027,
            "nodeType": "InheritanceSpecifier",
            "src": "1575:20:180"
          },
          {
            "baseName": {
              "id": 102028,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24802,
              "src": "1597:7:180"
            },
            "id": 102029,
            "nodeType": "InheritanceSpecifier",
            "src": "1597:7:180"
          }
        ],
        "canonicalName": "BondFixedTermTeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 102023,
          "nodeType": "StructuredDocumentation",
          "src": "1469:58:180",
          "text": "removed uri logic (unnecessary for fixed-term bonds)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          102621,
          24802,
          36010,
          102006,
          25371,
          23317,
          36196
        ],
        "name": "BondFixedTermTeller",
        "nameLocation": "1536:19:180",
        "scope": 102622,
        "usedErrors": [
          101106,
          101110,
          101112,
          101119,
          101121,
          101123
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 180
}