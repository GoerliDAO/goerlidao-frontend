{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Keycode",
          "name": "keycode_",
          "type": "bytes5"
        }
      ],
      "name": "Policy_ModuleDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ROLES",
      "outputs": [
        {
          "internalType": "contract ROLESv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumTargetPrice_",
          "type": "uint256"
        }
      ],
      "name": "changeMinimumTargetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "movingAverageDuration_",
          "type": "uint48"
        }
      ],
      "name": "changeMovingAverageDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "observationFrequency_",
          "type": "uint48"
        }
      ],
      "name": "changeObservationFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "ohmEthUpdateThreshold_",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "reserveEthUpdateThreshold_",
          "type": "uint48"
        }
      ],
      "name": "changeUpdateThresholds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "startObservations_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint48",
          "name": "lastObservationTime_",
          "type": "uint48"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "permissions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161137c38038061137c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6112e9806100936000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80637d4dce7611610081578063923cb9521161005b578063923cb952146101745780639459b875146101b9578063d4aae0c4146101ce57600080fd5b80637d4dce761461013b5780638a1573371461014e578063902a35b91461016157600080fd5b80634657b36c116100b25780634657b36c1461010057806357ee9383146101135780635924be701461012657600080fd5b80630fbe3476146100ce57806322f3e2d4146100e3575b600080fd5b6100e16100dc366004610eea565b6101ee565b005b6100eb610331565b60405190151581526020015b60405180910390f35b6100e161010e366004610f42565b6103c9565b6100e1610121366004610f66565b610468565b61012e61059b565b6040516100f79190610f7f565b6100e1610149366004611012565b6108c5565b6100e161015c366004611012565b6109cd565b6100e161016f36600461105c565b610ad5565b6001546101949073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b6101c1610bd7565b6040516100f7919061114a565b6000546101949073ffffffffffffffffffffffffffffffffffffffff1681565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50506002546040517f0fbe347600000000000000000000000000000000000000000000000000000000815265ffffffffffff80881660048301528616602482015273ffffffffffffffffffffffffffffffffffffffff9091169250630fbe347691506044015b600060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b50505050505050565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c491906111b0565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610421576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b50506002546040517f57ee93830000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506357ee938391506024015b600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b505050505050565b60606000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063091906111d2565b60408051600580825260c08201909252919250816020015b6040805180820190915260008082526020820152815260200190600190039081610648575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f902a35b900000000000000000000000000000000000000000000000000000000602082015281519193509083906000906106da576106da611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001638a15733760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061075157610751611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001637d4dce7660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250826002815181106107c8576107c8611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630fbe347660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260038151811061083f5761083f611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016357ee938360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250826004815181106108b6576108b6611214565b60200260200101819052505090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561095757600080fd5b505af115801561096b573d6000803e3d6000fd5b50506002546040517f7d4dce7600000000000000000000000000000000000000000000000000000000815265ffffffffffff8616600482015273ffffffffffffffffffffffffffffffffffffffff9091169250637d4dce769150602401610565565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b50506002546040517f8a15733700000000000000000000000000000000000000000000000000000000815265ffffffffffff8616600482015273ffffffffffffffffffffffffffffffffffffffff9091169250638a1573379150602401610565565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610b6757600080fd5b505af1158015610b7b573d6000803e3d6000fd5b50506002546040517f902a35b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116925063902a35b991506102fa9086908690600401611243565b60408051600280825260608083018452926020830190803683370190505090507f505249434500000000000000000000000000000000000000000000000000000081600081518110610c2b57610c2b611214565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610c837f524f4c455300000000000000000000000000000000000000000000000000000090565b81600181518110610c9657610c96611214565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610d0381600081518110610cf657610cf6611214565b6020026020010151610da1565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d5981600181518110610cf657610cf6611214565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e569190611296565b905073ffffffffffffffffffffffffffffffffffffffff8116610ec9576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152602401610418565b92915050565b803565ffffffffffff81168114610ee557600080fd5b919050565b60008060408385031215610efd57600080fd5b610f0683610ecf565b9150610f1460208401610ecf565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114610f3f57600080fd5b50565b600060208284031215610f5457600080fd5b8135610f5f81610f1d565b9392505050565b600060208284031215610f7857600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561100557815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610f9c565b5091979650505050505050565b60006020828403121561102457600080fd5b610f5f82610ecf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561106f57600080fd5b823567ffffffffffffffff8082111561108757600080fd5b818501915085601f83011261109b57600080fd5b81356020828211156110af576110af61102d565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811086821117156110f2576110f261102d565b60405292835281830193508481018201928984111561111057600080fd5b948201945b8386101561112e57853585529482019493820193611115565b965061113d9050878201610ecf565b9450505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156111a45783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101611166565b50909695505050505050565b6000602082840312156111c257600080fd5b81518015158114610f5f57600080fd5b6000602082840312156111e457600080fd5b81517fffffffffff00000000000000000000000000000000000000000000000000000081168114610f5f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b8281101561127c57815184529284019290840190600101611260565b50505065ffffffffffff9490941692019190915250919050565b6000602082840312156112a857600080fd5b8151610f5f81610f1d56fea2646970667358221220b7f29a19e9ef9dbb9b8e96dc712c754a8e8ae3775311c0f420ab5de0e1934e2964736f6c634300080f0033",
    "sourceMap": "257:5258:113:-:0;;;689:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4341:6:55;:16;;-1:-1:-1;;;;;;4341:16:55;-1:-1:-1;;;;;4341:16:55;;;;;;;;;;257:5258:113;;14:306:183;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:183;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:183:o;:::-;257:5258:113;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80637d4dce7611610081578063923cb9521161005b578063923cb952146101745780639459b875146101b9578063d4aae0c4146101ce57600080fd5b80637d4dce761461013b5780638a1573371461014e578063902a35b91461016157600080fd5b80634657b36c116100b25780634657b36c1461010057806357ee9383146101135780635924be701461012657600080fd5b80630fbe3476146100ce57806322f3e2d4146100e3575b600080fd5b6100e16100dc366004610eea565b6101ee565b005b6100eb610331565b60405190151581526020015b60405180910390f35b6100e161010e366004610f42565b6103c9565b6100e1610121366004610f66565b610468565b61012e61059b565b6040516100f79190610f7f565b6100e1610149366004611012565b6108c5565b6100e161015c366004611012565b6109cd565b6100e161016f36600461105c565b610ad5565b6001546101949073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b6101c1610bd7565b6040516100f7919061114a565b6000546101949073ffffffffffffffffffffffffffffffffffffffff1681565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50506002546040517f0fbe347600000000000000000000000000000000000000000000000000000000815265ffffffffffff80881660048301528616602482015273ffffffffffffffffffffffffffffffffffffffff9091169250630fbe347691506044015b600060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b50505050505050565b600080546040517fe52223bb00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063e52223bb90602401602060405180830381865afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c491906111b0565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610421576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b50506002546040517f57ee93830000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911692506357ee938391506024015b600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b505050505050565b60606000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063091906111d2565b60408051600580825260c08201909252919250816020015b6040805180820190915260008082526020820152815260200190600190039081610648575050604080518082019091527fffffffffff000000000000000000000000000000000000000000000000000000831681527f902a35b900000000000000000000000000000000000000000000000000000000602082015281519193509083906000906106da576106da611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001638a15733760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260018151811061075157610751611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001637d4dce7660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250826002815181106107c8576107c8611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001630fbe347660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508260038151811061083f5761083f611214565b60200260200101819052506040518060400160405280827affffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016357ee938360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250826004815181106108b6576108b6611214565b60200260200101819052505090565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b15801561095757600080fd5b505af115801561096b573d6000803e3d6000fd5b50506002546040517f7d4dce7600000000000000000000000000000000000000000000000000000000815265ffffffffffff8616600482015273ffffffffffffffffffffffffffffffffffffffff9091169250637d4dce769150602401610565565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b50506002546040517f8a15733700000000000000000000000000000000000000000000000000000000815265ffffffffffff8616600482015273ffffffffffffffffffffffffffffffffffffffff9091169250638a1573379150602401610565565b6001546040517fd09a20c50000000000000000000000000000000000000000000000000000000081527f70726963655f61646d696e000000000000000000000000000000000000000000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063d09a20c590604401600060405180830381600087803b158015610b6757600080fd5b505af1158015610b7b573d6000803e3d6000fd5b50506002546040517f902a35b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116925063902a35b991506102fa9086908690600401611243565b60408051600280825260608083018452926020830190803683370190505090507f505249434500000000000000000000000000000000000000000000000000000081600081518110610c2b57610c2b611214565b7fffffffffff00000000000000000000000000000000000000000000000000000090921660209283029190910190910152610c837f524f4c455300000000000000000000000000000000000000000000000000000090565b81600181518110610c9657610c96611214565b60200260200101907affffffffffffffffffffffffffffffffffffffffffffffffffffff191690817affffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610d0381600081518110610cf657610cf6611214565b6020026020010151610da1565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d5981600181518110610cf657610cf6611214565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905590565b600080546040517fb4dc00b40000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152829173ffffffffffffffffffffffffffffffffffffffff169063b4dc00b490602401602060405180830381865afa158015610e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e569190611296565b905073ffffffffffffffffffffffffffffffffffffffff8116610ec9576040517f5c3fa9cd0000000000000000000000000000000000000000000000000000000081527fffffffffff00000000000000000000000000000000000000000000000000000084166004820152602401610418565b92915050565b803565ffffffffffff81168114610ee557600080fd5b919050565b60008060408385031215610efd57600080fd5b610f0683610ecf565b9150610f1460208401610ecf565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114610f3f57600080fd5b50565b600060208284031215610f5457600080fd5b8135610f5f81610f1d565b9392505050565b600060208284031215610f7857600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561100557815180517fffffffffff0000000000000000000000000000000000000000000000000000001685528601517fffffffff0000000000000000000000000000000000000000000000000000000016868501529284019290850190600101610f9c565b5091979650505050505050565b60006020828403121561102457600080fd5b610f5f82610ecf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561106f57600080fd5b823567ffffffffffffffff8082111561108757600080fd5b818501915085601f83011261109b57600080fd5b81356020828211156110af576110af61102d565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811086821117156110f2576110f261102d565b60405292835281830193508481018201928984111561111057600080fd5b948201945b8386101561112e57853585529482019493820193611115565b965061113d9050878201610ecf565b9450505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156111a45783517fffffffffff0000000000000000000000000000000000000000000000000000001683529284019291840191600101611166565b50909695505050505050565b6000602082840312156111c257600080fd5b81518015158114610f5f57600080fd5b6000602082840312156111e457600080fd5b81517fffffffffff00000000000000000000000000000000000000000000000000000081168114610f5f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b8281101561127c57815184529284019290840190600101611260565b50505065ffffffffffff9490941692019190915250919050565b6000602082840312156112a857600080fd5b8151610f5f81610f1d56fea2646970667358221220b7f29a19e9ef9dbb9b8e96dc712c754a8e8ae3775311c0f420ab5de0e1934e2964736f6c634300080f0033",
    "sourceMap": "257:5258:113:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4806:250;;;;;;:::i;:::-;;:::i;:::-;;6691:100:55;;;:::i;:::-;;;612:14:183;;605:22;587:41;;575:2;560:18;6691:100:55;;;;;;;;4652:97;;;;;;:::i;:::-;;:::i;5329:184:113:-;;;;;;:::i;:::-;;:::i;1099:692::-;;;:::i;:::-;;;;;;;:::i;4226:191::-;;;;;;:::i;:::-;;:::i;3525:195::-;;;;;;:::i;:::-;;:::i;2717:214::-;;;;;;:::i;:::-;;:::i;332:20:98:-;;;;;;;;;;;;4040:42:183;4028:55;;;4010:74;;3998:2;3983:18;332:20:98;3847:243:183;741:352:113;;;:::i;:::-;;;;;;;:::i;4276:20:55:-;;;;;;;;;4806:250:113;405:5:98;;:36;;;;;361:100;405:36;;;5254:25:183;;;430:10:98;5295:18:183;;;5288:83;361:100:98;405:5;;;:17;;5227:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4969:5:113::1;::::0;:80:::1;::::0;;;;5562:14:183;5603:15;;;4969:80:113::1;::::0;::::1;5585:34:183::0;5655:15;;5635:18;;;5628:43;4969:5:113::1;::::0;;::::1;::::0;-1:-1:-1;4969:28:113::1;::::0;-1:-1:-1;5525:18:183;;4969:80:113::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4806:250:::0;;;:::o;6691:100:55:-;6734:4;6757:6;;:27;;;;;6779:4;6757:27;;;4010:74:183;6757:6:55;;;;;:21;;3983:18:183;;6757:27:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6750:34;;6691:100;:::o;4652:97::-;4504:6;;;;4482:10;:29;4478:78;;4520:36;;;;;4545:10;4520:36;;;4010:74:183;3983:18;;4520:36:55;;;;;;;;4478:78;4723:6:::1;:19:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4652:97::o;5329:184:113:-;405:5:98;;:36;;;;;361:100;405:36;;;5254:25:183;;;430:10:98;5295:18:183;;;5288:83;361:100:98;405:5;;;:17;;5227:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5455:5:113::1;::::0;:51:::1;::::0;;;;::::1;::::0;::::1;6588:25:183::0;;;5455:5:113::1;::::0;;::::1;::::0;-1:-1:-1;5455:30:113::1;::::0;-1:-1:-1;6561:18:183;;5455:51:113::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5329:184:::0;;:::o;1099:692::-;1193:32;1241:21;1265:5;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1305:20;;;1323:1;1305:20;;;;;;;;;1241:39;;-1:-1:-1;1305:20:113;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1305:20:113;;;;;;;;;;;;-1:-1:-1;;1352:53:113;;;;;;;;;;;;;;1379:25;1352:53;;;;1335:14;;;;-1:-1:-1;1352:53:113;1335:14;;-1:-1:-1;;1335:14:113;;;;:::i;:::-;;;;;;:70;;;;1432;;;;;;;;1444:13;1432:70;;;;;;;1459:42;;;1432:70;;;;;;1415:11;1427:1;1415:14;;;;;;;;:::i;:::-;;;;;;:87;;;;1529:69;;;;;;;;1541:13;1529:69;;;;;;;1556:41;;;1529:69;;;;;;1512:11;1524:1;1512:14;;;;;;;;:::i;:::-;;;;;;:86;;;;1625:65;;;;;;;;1637:13;1625:65;;;;;;;1652:37;;;1625:65;;;;;;1608:11;1620:1;1608:14;;;;;;;;:::i;:::-;;;;;;:82;;;;1717:67;;;;;;;;1729:13;1717:67;;;;;;;1744:39;;;1717:67;;;;;;1700:11;1712:1;1700:14;;;;;;;;:::i;:::-;;;;;;:84;;;;1231:560;1099:692;:::o;4226:191::-;405:5:98;;:36;;;;;361:100;405:36;;;5254:25:183;;;430:10:98;5295:18:183;;;5288:83;361:100:98;405:5;;;:17;;5227:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4355:5:113::1;::::0;:55:::1;::::0;;;;7358:14:183;7346:27;;4355:55:113::1;::::0;::::1;7328:46:183::0;4355:5:113::1;::::0;;::::1;::::0;-1:-1:-1;4355:32:113::1;::::0;-1:-1:-1;7301:18:183;;4355:55:113::1;7184:196:183::0;3525:195:113;405:5:98;;:36;;;;;361:100;405:36;;;5254:25:183;;;430:10:98;5295:18:183;;;5288:83;361:100:98;405:5;;;:17;;5227:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3656:5:113::1;::::0;:57:::1;::::0;;;;7358:14:183;7346:27;;3656:57:113::1;::::0;::::1;7328:46:183::0;3656:5:113::1;::::0;;::::1;::::0;-1:-1:-1;3656:33:113::1;::::0;-1:-1:-1;7301:18:183;;3656:57:113::1;7184:196:183::0;2717:214:113;405:5:98;;:36;;;;;361:100;405:36;;;5254:25:183;;;430:10:98;5295:18:183;;;5288:83;361:100:98;405:5;;;:17;;5227:18:183;;405:36:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2866:5:113::1;::::0;:58:::1;::::0;;;;:5:::1;::::0;;::::1;::::0;-1:-1:-1;2866:16:113::1;::::0;-1:-1:-1;2866:58:113::1;::::0;2883:18;;2903:20;;2866:58:::1;;;:::i;741:352::-:0;857:16;;;871:1;857:16;;;801:29;857:16;;;;;801:29;857:16;;;;;;;;;;-1:-1:-1;;842:31:113;-1:-1:-1;901:18:113;883:12;896:1;883:15;;;;;;;;:::i;:::-;:36;;;;:15;;;;;;;;;;;:36;947:18;;3124:8:55;3039:97;947:18:113;929:12;942:1;929:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;;;;;992:33;1009:12;1022:1;1009:15;;;;;;;;:::i;:::-;;;;;;;992:16;:33::i;:::-;976:5;;:50;;;;;;;;;;;;;;;;;;1052:33;1069:12;1082:1;1069:15;;;;;;;;:::i;1052:33::-;1036:5;:50;;;;;;;;;;;;;;;741:352;:::o;6867:286:55:-;6934:7;6988:6;;:36;;;;;8318:66:183;8306:79;;6988:36:55;;;8288:98:183;6934:7:55;;6988:6;;;:26;;8261:18:183;;6988:36:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6953:72;-1:-1:-1;7039:30:55;;;7035:78;;7078:35;;;;;8318:66:183;8306:79;;7078:35:55;;;8288:98:183;8261:18;;7078:35:55;8114:278:183;7035:78:55;7130:16;6867:286;-1:-1:-1;;6867:286:55:o;14:167:183:-;81:20;;141:14;130:26;;120:37;;110:65;;171:1;168;161:12;110:65;14:167;;;:::o;186:256::-;252:6;260;313:2;301:9;292:7;288:23;284:32;281:52;;;329:1;326;319:12;281:52;352:28;370:9;352:28;:::i;:::-;342:38;;399:37;432:2;421:9;417:18;399:37;:::i;:::-;389:47;;186:256;;;;;:::o;639:162::-;733:42;726:5;722:54;715:5;712:65;702:93;;791:1;788;781:12;702:93;639:162;:::o;806:271::-;881:6;934:2;922:9;913:7;909:23;905:32;902:52;;;950:1;947;940:12;902:52;989:9;976:23;1008:39;1041:5;1008:39;:::i;:::-;1066:5;806:271;-1:-1:-1;;;806:271:183:o;1082:180::-;1141:6;1194:2;1182:9;1173:7;1169:23;1165:32;1162:52;;;1210:1;1207;1200:12;1162:52;-1:-1:-1;1233:23:183;;1082:180;-1:-1:-1;1082:180:183:o;1267:944::-;1498:2;1550:21;;;1620:13;;1523:18;;;1642:22;;;1469:4;;1498:2;1683;;1701:18;;;;1742:15;;;1469:4;1785:400;1799:6;1796:1;1793:13;1785:400;;;1858:13;;1900:9;;1911:66;1896:82;1884:95;;2023:11;;2017:18;2037:66;2013:91;1999:12;;;1992:113;2125:12;;;;2160:15;;;;1821:1;1814:9;1785:400;;;-1:-1:-1;2202:3:183;;1267:944;-1:-1:-1;;;;;;;1267:944:183:o;2216:184::-;2274:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:52;;;2343:1;2340;2333:12;2295:52;2366:28;2384:9;2366:28;:::i;2405:184::-;2457:77;2454:1;2447:88;2554:4;2551:1;2544:15;2578:4;2575:1;2568:15;2594:1248;2686:6;2694;2747:2;2735:9;2726:7;2722:23;2718:32;2715:52;;;2763:1;2760;2753:12;2715:52;2803:9;2790:23;2832:18;2873:2;2865:6;2862:14;2859:34;;;2889:1;2886;2879:12;2859:34;2927:6;2916:9;2912:22;2902:32;;2972:7;2965:4;2961:2;2957:13;2953:27;2943:55;;2994:1;2991;2984:12;2943:55;3030:2;3017:16;3052:4;3075:2;3071;3068:10;3065:36;;;3081:18;;:::i;:::-;3127:2;3124:1;3120:10;3159:2;3153:9;3218:66;3213:2;3209;3205:11;3201:84;3193:6;3189:97;3336:6;3324:10;3321:22;3316:2;3304:10;3301:18;3298:46;3295:72;;;3347:18;;:::i;:::-;3383:2;3376:22;3433:18;;;3467:15;;;;-1:-1:-1;3509:11:183;;;3505:20;;;3537:19;;;3534:39;;;3569:1;3566;3559:12;3534:39;3593:11;;;;3613:142;3629:6;3624:3;3621:15;3613:142;;;3695:17;;3683:30;;3646:12;;;;3733;;;;3613:142;;;3774:6;-1:-1:-1;3799:37:183;;-1:-1:-1;3817:18:183;;;3799:37;:::i;:::-;3789:47;;;;;;2594:1248;;;;;:::o;4095:733::-;4294:2;4346:21;;;4416:13;;4319:18;;;4438:22;;;4265:4;;4294:2;4517:15;;;;4491:2;4476:18;;;4265:4;4560:242;4574:6;4571:1;4568:13;4560:242;;;4639:13;;4654:66;4635:86;4623:99;;4777:15;;;;4742:12;;;;4596:1;4589:9;4560:242;;;-1:-1:-1;4819:3:183;;4095:733;-1:-1:-1;;;;;;4095:733:183:o;5929:277::-;5996:6;6049:2;6037:9;6028:7;6024:23;6020:32;6017:52;;;6065:1;6062;6055:12;6017:52;6097:9;6091:16;6150:5;6143:13;6136:21;6129:5;6126:32;6116:60;;6172:1;6169;6162:12;6624:366;6723:6;6776:2;6764:9;6755:7;6751:23;6747:32;6744:52;;;6792:1;6789;6782:12;6744:52;6824:9;6818:16;6874:66;6867:5;6863:78;6856:5;6853:89;6843:117;;6956:1;6953;6946:12;6995:184;7047:77;7044:1;7037:88;7144:4;7141:1;7134:15;7168:4;7165:1;7158:15;7385:724;7601:2;7613:21;;;7683:13;;7586:18;;;7705:22;;;7553:4;;7780;;7758:2;7743:18;;;7807:15;;;7553:4;7850:169;7864:6;7861:1;7858:13;7850:169;;;7925:13;;7913:26;;7959:12;;;;7994:15;;;;7886:1;7879:9;7850:169;;;-1:-1:-1;;;8087:14:183;8075:27;;;;8055:18;;8048:55;;;;-1:-1:-1;8036:3:183;7385:724;-1:-1:-1;7385:724:183:o;8397:275::-;8483:6;8536:2;8524:9;8515:7;8511:23;8507:32;8504:52;;;8552:1;8549;8542:12;8504:52;8584:9;8578:16;8603:39;8636:5;8603:39;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ROLES()": "923cb952",
    "changeKernel(address)": "4657b36c",
    "changeMinimumTargetPrice(uint256)": "57ee9383",
    "changeMovingAverageDuration(uint48)": "8a157337",
    "changeObservationFrequency(uint48)": "7d4dce76",
    "changeUpdateThresholds(uint48,uint48)": "0fbe3476",
    "configureDependencies()": "9459b875",
    "initialize(uint256[],uint48)": "902a35b9",
    "isActive()": "22f3e2d4",
    "kernel()": "d4aae0c4",
    "requestPermissions()": "5924be70"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"kernel_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Keycode\",\"name\":\"keycode_\",\"type\":\"bytes5\"}],\"name\":\"Policy_ModuleDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ROLES\",\"outputs\":[{\"internalType\":\"contract ROLESv1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumTargetPrice_\",\"type\":\"uint256\"}],\"name\":\"changeMinimumTargetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"movingAverageDuration_\",\"type\":\"uint48\"}],\"name\":\"changeMovingAverageDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"observationFrequency_\",\"type\":\"uint48\"}],\"name\":\"changeObservationFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"ohmEthUpdateThreshold_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"reserveEthUpdateThreshold_\",\"type\":\"uint48\"}],\"name\":\"changeUpdateThresholds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureDependencies\",\"outputs\":[{\"internalType\":\"Keycode[]\",\"name\":\"dependencies\",\"type\":\"bytes5[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"startObservations_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint48\",\"name\":\"lastObservationTime_\",\"type\":\"uint48\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"Keycode\",\"name\":\"keycode\",\"type\":\"bytes5\"},{\"internalType\":\"bytes4\",\"name\":\"funcSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct Permissions[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeMinimumTargetPrice(uint256)\":{\"details\":\"The minimum target price should be set based on liquid backing of OHM.\",\"params\":{\"minimumTargetPrice_\":\"- Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM\"}},\"changeMovingAverageDuration(uint48)\":{\"details\":\"Setting the window to a larger number of observations than the current window will clear      the data in the current window and require the initialize function to be called again.      Ensure that you have saved the existing data and can re-populate before calling this      function with a number of observations larger than have been recorded.\",\"params\":{\"movingAverageDuration_\":\"Moving average duration in seconds, must be a multiple of observation frequency\"}},\"changeObservationFrequency(uint48)\":{\"details\":\"Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.           Ensure that you have saved the existing data and/or can re-populate before calling this function.\",\"params\":{\"observationFrequency_\":\"Observation frequency in seconds, must be a divisor of the moving average duration\"}},\"changeUpdateThresholds(uint48,uint48)\":{\"details\":\"The update thresholds should be set based on the update threshold of the chainlink oracles.\",\"params\":{\"ohmEthUpdateThreshold_\":\"- Maximum allowed time between OHM/ETH price feed updates\",\"reserveEthUpdateThreshold_\":\"- Maximum allowed time between Reserve/ETH price feed updates\"}},\"configureDependencies()\":{\"returns\":{\"dependencies\":\"- Keycode array of module dependencies.\"}},\"initialize(uint256[],uint48)\":{\"details\":\"This function must be called after the Price module is deployed to activate it and after updating the observationFrequency      or movingAverageDuration (in certain cases) in order for the Price module to function properly.\",\"params\":{\"lastObservationTime_\":\"Unix timestamp of last observation being provided (in seconds).\",\"startObservations_\":\"Array of observations to initialize the moving average with. Must be of length numObservations.\"}},\"requestPermissions()\":{\"returns\":{\"permissions\":\"- Array of keycodes and function selectors for requested permissions.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"changeMinimumTargetPrice(uint256)\":{\"notice\":\"Change the minimum target price\"},\"changeMovingAverageDuration(uint48)\":{\"notice\":\"Change the moving average window (duration)\"},\"changeObservationFrequency(uint48)\":{\"notice\":\"Change the observation frequency of the moving average (i.e. how often a new observation is taken)\"},\"changeUpdateThresholds(uint48,uint48)\":{\"notice\":\"Change the update thresholds for the price feeds\"},\"configureDependencies()\":{\"notice\":\"Define module dependencies for this policy.\"},\"initialize(uint256[],uint48)\":{\"notice\":\"Initialize the price moduleAccess restricted to approved policies\"},\"isActive()\":{\"notice\":\"Easily accessible indicator for if a policy is activated or not.\"},\"requestPermissions()\":{\"notice\":\"Function called by kernel to set module function permissions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/policies/PriceConfig.sol\":\"GoerliDaoPriceConfig\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/PriceConfig.sol\":{\"keccak256\":\"0x1ee1e34409748580cabbe352341d308bfc18f6a3b37959289005bf9c187039cd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://88978b75c812418685b9a1a80baacfce365d6c458aa80816bac83cc6829b4c7c\",\"dweb:/ipfs/Qmd2Ub5pmmMF1uD6YMsa87nLBtbAee7hajanJh2U4D5NVz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "kernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "Keycode",
              "name": "keycode_",
              "type": "bytes5"
            }
          ],
          "type": "error",
          "name": "Policy_ModuleDoesNotExist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROLES",
          "outputs": [
            {
              "internalType": "contract ROLESv1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimumTargetPrice_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMinimumTargetPrice"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "movingAverageDuration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMovingAverageDuration"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "observationFrequency_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeObservationFrequency"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "ohmEthUpdateThreshold_",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "reserveEthUpdateThreshold_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeUpdateThresholds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureDependencies",
          "outputs": [
            {
              "internalType": "Keycode[]",
              "name": "dependencies",
              "type": "bytes5[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "startObservations_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint48",
              "name": "lastObservationTime_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestPermissions",
          "outputs": [
            {
              "internalType": "struct Permissions[]",
              "name": "permissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "Keycode",
                  "name": "keycode",
                  "type": "bytes5"
                },
                {
                  "internalType": "bytes4",
                  "name": "funcSelector",
                  "type": "bytes4"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "changeMinimumTargetPrice(uint256)": {
            "details": "The minimum target price should be set based on liquid backing of OHM.",
            "params": {
              "minimumTargetPrice_": "- Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM"
            }
          },
          "changeMovingAverageDuration(uint48)": {
            "details": "Setting the window to a larger number of observations than the current window will clear      the data in the current window and require the initialize function to be called again.      Ensure that you have saved the existing data and can re-populate before calling this      function with a number of observations larger than have been recorded.",
            "params": {
              "movingAverageDuration_": "Moving average duration in seconds, must be a multiple of observation frequency"
            }
          },
          "changeObservationFrequency(uint48)": {
            "details": "Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.           Ensure that you have saved the existing data and/or can re-populate before calling this function.",
            "params": {
              "observationFrequency_": "Observation frequency in seconds, must be a divisor of the moving average duration"
            }
          },
          "changeUpdateThresholds(uint48,uint48)": {
            "details": "The update thresholds should be set based on the update threshold of the chainlink oracles.",
            "params": {
              "ohmEthUpdateThreshold_": "- Maximum allowed time between OHM/ETH price feed updates",
              "reserveEthUpdateThreshold_": "- Maximum allowed time between Reserve/ETH price feed updates"
            }
          },
          "configureDependencies()": {
            "returns": {
              "dependencies": "- Keycode array of module dependencies."
            }
          },
          "initialize(uint256[],uint48)": {
            "details": "This function must be called after the Price module is deployed to activate it and after updating the observationFrequency      or movingAverageDuration (in certain cases) in order for the Price module to function properly.",
            "params": {
              "lastObservationTime_": "Unix timestamp of last observation being provided (in seconds).",
              "startObservations_": "Array of observations to initialize the moving average with. Must be of length numObservations."
            }
          },
          "requestPermissions()": {
            "returns": {
              "permissions": "- Array of keycodes and function selectors for requested permissions."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "changeMinimumTargetPrice(uint256)": {
            "notice": "Change the minimum target price"
          },
          "changeMovingAverageDuration(uint48)": {
            "notice": "Change the moving average window (duration)"
          },
          "changeObservationFrequency(uint48)": {
            "notice": "Change the observation frequency of the moving average (i.e. how often a new observation is taken)"
          },
          "changeUpdateThresholds(uint48,uint48)": {
            "notice": "Change the update thresholds for the price feeds"
          },
          "configureDependencies()": {
            "notice": "Define module dependencies for this policy."
          },
          "initialize(uint256[],uint48)": {
            "notice": "Initialize the price moduleAccess restricted to approved policies"
          },
          "isActive()": {
            "notice": "Easily accessible indicator for if a policy is activated or not."
          },
          "requestPermissions()": {
            "notice": "Function called by kernel to set module function permissions."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/policies/PriceConfig.sol": "GoerliDaoPriceConfig"
      },
      "libraries": {}
    },
    "sources": {
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/PriceConfig.sol": {
        "keccak256": "0x1ee1e34409748580cabbe352341d308bfc18f6a3b37959289005bf9c187039cd",
        "urls": [
          "bzz-raw://88978b75c812418685b9a1a80baacfce365d6c458aa80816bac83cc6829b4c7c",
          "dweb:/ipfs/Qmd2Ub5pmmMF1uD6YMsa87nLBtbAee7hajanJh2U4D5NVz"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/policies/PriceConfig.sol",
    "id": 51018,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "GoerliDaoPriceConfig": [
        51017
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "Module": [
        28577
      ],
      "PRICEv1": [
        39576
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "RolesConsumer": [
        40599
      ],
      "TargetNotAContract": [
        28366
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5479:113",
    "nodes": [
      {
        "id": 50771,
        "nodeType": "PragmaDirective",
        "src": "37:23:113",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 50773,
        "nodeType": "ImportDirective",
        "src": "62:63:113",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51018,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50772,
              "name": "RolesConsumer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40599,
              "src": "70:13:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50775,
        "nodeType": "ImportDirective",
        "src": "126:51:113",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51018,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50774,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "134:7:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50777,
        "nodeType": "ImportDirective",
        "src": "178:51:113",
        "nodes": [],
        "absolutePath": "src/modules/PRICE/PRICE.v1.sol",
        "file": "modules/PRICE/PRICE.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51018,
        "sourceUnit": 39577,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50776,
              "name": "PRICEv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39576,
              "src": "186:7:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50778,
        "nodeType": "ImportDirective",
        "src": "231:24:113",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51018,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51017,
        "nodeType": "ContractDefinition",
        "src": "257:5258:113",
        "nodes": [
          {
            "id": 50785,
            "nodeType": "VariableDeclaration",
            "src": "356:22:113",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "373:5:113",
            "scope": 51017,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PRICEv1_$39576",
              "typeString": "contract PRICEv1"
            },
            "typeName": {
              "id": 50784,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50783,
                "name": "PRICEv1",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39576,
                "src": "356:7:113"
              },
              "referencedDeclaration": 39576,
              "src": "356:7:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                "typeString": "contract PRICEv1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50795,
            "nodeType": "FunctionDefinition",
            "src": "689:46:113",
            "nodes": [],
            "body": {
              "id": 50794,
              "nodeType": "Block",
              "src": "733:2:113",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 50791,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50788,
                    "src": "724:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 50792,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50790,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28659,
                  "src": "717:6:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "717:15:113"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50788,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "708:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50795,
                  "src": "701:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29497",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 50787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50786,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29497,
                      "src": "701:6:113"
                    },
                    "referencedDeclaration": 29497,
                    "src": "701:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:16:113"
            },
            "returnParameters": {
              "id": 50793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50849,
            "nodeType": "FunctionDefinition",
            "src": "741:352:113",
            "nodes": [],
            "body": {
              "id": 50848,
              "nodeType": "Block",
              "src": "832:261:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50803,
                      "name": "dependencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50801,
                      "src": "842:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 50808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "871:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 50807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "857:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (Keycode[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 50805,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 50804,
                              "name": "Keycode",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28362,
                              "src": "861:7:113"
                            },
                            "referencedDeclaration": 28362,
                            "src": "861:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                              "typeString": "Keycode"
                            }
                          },
                          "id": 50806,
                          "nodeType": "ArrayTypeName",
                          "src": "861:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_storage_ptr",
                            "typeString": "Keycode[]"
                          }
                        }
                      },
                      "id": 50809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "857:16:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "src": "842:31:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                      "typeString": "Keycode[] memory"
                    }
                  },
                  "id": 50811,
                  "nodeType": "ExpressionStatement",
                  "src": "842:31:113"
                },
                {
                  "expression": {
                    "id": 50818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50812,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50801,
                        "src": "883:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 50814,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "896:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "883:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5052494345",
                          "id": 50816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "911:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          },
                          "value": "PRICE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          }
                        ],
                        "id": 50815,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28385,
                        "src": "901:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 50817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "901:18:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "883:36:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 50819,
                  "nodeType": "ExpressionStatement",
                  "src": "883:36:113"
                },
                {
                  "expression": {
                    "id": 50826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50820,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50801,
                        "src": "929:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 50822,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 50821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "942:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "929:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "524f4c4553",
                          "id": 50824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "957:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          },
                          "value": "ROLES"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          }
                        ],
                        "id": 50823,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28385,
                        "src": "947:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 50825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "947:18:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "929:36:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 50827,
                  "nodeType": "ExpressionStatement",
                  "src": "929:36:113"
                },
                {
                  "expression": {
                    "id": 50836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50828,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50785,
                      "src": "976:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39576",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 50831,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50801,
                                "src": "1009:12:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 50833,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 50832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1022:1:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1009:15:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 50830,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28640,
                            "src": "992:16:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28362_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 50834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "992:33:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50829,
                        "name": "PRICEv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39576,
                        "src": "984:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PRICEv1_$39576_$",
                          "typeString": "type(contract PRICEv1)"
                        }
                      },
                      "id": 50835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "984:42:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39576",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "src": "976:50:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRICEv1_$39576",
                      "typeString": "contract PRICEv1"
                    }
                  },
                  "id": 50837,
                  "nodeType": "ExpressionStatement",
                  "src": "976:50:113"
                },
                {
                  "expression": {
                    "id": 50846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50838,
                      "name": "ROLES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40584,
                      "src": "1036:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40870",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 50841,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50801,
                                "src": "1069:12:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 50843,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 50842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1082:1:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1069:15:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 50840,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28640,
                            "src": "1052:16:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28362_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 50844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1052:33:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50839,
                        "name": "ROLESv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40870,
                        "src": "1044:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                          "typeString": "type(contract ROLESv1)"
                        }
                      },
                      "id": 50845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1044:42:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40870",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "src": "1036:50:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ROLESv1_$40870",
                      "typeString": "contract ROLESv1"
                    }
                  },
                  "id": 50847,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:50:113"
                }
              ]
            },
            "baseFunctions": [
              28649
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "750:21:113",
            "overrides": {
              "id": 50797,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "783:8:113"
            },
            "parameters": {
              "id": 50796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:2:113"
            },
            "returnParameters": {
              "id": 50802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50801,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "818:12:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50849,
                  "src": "801:29:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50799,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50798,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28362,
                        "src": "801:7:113"
                      },
                      "referencedDeclaration": 28362,
                      "src": "801:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 50800,
                    "nodeType": "ArrayTypeName",
                    "src": "801:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:31:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50929,
            "nodeType": "FunctionDefinition",
            "src": "1099:692:113",
            "nodes": [],
            "body": {
              "id": 50928,
              "nodeType": "Block",
              "src": "1231:560:113",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50859,
                      "mutability": "mutable",
                      "name": "PRICE_KEYCODE",
                      "nameLocation": "1249:13:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 50928,
                      "src": "1241:21:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      },
                      "typeName": {
                        "id": 50858,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50857,
                          "name": "Keycode",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28362,
                          "src": "1241:7:113"
                        },
                        "referencedDeclaration": 28362,
                        "src": "1241:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                          "typeString": "Keycode"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50863,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50860,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "1265:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "KEYCODE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28560,
                      "src": "1265:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                        "typeString": "function () pure external returns (Keycode)"
                      }
                    },
                    "id": 50862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:15:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1241:39:113"
                },
                {
                  "expression": {
                    "id": 50871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50864,
                      "name": "permissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50855,
                      "src": "1291:11:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 50869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 50868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1305:17:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Permissions memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 50866,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 50865,
                              "name": "Permissions",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28360,
                              "src": "1309:11:113"
                            },
                            "referencedDeclaration": 28360,
                            "src": "1309:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Permissions_$28360_storage_ptr",
                              "typeString": "struct Permissions"
                            }
                          },
                          "id": 50867,
                          "nodeType": "ArrayTypeName",
                          "src": "1309:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_storage_$dyn_storage_ptr",
                            "typeString": "struct Permissions[]"
                          }
                        }
                      },
                      "id": 50870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:20:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "src": "1291:34:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Permissions memory[] memory"
                    }
                  },
                  "id": 50872,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:34:113"
                },
                {
                  "expression": {
                    "id": 50882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50873,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50855,
                        "src": "1335:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50875,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1347:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1335:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50877,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50859,
                          "src": "1364:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50878,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50785,
                              "src": "1379:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39525,
                            "src": "1379:16:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256[] memory,uint48) external"
                            }
                          },
                          "id": 50880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1379:25:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50876,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "1352:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1352:53:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1335:70:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50883,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:70:113"
                },
                {
                  "expression": {
                    "id": 50893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50884,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50855,
                        "src": "1415:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50886,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 50885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1415:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50888,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50859,
                          "src": "1444:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50889,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50785,
                              "src": "1459:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeMovingAverageDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39531,
                            "src": "1459:33:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                              "typeString": "function (uint48) external"
                            }
                          },
                          "id": 50891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1459:42:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50887,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "1432:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1432:70:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1415:87:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50894,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:87:113"
                },
                {
                  "expression": {
                    "id": 50904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50895,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50855,
                        "src": "1512:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50897,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 50896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1524:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1512:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50899,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50859,
                          "src": "1541:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50900,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50785,
                              "src": "1556:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeObservationFrequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39537,
                            "src": "1556:32:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                              "typeString": "function (uint48) external"
                            }
                          },
                          "id": 50902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1556:41:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50898,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "1529:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1529:69:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1512:86:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50905,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:86:113"
                },
                {
                  "expression": {
                    "id": 50915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50906,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50855,
                        "src": "1608:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50908,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 50907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1608:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50910,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50859,
                          "src": "1637:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50911,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50785,
                              "src": "1652:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeUpdateThresholds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39545,
                            "src": "1652:28:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$_t_uint48_$returns$__$",
                              "typeString": "function (uint48,uint48) external"
                            }
                          },
                          "id": 50913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1652:37:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50909,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "1625:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1625:65:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1608:82:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50916,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:82:113"
                },
                {
                  "expression": {
                    "id": 50926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50917,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50855,
                        "src": "1700:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50919,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 50918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1700:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50921,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50859,
                          "src": "1729:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50922,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50785,
                              "src": "1744:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39576",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeMinimumTargetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39551,
                            "src": "1744:30:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 50924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1744:39:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50920,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28360,
                        "src": "1717:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28360_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1717:67:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1700:84:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28360_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50927,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:84:113"
                }
              ]
            },
            "baseFunctions": [
              28658
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1108:18:113",
            "overrides": {
              "id": 50851,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1167:8:113"
            },
            "parameters": {
              "id": 50850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:113"
            },
            "returnParameters": {
              "id": 50856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50855,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "1214:11:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50929,
                  "src": "1193:32:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50853,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50852,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28360,
                        "src": "1193:11:113"
                      },
                      "referencedDeclaration": 28360,
                      "src": "1193:11:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 50854,
                    "nodeType": "ArrayTypeName",
                    "src": "1193:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:34:113"
            },
            "scope": 51017,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50949,
            "nodeType": "FunctionDefinition",
            "src": "2717:214:113",
            "nodes": [],
            "body": {
              "id": 50948,
              "nodeType": "Block",
              "src": "2856:75:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50944,
                        "name": "startObservations_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50933,
                        "src": "2883:18:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 50945,
                        "name": "lastObservationTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50935,
                        "src": "2903:20:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50941,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "2866:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39525,
                      "src": "2866:16:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256[] memory,uint48) external"
                      }
                    },
                    "id": 50946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:58:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50947,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:58:113"
                }
              ]
            },
            "documentation": {
              "id": 50930,
              "nodeType": "StructuredDocumentation",
              "src": "2101:611:113",
              "text": "@notice                     Initialize the price module\n @notice                     Access restricted to approved policies\n @param startObservations_   Array of observations to initialize the moving average with. Must be of length numObservations.\n @param lastObservationTime_ Unix timestamp of last observation being provided (in seconds).\n @dev This function must be called after the Price module is deployed to activate it and after updating the observationFrequency\n      or movingAverageDuration (in certain cases) in order for the Price module to function properly."
            },
            "functionSelector": "902a35b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2837:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50939,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50937,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "2828:8:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:23:113"
              }
            ],
            "name": "initialize",
            "nameLocation": "2726:10:113",
            "parameters": {
              "id": 50936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50933,
                  "mutability": "mutable",
                  "name": "startObservations_",
                  "nameLocation": "2754:18:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50949,
                  "src": "2737:35:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50931,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2737:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50932,
                    "nodeType": "ArrayTypeName",
                    "src": "2737:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50935,
                  "mutability": "mutable",
                  "name": "lastObservationTime_",
                  "nameLocation": "2781:20:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50949,
                  "src": "2774:27:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50934,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2736:66:113"
            },
            "returnParameters": {
              "id": 50940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2856:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50965,
            "nodeType": "FunctionDefinition",
            "src": "3525:195:113",
            "nodes": [],
            "body": {
              "id": 50964,
              "nodeType": "Block",
              "src": "3646:74:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50961,
                        "name": "movingAverageDuration_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50952,
                        "src": "3690:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50958,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "3656:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeMovingAverageDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39531,
                      "src": "3656:33:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                        "typeString": "function (uint48) external"
                      }
                    },
                    "id": 50962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:57:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50963,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:57:113"
                }
              ]
            },
            "documentation": {
              "id": 50950,
              "nodeType": "StructuredDocumentation",
              "src": "2937:583:113",
              "text": "@notice                         Change the moving average window (duration)\n @param movingAverageDuration_   Moving average duration in seconds, must be a multiple of observation frequency\n @dev Setting the window to a larger number of observations than the current window will clear\n      the data in the current window and require the initialize function to be called again.\n      Ensure that you have saved the existing data and can re-populate before calling this\n      function with a number of observations larger than have been recorded."
            },
            "functionSelector": "8a157337",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3627:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50954,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "3618:8:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "3618:23:113"
              }
            ],
            "name": "changeMovingAverageDuration",
            "nameLocation": "3534:27:113",
            "parameters": {
              "id": 50953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50952,
                  "mutability": "mutable",
                  "name": "movingAverageDuration_",
                  "nameLocation": "3569:22:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50965,
                  "src": "3562:29:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50951,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3561:31:113"
            },
            "returnParameters": {
              "id": 50957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50981,
            "nodeType": "FunctionDefinition",
            "src": "4226:191:113",
            "nodes": [],
            "body": {
              "id": 50980,
              "nodeType": "Block",
              "src": "4345:72:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50977,
                        "name": "observationFrequency_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50968,
                        "src": "4388:21:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50974,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "4355:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeObservationFrequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39537,
                      "src": "4355:32:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                        "typeString": "function (uint48) external"
                      }
                    },
                    "id": 50978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:55:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50979,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:55:113"
                }
              ]
            },
            "documentation": {
              "id": 50966,
              "nodeType": "StructuredDocumentation",
              "src": "3726:495:113",
              "text": "@notice   Change the observation frequency of the moving average (i.e. how often a new observation is taken)\n @param    observationFrequency_   Observation frequency in seconds, must be a divisor of the moving average duration\n @dev      Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.\n           Ensure that you have saved the existing data and/or can re-populate before calling this function."
            },
            "functionSelector": "7d4dce76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4326:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50972,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50970,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "4317:8:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "4317:23:113"
              }
            ],
            "name": "changeObservationFrequency",
            "nameLocation": "4235:26:113",
            "parameters": {
              "id": 50969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50968,
                  "mutability": "mutable",
                  "name": "observationFrequency_",
                  "nameLocation": "4269:21:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 50981,
                  "src": "4262:28:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50967,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:30:113"
            },
            "returnParameters": {
              "id": 50973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4345:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51000,
            "nodeType": "FunctionDefinition",
            "src": "4806:250:113",
            "nodes": [],
            "body": {
              "id": 50999,
              "nodeType": "Block",
              "src": "4959:97:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50995,
                        "name": "ohmEthUpdateThreshold_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50984,
                        "src": "4998:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "id": 50996,
                        "name": "reserveEthUpdateThreshold_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50986,
                        "src": "5022:26:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50992,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "4969:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeUpdateThresholds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39545,
                      "src": "4969:28:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$_t_uint48_$returns$__$",
                        "typeString": "function (uint48,uint48) external"
                      }
                    },
                    "id": 50997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4969:80:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50998,
                  "nodeType": "ExpressionStatement",
                  "src": "4969:80:113"
                }
              ]
            },
            "documentation": {
              "id": 50982,
              "nodeType": "StructuredDocumentation",
              "src": "4423:378:113",
              "text": "@notice   Change the update thresholds for the price feeds\n @param    ohmEthUpdateThreshold_ - Maximum allowed time between OHM/ETH price feed updates\n @param    reserveEthUpdateThreshold_ - Maximum allowed time between Reserve/ETH price feed updates\n @dev      The update thresholds should be set based on the update threshold of the chainlink oracles."
            },
            "functionSelector": "0fbe3476",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4944:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50990,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50988,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "4935:8:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "4935:23:113"
              }
            ],
            "name": "changeUpdateThresholds",
            "nameLocation": "4815:22:113",
            "parameters": {
              "id": 50987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50984,
                  "mutability": "mutable",
                  "name": "ohmEthUpdateThreshold_",
                  "nameLocation": "4854:22:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 51000,
                  "src": "4847:29:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50983,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4847:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50986,
                  "mutability": "mutable",
                  "name": "reserveEthUpdateThreshold_",
                  "nameLocation": "4893:26:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 51000,
                  "src": "4886:33:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50985,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4886:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4837:88:113"
            },
            "returnParameters": {
              "id": 50991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51016,
            "nodeType": "FunctionDefinition",
            "src": "5329:184:113",
            "nodes": [],
            "body": {
              "id": 51015,
              "nodeType": "Block",
              "src": "5445:68:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51012,
                        "name": "minimumTargetPrice_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51003,
                        "src": "5486:19:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51009,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50785,
                        "src": "5455:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39576",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 51011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeMinimumTargetPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39551,
                      "src": "5455:30:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 51013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5455:51:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51014,
                  "nodeType": "ExpressionStatement",
                  "src": "5455:51:113"
                }
              ]
            },
            "documentation": {
              "id": 51001,
              "nodeType": "StructuredDocumentation",
              "src": "5062:262:113",
              "text": "@notice   Change the minimum target price\n @param    minimumTargetPrice_ - Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM\n @dev      The minimum target price should be set based on liquid backing of OHM."
            },
            "functionSelector": "57ee9383",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 51006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5426:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 51007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51005,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40598,
                  "src": "5417:8:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "5417:23:113"
              }
            ],
            "name": "changeMinimumTargetPrice",
            "nameLocation": "5338:24:113",
            "parameters": {
              "id": 51004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51003,
                  "mutability": "mutable",
                  "name": "minimumTargetPrice_",
                  "nameLocation": "5371:19:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 51016,
                  "src": "5363:27:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5362:29:113"
            },
            "returnParameters": {
              "id": 51008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5445:0:113"
            },
            "scope": 51017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50779,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28659,
              "src": "290:6:113"
            },
            "id": 50780,
            "nodeType": "InheritanceSpecifier",
            "src": "290:6:113"
          },
          {
            "baseName": {
              "id": 50781,
              "name": "RolesConsumer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40599,
              "src": "298:13:113"
            },
            "id": 50782,
            "nodeType": "InheritanceSpecifier",
            "src": "298:13:113"
          }
        ],
        "canonicalName": "GoerliDaoPriceConfig",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51017,
          40599,
          28659,
          28512
        ],
        "name": "GoerliDaoPriceConfig",
        "nameLocation": "266:20:113",
        "scope": 51018,
        "usedErrors": [
          28465,
          28585
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 113
}