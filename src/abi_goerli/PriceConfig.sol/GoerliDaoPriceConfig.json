{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Keycode",
          "name": "keycode_",
          "type": "bytes5"
        }
      ],
      "name": "Policy_ModuleDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ROLES",
      "outputs": [
        {
          "internalType": "contract ROLESv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumTargetPrice_",
          "type": "uint256"
        }
      ],
      "name": "changeMinimumTargetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "movingAverageDuration_",
          "type": "uint48"
        }
      ],
      "name": "changeMovingAverageDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "observationFrequency_",
          "type": "uint48"
        }
      ],
      "name": "changeObservationFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "ohmEthUpdateThreshold_",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "reserveEthUpdateThreshold_",
          "type": "uint48"
        }
      ],
      "name": "changeUpdateThresholds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "startObservations_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint48",
          "name": "lastObservationTime_",
          "type": "uint48"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "permissions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051610e35380380610e3583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610da2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80630fbe34761461009e57806322f3e2d4146100b35780634657b36c146100d057806357ee9383146100e35780635924be70146100f65780637d4dce761461010b5780638a1573371461011e578063902a35b914610131578063923cb952146101445780639459b87514610164578063d4aae0c414610179575b600080fd5b6100b16100ac366004610a21565b61018c565b005b6100bb610271565b60405190151581526020015b60405180910390f35b6100b16100de366004610a6c565b6102e8565b6100b16100f1366004610a90565b610340565b6100fe610415565b6040516100c79190610aa9565b6100b1610119366004610b0c565b610650565b6100b161012c366004610b0c565b6106fa565b6100b161013f366004610b3d565b6107a4565b600154610157906001600160a01b031681565b6040516100c79190610c0c565b61016c610848565b6040516100c79190610c20565b600054610157906001600160a01b031681565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906101cc9084903390600401610c6e565b600060405180830381600087803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b50506002546040516307df1a3b60e11b815265ffffffffffff8088166004830152861660248201526001600160a01b039091169250630fbe347691506044015b600060405180830381600087803b15801561025457600080fd5b505af1158015610268573d6000803e3d6000fd5b50505050505050565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906102a2903090600401610c0c565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610c85565b905090565b6000546001600160a01b0316331461031e573360405163053e900f60e21b81526004016103159190610c0c565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906103809084903390600401610c6e565b600060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b50506002546040516357ee938360e01b8152600481018690526001600160a01b0390911692506357ee938391506024015b600060405180830381600087803b1580156103f957600080fd5b505af115801561040d573d6000803e3d6000fd5b505050505050565b60606000600260009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610ca7565b60408051600580825260c08201909252919250816020015b60408051808201909152600080825260208201528152602001906001900390816104a8575050604080518082019091526001600160d81b03198316815263902a35b960e01b6020820152815191935090839060009061050957610509610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001638a15733760e01b6001600160e01b0319168152508260018151811061055757610557610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001637d4dce7660e01b6001600160e01b031916815250826002815181106105a5576105a5610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001630fbe347660e01b6001600160e01b031916815250826003815181106105f3576105f3610cd1565b60200260200101819052506040518060400160405280826001600160d81b03191681526020016357ee938360e01b6001600160e01b0319168152508260048151811061064157610641610cd1565b60200260200101819052505090565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906106909084903390600401610c6e565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b5050600254604051633ea6e73b60e11b815265ffffffffffff861660048201526001600160a01b039091169250637d4dce7691506024016103df565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c59061073a9084903390600401610c6e565b600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b5050600254604051638a15733760e01b815265ffffffffffff861660048201526001600160a01b039091169250638a15733791506024016103df565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906107e49084903390600401610c6e565b600060405180830381600087803b1580156107fe57600080fd5b505af1158015610812573d6000803e3d6000fd5b505060025460405163902a35b960e01b81526001600160a01b03909116925063902a35b9915061023a9086908690600401610ce7565b604080516002808252606080830184529260208301908036833701905050905064505249434560d81b8160008151811061088457610884610cd1565b6001600160d81b0319909216602092830291909101909101526108ac64524f4c455360d81b90565b816001815181106108bf576108bf610cd1565b60200260200101906001600160d81b03191690816001600160d81b03191681525050610904816000815181106108f7576108f7610cd1565b6020026020010151610963565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610940816001815181106108f7576108f7610cd1565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b490610994908690600401610d3a565b602060405180830381865afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610d4f565b90506001600160a01b038116610a005782604051635c3fa9cd60e01b81526004016103159190610d3a565b92915050565b803565ffffffffffff81168114610a1c57600080fd5b919050565b60008060408385031215610a3457600080fd5b610a3d83610a06565b9150610a4b60208401610a06565b90509250929050565b6001600160a01b0381168114610a6957600080fd5b50565b600060208284031215610a7e57600080fd5b8135610a8981610a54565b9392505050565b600060208284031215610aa257600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610aff57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610ac6565b5091979650505050505050565b600060208284031215610b1e57600080fd5b610a8982610a06565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610b5057600080fd5b82356001600160401b0380821115610b6757600080fd5b818501915085601f830112610b7b57600080fd5b8135602082821115610b8f57610b8f610b27565b8160051b604051601f19603f83011681018181108682111715610bb457610bb4610b27565b604052928352818301935084810182019289841115610bd257600080fd5b948201945b83861015610bf057853585529482019493820193610bd7565b9650610bff9050878201610a06565b9450505050509250929050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610c625783516001600160d81b03191683529284019291840191600101610c3c565b50909695505050505050565b9182526001600160a01b0316602082015260400190565b600060208284031215610c9757600080fd5b81518015158114610a8957600080fd5b600060208284031215610cb957600080fd5b81516001600160d81b031981168114610a8957600080fd5b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015610d2057815184529284019290840190600101610d04565b50505065ffffffffffff9490941692019190915250919050565b6001600160d81b031991909116815260200190565b600060208284031215610d6157600080fd5b8151610a8981610a5456fea26469706673582212205df094dce63cb3f68cf622ce11e22c1cbb2f281ba7f63ad9abe963749147584864736f6c634300080f0033",
    "sourceMap": "257:5258:114:-:0;;;689:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4341:6:55;:16;;-1:-1:-1;;;;;;4341:16:55;-1:-1:-1;;;;;4341:16:55;;;;;;;;;;257:5258:114;;14:306:184;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:184;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:184:o;:::-;257:5258:114;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c80630fbe34761461009e57806322f3e2d4146100b35780634657b36c146100d057806357ee9383146100e35780635924be70146100f65780637d4dce761461010b5780638a1573371461011e578063902a35b914610131578063923cb952146101445780639459b87514610164578063d4aae0c414610179575b600080fd5b6100b16100ac366004610a21565b61018c565b005b6100bb610271565b60405190151581526020015b60405180910390f35b6100b16100de366004610a6c565b6102e8565b6100b16100f1366004610a90565b610340565b6100fe610415565b6040516100c79190610aa9565b6100b1610119366004610b0c565b610650565b6100b161012c366004610b0c565b6106fa565b6100b161013f366004610b3d565b6107a4565b600154610157906001600160a01b031681565b6040516100c79190610c0c565b61016c610848565b6040516100c79190610c20565b600054610157906001600160a01b031681565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906101cc9084903390600401610c6e565b600060405180830381600087803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b50506002546040516307df1a3b60e11b815265ffffffffffff8088166004830152861660248201526001600160a01b039091169250630fbe347691506044015b600060405180830381600087803b15801561025457600080fd5b505af1158015610268573d6000803e3d6000fd5b50505050505050565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906102a2903090600401610c0c565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610c85565b905090565b6000546001600160a01b0316331461031e573360405163053e900f60e21b81526004016103159190610c0c565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906103809084903390600401610c6e565b600060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b50506002546040516357ee938360e01b8152600481018690526001600160a01b0390911692506357ee938391506024015b600060405180830381600087803b1580156103f957600080fd5b505af115801561040d573d6000803e3d6000fd5b505050505050565b60606000600260009054906101000a90046001600160a01b03166001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610ca7565b60408051600580825260c08201909252919250816020015b60408051808201909152600080825260208201528152602001906001900390816104a8575050604080518082019091526001600160d81b03198316815263902a35b960e01b6020820152815191935090839060009061050957610509610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001638a15733760e01b6001600160e01b0319168152508260018151811061055757610557610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001637d4dce7660e01b6001600160e01b031916815250826002815181106105a5576105a5610cd1565b60200260200101819052506040518060400160405280826001600160d81b0319168152602001630fbe347660e01b6001600160e01b031916815250826003815181106105f3576105f3610cd1565b60200260200101819052506040518060400160405280826001600160d81b03191681526020016357ee938360e01b6001600160e01b0319168152508260048151811061064157610641610cd1565b60200260200101819052505090565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906106909084903390600401610c6e565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b5050600254604051633ea6e73b60e11b815265ffffffffffff861660048201526001600160a01b039091169250637d4dce7691506024016103df565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c59061073a9084903390600401610c6e565b600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b5050600254604051638a15733760e01b815265ffffffffffff861660048201526001600160a01b039091169250638a15733791506024016103df565b60015460405163d09a20c560e01b81526a383934b1b2afb0b236b4b760a91b916001600160a01b03169063d09a20c5906107e49084903390600401610c6e565b600060405180830381600087803b1580156107fe57600080fd5b505af1158015610812573d6000803e3d6000fd5b505060025460405163902a35b960e01b81526001600160a01b03909116925063902a35b9915061023a9086908690600401610ce7565b604080516002808252606080830184529260208301908036833701905050905064505249434560d81b8160008151811061088457610884610cd1565b6001600160d81b0319909216602092830291909101909101526108ac64524f4c455360d81b90565b816001815181106108bf576108bf610cd1565b60200260200101906001600160d81b03191690816001600160d81b03191681525050610904816000815181106108f7576108f7610cd1565b6020026020010151610963565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610940816001815181106108f7576108f7610cd1565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b490610994908690600401610d3a565b602060405180830381865afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610d4f565b90506001600160a01b038116610a005782604051635c3fa9cd60e01b81526004016103159190610d3a565b92915050565b803565ffffffffffff81168114610a1c57600080fd5b919050565b60008060408385031215610a3457600080fd5b610a3d83610a06565b9150610a4b60208401610a06565b90509250929050565b6001600160a01b0381168114610a6957600080fd5b50565b600060208284031215610a7e57600080fd5b8135610a8981610a54565b9392505050565b600060208284031215610aa257600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610aff57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610ac6565b5091979650505050505050565b600060208284031215610b1e57600080fd5b610a8982610a06565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610b5057600080fd5b82356001600160401b0380821115610b6757600080fd5b818501915085601f830112610b7b57600080fd5b8135602082821115610b8f57610b8f610b27565b8160051b604051601f19603f83011681018181108682111715610bb457610bb4610b27565b604052928352818301935084810182019289841115610bd257600080fd5b948201945b83861015610bf057853585529482019493820193610bd7565b9650610bff9050878201610a06565b9450505050509250929050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015610c625783516001600160d81b03191683529284019291840191600101610c3c565b50909695505050505050565b9182526001600160a01b0316602082015260400190565b600060208284031215610c9757600080fd5b81518015158114610a8957600080fd5b600060208284031215610cb957600080fd5b81516001600160d81b031981168114610a8957600080fd5b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015610d2057815184529284019290840190600101610d04565b50505065ffffffffffff9490941692019190915250919050565b6001600160d81b031991909116815260200190565b600060208284031215610d6157600080fd5b8151610a8981610a5456fea26469706673582212205df094dce63cb3f68cf622ce11e22c1cbb2f281ba7f63ad9abe963749147584864736f6c634300080f0033",
    "sourceMap": "257:5258:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4806:250;;;;;;:::i;:::-;;:::i;:::-;;6691:100:55;;;:::i;:::-;;;612:14:184;;605:22;587:41;;575:2;560:18;6691:100:55;;;;;;;;4652:97;;;;;;:::i;:::-;;:::i;5329:184:114:-;;;;;;:::i;:::-;;:::i;1099:692::-;;;:::i;:::-;;;;;;;:::i;4226:191::-;;;;;;:::i;:::-;;:::i;3525:195::-;;;;;;:::i;:::-;;:::i;2717:214::-;;;;;;:::i;:::-;;:::i;332:20:99:-;;;;;-1:-1:-1;;;;;332:20:99;;;;;;;;;;:::i;741:352:114:-;;;:::i;:::-;;;;;;;:::i;4276:20:55:-;;;;;-1:-1:-1;;;;;4276:20:55;;;4806:250:114;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4969:5:114::1;::::0;:80:::1;::::0;-1:-1:-1;;;4969:80:114;;5220:14:184;5261:15;;;4969:80:114::1;::::0;::::1;5243:34:184::0;5313:15;;5293:18;;;5286:43;-1:-1:-1;;;;;4969:5:114;;::::1;::::0;-1:-1:-1;4969:28:114::1;::::0;-1:-1:-1;5183:18:184;;4969:80:114::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4806:250:::0;;;:::o;6691:100:55:-;6734:4;6757:6;;:27;;-1:-1:-1;;;6757:27:55;;-1:-1:-1;;;;;6757:6:55;;;;:21;;:27;;6779:4;;6757:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6750:34;;6691:100;:::o;4652:97::-;4504:6;;-1:-1:-1;;;;;4504:6:55;4482:10;:29;4478:78;;4545:10;4520:36;;-1:-1:-1;;;4520:36:55;;;;;;;;:::i;:::-;;;;;;;;4478:78;4723:6:::1;:19:::0;;-1:-1:-1;;;;;;4723:19:55::1;-1:-1:-1::0;;;;;4723:19:55;;;::::1;::::0;;;::::1;::::0;;4652:97::o;5329:184:114:-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5455:5:114::1;::::0;:51:::1;::::0;-1:-1:-1;;;5455:51:114;;::::1;::::0;::::1;6200:25:184::0;;;-1:-1:-1;;;;;5455:5:114;;::::1;::::0;-1:-1:-1;5455:30:114::1;::::0;-1:-1:-1;6173:18:184;;5455:51:114::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5329:184:::0;;:::o;1099:692::-;1193:32;1241:21;1265:5;;;;;;;;;-1:-1:-1;;;;;1265:5:114;-1:-1:-1;;;;;1265:13:114;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1305:20;;;1323:1;1305:20;;;;;;;;;1241:39;;-1:-1:-1;1305:20:114;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1305:20:114;;;;;;;;;;;;-1:-1:-1;;1352:53:114;;;;;;;;;-1:-1:-1;;;;;;1352:53:114;;;;-1:-1:-1;;;1352:53:114;;;;1335:14;;;;-1:-1:-1;1352:53:114;1335:14;;-1:-1:-1;;1335:14:114;;;;:::i;:::-;;;;;;:70;;;;1432;;;;;;;;1444:13;-1:-1:-1;;;;;1432:70:114;;;;;;1459:42;;;-1:-1:-1;;;;;1432:70:114;;;;;1415:11;1427:1;1415:14;;;;;;;;:::i;:::-;;;;;;:87;;;;1529:69;;;;;;;;1541:13;-1:-1:-1;;;;;1529:69:114;;;;;;1556:41;;;-1:-1:-1;;;;;1529:69:114;;;;;1512:11;1524:1;1512:14;;;;;;;;:::i;:::-;;;;;;:86;;;;1625:65;;;;;;;;1637:13;-1:-1:-1;;;;;1625:65:114;;;;;;1652:37;;;-1:-1:-1;;;;;1625:65:114;;;;;1608:11;1620:1;1608:14;;;;;;;;:::i;:::-;;;;;;:82;;;;1717:67;;;;;;;;1729:13;-1:-1:-1;;;;;1717:67:114;;;;;;1744:39;;;-1:-1:-1;;;;;1717:67:114;;;;;1700:11;1712:1;1700:14;;;;;;;;:::i;:::-;;;;;;:84;;;;1231:560;1099:692;:::o;4226:191::-;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4355:5:114::1;::::0;:55:::1;::::0;-1:-1:-1;;;4355:55:114;;6869:14:184;6857:27;;4355:55:114::1;::::0;::::1;6839:46:184::0;-1:-1:-1;;;;;4355:5:114;;::::1;::::0;-1:-1:-1;4355:32:114::1;::::0;-1:-1:-1;6812:18:184;;4355:55:114::1;6695:196:184::0;3525:195:114;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3656:5:114::1;::::0;:57:::1;::::0;-1:-1:-1;;;3656:57:114;;6869:14:184;6857:27;;3656:57:114::1;::::0;::::1;6839:46:184::0;-1:-1:-1;;;;;3656:5:114;;::::1;::::0;-1:-1:-1;3656:33:114::1;::::0;-1:-1:-1;6812:18:184;;3656:57:114::1;6695:196:184::0;2717:214:114;405:5:99;;:36;;-1:-1:-1;;;405:36:99;;-1:-1:-1;;;361:100:99;-1:-1:-1;;;;;405:5:99;;:17;;:36;;361:100;;430:10;;405:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2866:5:114::1;::::0;:58:::1;::::0;-1:-1:-1;;;2866:58:114;;-1:-1:-1;;;;;2866:5:114;;::::1;::::0;-1:-1:-1;2866:16:114::1;::::0;-1:-1:-1;2866:58:114::1;::::0;2883:18;;2903:20;;2866:58:::1;;;:::i;741:352::-:0;857:16;;;871:1;857:16;;;801:29;857:16;;;;;801:29;857:16;;;;;;;;;;-1:-1:-1;;842:31:114;-1:-1:-1;;;;883:12:114;896:1;883:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;883:36:114;;;:15;;;;;;;;;;;:36;947:18;-1:-1:-1;;;3124:8:55;3039:97;947:18:114;929:12;942:1;929:15;;;;;;;;:::i;:::-;;;;;;:36;-1:-1:-1;;;;;929:36:114;;;;-1:-1:-1;;;;;929:36:114;;;;;;992:33;1009:12;1022:1;1009:15;;;;;;;;:::i;:::-;;;;;;;992:16;:33::i;:::-;976:5;;:50;;;;;-1:-1:-1;;;;;976:50:114;;;;;-1:-1:-1;;;;;976:50:114;;;;;;1052:33;1069:12;1082:1;1069:15;;;;;;;;:::i;1052:33::-;1036:5;:50;;-1:-1:-1;;;;;;1036:50:114;-1:-1:-1;;;;;1036:50:114;;;;;;;;;;741:352;:::o;6867:286:55:-;6934:7;6988:6;;:36;;-1:-1:-1;;;6988:36:55;;6934:7;;-1:-1:-1;;;;;6988:6:55;;:26;;:36;;7015:8;;6988:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6953:72;-1:-1:-1;;;;;;7039:30:55;;7035:78;;7104:8;7078:35;;-1:-1:-1;;;7078:35:55;;;;;;;;:::i;7035:78::-;7130:16;6867:286;-1:-1:-1;;6867:286:55:o;14:167:184:-;81:20;;141:14;130:26;;120:37;;110:65;;171:1;168;161:12;110:65;14:167;;;:::o;186:256::-;252:6;260;313:2;301:9;292:7;288:23;284:32;281:52;;;329:1;326;319:12;281:52;352:28;370:9;352:28;:::i;:::-;342:38;;399:37;432:2;421:9;417:18;399:37;:::i;:::-;389:47;;186:256;;;;;:::o;639:139::-;-1:-1:-1;;;;;722:31:184;;712:42;;702:70;;768:1;765;758:12;702:70;639:139;:::o;783:271::-;858:6;911:2;899:9;890:7;886:23;882:32;879:52;;;927:1;924;917:12;879:52;966:9;953:23;985:39;1018:5;985:39;:::i;:::-;1043:5;783:271;-1:-1:-1;;;783:271:184:o;1059:180::-;1118:6;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;-1:-1:-1;1210:23:184;;1059:180;-1:-1:-1;1059:180:184:o;1244:854::-;1475:2;1527:21;;;1597:13;;1500:18;;;1619:22;;;1446:4;;1475:2;1660;;1678:18;;;;1719:15;;;1446:4;1762:310;1776:6;1773:1;1770:13;1762:310;;;1835:13;;1877:9;;-1:-1:-1;;;;;;1873:38:184;1861:51;;1956:11;;1950:18;-1:-1:-1;;;;;;1946:45:184;1932:12;;;1925:67;2012:12;;;;2047:15;;;;1798:1;1791:9;1762:310;;;-1:-1:-1;2089:3:184;;1244:854;-1:-1:-1;;;;;;;1244:854:184:o;2103:184::-;2161:6;2214:2;2202:9;2193:7;2189:23;2185:32;2182:52;;;2230:1;2227;2220:12;2182:52;2253:28;2271:9;2253:28;:::i;2292:127::-;2353:10;2348:3;2344:20;2341:1;2334:31;2384:4;2381:1;2374:15;2408:4;2405:1;2398:15;2424:1189;2516:6;2524;2577:2;2565:9;2556:7;2552:23;2548:32;2545:52;;;2593:1;2590;2583:12;2545:52;2620:23;;-1:-1:-1;;;;;2692:14:184;;;2689:34;;;2719:1;2716;2709:12;2689:34;2757:6;2746:9;2742:22;2732:32;;2802:7;2795:4;2791:2;2787:13;2783:27;2773:55;;2824:1;2821;2814:12;2773:55;2860:2;2847:16;2882:4;2905:2;2901;2898:10;2895:36;;;2911:18;;:::i;:::-;2957:2;2954:1;2950:10;2989:2;2983:9;3052:2;3048:7;3043:2;3039;3035:11;3031:25;3023:6;3019:38;3107:6;3095:10;3092:22;3087:2;3075:10;3072:18;3069:46;3066:72;;;3118:18;;:::i;:::-;3154:2;3147:22;3204:18;;;3238:15;;;;-1:-1:-1;3280:11:184;;;3276:20;;;3308:19;;;3305:39;;;3340:1;3337;3330:12;3305:39;3364:11;;;;3384:142;3400:6;3395:3;3392:15;3384:142;;;3466:17;;3454:30;;3417:12;;;;3504;;;;3384:142;;;3545:6;-1:-1:-1;3570:37:184;;-1:-1:-1;3588:18:184;;;3570:37;:::i;:::-;3560:47;;;;;;2424:1189;;;;;:::o;3618:220::-;-1:-1:-1;;;;;3799:32:184;;;;3781:51;;3769:2;3754:18;;3618:220::o;3843:689::-;4042:2;4094:21;;;4164:13;;4067:18;;;4186:22;;;4013:4;;4042:2;4265:15;;;;4239:2;4224:18;;;4013:4;4308:198;4322:6;4319:1;4316:13;4308:198;;;4387:13;;-1:-1:-1;;;;;;4383:42:184;4371:55;;4481:15;;;;4446:12;;;;4344:1;4337:9;4308:198;;;-1:-1:-1;4523:3:184;;3843:689;-1:-1:-1;;;;;;3843:689:184:o;4761:274::-;4935:25;;;-1:-1:-1;;;;;4996:32:184;4991:2;4976:18;;4969:60;4923:2;4908:18;;4761:274::o;5564:277::-;5631:6;5684:2;5672:9;5663:7;5659:23;5655:32;5652:52;;;5700:1;5697;5690:12;5652:52;5732:9;5726:16;5785:5;5778:13;5771:21;5764:5;5761:32;5751:60;;5807:1;5804;5797:12;6236:322;6335:6;6388:2;6376:9;6367:7;6363:23;6359:32;6356:52;;;6404:1;6401;6394:12;6356:52;6430:16;;-1:-1:-1;;;;;;6475:34:184;;6465:45;;6455:73;;6524:1;6521;6514:12;6563:127;6624:10;6619:3;6615:20;6612:1;6605:31;6655:4;6652:1;6645:15;6679:4;6676:1;6669:15;6896:724;7112:2;7124:21;;;7194:13;;7097:18;;;7216:22;;;7064:4;;7291;;7269:2;7254:18;;;7318:15;;;7064:4;7361:169;7375:6;7372:1;7369:13;7361:169;;;7436:13;;7424:26;;7470:12;;;;7505:15;;;;7397:1;7390:9;7361:169;;;-1:-1:-1;;;7598:14:184;7586:27;;;;7566:18;;7559:55;;;;-1:-1:-1;7547:3:184;6896:724;-1:-1:-1;6896:724:184:o;7625:234::-;-1:-1:-1;;;;;;7817:35:184;;;;7799:54;;7787:2;7772:18;;7625:234::o;7864:275::-;7950:6;8003:2;7991:9;7982:7;7978:23;7974:32;7971:52;;;8019:1;8016;8009:12;7971:52;8051:9;8045:16;8070:39;8103:5;8070:39;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ROLES()": "923cb952",
    "changeKernel(address)": "4657b36c",
    "changeMinimumTargetPrice(uint256)": "57ee9383",
    "changeMovingAverageDuration(uint48)": "8a157337",
    "changeObservationFrequency(uint48)": "7d4dce76",
    "changeUpdateThresholds(uint48,uint48)": "0fbe3476",
    "configureDependencies()": "9459b875",
    "initialize(uint256[],uint48)": "902a35b9",
    "isActive()": "22f3e2d4",
    "kernel()": "d4aae0c4",
    "requestPermissions()": "5924be70"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"kernel_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Keycode\",\"name\":\"keycode_\",\"type\":\"bytes5\"}],\"name\":\"Policy_ModuleDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ROLES\",\"outputs\":[{\"internalType\":\"contract ROLESv1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumTargetPrice_\",\"type\":\"uint256\"}],\"name\":\"changeMinimumTargetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"movingAverageDuration_\",\"type\":\"uint48\"}],\"name\":\"changeMovingAverageDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"observationFrequency_\",\"type\":\"uint48\"}],\"name\":\"changeObservationFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"ohmEthUpdateThreshold_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"reserveEthUpdateThreshold_\",\"type\":\"uint48\"}],\"name\":\"changeUpdateThresholds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureDependencies\",\"outputs\":[{\"internalType\":\"Keycode[]\",\"name\":\"dependencies\",\"type\":\"bytes5[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"startObservations_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint48\",\"name\":\"lastObservationTime_\",\"type\":\"uint48\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"Keycode\",\"name\":\"keycode\",\"type\":\"bytes5\"},{\"internalType\":\"bytes4\",\"name\":\"funcSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct Permissions[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeMinimumTargetPrice(uint256)\":{\"details\":\"The minimum target price should be set based on liquid backing of OHM.\",\"params\":{\"minimumTargetPrice_\":\"- Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM\"}},\"changeMovingAverageDuration(uint48)\":{\"details\":\"Setting the window to a larger number of observations than the current window will clear      the data in the current window and require the initialize function to be called again.      Ensure that you have saved the existing data and can re-populate before calling this      function with a number of observations larger than have been recorded.\",\"params\":{\"movingAverageDuration_\":\"Moving average duration in seconds, must be a multiple of observation frequency\"}},\"changeObservationFrequency(uint48)\":{\"details\":\"Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.           Ensure that you have saved the existing data and/or can re-populate before calling this function.\",\"params\":{\"observationFrequency_\":\"Observation frequency in seconds, must be a divisor of the moving average duration\"}},\"changeUpdateThresholds(uint48,uint48)\":{\"details\":\"The update thresholds should be set based on the update threshold of the chainlink oracles.\",\"params\":{\"ohmEthUpdateThreshold_\":\"- Maximum allowed time between OHM/ETH price feed updates\",\"reserveEthUpdateThreshold_\":\"- Maximum allowed time between Reserve/ETH price feed updates\"}},\"configureDependencies()\":{\"returns\":{\"dependencies\":\"- Keycode array of module dependencies.\"}},\"initialize(uint256[],uint48)\":{\"details\":\"This function must be called after the Price module is deployed to activate it and after updating the observationFrequency      or movingAverageDuration (in certain cases) in order for the Price module to function properly.\",\"params\":{\"lastObservationTime_\":\"Unix timestamp of last observation being provided (in seconds).\",\"startObservations_\":\"Array of observations to initialize the moving average with. Must be of length numObservations.\"}},\"requestPermissions()\":{\"returns\":{\"permissions\":\"- Array of keycodes and function selectors for requested permissions.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"},\"changeMinimumTargetPrice(uint256)\":{\"notice\":\"Change the minimum target price\"},\"changeMovingAverageDuration(uint48)\":{\"notice\":\"Change the moving average window (duration)\"},\"changeObservationFrequency(uint48)\":{\"notice\":\"Change the observation frequency of the moving average (i.e. how often a new observation is taken)\"},\"changeUpdateThresholds(uint48,uint48)\":{\"notice\":\"Change the update thresholds for the price feeds\"},\"configureDependencies()\":{\"notice\":\"Define module dependencies for this policy.\"},\"initialize(uint256[],uint48)\":{\"notice\":\"Initialize the price moduleAccess restricted to approved policies\"},\"isActive()\":{\"notice\":\"Easily accessible indicator for if a policy is activated or not.\"},\"requestPermissions()\":{\"notice\":\"Function called by kernel to set module function permissions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/policies/PriceConfig.sol\":\"GoerliDaoPriceConfig\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/PriceConfig.sol\":{\"keccak256\":\"0x1ee1e34409748580cabbe352341d308bfc18f6a3b37959289005bf9c187039cd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://88978b75c812418685b9a1a80baacfce365d6c458aa80816bac83cc6829b4c7c\",\"dweb:/ipfs/Qmd2Ub5pmmMF1uD6YMsa87nLBtbAee7hajanJh2U4D5NVz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "kernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "Keycode",
              "name": "keycode_",
              "type": "bytes5"
            }
          ],
          "type": "error",
          "name": "Policy_ModuleDoesNotExist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROLES",
          "outputs": [
            {
              "internalType": "contract ROLESv1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimumTargetPrice_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMinimumTargetPrice"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "movingAverageDuration_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeMovingAverageDuration"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "observationFrequency_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeObservationFrequency"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "ohmEthUpdateThreshold_",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "reserveEthUpdateThreshold_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeUpdateThresholds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureDependencies",
          "outputs": [
            {
              "internalType": "Keycode[]",
              "name": "dependencies",
              "type": "bytes5[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "startObservations_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint48",
              "name": "lastObservationTime_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestPermissions",
          "outputs": [
            {
              "internalType": "struct Permissions[]",
              "name": "permissions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "Keycode",
                  "name": "keycode",
                  "type": "bytes5"
                },
                {
                  "internalType": "bytes4",
                  "name": "funcSelector",
                  "type": "bytes4"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "changeMinimumTargetPrice(uint256)": {
            "details": "The minimum target price should be set based on liquid backing of OHM.",
            "params": {
              "minimumTargetPrice_": "- Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM"
            }
          },
          "changeMovingAverageDuration(uint48)": {
            "details": "Setting the window to a larger number of observations than the current window will clear      the data in the current window and require the initialize function to be called again.      Ensure that you have saved the existing data and can re-populate before calling this      function with a number of observations larger than have been recorded.",
            "params": {
              "movingAverageDuration_": "Moving average duration in seconds, must be a multiple of observation frequency"
            }
          },
          "changeObservationFrequency(uint48)": {
            "details": "Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.           Ensure that you have saved the existing data and/or can re-populate before calling this function.",
            "params": {
              "observationFrequency_": "Observation frequency in seconds, must be a divisor of the moving average duration"
            }
          },
          "changeUpdateThresholds(uint48,uint48)": {
            "details": "The update thresholds should be set based on the update threshold of the chainlink oracles.",
            "params": {
              "ohmEthUpdateThreshold_": "- Maximum allowed time between OHM/ETH price feed updates",
              "reserveEthUpdateThreshold_": "- Maximum allowed time between Reserve/ETH price feed updates"
            }
          },
          "configureDependencies()": {
            "returns": {
              "dependencies": "- Keycode array of module dependencies."
            }
          },
          "initialize(uint256[],uint48)": {
            "details": "This function must be called after the Price module is deployed to activate it and after updating the observationFrequency      or movingAverageDuration (in certain cases) in order for the Price module to function properly.",
            "params": {
              "lastObservationTime_": "Unix timestamp of last observation being provided (in seconds).",
              "startObservations_": "Array of observations to initialize the moving average with. Must be of length numObservations."
            }
          },
          "requestPermissions()": {
            "returns": {
              "permissions": "- Array of keycodes and function selectors for requested permissions."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          },
          "changeMinimumTargetPrice(uint256)": {
            "notice": "Change the minimum target price"
          },
          "changeMovingAverageDuration(uint48)": {
            "notice": "Change the moving average window (duration)"
          },
          "changeObservationFrequency(uint48)": {
            "notice": "Change the observation frequency of the moving average (i.e. how often a new observation is taken)"
          },
          "changeUpdateThresholds(uint48,uint48)": {
            "notice": "Change the update thresholds for the price feeds"
          },
          "configureDependencies()": {
            "notice": "Define module dependencies for this policy."
          },
          "initialize(uint256[],uint48)": {
            "notice": "Initialize the price moduleAccess restricted to approved policies"
          },
          "isActive()": {
            "notice": "Easily accessible indicator for if a policy is activated or not."
          },
          "requestPermissions()": {
            "notice": "Function called by kernel to set module function permissions."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/policies/PriceConfig.sol": "GoerliDaoPriceConfig"
      },
      "libraries": {}
    },
    "sources": {
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/PriceConfig.sol": {
        "keccak256": "0x1ee1e34409748580cabbe352341d308bfc18f6a3b37959289005bf9c187039cd",
        "urls": [
          "bzz-raw://88978b75c812418685b9a1a80baacfce365d6c458aa80816bac83cc6829b4c7c",
          "dweb:/ipfs/Qmd2Ub5pmmMF1uD6YMsa87nLBtbAee7hajanJh2U4D5NVz"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/policies/PriceConfig.sol",
    "id": 50908,
    "exportedSymbols": {
      "Actions": [
        28076
      ],
      "GoerliDaoPriceConfig": [
        50907
      ],
      "Instruction": [
        28082
      ],
      "InvalidKeycode": [
        28099
      ],
      "Kernel": [
        29225
      ],
      "KernelAdapter": [
        28240
      ],
      "Keycode": [
        28090
      ],
      "Module": [
        28305
      ],
      "PRICEv1": [
        39466
      ],
      "Permissions": [
        28088
      ],
      "Policy": [
        28387
      ],
      "ROLESv1": [
        40760
      ],
      "RolesConsumer": [
        40489
      ],
      "TargetNotAContract": [
        28094
      ],
      "ensureContract": [
        28143
      ],
      "ensureValidKeycode": [
        28188
      ],
      "fromKeycode": [
        28127
      ],
      "toKeycode": [
        28113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5479:114",
    "nodes": [
      {
        "id": 50661,
        "nodeType": "PragmaDirective",
        "src": "37:23:114",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 50663,
        "nodeType": "ImportDirective",
        "src": "62:63:114",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50908,
        "sourceUnit": 40682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50662,
              "name": "RolesConsumer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40489,
              "src": "70:13:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50665,
        "nodeType": "ImportDirective",
        "src": "126:51:114",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50908,
        "sourceUnit": 40761,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50664,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40760,
              "src": "134:7:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50667,
        "nodeType": "ImportDirective",
        "src": "178:51:114",
        "nodes": [],
        "absolutePath": "src/modules/PRICE/PRICE.v1.sol",
        "file": "modules/PRICE/PRICE.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50908,
        "sourceUnit": 39467,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50666,
              "name": "PRICEv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39466,
              "src": "186:7:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50668,
        "nodeType": "ImportDirective",
        "src": "231:24:114",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50908,
        "sourceUnit": 29226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50907,
        "nodeType": "ContractDefinition",
        "src": "257:5258:114",
        "nodes": [
          {
            "id": 50675,
            "nodeType": "VariableDeclaration",
            "src": "356:22:114",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "373:5:114",
            "scope": 50907,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PRICEv1_$39466",
              "typeString": "contract PRICEv1"
            },
            "typeName": {
              "id": 50674,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50673,
                "name": "PRICEv1",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39466,
                "src": "356:7:114"
              },
              "referencedDeclaration": 39466,
              "src": "356:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                "typeString": "contract PRICEv1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50685,
            "nodeType": "FunctionDefinition",
            "src": "689:46:114",
            "nodes": [],
            "body": {
              "id": 50684,
              "nodeType": "Block",
              "src": "733:2:114",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 50681,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50678,
                    "src": "724:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 50682,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50680,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28387,
                  "src": "717:6:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "717:15:114"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50678,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "708:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50685,
                  "src": "701:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29225",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 50677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50676,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29225,
                      "src": "701:6:114"
                    },
                    "referencedDeclaration": 29225,
                    "src": "701:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:16:114"
            },
            "returnParameters": {
              "id": 50683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50739,
            "nodeType": "FunctionDefinition",
            "src": "741:352:114",
            "nodes": [],
            "body": {
              "id": 50738,
              "nodeType": "Block",
              "src": "832:261:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50693,
                      "name": "dependencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50691,
                      "src": "842:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 50698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "871:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 50697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "857:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (Keycode[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 50695,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 50694,
                              "name": "Keycode",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28090,
                              "src": "861:7:114"
                            },
                            "referencedDeclaration": 28090,
                            "src": "861:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                              "typeString": "Keycode"
                            }
                          },
                          "id": 50696,
                          "nodeType": "ArrayTypeName",
                          "src": "861:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_storage_ptr",
                            "typeString": "Keycode[]"
                          }
                        }
                      },
                      "id": 50699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "857:16:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                        "typeString": "Keycode[] memory"
                      }
                    },
                    "src": "842:31:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                      "typeString": "Keycode[] memory"
                    }
                  },
                  "id": 50701,
                  "nodeType": "ExpressionStatement",
                  "src": "842:31:114"
                },
                {
                  "expression": {
                    "id": 50708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50702,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50691,
                        "src": "883:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 50704,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "896:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "883:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5052494345",
                          "id": 50706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "911:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          },
                          "value": "PRICE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_cb36afe18ac193a06fb14e7fb86565dae932c495ef778be8a342f8cd7b0b2279",
                            "typeString": "literal_string \"PRICE\""
                          }
                        ],
                        "id": 50705,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28113,
                        "src": "901:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 50707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "901:18:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "883:36:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 50709,
                  "nodeType": "ExpressionStatement",
                  "src": "883:36:114"
                },
                {
                  "expression": {
                    "id": 50716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50710,
                        "name": "dependencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50691,
                        "src": "929:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                          "typeString": "Keycode[] memory"
                        }
                      },
                      "id": 50712,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 50711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "942:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "929:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "524f4c4553",
                          "id": 50714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "957:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          },
                          "value": "ROLES"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_237c8331231f70f90de98eb1f795a6956eb6d0cab8feb7dd4ec729cd2f5ef703",
                            "typeString": "literal_string \"ROLES\""
                          }
                        ],
                        "id": 50713,
                        "name": "toKeycode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28113,
                        "src": "947:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                          "typeString": "function (bytes5) pure returns (Keycode)"
                        }
                      },
                      "id": 50715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "947:18:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "src": "929:36:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                      "typeString": "Keycode"
                    }
                  },
                  "id": 50717,
                  "nodeType": "ExpressionStatement",
                  "src": "929:36:114"
                },
                {
                  "expression": {
                    "id": 50726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50718,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50675,
                      "src": "976:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39466",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 50721,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50691,
                                "src": "1009:12:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 50723,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 50722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1022:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1009:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 50720,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28368,
                            "src": "992:16:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28090_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 50724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "992:33:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50719,
                        "name": "PRICEv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39466,
                        "src": "984:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PRICEv1_$39466_$",
                          "typeString": "type(contract PRICEv1)"
                        }
                      },
                      "id": 50725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "984:42:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRICEv1_$39466",
                        "typeString": "contract PRICEv1"
                      }
                    },
                    "src": "976:50:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRICEv1_$39466",
                      "typeString": "contract PRICEv1"
                    }
                  },
                  "id": 50727,
                  "nodeType": "ExpressionStatement",
                  "src": "976:50:114"
                },
                {
                  "expression": {
                    "id": 50736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50728,
                      "name": "ROLES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40474,
                      "src": "1036:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40760",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 50731,
                                "name": "dependencies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50691,
                                "src": "1069:12:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                                  "typeString": "Keycode[] memory"
                                }
                              },
                              "id": 50733,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 50732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1082:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1069:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                                "typeString": "Keycode"
                              }
                            ],
                            "id": 50730,
                            "name": "getModuleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28368,
                            "src": "1052:16:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Keycode_$28090_$returns$_t_address_$",
                              "typeString": "function (Keycode) view returns (address)"
                            }
                          },
                          "id": 50734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1052:33:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50729,
                        "name": "ROLESv1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40760,
                        "src": "1044:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40760_$",
                          "typeString": "type(contract ROLESv1)"
                        }
                      },
                      "id": 50735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1044:42:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ROLESv1_$40760",
                        "typeString": "contract ROLESv1"
                      }
                    },
                    "src": "1036:50:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ROLESv1_$40760",
                      "typeString": "contract ROLESv1"
                    }
                  },
                  "id": 50737,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:50:114"
                }
              ]
            },
            "baseFunctions": [
              28377
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "750:21:114",
            "overrides": {
              "id": 50687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "783:8:114"
            },
            "parameters": {
              "id": 50686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:2:114"
            },
            "returnParameters": {
              "id": 50692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50691,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "818:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50739,
                  "src": "801:29:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50689,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50688,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28090,
                        "src": "801:7:114"
                      },
                      "referencedDeclaration": 28090,
                      "src": "801:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 50690,
                    "nodeType": "ArrayTypeName",
                    "src": "801:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:31:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50819,
            "nodeType": "FunctionDefinition",
            "src": "1099:692:114",
            "nodes": [],
            "body": {
              "id": 50818,
              "nodeType": "Block",
              "src": "1231:560:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50749,
                      "mutability": "mutable",
                      "name": "PRICE_KEYCODE",
                      "nameLocation": "1249:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 50818,
                      "src": "1241:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      },
                      "typeName": {
                        "id": 50748,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50747,
                          "name": "Keycode",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28090,
                          "src": "1241:7:114"
                        },
                        "referencedDeclaration": 28090,
                        "src": "1241:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                          "typeString": "Keycode"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50753,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50750,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "1265:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "KEYCODE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28288,
                      "src": "1265:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_userDefinedValueType$_Keycode_$28090_$",
                        "typeString": "function () pure external returns (Keycode)"
                      }
                    },
                    "id": 50752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                      "typeString": "Keycode"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1241:39:114"
                },
                {
                  "expression": {
                    "id": 50761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50754,
                      "name": "permissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50745,
                      "src": "1291:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 50759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 50758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1305:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Permissions memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 50756,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 50755,
                              "name": "Permissions",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 28088,
                              "src": "1309:11:114"
                            },
                            "referencedDeclaration": 28088,
                            "src": "1309:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Permissions_$28088_storage_ptr",
                              "typeString": "struct Permissions"
                            }
                          },
                          "id": 50757,
                          "nodeType": "ArrayTypeName",
                          "src": "1309:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_storage_$dyn_storage_ptr",
                            "typeString": "struct Permissions[]"
                          }
                        }
                      },
                      "id": 50760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:20:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Permissions memory[] memory"
                      }
                    },
                    "src": "1291:34:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Permissions memory[] memory"
                    }
                  },
                  "id": 50762,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:34:114"
                },
                {
                  "expression": {
                    "id": 50772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50763,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50745,
                        "src": "1335:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50765,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 50764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1347:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1335:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50767,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50749,
                          "src": "1364:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50768,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50675,
                              "src": "1379:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39415,
                            "src": "1379:16:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256[] memory,uint48) external"
                            }
                          },
                          "id": 50770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1379:25:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50766,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "1352:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1352:53:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1335:70:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50773,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:70:114"
                },
                {
                  "expression": {
                    "id": 50783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50774,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50745,
                        "src": "1415:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50776,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 50775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1415:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50778,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50749,
                          "src": "1444:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50779,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50675,
                              "src": "1459:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeMovingAverageDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39421,
                            "src": "1459:33:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                              "typeString": "function (uint48) external"
                            }
                          },
                          "id": 50781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1459:42:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50777,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "1432:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1432:70:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1415:87:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50784,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:87:114"
                },
                {
                  "expression": {
                    "id": 50794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50785,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50745,
                        "src": "1512:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50787,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 50786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1524:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1512:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50789,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50749,
                          "src": "1541:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50790,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50675,
                              "src": "1556:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeObservationFrequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39427,
                            "src": "1556:32:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                              "typeString": "function (uint48) external"
                            }
                          },
                          "id": 50792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1556:41:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50788,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "1529:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1529:69:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1512:86:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50795,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:86:114"
                },
                {
                  "expression": {
                    "id": 50805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50796,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50745,
                        "src": "1608:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50798,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 50797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1608:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50800,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50749,
                          "src": "1637:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50801,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50675,
                              "src": "1652:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeUpdateThresholds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39435,
                            "src": "1652:28:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$_t_uint48_$returns$__$",
                              "typeString": "function (uint48,uint48) external"
                            }
                          },
                          "id": 50803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1652:37:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50799,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "1625:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1625:65:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1608:82:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50806,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:82:114"
                },
                {
                  "expression": {
                    "id": 50816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50807,
                        "name": "permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50745,
                        "src": "1700:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Permissions memory[] memory"
                        }
                      },
                      "id": 50809,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 50808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1700:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50811,
                          "name": "PRICE_KEYCODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50749,
                          "src": "1729:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 50812,
                              "name": "PRICE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50675,
                              "src": "1744:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRICEv1_$39466",
                                "typeString": "contract PRICEv1"
                              }
                            },
                            "id": 50813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeMinimumTargetPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39441,
                            "src": "1744:30:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 50814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1744:39:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                            "typeString": "Keycode"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 50810,
                        "name": "Permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28088,
                        "src": "1717:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Permissions_$28088_storage_ptr_$",
                          "typeString": "type(struct Permissions storage pointer)"
                        }
                      },
                      "id": 50815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1717:67:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                        "typeString": "struct Permissions memory"
                      }
                    },
                    "src": "1700:84:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$28088_memory_ptr",
                      "typeString": "struct Permissions memory"
                    }
                  },
                  "id": 50817,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:84:114"
                }
              ]
            },
            "baseFunctions": [
              28386
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1108:18:114",
            "overrides": {
              "id": 50741,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1167:8:114"
            },
            "parameters": {
              "id": 50740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:114"
            },
            "returnParameters": {
              "id": 50746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50745,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "1214:11:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50819,
                  "src": "1193:32:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50743,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50742,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28088,
                        "src": "1193:11:114"
                      },
                      "referencedDeclaration": 28088,
                      "src": "1193:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 50744,
                    "nodeType": "ArrayTypeName",
                    "src": "1193:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:34:114"
            },
            "scope": 50907,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50839,
            "nodeType": "FunctionDefinition",
            "src": "2717:214:114",
            "nodes": [],
            "body": {
              "id": 50838,
              "nodeType": "Block",
              "src": "2856:75:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50834,
                        "name": "startObservations_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50823,
                        "src": "2883:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 50835,
                        "name": "lastObservationTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50825,
                        "src": "2903:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50831,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "2866:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39415,
                      "src": "2866:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256[] memory,uint48) external"
                      }
                    },
                    "id": 50836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:58:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50837,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:58:114"
                }
              ]
            },
            "documentation": {
              "id": 50820,
              "nodeType": "StructuredDocumentation",
              "src": "2101:611:114",
              "text": "@notice                     Initialize the price module\n @notice                     Access restricted to approved policies\n @param startObservations_   Array of observations to initialize the moving average with. Must be of length numObservations.\n @param lastObservationTime_ Unix timestamp of last observation being provided (in seconds).\n @dev This function must be called after the Price module is deployed to activate it and after updating the observationFrequency\n      or movingAverageDuration (in certain cases) in order for the Price module to function properly."
            },
            "functionSelector": "902a35b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2837:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50829,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50827,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "2828:8:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:23:114"
              }
            ],
            "name": "initialize",
            "nameLocation": "2726:10:114",
            "parameters": {
              "id": 50826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50823,
                  "mutability": "mutable",
                  "name": "startObservations_",
                  "nameLocation": "2754:18:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50839,
                  "src": "2737:35:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50821,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2737:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50822,
                    "nodeType": "ArrayTypeName",
                    "src": "2737:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50825,
                  "mutability": "mutable",
                  "name": "lastObservationTime_",
                  "nameLocation": "2781:20:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50839,
                  "src": "2774:27:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50824,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2736:66:114"
            },
            "returnParameters": {
              "id": 50830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2856:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50855,
            "nodeType": "FunctionDefinition",
            "src": "3525:195:114",
            "nodes": [],
            "body": {
              "id": 50854,
              "nodeType": "Block",
              "src": "3646:74:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50851,
                        "name": "movingAverageDuration_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50842,
                        "src": "3690:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50848,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "3656:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeMovingAverageDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39421,
                      "src": "3656:33:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                        "typeString": "function (uint48) external"
                      }
                    },
                    "id": 50852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:57:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50853,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:57:114"
                }
              ]
            },
            "documentation": {
              "id": 50840,
              "nodeType": "StructuredDocumentation",
              "src": "2937:583:114",
              "text": "@notice                         Change the moving average window (duration)\n @param movingAverageDuration_   Moving average duration in seconds, must be a multiple of observation frequency\n @dev Setting the window to a larger number of observations than the current window will clear\n      the data in the current window and require the initialize function to be called again.\n      Ensure that you have saved the existing data and can re-populate before calling this\n      function with a number of observations larger than have been recorded."
            },
            "functionSelector": "8a157337",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3627:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50844,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "3618:8:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "3618:23:114"
              }
            ],
            "name": "changeMovingAverageDuration",
            "nameLocation": "3534:27:114",
            "parameters": {
              "id": 50843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50842,
                  "mutability": "mutable",
                  "name": "movingAverageDuration_",
                  "nameLocation": "3569:22:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50855,
                  "src": "3562:29:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50841,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3561:31:114"
            },
            "returnParameters": {
              "id": 50847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50871,
            "nodeType": "FunctionDefinition",
            "src": "4226:191:114",
            "nodes": [],
            "body": {
              "id": 50870,
              "nodeType": "Block",
              "src": "4345:72:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50867,
                        "name": "observationFrequency_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50858,
                        "src": "4388:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50864,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "4355:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeObservationFrequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39427,
                      "src": "4355:32:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$returns$__$",
                        "typeString": "function (uint48) external"
                      }
                    },
                    "id": 50868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:55:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50869,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:55:114"
                }
              ]
            },
            "documentation": {
              "id": 50856,
              "nodeType": "StructuredDocumentation",
              "src": "3726:495:114",
              "text": "@notice   Change the observation frequency of the moving average (i.e. how often a new observation is taken)\n @param    observationFrequency_   Observation frequency in seconds, must be a divisor of the moving average duration\n @dev      Changing the observation frequency clears existing observation data since it will not be taken at the right time intervals.\n           Ensure that you have saved the existing data and/or can re-populate before calling this function."
            },
            "functionSelector": "7d4dce76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4326:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50862,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50860,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "4317:8:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "4317:23:114"
              }
            ],
            "name": "changeObservationFrequency",
            "nameLocation": "4235:26:114",
            "parameters": {
              "id": 50859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50858,
                  "mutability": "mutable",
                  "name": "observationFrequency_",
                  "nameLocation": "4269:21:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50871,
                  "src": "4262:28:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50857,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:30:114"
            },
            "returnParameters": {
              "id": 50863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4345:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50890,
            "nodeType": "FunctionDefinition",
            "src": "4806:250:114",
            "nodes": [],
            "body": {
              "id": 50889,
              "nodeType": "Block",
              "src": "4959:97:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50885,
                        "name": "ohmEthUpdateThreshold_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50874,
                        "src": "4998:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      {
                        "id": 50886,
                        "name": "reserveEthUpdateThreshold_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50876,
                        "src": "5022:26:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "expression": {
                        "id": 50882,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "4969:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeUpdateThresholds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39435,
                      "src": "4969:28:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint48_$_t_uint48_$returns$__$",
                        "typeString": "function (uint48,uint48) external"
                      }
                    },
                    "id": 50887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4969:80:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50888,
                  "nodeType": "ExpressionStatement",
                  "src": "4969:80:114"
                }
              ]
            },
            "documentation": {
              "id": 50872,
              "nodeType": "StructuredDocumentation",
              "src": "4423:378:114",
              "text": "@notice   Change the update thresholds for the price feeds\n @param    ohmEthUpdateThreshold_ - Maximum allowed time between OHM/ETH price feed updates\n @param    reserveEthUpdateThreshold_ - Maximum allowed time between Reserve/ETH price feed updates\n @dev      The update thresholds should be set based on the update threshold of the chainlink oracles."
            },
            "functionSelector": "0fbe3476",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4944:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50878,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "4935:8:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "4935:23:114"
              }
            ],
            "name": "changeUpdateThresholds",
            "nameLocation": "4815:22:114",
            "parameters": {
              "id": 50877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50874,
                  "mutability": "mutable",
                  "name": "ohmEthUpdateThreshold_",
                  "nameLocation": "4854:22:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50890,
                  "src": "4847:29:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50873,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4847:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50876,
                  "mutability": "mutable",
                  "name": "reserveEthUpdateThreshold_",
                  "nameLocation": "4893:26:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50890,
                  "src": "4886:33:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 50875,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4886:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4837:88:114"
            },
            "returnParameters": {
              "id": 50881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50906,
            "nodeType": "FunctionDefinition",
            "src": "5329:184:114",
            "nodes": [],
            "body": {
              "id": 50905,
              "nodeType": "Block",
              "src": "5445:68:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50902,
                        "name": "minimumTargetPrice_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50893,
                        "src": "5486:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50899,
                        "name": "PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50675,
                        "src": "5455:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRICEv1_$39466",
                          "typeString": "contract PRICEv1"
                        }
                      },
                      "id": 50901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeMinimumTargetPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39441,
                      "src": "5455:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5455:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50904,
                  "nodeType": "ExpressionStatement",
                  "src": "5455:51:114"
                }
              ]
            },
            "documentation": {
              "id": 50891,
              "nodeType": "StructuredDocumentation",
              "src": "5062:262:114",
              "text": "@notice   Change the minimum target price\n @param    minimumTargetPrice_ - Minimum target price for the RBS system with 18 decimals, expressed as Reserves per OHM\n @dev      The minimum target price should be set based on liquid backing of OHM."
            },
            "functionSelector": "57ee9383",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "70726963655f61646d696e",
                    "id": 50896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5426:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4763a66689d22e199566695dfe8011e0a6615ef532cf6345db6007a998a24f7c",
                      "typeString": "literal_string \"price_admin\""
                    },
                    "value": "price_admin"
                  }
                ],
                "id": 50897,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50895,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40488,
                  "src": "5417:8:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "5417:23:114"
              }
            ],
            "name": "changeMinimumTargetPrice",
            "nameLocation": "5338:24:114",
            "parameters": {
              "id": 50894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50893,
                  "mutability": "mutable",
                  "name": "minimumTargetPrice_",
                  "nameLocation": "5371:19:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 50906,
                  "src": "5363:27:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5362:29:114"
            },
            "returnParameters": {
              "id": 50898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5445:0:114"
            },
            "scope": 50907,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50669,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28387,
              "src": "290:6:114"
            },
            "id": 50670,
            "nodeType": "InheritanceSpecifier",
            "src": "290:6:114"
          },
          {
            "baseName": {
              "id": 50671,
              "name": "RolesConsumer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40489,
              "src": "298:13:114"
            },
            "id": 50672,
            "nodeType": "InheritanceSpecifier",
            "src": "298:13:114"
          }
        ],
        "canonicalName": "GoerliDaoPriceConfig",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50907,
          40489,
          28387,
          28240
        ],
        "name": "GoerliDaoPriceConfig",
        "nameLocation": "266:20:114",
        "scope": 50908,
        "usedErrors": [
          28193,
          28313
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 114
}