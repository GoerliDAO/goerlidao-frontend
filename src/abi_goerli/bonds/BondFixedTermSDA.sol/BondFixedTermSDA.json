{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "teller_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auctioneer_AmountLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_BadExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InitialPriceLessThanMin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "conclusion_",
          "type": "uint256"
        }
      ],
      "name": "Auctioneer_MarketConcluded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_MaxPayoutExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NewMarketsNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_NotEnoughCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auctioneer_OnlyMarketOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "defaultTuneAdjustment",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtDecayInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDepositInterval",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minMarketDuration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "minDebtBuffer",
          "type": "uint32"
        }
      ],
      "name": "DefaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "MarketClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldControlVariable",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newControlVariable",
          "type": "uint256"
        }
      ],
      "name": "Tuned",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adjustments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "change",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "lastAdjustment",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "timeToAdjusted",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowNewMarkets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callbackAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "closeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "params_",
          "type": "bytes"
        }
      ],
      "name": "createMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentControlVariable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "currentDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneAdjustment",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultTuneInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAggregator",
      "outputs": [
        {
          "internalType": "contract IBondAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "getMarketInfoForPurchase",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeller",
      "outputs": [
        {
          "internalType": "contract IBondTeller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isInstantSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "isLive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "marketScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "payoutToken",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "capacityInQuote",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPayout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "scale",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "maxAmountAccepted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "lastTune",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "lastDecay",
          "type": "uint48"
        },
        {
          "internalType": "uint32",
          "name": "length",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "depositInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "tuneAdjustmentDelay",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "debtDecayInterval",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "tuneIntervalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tuneBelowCapacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastTuneDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtBuffer",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDebtDecayInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDepositInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minMarketDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "payoutFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "name": "pullOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchaseBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setAllowNewMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status_",
          "type": "bool"
        }
      ],
      "name": "setCallbackAuthStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[6]",
          "name": "defaults_",
          "type": "uint32[6]"
        }
      ],
      "name": "setDefaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint32[3]",
          "name": "intervals_",
          "type": "uint32[3]"
        }
      ],
      "name": "setIntervals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "terms",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "controlVariable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "vesting",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "conclusion",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620047e3380380620047e383398101604081905262000034916200013d565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050506001600160a01b039081166080521660a0525050600980546001600160c01b0319167527100001518000000e100003f48000000e100001518017905550506007805460ff19166001179055620001a5565b6001600160a01b03811681146200013a57600080fd5b50565b600080600080608085870312156200015457600080fd5b8451620001618162000124565b6020860151909450620001748162000124565b6040860151909350620001878162000124565b60608601519092506200019a8162000124565b939692955090935050565b60805160a0516145fc620001e76000396000818161051001528181611d7e0152818161201001526120c301526000818161034801526129a401526145fc6000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c8063acc5570c1161017b578063bf7e214f116100d8578063d9ccdc931161008c578063e3684e3911610071578063e3684e39146109af578063e922067314610aed578063ea0aca3314610b0957600080fd5b8063d9ccdc931461098c578063e007fa971461099c57600080fd5b8063c7bf8ca0116100bd578063c7bf8ca014610935578063d204068714610948578063d2bee3231461096857600080fd5b8063bf7e214f146108a2578063c0aa0e8a146108c257600080fd5b8063bc3b2b121161012f578063bcf6cde811610114578063bcf6cde814610869578063bd1f3a5e1461087c578063bf48582b1461088f57600080fd5b8063bc3b2b12146107d2578063bcb296671461085657600080fd5b8063afa9d3b011610160578063afa9d3b0146106a1578063b1283e77146106ae578063bbbdd95a146107bf57600080fd5b8063acc5570c14610534578063ae4180951461068e57600080fd5b80635f77274e116102295780638973082c116101dd5780638da5cb5b116101c25780638da5cb5b146104cb578063946824cd146104eb5780639787d1071461050e57600080fd5b80638973082c1461047b5780638b098db3146104b857600080fd5b80636729a41e1161020e5780636729a41e1461041f578063699e17d9146104555780637a9e5e4b1461046857600080fd5b80635f77274e146103d65780636352211e146103e957600080fd5b806327507458116102805780633adec5a7116102655780633adec5a71461038d57806353c7f8e0146103a05780635dc4d16b146103b357600080fd5b806327507458146103235780633ad59dbc1461034657600080fd5b80630a9d85eb146102b257806310b05317146102d857806313af4035146102ed5780631c063a6c14610300575b600080fd5b6102c56102c036600461402b565b610b21565b6040519081526020015b60405180910390f35b6102eb6102e636600461402b565b610b53565b005b6102eb6102fb366004614076565b610c0e565b6102c561030e36600461402b565b60009081526002602052604090206004015490565b61033661033136600461402b565b610d17565b60405190151581526020016102cf565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cf565b6102c561039b36600461402b565b610d60565b6102c56103ae366004614093565b610dc3565b6103366103c1366004614076565b60086020526000908152604090205460ff1681565b6102eb6103e436600461411e565b610e6b565b6103686103f736600461402b565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61036861042d36600461402b565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102eb61046336600461413b565b610f30565b6102eb610476366004614076565b6113d7565b6009546104a39074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016102cf565b6103366104c636600461402b565b611534565b6000546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6102c56104f936600461402b565b6000908152600260205260409020600a015490565b7f0000000000000000000000000000000000000000000000000000000000000000610368565b61063861054236600461402b565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff90811680835260018401548216838701819052848801548316848701819052600380870154948516606087018190527401000000000000000000000000000000000000000090950460ff1615156080870152600487015460a0870152600587015460c0870152600687015460e08701526007870154610100870190815260088801546101208801526009880154610140880152600a90970154610160909601959095529989529290955292909520909301549251919590949265ffffffffffff169190565b6040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529316606083015265ffffffffffff909216608082015260a081019190915260c0016102cf565b6102eb61069c36600461402b565b61156a565b6007546103369060ff1681565b6107456106bc36600461402b565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460088801546009890154600a9099015473ffffffffffffffffffffffffffffffffffffffff9889169a891699978916988716977401000000000000000000000000000000000000000090970460ff1696908c565b6040805173ffffffffffffffffffffffffffffffffffffffff9d8e1681529b8d1660208d0152998c16998b0199909952999096166060890152931515608088015260a087019290925260c086015260e0850152610100840152610120830152610140820192909252610160810191909152610180016102cf565b6102eb6107cd36600461416e565b6115d3565b6108256107e036600461402b565b6005602052600090815260409020805460019091015465ffffffffffff8082169166010000000000008104909116906c01000000000000000000000000900460ff1684565b6040516102cf949392919093845265ffffffffffff9283166020850152911660408301521515606082015260800190565b6102c561086436600461402b565b6116bd565b6102eb6108773660046141a7565b611851565b6102eb61088a366004614239565b611901565b6102c561089d3660046142be565b611d30565b6001546103689073ffffffffffffffffffffffffffffffffffffffff1681565b6109076108d036600461402b565b60036020526000908152604090208054600182015460029092015490919065ffffffffffff80821691660100000000000090041684565b60408051948552602085019390935265ffffffffffff918216928401929092521660608201526080016102cf565b6102c56109433660046141a7565b611e89565b6009546104a3906c01000000000000000000000000900463ffffffff1681565b6009546104a390700100000000000000000000000000000000900463ffffffff1681565b6009546104a39063ffffffff1681565b6102c56109aa3660046142f7565b6120a9565b610a876109bd36600461402b565b600460205260009081526040902080546001820154600283015460039093015465ffffffffffff80841694660100000000000085049091169363ffffffff6c0100000000000000000000000082048116947001000000000000000000000000000000008304821694740100000000000000000000000000000000000000008404831694780100000000000000000000000000000000000000000000000085048416947c0100000000000000000000000000000000000000000000000000000000900490931692908a565b6040805165ffffffffffff9b8c1681529a90991660208b015263ffffffff978816988a01989098529486166060890152928516608088015290841660a08701529290921660c085015260e0840191909152610100830152610120820152610140016102cf565b6009546104a39068010000000000000000900463ffffffff1681565b6009546104a390640100000000900463ffffffff1681565b600080610b2d83612402565b5050600084815260036020526040902054909150610b4c908290614352565b9392505050565b60008181526006602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610bb0576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815260066020908152604080832054600290925290912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610c3c336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610ca7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008181526002602052604081206004015415801590610d5a575060008281526003602052604090206002015442660100000000000090910465ffffffffffff16115b92915050565b600080610d91610d6f846116bd565b6000858152600260205260409020600a0154610d8a86610b21565b91906125ee565b6000848152600260205260409020600601549091508111610d5a57600083815260026020526040902060060154610b4c565b600080610dd28385018561439a565b905080610100015165ffffffffffff16600014158015610e2357506201518081610100015165ffffffffffff161080610e235750635dba240065ffffffffffff1681610100015165ffffffffffff16115b15610e5a576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e638161264c565b949350505050565b610e99336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b610eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b610f3982610d17565b610f6f576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f7c6020820182614471565b63ffffffff161580610fa15750610f996040820160208301614471565b63ffffffff16155b80610fbf5750610fb76060820160408301614471565b63ffffffff16155b15610ff6576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110066040820160208301614471565b63ffffffff166110196020830183614471565b63ffffffff161015611057576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526004602090815260409091208054909170010000000000000000000000000000000090910463ffffffff169061109490840184614471565b63ffffffff1610156110d2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095468010000000000000000900463ffffffff166110f76060840160408501614471565b63ffffffff161015611135576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260026020818152604092839020835161018081018552815473ffffffffffffffffffffffffffffffffffffffff908116808352600184015482169483019490945293820154841694810194909452600381015492831660608501527401000000000000000000000000000000000000000090920460ff1615156080840152600482015460a0840152600582015460c0840152600682015460e0840152600782015461010084015260088201546101208401526009820154610140840152600a90910154610160830152331461123b576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112486020840184614471565b825463ffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9091161782556112e66112a16020850185614471565b60008681526003602052604090206002015463ffffffff91909116906112da9042906601000000000000900465ffffffffffff16614352565b60a08401519190613335565b6001830181905560a0820151116112fe576000611312565b81600101548160a001516113129190614352565b60028301556113276040840160208501614471565b825463ffffffff919091167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff9091161782556113846060840160408501614471565b825463ffffffff919091167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911617909155505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806114ba57506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ba919061448c565b6114c357600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60008181526003602052604081206002015465ffffffffffff16635dba24008111156115635742811115610b4c565b1592915050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146115c7576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d081613401565b50565b611601336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000818152600460209081526040808320815161014081018352815465ffffffffffff8082168352660100000000000082041694820185905263ffffffff6c0100000000000000000000000082048116948301949094527001000000000000000000000000000000008104841660608301527401000000000000000000000000000000000000000081048416608083015278010000000000000000000000000000000000000000000000008104841660a08301527c0100000000000000000000000000000000000000000000000000000000900490921660c0830152600181015460e08301526002810154610100830152600301546101208201529042808211156118125760c083015181830390611808906117e090839063ffffffff166144a9565b60c0860151600089815260026020526040902060050154919063ffffffff9081169061333516565b9695505050505050565b60c08301518282039063ffffffff16811161184557611840818560c0015163ffffffff166117e09190614352565b611808565b60009695505050505050565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146118ae576040517f4e1c8b5d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182526006602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61192f336000357fffffffff00000000000000000000000000000000000000000000000000000000166124dd565b611995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c9e565b6020810151815163ffffffff918216911610156119de576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151815163ffffffff91821691161015611a27576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6080810151606082015163ffffffff91821691161115611a73576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060810151611a839060056144c1565b63ffffffff16816002602002015163ffffffff161015611acf576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060006020020151600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff90921691909117905580600160200201516009805463ffffffff909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905580600260200201516009805463ffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff90921691909117905580600360200201516009805463ffffffff9092166c01000000000000000000000000027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff90921691909117905580600460200201516009805463ffffffff909216700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff90921691909117905580600560209081029190910151600980547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff81167401000000000000000000000000000000000000000063ffffffff9485168102918217938490556040805193861692861692909217835264010000000084048516958301959095526801000000000000000083048416908201526c010000000000000000000000008204831660608201527001000000000000000000000000000000008204831660808201529290041660a08201527fbbc02fa2138d26ec5ecb379612618d1b291bf5140167f3028178080953459c5a9060c00160405180910390a150565b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291611dfe917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015611dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611deb91906144ed565b869065ffffffffffff16620186a0613335565b6000858152600260205260408120600a015491925090611e3290611e2187610d60565b611e2b858a614352565b9190613335565b600086815260026020526040902060070154909150811115611e80576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9150610b4c9050565b6000828152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281611f5d85610d60565b905060008260800151611f855761016083015160a0840151611f80918490613335565b611f8b565b8260a001515b90506000611fae838561016001518661010001516133359092919063ffffffff16565b90506000818310611fbf5781611fc1565b825b6040517fb88c914800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152919250600091612090917f00000000000000000000000000000000000000000000000000000000000000009091169063b88c914890602401602060405180830381865afa158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d91906144ed565b839065ffffffffffff16620186a0613335565b905061209c81836144a9565b9998505050505050505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461211a576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008481526002602081815260408084206003808452948290208251608081018452815481526001820154948101949094529093015465ffffffffffff80821692840192909252660100000000000090041660608201529181015490919073ffffffffffffffffffffffffffffffffffffffff16158015906121c35750815473ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205460ff16155b156121fa576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000429050816060015165ffffffffffff168165ffffffffffff161061225c5760608201516040517f07fc4a7000000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610c9e565b6000612269888842613485565b95509050858510156122a7576040517f74ec9d5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600701548511156122e5576040517f5c430eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff16612315578360040154851161231d565b836004015487115b15612354576040517ff3383dc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384015474010000000000000000000000000000000000000000900460ff1661237e5784612380565b865b8460040160008282546123939190614352565b92505081905550868460090160008282546123ae91906144a9565b92505081905550848460080160008282546123c991906144a9565b90915550506005840154602084015110156123ec576123e788613401565b6123f7565b6123f7888383613854565b505050509392505050565b600081815260056020908152604080832081516080810183528154815260019091015465ffffffffffff8082169483019490945266010000000000008104909316918101919091526c0100000000000000000000000090910460ff1615156060820181905282918291612480576000806000935093509350506124d6565b602081015161248f904261450a565b9250806040015165ffffffffffff168365ffffffffffff16109150816124b65780516124d2565b604081015181516124d29165ffffffffffff8087169116613335565b9350505b9193909250565b60015460009073ffffffffffffffffffffffffffffffffffffffff1680158015906125c157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa15801561259d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c1919061448c565b80610e63575060005473ffffffffffffffffffffffffffffffffffffffff85811691161491505092915050565b60006125fb848484613335565b90506000828061260d5761260d614531565b8486091115610b4c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061264257600080fd5b6001019392505050565b60075460009060ff1661268b576040517f64be3ffa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127009190614560565b90506000836020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127779190614560565b905060068260ff16108061278e575060128260ff16115b156127c5576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068160ff1610806127da575060128160ff16115b15612811576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe884610160015160000b128061284f5750601884610160015160000b135b15612886576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526008602052604090205460ff161580156128bf5750604084015173ffffffffffffffffffffffffffffffffffffffff1615155b156128f6576040517f2c47703200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600082610160015160240160ff16600a0a90508260c001518360a00151101561294d576040517f4496547d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825160208401516040517fb435914300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526000917f0000000000000000000000000000000000000000000000000000000000000000169063b4359143906044016020604051808303816000875af11580156129ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a119190614583565b90506000804286610120015165ffffffffffff16612a2f9190614352565b60095490925063ffffffff70010000000000000000000000000000000090910481169083161080612a80575060095461014087015163ffffffff6c0100000000000000000000000090920482169116105b80612a9b57508163ffffffff1686610140015163ffffffff16115b15612ad2576040517f3b596f5f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008661014001516005612ae691906144c1565b60095490915063ffffffff808316680100000000000000009092041611612b0d5780612b23565b60095468010000000000000000900463ffffffff165b600954610140890151919350600091612b7b9163ffffffff908116911611612b535760095463ffffffff16612b5a565b8861014001515b63ffffffff168563ffffffff168a608001516133359092919063ffffffff16565b60408051610140808201835265ffffffffffff4216808352602083015263ffffffff808916938301939093528b01805183166060830152600954905193945090926080840192918216911611612bd95760095463ffffffff16612be0565b8961014001515b63ffffffff9081168252600954640100000000900481166020830152851660408201526060810183905260808a810151910190612c1e908490614352565b8152602001612c5c8563ffffffff168763ffffffff168c60600151612c47578c60800151611e2b565b60a08d015160808e0151611e2b918d90613335565b90526000868152600460209081526040808320845181549386015192860151606080880151608089015160a08a015160c08b015165ffffffffffff9687167fffffffffffffffffffffffffffffffffffffffff000000000000000000000000909a169990991766010000000000009690981695909502969096177fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff166c0100000000000000000000000063ffffffff948516027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff161770010000000000000000000000000000000091841691909102177fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000958316959095027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1694909417780100000000000000000000000000000000000000000000000092821692909202919091177bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167c0100000000000000000000000000000000000000000000000000000000919094160292909217825560e08401516001830155610100840151600283015561012090930151600390910155908901519092508291508190612e59578860800151612e6e565b60a089015160808a0151612e6e918990613335565b9050612e878163ffffffff808716908881169061333516565b9250612eaf89610140015163ffffffff168663ffffffff16836133359092919063ffffffff16565b9150506040518061018001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001896000015173ffffffffffffffffffffffffffffffffffffffff168152602001896020015173ffffffffffffffffffffffffffffffffffffffff168152602001896040015173ffffffffffffffffffffffffffffffffffffffff168152602001896060015115158152602001896080015181526020018381526020018960c0015181526020018281526020016000815260200160008152602001878152506002600087815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a01559050506000600960149054906101000a900463ffffffff1663ffffffff1661314f620186a065ffffffffffff1685856133359092919063ffffffff16565b1161317a5760095474010000000000000000000000000000000000000000900463ffffffff16613188565b61318882620186a085613335565b905060006131bd828b60e0015163ffffffff16116131a657826131b2565b8a60e0015163ffffffff165b8590620186a0613335565b6131c790856144a9565b60a08b01519091506000906131dd908a87613335565b905060405180608001604052808281526020018381526020018c610100015165ffffffffffff1681526020018c610120015165ffffffffffff16815250600360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160020160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055509050508a6020015173ffffffffffffffffffffffffffffffffffffffff168b6000015173ffffffffffffffffffffffffffffffffffffffff16897f8235b14cd272b4e791960fe1118559bb7fed86934fcffeeae9b1175103b0756d8e61010001518f60a0015160405161331e92919065ffffffffffff929092168252602082015260400190565b60405180910390a450959998505050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361338c576000841161338157600080fd5b508290049050610b4c565b80841161339857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000818152600360209081526040808320600290810180547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff1666010000000000004265ffffffffffff16021790559091528082206004018290555182917f9dc30b8eda31a6a144e092e5de600955523a6a925cc15cc1d1b9b4872cfa615591a250565b6000838152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169482019490945293810154831691840191909152600381015491821660608401527401000000000000000000000000000000000000000090910460ff1615156080830152600481015460a0830152600581015460c0830152600681015460e0830152600781015461010083015260088101546101208301526009810154610140830152600a015461016082015281908161355b876116bd565b600088815260026020908152604080832060059081018590559091529020600101549091506c01000000000000000000000000900460ff16156136a35760008781526005602052604081209080806135b28b612402565b60008e8152600360205260408120805494975092955090935085926135d8908490614352565b9091555050801561367357828460000160008282546135f79190614352565b90915550506001840180548391906006906136259084906601000000000000900465ffffffffffff1661450a565b92506101000a81548165ffffffffffff021916908365ffffffffffff160217905550888460010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555061369e565b6001840180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b505050505b6136ac87613f48565b60e0830151909450808510156136c0578094505b6101608301516136d290889087613335565b600089815260046020526040812080546003909101549296507c0100000000000000000000000000000000000000000000000000000000810463ffffffff9081169392660100000000000090920465ffffffffffff16919061373a9085908a9086906125ee16565b60008d81526004602052604090208054919250829160069061376f9084906601000000000000900465ffffffffffff1661459c565b92506101000a81548165ffffffffffff021916908365ffffffffffff1602179055506000828b65ffffffffffff16116137c3576137b465ffffffffffff8c1684614352565b6137be90866144a9565b6137fe565b6137d58365ffffffffffff8d16614352565b85116137e25760006137fe565b6137f48365ffffffffffff8d16614352565b6137fe9086614352565b9050886138178661380f85856144a9565b8a9190613335565b61382191906144a9565b61382c9060016144a9565b60009d8e5260026020526040909d206005019c909c5550969a95995094975050505050505050565b600060046000858152602001908152602001600020604051806101400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600060026000868152602001908152602001600020604051806101800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090506000846003600088815260200190815260200160002060020160069054906101000a900465ffffffffffff16613bbd919061450a565b65ffffffffffff16905060008260800151613bdc578260a00151613bf1565b61016083015160a0840151613bf19187613335565b905060008360800151613c0957836101200151613c1f565b610160840151610140850151613c1f9188613335565b613c2990836144a9565b9050600082613c6285886040015163ffffffff16613c479190614352565b886040015163ffffffff16856133359092919063ffffffff16565b613c6c91906144a9565b90508561010001518560a00151108015613c8557508181105b80613cc0575060808601518651613ca29163ffffffff169061459c565b65ffffffffffff168865ffffffffffff1610158015613cc057508181115b15613f3d57613ce4866060015163ffffffff1685856133359092919063ffffffff16565b60008a8152600260205260408082206007019290925560c0880151918801519091613d1d91849163ffffffff9081169181169061333516565b60008b81526003602052604081205461016089015192935091613d42908b90856125ee565b60408051848152602081018390529192508d917f78f9c01d72705dba80d6ce051d36a1f987bf2a3800fee938c111a2ae741e57d1910160405180910390a281811015613e70576000613d948284614352565b905060405180608001604052808281526020018d65ffffffffffff1681526020018b60a0015163ffffffff1665ffffffffffff16815260200160011515815250600560008f81526020019081526020016000206000820151816000015560208201518160010160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060408201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550606082015181600101600c6101000a81548160ff02191690831515021790555090505050613eb5565b60008c81526003602090815260408083208490556005909152902060010180547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff1690555b60008c815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff8d1617905560e089015160a089015111613f09576000613f1d565b8860e001518860a00151613f1d9190614352565b60008d815260046020526040902060028101919091556003019290925550505b505050505050505050565b6000818152600260208181526040808420815161018081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548116828601529482015485168184015260038083015495861660608301527401000000000000000000000000000000000000000090950460ff1615156080820152600482015460a0820152600582015460c08201819052600683015460e0830152600783015461010083015260088301546101208301526009830154610140830152600a90920154610160820181905287875294909352908420549192610b4c9291906125ee565b60006020828403121561403d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146115d057600080fd5b803561407181614044565b919050565b60006020828403121561408857600080fd5b8135610b4c81614044565b600080602083850312156140a657600080fd5b823567ffffffffffffffff808211156140be57600080fd5b818501915085601f8301126140d257600080fd5b8135818111156140e157600080fd5b8660208285010111156140f357600080fd5b60209290920196919550909350505050565b80151581146115d057600080fd5b803561407181614105565b60006020828403121561413057600080fd5b8135610b4c81614105565b6000806080838503121561414e57600080fd5b823591508360808401111561416257600080fd5b50926020919091019150565b6000806040838503121561418157600080fd5b823561418c81614044565b9150602083013561419c81614105565b809150509250929050565b600080604083850312156141ba57600080fd5b82359150602083013561419c81614044565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561421f5761421f6141cc565b60405290565b803563ffffffff8116811461407157600080fd5b600060c0828403121561424b57600080fd5b82601f83011261425a57600080fd5b60405160c0810181811067ffffffffffffffff8211171561427d5761427d6141cc565b6040528060c084018581111561429257600080fd5b845b818110156142b3576142a581614225565b835260209283019201614294565b509195945050505050565b6000806000606084860312156142d357600080fd5b833592506020840135915060408401356142ec81614044565b809150509250925092565b60008060006060848603121561430c57600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561436457614364614323565b500390565b65ffffffffffff811681146115d057600080fd5b803561407181614369565b8035600081900b811461407157600080fd5b600061018082840312156143ad57600080fd5b6143b56141fb565b6143be83614066565b81526143cc60208401614066565b60208201526143dd60408401614066565b60408201526143ee60608401614113565b60608201526080830135608082015260a083013560a082015260c083013560c082015261441d60e08401614225565b60e082015261010061443081850161437d565b9082015261012061444284820161437d565b90820152610140614454848201614225565b90820152610160614466848201614388565b908201529392505050565b60006020828403121561448357600080fd5b610b4c82614225565b60006020828403121561449e57600080fd5b8151610b4c81614105565b600082198211156144bc576144bc614323565b500190565b600063ffffffff808316818516818304811182151516156144e4576144e4614323565b02949350505050565b6000602082840312156144ff57600080fd5b8151610b4c81614369565b600065ffffffffffff8381169083168181101561452957614529614323565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006020828403121561457257600080fd5b815160ff81168114610b4c57600080fd5b60006020828403121561459557600080fd5b5051919050565b600065ffffffffffff8083168185168083038211156145bd576145bd614323565b0194935050505056fea26469706673582212200bf7175d0d1400b965b0064707968c4951c99e6c4fdaa7e69f5dae4f87184dc664736f6c634300080f0033",
    "sourceMap": "1198:924:123:-:0;;;1289:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:7;:14;;-1:-1:-1;;;;;;671:14:7;;;-1:-1:-1;;;;;671:14:7;;;;;;;;-1:-1:-1;695:22:7;;;;;;;;;;;;733:32;;1442:7:123;;1451:11;;671:14:7;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:7;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;;5116:25:125;;::::1;;::::0;5151:17:::1;;::::0;-1:-1:-1;;5179:19:125::1;:30:::0;;-1:-1:-1;;;;;;5373:21:125;;;;;-1:-1:-1;;5412:15:125::1;:22:::0;;-1:-1:-1;;5412:22:125::1;-1:-1:-1::0;5412:22:125::1;::::0;;1198:924:123;;14:144:183;-1:-1:-1;;;;;102:31:183;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:771::-;325:6;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;451:9;445:16;470:44;508:5;470:44;:::i;:::-;583:2;568:18;;562:25;533:5;;-1:-1:-1;596:46:183;562:25;596:46;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;726:46:183;692:25;726:46;:::i;:::-;843:2;828:18;;822:25;791:7;;-1:-1:-1;856:46:183;822:25;856:46;:::i;:::-;163:771;;;;-1:-1:-1;163:771:183;;-1:-1:-1;;163:771:183:o;:::-;1198:924:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1198:924:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35790:192:125;;;;;;:::i;:::-;;:::i;:::-;;;345:25:183;;;333:2;318:18;35790:192:125;;;;;;;;15955:183;;;;;;:::i;:::-;;:::i;:::-;;1944:147:7;;;;;;:::i;:::-;;:::i;36917:124:125:-;;;;;;:::i;:::-;36987:7;37013:12;;;:7;:12;;;;;:21;;;;36917:124;36270:160;;;;;;:::i;:::-;;:::i;:::-;;;1096:14:183;;1089:22;1071:41;;1059:2;1044:18;36270:160:125;931:187:183;36766:109:125;36857:11;36766:109;;;1324:42:183;1312:55;;;1294:74;;1282:2;1267:18;36766:109:125;1123:251:183;32108:261:125;;;;;;:::i;:::-;;:::i;1576:544:123:-;;;;;;:::i;:::-;;:::i;4018:50:125:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17475:161;;;;;;:::i;:::-;;:::i;36472:113::-;;;;;;:::i;:::-;36534:7;36560:12;;;:7;:12;;;;;:18;;;;36472:113;3674:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14054:1618;;;;;;:::i;:::-;;:::i;1504:434:7:-;;;;;;:::i;:::-;;:::i;4440:27:125:-;;;;;;;;;;;;;;;3478:10:183;3466:23;;;3448:42;;3436:2;3421:18;4440:27:125;3304:192:183;36024:204:125;;;;;;:::i;:::-;;:::i;551:20:7:-;;;;;;;;;32411:117:125;;;;;;:::i;:::-;32477:7;32503:12;;;:7;:12;;;;;:18;;;;32411:117;36627:97;36710:7;36627:97;;31517:556;;;;;;:::i;:::-;31624:13;31843:12;;;:7;:12;;;;;;;;31816:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32008:10;;;;;;;;;;;:18;;;;32040:16;;31816:39;;;;;32008:18;;;32040:16;31517:556;;;;;4078:42:183;4147:15;;;4129:34;;4199:15;;;4194:2;4179:18;;4172:43;4251:15;;;4231:18;;;4224:43;;;;4303:15;;4298:2;4283:18;;4276:43;4368:14;4356:27;;;4350:3;4335:19;;4328:56;4415:3;4400:19;;4393:35;;;;4055:3;4040:19;31517:556:125;3753:681:183;17915:163:125;;;;;;:::i;:::-;;:::i;3894:27::-;;;;;;;;;3190:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:42:183;4999:15;;;4981:34;;5051:15;;;5046:2;5031:18;;5024:43;5103:15;;;5083:18;;;5076:43;;;;5155:15;;;;5150:2;5135:18;;5128:43;5215:14;;5208:22;5202:3;5187:19;;5180:51;5262:3;5247:19;;5240:35;;;;5306:3;5291:19;;5284:35;5350:3;5335:19;;5328:35;5394:3;5379:19;;5372:35;5438:3;5423:19;;5416:35;5482:3;5467:19;;5460:36;;;;5527:3;5512:19;;5505:36;;;;4907:3;4892:19;3190:45:125;4439:1108:183;17678:195:125;;;;;;:::i;:::-;;:::i;3508:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6160:25:183;;;6204:14;6254:15;;;6249:2;6234:18;;6227:43;6306:15;;6301:2;6286:18;;6279:43;6365:14;6358:22;6353:2;6338:18;;6331:50;6147:3;6132:19;;5939:448;34454:1301:125;;;;;;:::i;:::-;;:::i;15714:199::-;;;;;;:::i;:::-;;:::i;16180:1253::-;;;;;;:::i;:::-;;:::i;32570:649::-;;;;;;:::i;:::-;;:::i;578:26:7:-;;;;;;;;;3312:42:125;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8956:25:183;;;9012:2;8997:18;;8990:34;;;;9043:14;9093:15;;;9073:18;;;9066:43;;;;9145:15;9140:2;9125:18;;9118:43;8943:3;8928:19;3312:42:125;8729:438:183;33261:1158:125;;;;;;:::i;:::-;;:::i;4365:32::-;;;;;;;;;;;;4403:31;;;;;;;;;;;;4160:33;;;;;;;;;18170:2460;;;;;;:::i;:::-;;:::i;3412:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9888:14:183;9929:15;;;9911:34;;9981:15;;;;9976:2;9961:18;;9954:43;10016:10;10062:15;;;10042:18;;;10035:43;;;;10114:15;;;10109:2;10094:18;;10087:43;10167:15;;;10161:3;10146:19;;10139:44;10220:15;;;10214:3;10199:19;;10192:44;10273:15;;;;10267:3;10252:19;;10245:44;10320:3;10305:19;;10298:35;;;;10364:3;10349:19;;10342:35;10408:3;10393:19;;10386:35;9865:3;9850:19;3412:48:125;9493:934:183;4325:34:125;;;;;;;;;;;;4199:35;;;;;;;;;;;;35790:192;35865:7;35885:13;35906:18;35920:3;35906:13;:18::i;:::-;-1:-1:-1;;35941:10:125;;;;:5;:10;;;;;:26;35884:40;;-1:-1:-1;35941:34:125;;35884:40;;35941:34;:::i;:::-;35934:41;35790:192;-1:-1:-1;;;35790:192:125:o;15955:183::-;16037:14;;;;:9;:14;;;;;;;;16023:10;:28;16019:67;;16060:26;;;;;;;;;;;;;;16019:67;16117:14;;;;:9;:14;;;;;;;;;16096:7;:12;;;;;;:35;;;;16117:14;;;;16096:35;;;;;;15955:183::o;1944:147:7:-;883:33;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;10953:2:183;875:58:7;;;10935:21:183;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;875:58:7;;;;;;;;;2018:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;36270:160:125:-;36329:4;36353:12;;;:7;:12;;;;;:21;;;:26;;;;:69;;-1:-1:-1;36383:10:125;;;;:5;:10;;;;;:21;;;36407:15;36383:21;;;;;;:39;36353:69;36345:78;36270:160;-1:-1:-1;;36270:160:125:o;32108:261::-;32172:7;32191:13;32207:74;32244:16;32256:3;32244:11;:16::i;:::-;32262:12;;;;:7;:12;;;;;:18;;;32207:27;32270:3;32207:22;:27::i;:::-;:36;:74;:36;:74::i;:::-;32308:12;;;;:7;:12;;;;;:21;;;32191:90;;-1:-1:-1;32300:29:125;;32299:63;;32341:12;;;;:7;:12;;;;;:21;;;32299:63;;1576:544:123;1649:7;;1771:35;;;;1782:7;1771:35;:::i;:::-;1742:64;;1898:6;:14;;;:19;;1916:1;1898:19;;:83;;;;;1939:6;1922;:14;;;:23;;;:58;;;;4606:13:125;1949:31:123;;:6;:14;;;:31;;;1922:58;1894:134;;;2002:26;;;;;;;;;;;;;;1894:134;2092:21;2106:6;2092:13;:21::i;:::-;2085:28;1576:544;-1:-1:-1;;;;1576:544:123:o;17475:161:125:-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;10953:2:183;875:58:7;;;10935:21:183;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;875:58:7;10751:336:183;875:58:7;17604:15:125::1;:25:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;17475:161::o;14054:1618::-;14194:11;14201:3;14194:6;:11::i;:::-;14189:51;;14214:26;;;;;;;;;;;;;;14189:51;14304:13;;;;:10;:13;:::i;:::-;:18;;;;:40;;-1:-1:-1;14326:13:125;;;;;;;;:::i;:::-;:18;;;14304:40;:62;;;-1:-1:-1;14348:13:125;;;;;;;;:::i;:::-;:18;;;14304:62;14300:113;;;14387:26;;;;;;;;;;;;;;14300:113;14502:13;;;;;;;;:::i;:::-;14486:29;;:13;;;;:10;:13;:::i;:::-;:29;;;14482:68;;;14524:26;;;;;;;;;;;;;;14482:68;14561:25;14589:13;;;:8;:13;;;;;;;;14686:20;;14589:13;;14686:20;;;;;;;14670:13;;;;;;:::i;:::-;:36;;;14666:75;;;14715:26;;;;;;;;;;;;;;14666:75;14836:20;;;;;;;14820:13;;;;;;;;:::i;:::-;:36;;;14816:75;;;14865:26;;;;;;;;;;;;;;14816:75;14947:24;14974:12;;;:7;:12;;;;;;;;;14947:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15000:10;:26;14996:67;;15035:28;;;;;;;;;;;;;;14996:67;15122:13;;;;:10;:13;:::i;:::-;15102:33;;;;;;;;;;;;;;;;15173:130;15217:13;;;;;;:::i;:::-;15253:10;;;;:5;:10;;;;;:21;;;15209:22;;;;;;15245:48;;15278:15;;15253:21;;;;;15245:48;:::i;:::-;15173:15;;;;;:130;:22;:130::i;:::-;15145:25;;;:158;;;15450:15;;;;:43;:117;;15566:1;15450:117;;;15526:4;:25;;;15508:6;:15;;;:43;;;;:::i;:::-;15425:22;;;:142;15604:13;;;;;;;;:::i;:::-;15577:40;;;;;;;;;;;;;;;;15652:13;;;;;;;;:::i;:::-;15627:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;14054:1618:125:o;1504:434:7:-;1775:5;;;;1761:10;:19;;:76;;-1:-1:-1;1784:9:7;;:53;;;;;1802:10;1784:53;;;13302:34:183;1822:4:7;13352:18:183;;;13345:43;1784:9:7;1829:7;;;13404:18:183;;;13397:107;1784:9:7;;;;;:17;;13214:18:183;;1784:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;;;;;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:7;1504:434;:::o;36024:204:125:-;36081:4;36115:10;;;:5;:10;;;;;:18;;;;;4606:13;36151:25;;;36150:71;;36206:15;36195:7;:26;;36150:71;;;36180:12;;36143:78;-1:-1:-1;;36024:204:125:o;17915:163::-;17995:12;;;;:7;:12;;;;;:18;;;17981:10;:32;17977:73;;18022:28;;;;;;;;;;;;;;17977:73;18060:11;18067:3;18060:6;:11::i;:::-;17915:163;:::o;17678:195::-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;10953:2:183;875:58:7;;;10935:21:183;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;875:58:7;10751:336:183;875:58:7;17828:28:125::1;::::0;;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:38;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;17678:195::o;34454:1301::-;34518:7;34564:13;;;:8;:13;;;;;;;;34537:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34662:15;34934:23;;;34930:819;;;35183:22;;;;35050:23;;;;35124:168;;35175:46;;35050:23;;35175:31;;:46;:::i;:::-;35251:22;;;;35124:12;;;;:7;:12;;;;;:22;;;;:168;35243:31;;;;;35124:29;:168;:::i;:::-;35101:191;34454:1301;-1:-1:-1;;;;;;34454:1301:125:o;34930:819::-;35489:22;;;;35400:23;;;;35474:37;;;;:264;;35558:180;35647:12;35621:4;:22;;;35613:31;;:46;;;;:::i;35558:180::-;35474:264;;;35534:1;35451:287;34454:1301;-1:-1:-1;;;;;;34454:1301:125:o;15714:199::-;15815:12;;;;:7;:12;;;;;:18;;;15801:10;:32;15797:73;;15842:28;;;;;;;;;;;;;;15797:73;15880:14;;;;:9;:14;;;;;;:26;;;;;;;;;;;;;;15714:199::o;16180:1253::-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;10953:2:183;875:58:7;;;10935:21:183;10992:2;10972:18;;;10965:30;11031:14;11011:18;;;11004:42;11063:18;;875:58:7;10751:336:183;875:58:7;16430:12:125::1;::::0;::::1;::::0;16415;;:27:::1;::::0;;::::1;::::0;::::1;;16411:66;;;16451:26;;;;;;;;;;;;;;16411:66;16571:12:::0;;::::1;::::0;16556;;:27:::1;::::0;;::::1;::::0;::::1;;16552:66;;;16592:26;;;;;;;;;;;;;;16552:66;16710:12:::0;;::::1;::::0;16695;;::::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;;16691:66;;;16731:26;;;;;;;;;;;;;;16691:66;16856:12:::0;;::::1;::::0;:16:::1;::::0;16871:1:::1;16856:16;:::i;:::-;16841:31;;:9:::0;16851:1:::1;16841:12;;;;:31;;;16837:70;;;16881:26;;;;;;;;;;;;;;16837:70;16967:9:::0;16977:1:::1;16967:12;;;::::0;16945:19:::1;:34:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;17013:9;-1:-1:-1;17013:12:125::1;;;::::0;16989:21:::1;:36:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17058:9;17068:1:::1;17058:12;;;::::0;17035:20:::1;:35:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17101:9;17111:1:::1;17101:12;;;::::0;17080:18:::1;:33:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17143:9;17153:1:::1;17143:12;;;::::0;17123:17:::1;:32:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;17181:9;17191:1:::1;17181:12;::::0;;::::1;::::0;;;::::1;::::0;17165:13:::1;:28:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;17209:217:::1;::::0;;17238:19;;;;;;;;;;14469:34:183;;17271:21:125;;::::1;::::0;::::1;14519:18:183::0;;;14512:43;;;;17306:20:125;;::::1;::::0;::::1;14571:18:183::0;;;14564:43;17340:18:125;;::::1;::::0;::::1;14638:2:183::0;14623:18;;14616:43;17372:17:125;;::::1;::::0;::::1;14690:3:183::0;14675:19;;14668:44;17403:13:125;;::::1;;14743:3:183::0;14728:19;;14721:44;17209:217:125::1;::::0;14427:3:183;14412:19;17209:217:125::1;;;;;;;16180:1253:::0;:::o;32570:649::-;32809:25;;;;;:14;1312:55:183;;;32809:25:125;;;1294:74:183;-1:-1:-1;;;;32794:46:125;;32809:7;:14;;;;;;1267:18:183;;32809:25:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32794:7;;:46;;32836:3;32794:14;:46::i;:::-;32850:14;32890:12;;;:7;:12;;;;;:18;;;32780:60;;-1:-1:-1;32850:14:125;32867:60;;32910:16;32898:3;32910:11;:16::i;:::-;32868:13;32878:3;32868:7;:13;:::i;:::-;32867:22;:60;:22;:60::i;:::-;33083:12;;;;:7;:12;;;;;:22;;;32850:77;;-1:-1:-1;33074:31:125;;33070:143;;;33128:30;;;;;;;;;;;;;;33070:143;33196:6;-1:-1:-1;33189:13:125;;-1:-1:-1;33189:13:125;33261:1158;33343:7;33563:12;;;:7;:12;;;;;;;;33536:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33343:7;33601:16;33563:12;33601:11;:16::i;:::-;33585:32;;33627:21;33651:6;:22;;;:110;;33748:12;;;;33718:15;;;;:43;;33741:5;;33718:22;:43::i;:::-;33651:110;;;33688:6;:15;;;33651:110;33627:134;;33771:16;33790:44;33814:5;33821:6;:12;;;33790:6;:16;;;:23;;:44;;;;;:::i;:::-;33771:63;;33844:22;33885:8;33869:13;:24;:51;;33912:8;33869:51;;;33896:13;33869:51;34334:25;;;;;:14;1312:55:183;;;34334:25:125;;;1294:74:183;33844:76:125;;-1:-1:-1;;;34312:53:125;;34334:7;:14;;;;;;1267:18:183;;34334:25:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34312:14;;:53;;34361:3;34312:21;:53::i;:::-;34289:76;-1:-1:-1;34383:29:125;34289:76;34383:14;:29;:::i;:::-;34376:36;33261:1158;-1:-1:-1;;;;;;;;;33261:1158:125:o;18170:2460::-;18302:14;18332:10;:30;18354:7;18332:30;;18328:69;;18371:26;;;;;;;;;;;;;;18328:69;18408:25;18436:12;;;:7;:12;;;;;;;;18482:5;:10;;;;;;;18458:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18591:19;;;;18436:12;;18458:34;18591:33;:19;:33;;;;:70;;-1:-1:-1;18648:12:125;;;;18629:32;;;;:18;:32;;;;;;;;18628:33;18591:70;18587:121;;;18682:26;;;;;;;;;;;;;;18587:121;18765:18;18793:15;18765:44;;18838:4;:15;;;18823:30;;:11;:30;;;18819:86;;18889:15;;;;18862:43;;;;;15205:14:183;15193:27;;;18862:43:125;;;15175:46:183;15148:18;;18862:43:125;15030:197:183;18819:86:125;18916:13;18957:56;18975:3;18980:7;18996:15;18957:17;:56::i;:::-;18939:74;-1:-1:-1;18939:74:125;-1:-1:-1;19138:22:125;;;19134:69;;;19169:34;;;;;;;;;;;;;;19134:69;19380:6;:16;;;19371:6;:25;19367:68;;;19405:30;;;;;;;;;;;;;;19367:68;19811:22;;;;;;;;;:77;;19873:6;:15;;;19864:6;:24;19811:77;;;19846:6;:15;;;19836:7;:25;19811:77;19807:132;;;19909:30;;;;;;;;;;;;;;19807:132;20033:22;;;;;;;;;:41;;20068:6;20033:41;;;20058:7;20033:41;20014:6;:15;;;:60;;;;;;;:::i;:::-;;;;;;;;20234:7;20214:6;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;20266:6;20251;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;20376:16:125;;;;20361:12;;;;:31;20357:267;;;20408:11;20415:3;20408:6;:11::i;:::-;20357:267;;;20583:30;20589:3;20594:11;20607:5;20583;:30::i;:::-;18318:2312;;;;18170:2460;;;;;:::o;30870:548::-;30966:13;31087:16;;;:11;:16;;;;;;;;31062:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30966:13;;;;31113:38;;31139:1;31142;31145:5;31131:20;;;;;;;;;31113:38;31203:19;;;;31177:45;;31184:15;31177:45;:::i;:::-;31162:60;;31256:4;:19;;;31241:34;;:12;:34;;;31232:43;;31293:6;:118;;31400:11;;31293:118;;;31364:19;;;;31314:11;;:71;;31333:21;;;;;31356:28;31314:18;:71::i;:::-;31285:126;;31052:366;30870:548;;;;;;:::o;958:540:7:-;1078:9;;1045:4;;1078:9;;1396:27;;;;;:77;;-1:-1:-1;1427:46:7;;;;;:12;13320:15:183;;;1427:46:7;;;13302:34:183;1454:4:7;13352:18:183;;;13345:43;13436:66;13424:79;;13404:18;;;13397:107;1427:12:7;;;;;13214:18:183;;1427:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:7;;;1478:13;;;1486:5;;1478:13;1388:103;;;958:540;;;;:::o;5171:353:86:-;5285:14;5320:25;5327:1;5330;5333:11;5320:6;:25::i;:::-;5311:34;;5411:1;5396:11;5383:25;;;;;:::i;:::-;5393:1;5390;5383:25;:29;5379:129;;;5449:17;5440:6;:26;5432:35;;;;;;5485:8;;5171:353;;;;;:::o;5704:8308:125:-;5891:15;;5774:7;;5891:15;;5886:62;;5915:33;;;;;;;;;;;;;;5886:62;6006:25;6034:7;:19;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6006:58;;6078:24;6105:7;:18;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6078:56;;6175:1;6153:19;:23;;;:51;;;;6202:2;6180:19;:24;;;6153:51;6149:106;;;6229:26;;;;;;;;;;;;;;6149:106;6294:1;6273:18;:22;;;:49;;;;6320:2;6299:18;:23;;;6273:49;6269:104;;;6347:26;;;;;;;;;;;;;;6269:104;6417:3;6391:7;:23;;;:29;;;:61;;;;6450:2;6424:7;:23;;;:28;;;6391:61;6387:116;;;6477:26;;;;;;;;;;;;;;6387:116;6611:10;6592:30;;;;:18;:30;;;;;;;;6591:31;:69;;;;-1:-1:-1;6626:20:125;;;;:34;;;;6591:69;6587:124;;;6685:26;;;;;;;;;;;;;;6587:124;5793:929;;7073:13;7143:7;:23;;;7138:2;:28;7128:39;;:2;:39;7120:47;;7224:7;:29;;;7192:7;:29;;;:61;7188:122;;;7274:36;;;;;;;;;;;;;;7188:122;7429:19;;7450:18;;;;7402:67;;;;;:26;16212:15:183;;;7402:67:125;;;16194:34:183;16264:15;;;16244:18;;;16237:43;7383:16:125;;7402:11;:26;;;;16106:18:183;;7402:67:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7383:86;;7480:26;7516:24;7702:15;7681:7;:18;;;:36;;;;;;:::i;:::-;7775:17;;7652:66;;-1:-1:-1;7775:17:125;;;;;;;7753:39;;;;;:103;;-1:-1:-1;7838:18:125;;7812:23;;;;7838:18;;;;;;;7812:44;;;7753:103;:168;;;;7902:19;7876:45;;:7;:23;;;:45;;;7753:168;7732:237;;;7943:26;;;;;;;;;;;;;;7732:237;8540:20;8563:7;:23;;;8589:1;8563:27;;;;:::i;:::-;8624:20;;8540:50;;-1:-1:-1;8624:36:125;;;;:20;;;;;:36;:107;;8718:13;8624:107;;;8679:20;;;;;;;8624:107;8873:19;;8847:23;;;;8604:127;;-1:-1:-1;8746:28:125;;8777:289;;8873:19;;;;8847:45;;;:141;;8969:19;;;;8847:141;;;8919:7;:23;;;8847:141;8818:188;;9032:19;9024:28;;8777:7;:16;;;:23;;:289;;;;;:::i;:::-;9102:940;;;;;;;;;;9150:15;9102:940;;;;;;;;;;;;;;;;;;;9298:23;;;;9102:940;;;;;;9379:19;;9353:23;;8746:320;;-1:-1:-1;9102:940:125;;;;;;9379:19;;;9353:45;;;:133;;9467:19;;;;9353:133;;;9421:7;:23;;;9353:133;9102:940;;;;;;9525:21;;;;;;;9102:940;;;;;;;;;;;;;;;;;9697:16;;;;9102:940;;;9697:39;;9640:20;;9697:39;:::i;:::-;9102:940;;;;9768:259;9978:17;9970:26;;10006:19;9998:28;;9790:7;:23;;;:154;;9928:7;:16;;;9790:154;;;9871:29;;;;9840:16;;;;:61;;9864:5;;9840:23;:61::i;9768:259::-;9102:940;;9081:18;;;;:8;:18;;;;;;;;:961;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9081:961:125;;;;;;;;;;;;;;;;;;;;;10711:23;;;;9081:18;;-1:-1:-1;9081:18:125;;-1:-1:-1;9081:18:125;;10711:138;;10833:7;:16;;;10711:138;;;10784:29;;;;10753:16;;;;:61;;10777:5;;10753:23;:61::i;:::-;10692:157;-1:-1:-1;10877:73:125;10692:157;10893:26;;;;;10921:28;;;;10877:15;:73;:::i;:::-;10864:86;;11404:125;11445:7;:23;;;11437:32;;11495:19;11487:28;;11404:8;:15;;:125;;;;;:::i;:::-;11392:137;;10678:862;11570:480;;;;;;;;11602:10;11570:480;;;;;;11639:7;:19;;;11570:480;;;;;;11684:7;:18;;;11570:480;;;;;;11730:7;:20;;;11570:480;;;;;;11781:7;:23;;;11570:480;;;;;;11828:7;:16;;;11570:480;;;;11869:10;11570:480;;;;11903:7;:29;;;11570:480;;;;11957:9;11570:480;;;;12012:1;11570:480;;;;11991:1;11570:480;;;;12034:5;11570:480;;;11550:7;:17;11558:8;11550:17;;;;;;;;;;;:500;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12679:22;12749:13;;;;;;;;;;;12704:58;;:42;4665:3;12704:42;;12735:10;12704:9;:16;;:42;;;;;:::i;:::-;:58;:143;;12834:13;;;;;;;12704:143;;;12777:42;:9;4665:3;12808:10;12777:16;:42::i;:::-;12679:168;;12857:15;12900:152;12964:14;12943:7;:18;;;:35;;;:73;;13002:14;12943:73;;;12981:7;:18;;;12943:73;;;12900:10;;13035:3;12900:17;:152::i;:::-;12875:177;;:10;:177;:::i;:::-;13500:29;;;;12857:195;;-1:-1:-1;13474:23:125;;13500:55;;13537:5;13544:10;13500:36;:55::i;:::-;13474:81;;13584:179;;;;;;;;13625:15;13584:179;;;;13663:7;13584:179;;;;13693:7;:15;;;13584:179;;;;;;13734:7;:18;;;13584:179;;;;;13566:5;:15;13572:8;13566:15;;;;;;;;;;;:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13878:7;:18;;;13779:200;;13836:7;:19;;;13779:200;;13806:8;13779:200;13911:7;:15;;;13940:7;:29;;;13779:200;;;;;;16682:14:183;16670:27;;;;16652:46;;16729:2;16714:18;;16707:34;16640:2;16625:18;;16480:267;13779:200:125;;;;;;;;-1:-1:-1;13997:8:125;;5704:8308;-1:-1:-1;;;;;;;;;5704:8308:125:o;742:4147:86:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:86;;;;-1:-1:-1;1787:13:86;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;3784:1;2787;2753:31;;:35;;2752:51;;2909:22;;;;3765:1;:15;;3764:21;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;;;2737:12;3321;;;3317:23;;;3313:31;;;2490:20;;;2479:32;;;3380:12;;;;2537:21;;3053:16;;;;3371:21;;;;4834:11;;;-1:-1:-1;;;;742:4147:86:o;20824:170:125:-;20872:10;;;;:5;:10;;;;;;;;:21;;;;:47;;;;;20903:15;20872:47;;;;;;20929:12;;;;;;:21;;:25;;;20970:17;20872:10;;20970:17;;;20824:170;:::o;21459:3721::-;21578:20;21654:12;;;:7;:12;;;;;;;;21627:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21578:20;;;22258:16;21654:12;22258:11;:16::i;:::-;22284:12;;;;:7;:12;;;;;;;;:22;;;;:36;;;22538:16;;;;;:23;;;22284:36;;-1:-1:-1;22538:23:125;;;;;22534:514;;;22577:29;22609:16;;;:11;:16;;;;;;22577:29;;22700:18;22621:3;22700:13;:18::i;:::-;22732:10;;;;:5;:10;;;;;:38;;22640:78;;-1:-1:-1;22640:78:125;;-1:-1:-1;22640:78:125;;-1:-1:-1;22640:78:125;;22732:38;;22640:78;;22732:38;:::i;:::-;;;;-1:-1:-1;;22785:253:125;;;;22841:8;22820:10;:17;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;22867:25:125;;;:41;;22896:12;;22867:25;;;:41;;22896:12;;22867:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;22954:5;22926:10;:25;;;:33;;;;;;;;;;;;;;;;;;22785:253;;;22998:17;;;:25;;;;;;22785:253;22563:485;;;;22534:514;23140:24;23160:3;23140:19;:24::i;:::-;23193:15;;;;23125:39;;-1:-1:-1;23222:23:125;;;23218:52;;;23262:8;23247:23;;23218:52;23553:12;;;;23538:42;;:7;;23567:12;23538:14;:42::i;:::-;23636:25;23672:13;;;:8;:13;;;;;:31;;23737:26;;;;;23528:52;;-1:-1:-1;23672:31:125;;;;;;;;23737:26;23801:23;;;;;;;23636:25;23946:49;;23672:31;;23528:52;;23737:26;;23946;:49;:::i;:::-;24005:13;;;;:8;:13;;;;;:53;;23917:78;;-1:-1:-1;23917:78:125;;24005:23;;:53;;23917:78;;24005:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24715:19;24745:9;24737:5;:17;;;:243;;24962:17;;;;:9;:17;:::i;:::-;24941:39;;:17;:39;:::i;:::-;24737:243;;;24808:17;24816:9;24808:17;;;;:::i;:::-;24787;:39;:125;;24911:1;24787:125;;;24870:17;24878:9;24870:17;;;;:::i;:::-;24849:39;;:17;:39;:::i;:::-;24715:265;-1:-1:-1;25113:7:125;25027:71;25046:17;25065:32;25079:18;24715:265;25065:32;:::i;:::-;25027:11;;:71;:18;:71::i;:::-;:93;;;;:::i;:::-;:109;;25135:1;25027:109;:::i;:::-;24990:12;;;;:7;:12;;;;;;:22;;:146;;;;-1:-1:-1;21459:3721:125;;;;-1:-1:-1;21459:3721:125;;-1:-1:-1;;;;;;;;21459:3721:125:o;25434:4428::-;25541:24;25568:8;:13;25577:3;25568:13;;;;;;;;;;;25541:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25591:24;25618:7;:12;25626:3;25618:12;;;;;;;;;;;25591:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26333:21;26389:5;26365;:10;26371:3;26365:10;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;;:::i;:::-;26357:38;;26333:62;;26466:16;26485:6;:22;;;:111;;26581:6;:15;;;26485:111;;;26545:12;;;;26522:15;;;;:44;;26559:6;26522:22;:44::i;:::-;26466:130;;26715:23;26765:6;:22;;;:84;;26838:6;:11;;;26765:84;;;26814:12;;;;26790:16;;;;:45;;26828:6;26790:23;:45::i;:::-;26741:109;;:8;:109;:::i;:::-;26715:135;;27108:27;27257:8;27138:116;27197:13;27182:4;:11;;;27174:20;;:36;;;;:::i;:::-;27232:4;:11;;;27224:20;;27138:15;:22;;:116;;;;;:::i;:::-;:127;;;;:::i;:::-;27108:157;;27312:4;:22;;;27294:6;:15;;;:40;:81;;;;;27360:15;27338:19;:37;27294:81;27293:184;;;-1:-1:-1;27418:17:125;;;;27402:13;;:33;;;;;;:::i;:::-;27393:42;;:5;:42;;;;:83;;;;;27461:15;27439:19;:37;27393:83;27276:2580;;;27881:61;27905:4;:20;;;27897:29;;27928:13;27881:8;:15;;:61;;;;;:::i;:::-;27856:12;;;;:7;:12;;;;;;:22;;:86;;;;28562:22;;;;28611:11;;;;27856:12;;28510:127;;:19;;28554:31;;;;;28603:20;;;28510:26;:127;:::i;:::-;28718:23;28744:10;;;:5;:10;;;;;:26;28829:12;;;;28489:148;;-1:-1:-1;28744:26:125;28813:41;;:6;;28489:148;28813:15;:41::i;:::-;28874:47;;;17163:25:183;;;17219:2;17204:18;;17197:34;;;28784:70:125;;-1:-1:-1;28880:3:125;;28874:47;;17136:18:183;28874:47:125;;;;;;;28961:15;28940:18;:36;28936:639;;;29152:14;29169:36;29187:18;29169:15;:36;:::i;:::-;29152:53;;29242:57;;;;;;;;29253:6;29242:57;;;;29261:5;29242:57;;;;;;29268:4;:24;;;29242:57;;;;;;;;29294:4;29242:57;;;;;29223:11;:16;29235:3;29223:16;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28978:336;28936:639;;;29377:10;;;;:5;:10;;;;;;;;:47;;;29529:11;:16;;;;;:23;;:31;;;;;;28936:639;29589:13;;;;:8;:13;;;;;:30;;;;;;;;;;29685:25;;;;29667:15;;;;:43;:125;;29791:1;29667:125;;;29747:4;:25;;;29729:6;:15;;;:43;;;;:::i;:::-;29633:13;;;;:8;:13;;;;;:31;;;:159;;;;29806:26;;:39;;;;-1:-1:-1;;27276:2580:125;25531:4331;;;;;;25434:4428;;;:::o;30331:214::-;30396:7;30442:12;;;:7;:12;;;;;;;;30415:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30471:10;;;;;;;;;;:26;30415:39;;30471:67;;:26;30415:39;30471:35;:67::i;14:180:183:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:183;;14:180;-1:-1:-1;14:180:183:o;381:154::-;467:42;460:5;456:54;449:5;446:65;436:93;;525:1;522;515:12;540:134;608:20;;637:31;608:20;637:31;:::i;:::-;540:134;;;:::o;679:247::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;846:9;833:23;865:31;890:5;865:31;:::i;1379:591::-;1449:6;1457;1510:2;1498:9;1489:7;1485:23;1481:32;1478:52;;;1526:1;1523;1516:12;1478:52;1566:9;1553:23;1595:18;1636:2;1628:6;1625:14;1622:34;;;1652:1;1649;1642:12;1622:34;1690:6;1679:9;1675:22;1665:32;;1735:7;1728:4;1724:2;1720:13;1716:27;1706:55;;1757:1;1754;1747:12;1706:55;1797:2;1784:16;1823:2;1815:6;1812:14;1809:34;;;1839:1;1836;1829:12;1809:34;1884:7;1879:2;1870:6;1866:2;1862:15;1858:24;1855:37;1852:57;;;1905:1;1902;1895:12;1852:57;1936:2;1928:11;;;;;1958:6;;-1:-1:-1;1379:591:183;;-1:-1:-1;;;;1379:591:183:o;1975:118::-;2061:5;2054:13;2047:21;2040:5;2037:32;2027:60;;2083:1;2080;2073:12;2098:128;2163:20;;2192:28;2163:20;2192:28;:::i;2231:241::-;2287:6;2340:2;2328:9;2319:7;2315:23;2311:32;2308:52;;;2356:1;2353;2346:12;2308:52;2395:9;2382:23;2414:28;2436:5;2414:28;:::i;2708:320::-;2800:6;2808;2861:3;2849:9;2840:7;2836:23;2832:33;2829:53;;;2878:1;2875;2868:12;2829:53;2914:9;2901:23;2891:33;;2960:7;2954:3;2943:9;2939:19;2936:32;2933:52;;;2981:1;2978;2971:12;2933:52;-1:-1:-1;2708:320:183;3019:2;3004:18;;;;;-1:-1:-1;2708:320:183:o;5552:382::-;5617:6;5625;5678:2;5666:9;5657:7;5653:23;5649:32;5646:52;;;5694:1;5691;5684:12;5646:52;5733:9;5720:23;5752:31;5777:5;5752:31;:::i;:::-;5802:5;-1:-1:-1;5859:2:183;5844:18;;5831:32;5872:30;5831:32;5872:30;:::i;:::-;5921:7;5911:17;;;5552:382;;;;;:::o;6392:315::-;6460:6;6468;6521:2;6509:9;6500:7;6496:23;6492:32;6489:52;;;6537:1;6534;6527:12;6489:52;6573:9;6560:23;6550:33;;6633:2;6622:9;6618:18;6605:32;6646:31;6671:5;6646:31;:::i;6712:184::-;6764:77;6761:1;6754:88;6861:4;6858:1;6851:15;6885:4;6882:1;6875:15;6901:247;6968:2;6962:9;7010:3;6998:16;;7044:18;7029:34;;7065:22;;;7026:62;7023:88;;;7091:18;;:::i;:::-;7127:2;7120:22;6901:247;:::o;7153:163::-;7220:20;;7280:10;7269:22;;7259:33;;7249:61;;7306:1;7303;7296:12;7321:765;7402:6;7455:3;7443:9;7434:7;7430:23;7426:33;7423:53;;;7472:1;7469;7462:12;7423:53;7521:7;7514:4;7503:9;7499:20;7495:34;7485:62;;7543:1;7540;7533:12;7485:62;7576:2;7570:9;7618:3;7610:6;7606:16;7688:6;7676:10;7673:22;7652:18;7640:10;7637:34;7634:62;7631:88;;;7699:18;;:::i;:::-;7735:2;7728:22;7770:6;7814:3;7799:19;;7830;;;7827:39;;;7862:1;7859;7852:12;7827:39;7886:9;7904:151;7920:6;7915:3;7912:15;7904:151;;;7988:22;8006:3;7988:22;:::i;:::-;7976:35;;8040:4;8031:14;;;;7937;7904:151;;;-1:-1:-1;8074:6:183;;7321:765;-1:-1:-1;;;;;7321:765:183:o;8091:383::-;8168:6;8176;8184;8237:2;8225:9;8216:7;8212:23;8208:32;8205:52;;;8253:1;8250;8243:12;8205:52;8289:9;8276:23;8266:33;;8346:2;8335:9;8331:18;8318:32;8308:42;;8400:2;8389:9;8385:18;8372:32;8413:31;8438:5;8413:31;:::i;:::-;8463:5;8453:15;;;8091:383;;;;;:::o;9172:316::-;9249:6;9257;9265;9318:2;9306:9;9297:7;9293:23;9289:32;9286:52;;;9334:1;9331;9324:12;9286:52;-1:-1:-1;;9357:23:183;;;9427:2;9412:18;;9399:32;;-1:-1:-1;9478:2:183;9463:18;;;9450:32;;9172:316;-1:-1:-1;9172:316:183:o;10432:184::-;10484:77;10481:1;10474:88;10581:4;10578:1;10571:15;10605:4;10602:1;10595:15;10621:125;10661:4;10689:1;10686;10683:8;10680:34;;;10694:18;;:::i;:::-;-1:-1:-1;10731:9:183;;10621:125::o;11092:::-;11177:14;11170:5;11166:26;11159:5;11156:37;11146:65;;11207:1;11204;11197:12;11222:132;11289:20;;11318:30;11289:20;11318:30;:::i;11359:159::-;11424:20;;11395:5;11473:20;;;11463:31;;11453:59;;11508:1;11505;11498:12;11523:1135;11613:6;11666:3;11654:9;11645:7;11641:23;11637:33;11634:53;;;11683:1;11680;11673:12;11634:53;11709:17;;:::i;:::-;11749:29;11768:9;11749:29;:::i;:::-;11742:5;11735:44;11811:38;11845:2;11834:9;11830:18;11811:38;:::i;:::-;11806:2;11799:5;11795:14;11788:62;11882:38;11916:2;11905:9;11901:18;11882:38;:::i;:::-;11877:2;11870:5;11866:14;11859:62;11953:35;11984:2;11973:9;11969:18;11953:35;:::i;:::-;11948:2;11941:5;11937:14;11930:59;12050:3;12039:9;12035:19;12022:33;12016:3;12009:5;12005:15;11998:58;12117:3;12106:9;12102:19;12089:33;12083:3;12076:5;12072:15;12065:58;12184:3;12173:9;12169:19;12156:33;12150:3;12143:5;12139:15;12132:58;12223:38;12256:3;12245:9;12241:19;12223:38;:::i;:::-;12217:3;12210:5;12206:15;12199:63;12281:3;12316:37;12349:2;12338:9;12334:18;12316:37;:::i;:::-;12300:14;;;12293:61;12373:3;12408:37;12426:18;;;12408:37;:::i;:::-;12392:14;;;12385:61;12465:3;12500:37;12518:18;;;12500:37;:::i;:::-;12484:14;;;12477:61;12557:3;12592:35;12608:18;;;12592:35;:::i;:::-;12576:14;;;12569:59;12580:5;11523:1135;-1:-1:-1;;;11523:1135:183:o;12852:184::-;12910:6;12963:2;12951:9;12942:7;12938:23;12934:32;12931:52;;;12979:1;12976;12969:12;12931:52;13002:28;13020:9;13002:28;:::i;13515:245::-;13582:6;13635:2;13623:9;13614:7;13610:23;13606:32;13603:52;;;13651:1;13648;13641:12;13603:52;13683:9;13677:16;13702:28;13724:5;13702:28;:::i;13765:128::-;13805:3;13836:1;13832:6;13829:1;13826:13;13823:39;;;13842:18;;:::i;:::-;-1:-1:-1;13878:9:183;;13765:128::o;13898:262::-;13937:7;13969:10;14006:2;14003:1;13999:10;14036:2;14033:1;14029:10;14092:3;14088:2;14084:12;14079:3;14076:21;14069:3;14062:11;14055:19;14051:47;14048:73;;;14101:18;;:::i;:::-;14141:13;;13898:262;-1:-1:-1;;;;13898:262:183:o;14776:249::-;14845:6;14898:2;14886:9;14877:7;14873:23;14869:32;14866:52;;;14914:1;14911;14904:12;14866:52;14946:9;14940:16;14965:30;14989:5;14965:30;:::i;15232:225::-;15271:4;15300:14;15364:10;;;;15334;;15386:12;;;15383:38;;;15401:18;;:::i;:::-;15438:13;;15232:225;-1:-1:-1;;;15232:225:183:o;15462:184::-;15514:77;15511:1;15504:88;15611:4;15608:1;15601:15;15635:4;15632:1;15625:15;15651:273;15719:6;15772:2;15760:9;15751:7;15747:23;15743:32;15740:52;;;15788:1;15785;15778:12;15740:52;15820:9;15814:16;15870:4;15863:5;15859:16;15852:5;15849:27;15839:55;;15890:1;15887;15880:12;16291:184;16361:6;16414:2;16402:9;16393:7;16389:23;16385:32;16382:52;;;16430:1;16427;16420:12;16382:52;-1:-1:-1;16453:16:183;;16291:184;-1:-1:-1;16291:184:183:o;16752:232::-;16791:3;16819:14;16860:2;16857:1;16853:10;16890:2;16887:1;16883:10;16921:3;16917:2;16913:12;16908:3;16905:21;16902:47;;;16929:18;;:::i;:::-;16965:13;;16752:232;-1:-1:-1;;;;16752:232:183:o",
    "linkReferences": {},
    "immutableReferences": {
      "55844": [
        {
          "start": 840,
          "length": 32
        },
        {
          "start": 10660,
          "length": 32
        }
      ],
      "55847": [
        {
          "start": 1296,
          "length": 32
        },
        {
          "start": 7550,
          "length": 32
        },
        {
          "start": 8208,
          "length": 32
        },
        {
          "start": 8387,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "adjustments(uint256)": "bc3b2b12",
    "allowNewMarkets()": "afa9d3b0",
    "authority()": "bf7e214f",
    "callbackAuthorized(address)": "5dc4d16b",
    "closeMarket(uint256)": "ae418095",
    "createMarket(bytes)": "53c7f8e0",
    "currentCapacity(uint256)": "1c063a6c",
    "currentControlVariable(uint256)": "0a9d85eb",
    "currentDebt(uint256)": "bcb29667",
    "defaultTuneAdjustment()": "ea0aca33",
    "defaultTuneInterval()": "d9ccdc93",
    "getAggregator()": "3ad59dbc",
    "getMarketInfoForPurchase(uint256)": "acc5570c",
    "getTeller()": "9787d107",
    "isInstantSwap(uint256)": "8b098db3",
    "isLive(uint256)": "27507458",
    "marketPrice(uint256)": "3adec5a7",
    "marketScale(uint256)": "946824cd",
    "markets(uint256)": "b1283e77",
    "maxAmountAccepted(uint256,address)": "c7bf8ca0",
    "metadata(uint256)": "e3684e39",
    "minDebtBuffer()": "8973082c",
    "minDebtDecayInterval()": "e9220673",
    "minDepositInterval()": "d2040687",
    "minMarketDuration()": "d2bee323",
    "newOwners(uint256)": "6729a41e",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "payoutFor(uint256,uint256,address)": "bf48582b",
    "pullOwnership(uint256)": "10b05317",
    "purchaseBond(uint256,uint256,uint256)": "e007fa97",
    "pushOwnership(uint256,address)": "bcf6cde8",
    "setAllowNewMarkets(bool)": "5f77274e",
    "setAuthority(address)": "7a9e5e4b",
    "setCallbackAuthStatus(address,bool)": "bbbdd95a",
    "setDefaults(uint32[6])": "bd1f3a5e",
    "setIntervals(uint256,uint32[3])": "699e17d9",
    "setOwner(address)": "13af4035",
    "terms(uint256)": "c0aa0e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"teller_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auctioneer_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_BadExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InitialPriceLessThanMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"conclusion_\",\"type\":\"uint256\"}],\"name\":\"Auctioneer_MarketConcluded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_MaxPayoutExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NewMarketsNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_NotEnoughCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auctioneer_OnlyMarketOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"defaultTuneAdjustment\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtDecayInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDepositInterval\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minMarketDuration\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minDebtBuffer\",\"type\":\"uint32\"}],\"name\":\"DefaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldControlVariable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newControlVariable\",\"type\":\"uint256\"}],\"name\":\"Tuned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adjustments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"change\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"lastAdjustment\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timeToAdjusted\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowNewMarkets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callbackAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"createMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentControlVariable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"currentDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneAdjustment\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTuneInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAggregator\",\"outputs\":[{\"internalType\":\"contract IBondAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"getMarketInfoForPurchase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeller\",\"outputs\":[{\"internalType\":\"contract IBondTeller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isInstantSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"marketScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"payoutToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"maxAmountAccepted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"lastTune\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastDecay\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"length\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"depositInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"tuneAdjustmentDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"debtDecayInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"tuneIntervalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tuneBelowCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTuneDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDebtDecayInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"payoutFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchaseBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setAllowNewMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setCallbackAuthStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[6]\",\"name\":\"defaults_\",\"type\":\"uint32[6]\"}],\"name\":\"setDefaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint32[3]\",\"name\":\"intervals_\",\"type\":\"uint32[3]\"}],\"name\":\"setIntervals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"controlVariable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"vesting\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Fixed-Term Auctioneer is an implementation of the      Bond Base Auctioneer contract specific to creating bond markets where      purchases vest in a fixed amount of time after purchased (rounded to the day).\",\"kind\":\"dev\",\"methods\":{\"closeMarket(uint256)\":{\"params\":{\"id_\":\"ID of market to close\"}},\"createMarket(bytes)\":{\"details\":\"See specific auctioneer implementations for details on encoding the parameters.\",\"params\":{\"params_\":\"Configuration data needed for market creation, encoded in a bytes array\"},\"returns\":{\"_0\":\"id              ID of new bond market\"}},\"currentControlVariable(uint256)\":{\"details\":\"Accounts for control variable adjustment\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Control variable for market in payout token decimals\"}},\"currentDebt(uint256)\":{\"details\":\"Accounts for debt decay since last deposit\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Current debt for market in payout token decimals\"}},\"getMarketInfoForPurchase(uint256)\":{\"params\":{\"id_\":\"Market ID\"},\"returns\":{\"callbackAddr\":\"   Address of the callback contract to get tokens for payouts\",\"maxPayout\":\"      Maximum amount of payout tokens you can purchase in one transaction\",\"owner\":\"          Address of the market owner (tokens transferred from this address if no callback)\",\"payoutToken\":\"    Payout Token (token paid out) for the Market\",\"quoteToken\":\"     Quote Token (token received) for the Market\",\"vesting\":\"        Timestamp or duration for vesting, implementation-dependent\"}},\"isInstantSwap(uint256)\":{\"params\":{\"id_\":\"Market ID to search for\"}},\"isLive(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"marketPrice(uint256)\":{\"details\":\"Accounts for debt and control variable decay since last deposit (vs _marketPrice())\",\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Price for market in configured decimals (see MarketParams)\"}},\"marketScale(uint256)\":{\"params\":{\"id_\":\"ID of market\"},\"returns\":{\"_0\":\"Scaling factor for market in configured decimals\"}},\"maxAmountAccepted(uint256,address)\":{\"params\":{\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"}},\"ownerOf(uint256)\":{\"params\":{\"id_\":\"ID of market\"}},\"payoutFor(uint256,uint256,address)\":{\"details\":\"Accounts for debt and control variable decay so it is up to date\",\"params\":{\"amount_\":\"Amount of quote tokens to spend\",\"id_\":\"ID of market\",\"referrer_\":\"Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee.\"},\"returns\":{\"_0\":\"amount of payout tokens to be paid\"}},\"pullOwnership(uint256)\":{\"details\":\"The existing owner must call pushOwnership prior to the newOwner calling this function\",\"params\":{\"id_\":\"Market ID\"}},\"purchaseBond(uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond (after fee has been deducted)\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\"},\"returns\":{\"payout\":\"         Amount of payout token to be received from the bond\"}},\"pushOwnership(uint256,address)\":{\"details\":\"Doesn't change permissions until newOwner calls pullOwnership\",\"params\":{\"id_\":\"Market ID\",\"newOwner_\":\"New address to give ownership to\"}},\"setAllowNewMarkets(bool)\":{\"details\":\"Setting to false and allowing active markets to end will sunset the auctioneer\",\"params\":{\"status_\":\"Allow market creation (true) : Disallow market creation (false)\"}},\"setCallbackAuthStatus(address,bool)\":{\"details\":\"Callback is believed to be safe, but a whitelist is implemented to prevent abuse\",\"params\":{\"creator_\":\"Address of market creator\",\"status_\":\"Allow callback (true) : Disallow callback (false)\"}},\"setDefaults(uint32[6])\":{\"details\":\"The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change\",\"params\":{\"defaults_\":\"Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown\"}},\"setIntervals(uint256,uint32[3])\":{\"details\":\"Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay\",\"params\":{\"id_\":\"Market ID\",\"intervals_\":\"Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely\"}}},\"title\":\"Bond Fixed-Term Sequential Dutch Auctioneer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"adjustments(uint256)\":{\"notice\":\"Control variable changes\"},\"allowNewMarkets()\":{\"notice\":\"Whether or not the auctioneer allows new markets to be created\"},\"callbackAuthorized(address)\":{\"notice\":\"Whether or not the market creator is authorized to use a callback address\"},\"closeMarket(uint256)\":{\"notice\":\"Disable existing bond marketMust be market owner\"},\"createMarket(bytes)\":{\"notice\":\"Creates a new bond market\"},\"currentCapacity(uint256)\":{\"notice\":\"Returns current capacity of a market\"},\"currentControlVariable(uint256)\":{\"notice\":\"Up to date control variable\"},\"currentDebt(uint256)\":{\"notice\":\"Calculate debt factoring in decay\"},\"defaultTuneInterval()\":{\"notice\":\"Sane defaults for tuning. Can be adjusted for a specific market via setters.\"},\"getAggregator()\":{\"notice\":\"Returns the Aggregator that services the Auctioneer\"},\"getMarketInfoForPurchase(uint256)\":{\"notice\":\"Provides information for the Teller to execute purchases on a Market\"},\"getTeller()\":{\"notice\":\"Returns the Teller that services the Auctioneer\"},\"isInstantSwap(uint256)\":{\"notice\":\"Does market send payout immediately\"},\"isLive(uint256)\":{\"notice\":\"Is a given market accepting deposits\"},\"marketPrice(uint256)\":{\"notice\":\"Calculate current market price of payout token in quote tokens\"},\"marketScale(uint256)\":{\"notice\":\"Scale value to use when converting between quote token and payout token amounts with marketPrice()\"},\"markets(uint256)\":{\"notice\":\"Main information pertaining to bond market\"},\"maxAmountAccepted(uint256,address)\":{\"notice\":\"Returns maximum amount of quote token accepted by the market\"},\"metadata(uint256)\":{\"notice\":\"Data needed for tuning bond market\"},\"minDebtDecayInterval()\":{\"notice\":\"Minimum values for decay, deposit interval, market duration and debt buffer.\"},\"newOwners(uint256)\":{\"notice\":\"New address to designate as market owner. They must accept ownership to transfer permissions.\"},\"ownerOf(uint256)\":{\"notice\":\"Returns the address of the market owner\"},\"payoutFor(uint256,uint256,address)\":{\"notice\":\"Payout due for amount of quote tokens\"},\"pullOwnership(uint256)\":{\"notice\":\"Accept ownership of a marketMust be market newOwner\"},\"purchaseBond(uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified marketMust be teller\"},\"pushOwnership(uint256,address)\":{\"notice\":\"Designate a new owner of a marketMust be market owner\"},\"setAllowNewMarkets(bool)\":{\"notice\":\"Change the status of the auctioneer to allow creation of new markets\"},\"setCallbackAuthStatus(address,bool)\":{\"notice\":\"Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian\"},\"setDefaults(uint32[6])\":{\"notice\":\"Set the auctioneer defaultsMust be policy\"},\"setIntervals(uint256,uint32[3])\":{\"notice\":\"Set market intervals to different values than the defaultsMust be market owner\"},\"terms(uint256)\":{\"notice\":\"Information used to control how a bond market changes\"}},\"notice\":\"Bond Fixed-Term Sequential Dutch Auctioneer Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/lib/bonds/BondFixedTermSDA.sol\":\"BondFixedTermSDA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/test/lib/bonds/BondFixedTermSDA.sol\":{\"keccak256\":\"0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682\",\"dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds\"]},\"src/test/lib/bonds/bases/BondBaseSDA.sol\":{\"keccak256\":\"0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39\",\"dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP\"]},\"src/test/lib/bonds/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/test/lib/bonds/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/test/lib/bonds/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/test/lib/bonds/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/test/lib/bonds/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "teller_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_AmountLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_BadExpiry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InitialPriceLessThanMin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_InvalidParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "conclusion_",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Auctioneer_MarketConcluded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_MaxPayoutExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NewMarketsNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_NotEnoughCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auctioneer_OnlyMarketOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "defaultTuneInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "defaultTuneAdjustment",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtDecayInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDepositInterval",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minMarketDuration",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "minDebtBuffer",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MarketClosed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payoutToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldControlVariable",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newControlVariable",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Tuned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "adjustments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "change",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "lastAdjustment",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "timeToAdjusted",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowNewMarkets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "callbackAuthorized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "params_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMarket",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentControlVariable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneAdjustment",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTuneInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAggregator",
          "outputs": [
            {
              "internalType": "contract IBondAggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfoForPurchase",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeller",
          "outputs": [
            {
              "internalType": "contract IBondTeller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInstantSwap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketScale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scale",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAmountAccepted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "metadata",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "lastTune",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "lastDecay",
              "type": "uint48"
            },
            {
              "internalType": "uint32",
              "name": "length",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "depositInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "tuneAdjustmentDelay",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "debtDecayInterval",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "tuneIntervalCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tuneBelowCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastTuneDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtBuffer",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDebtDecayInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDepositInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minMarketDuration",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "newOwners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "payoutFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newOwner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowNewMarkets"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status_",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCallbackAuthStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[6]",
              "name": "defaults_",
              "type": "uint32[6]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaults"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint32[3]",
              "name": "intervals_",
              "type": "uint32[3]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntervals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "terms",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "controlVariable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "vesting",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "closeMarket(uint256)": {
            "params": {
              "id_": "ID of market to close"
            }
          },
          "createMarket(bytes)": {
            "details": "See specific auctioneer implementations for details on encoding the parameters.",
            "params": {
              "params_": "Configuration data needed for market creation, encoded in a bytes array"
            },
            "returns": {
              "_0": "id              ID of new bond market"
            }
          },
          "currentControlVariable(uint256)": {
            "details": "Accounts for control variable adjustment",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Control variable for market in payout token decimals"
            }
          },
          "currentDebt(uint256)": {
            "details": "Accounts for debt decay since last deposit",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Current debt for market in payout token decimals"
            }
          },
          "getMarketInfoForPurchase(uint256)": {
            "params": {
              "id_": "Market ID"
            },
            "returns": {
              "callbackAddr": "   Address of the callback contract to get tokens for payouts",
              "maxPayout": "      Maximum amount of payout tokens you can purchase in one transaction",
              "owner": "          Address of the market owner (tokens transferred from this address if no callback)",
              "payoutToken": "    Payout Token (token paid out) for the Market",
              "quoteToken": "     Quote Token (token received) for the Market",
              "vesting": "        Timestamp or duration for vesting, implementation-dependent"
            }
          },
          "isInstantSwap(uint256)": {
            "params": {
              "id_": "Market ID to search for"
            }
          },
          "isLive(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "marketPrice(uint256)": {
            "details": "Accounts for debt and control variable decay since last deposit (vs _marketPrice())",
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Price for market in configured decimals (see MarketParams)"
            }
          },
          "marketScale(uint256)": {
            "params": {
              "id_": "ID of market"
            },
            "returns": {
              "_0": "Scaling factor for market in configured decimals"
            }
          },
          "maxAmountAccepted(uint256,address)": {
            "params": {
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "id_": "ID of market"
            }
          },
          "payoutFor(uint256,uint256,address)": {
            "details": "Accounts for debt and control variable decay so it is up to date",
            "params": {
              "amount_": "Amount of quote tokens to spend",
              "id_": "ID of market",
              "referrer_": "Address of referrer, used to get fees to calculate accurate payout amount.                     Inputting the zero address will take into account just the protocol fee."
            },
            "returns": {
              "_0": "amount of payout tokens to be paid"
            }
          },
          "pullOwnership(uint256)": {
            "details": "The existing owner must call pushOwnership prior to the newOwner calling this function",
            "params": {
              "id_": "Market ID"
            }
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond (after fee has been deducted)",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning"
            },
            "returns": {
              "payout": "         Amount of payout token to be received from the bond"
            }
          },
          "pushOwnership(uint256,address)": {
            "details": "Doesn't change permissions until newOwner calls pullOwnership",
            "params": {
              "id_": "Market ID",
              "newOwner_": "New address to give ownership to"
            }
          },
          "setAllowNewMarkets(bool)": {
            "details": "Setting to false and allowing active markets to end will sunset the auctioneer",
            "params": {
              "status_": "Allow market creation (true) : Disallow market creation (false)"
            }
          },
          "setCallbackAuthStatus(address,bool)": {
            "details": "Callback is believed to be safe, but a whitelist is implemented to prevent abuse",
            "params": {
              "creator_": "Address of market creator",
              "status_": "Allow callback (true) : Disallow callback (false)"
            }
          },
          "setDefaults(uint32[6])": {
            "details": "The defaults set here are important to avoid edge cases in market behavior, e.g. a very short market reacts doesn't tune wellOnly applies to new markets that are created after the change",
            "params": {
              "defaults_": "Array of default values                     1. Tune interval - amount of time between tuning adjustments                     2. Tune adjustment delay - amount of time to apply downward tuning adjustments                     3. Minimum debt decay interval - minimum amount of time to let debt decay to zero                     4. Minimum deposit interval - minimum amount of time to wait between deposits                     5. Minimum market duration - minimum amount of time a market can be created for                     6. Minimum debt buffer - the minimum amount of debt over the initial debt to trigger a market shutdown"
            }
          },
          "setIntervals(uint256,uint32[3])": {
            "details": "Changing the intervals could cause markets to behave in unexpected way                                 tuneInterval should be greater than tuneAdjustmentDelay",
            "params": {
              "id_": "Market ID",
              "intervals_": "Array of intervals (3)                                 1. Tune interval - Frequency of tuning                                 2. Tune adjustment delay - Time to implement downward tuning adjustments                                 3. Debt decay interval - Interval over which debt should decay completely"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adjustments(uint256)": {
            "notice": "Control variable changes"
          },
          "allowNewMarkets()": {
            "notice": "Whether or not the auctioneer allows new markets to be created"
          },
          "callbackAuthorized(address)": {
            "notice": "Whether or not the market creator is authorized to use a callback address"
          },
          "closeMarket(uint256)": {
            "notice": "Disable existing bond marketMust be market owner"
          },
          "createMarket(bytes)": {
            "notice": "Creates a new bond market"
          },
          "currentCapacity(uint256)": {
            "notice": "Returns current capacity of a market"
          },
          "currentControlVariable(uint256)": {
            "notice": "Up to date control variable"
          },
          "currentDebt(uint256)": {
            "notice": "Calculate debt factoring in decay"
          },
          "defaultTuneInterval()": {
            "notice": "Sane defaults for tuning. Can be adjusted for a specific market via setters."
          },
          "getAggregator()": {
            "notice": "Returns the Aggregator that services the Auctioneer"
          },
          "getMarketInfoForPurchase(uint256)": {
            "notice": "Provides information for the Teller to execute purchases on a Market"
          },
          "getTeller()": {
            "notice": "Returns the Teller that services the Auctioneer"
          },
          "isInstantSwap(uint256)": {
            "notice": "Does market send payout immediately"
          },
          "isLive(uint256)": {
            "notice": "Is a given market accepting deposits"
          },
          "marketPrice(uint256)": {
            "notice": "Calculate current market price of payout token in quote tokens"
          },
          "marketScale(uint256)": {
            "notice": "Scale value to use when converting between quote token and payout token amounts with marketPrice()"
          },
          "markets(uint256)": {
            "notice": "Main information pertaining to bond market"
          },
          "maxAmountAccepted(uint256,address)": {
            "notice": "Returns maximum amount of quote token accepted by the market"
          },
          "metadata(uint256)": {
            "notice": "Data needed for tuning bond market"
          },
          "minDebtDecayInterval()": {
            "notice": "Minimum values for decay, deposit interval, market duration and debt buffer."
          },
          "newOwners(uint256)": {
            "notice": "New address to designate as market owner. They must accept ownership to transfer permissions."
          },
          "ownerOf(uint256)": {
            "notice": "Returns the address of the market owner"
          },
          "payoutFor(uint256,uint256,address)": {
            "notice": "Payout due for amount of quote tokens"
          },
          "pullOwnership(uint256)": {
            "notice": "Accept ownership of a marketMust be market newOwner"
          },
          "purchaseBond(uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified marketMust be teller"
          },
          "pushOwnership(uint256,address)": {
            "notice": "Designate a new owner of a marketMust be market owner"
          },
          "setAllowNewMarkets(bool)": {
            "notice": "Change the status of the auctioneer to allow creation of new markets"
          },
          "setCallbackAuthStatus(address,bool)": {
            "notice": "Change whether a market creator is allowed to use a callback address in their markets or notMust be guardian"
          },
          "setDefaults(uint32[6])": {
            "notice": "Set the auctioneer defaultsMust be policy"
          },
          "setIntervals(uint256,uint32[3])": {
            "notice": "Set market intervals to different values than the defaultsMust be market owner"
          },
          "terms(uint256)": {
            "notice": "Information used to control how a bond market changes"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/lib/bonds/BondFixedTermSDA.sol": "BondFixedTermSDA"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/bonds/BondFixedTermSDA.sol": {
        "keccak256": "0xbeed481d8363576ee264a97f62eb734a41b317d02fc914cdb680127012f08271",
        "urls": [
          "bzz-raw://24f687cc843ac0bf72bf636e40296855028cfaa45a1fe9b203d0ab50193ba682",
          "dweb:/ipfs/QmXevwRG5z98cX2hnzEMJ7C8HhKPBJ2RiqzFtFzJ1LyNds"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseSDA.sol": {
        "keccak256": "0x39d93e1eb0a1f8c599a4197a2dcd4c3e5c206e13fd7826caf107380d08f2151c",
        "urls": [
          "bzz-raw://2fe7d154037dd98c969afe6f1c313093ddecc57301cd1bd94cd02e70d46c1a39",
          "dweb:/ipfs/QmfKBTWeujToMu2X2CuEkjMwwWZjfsLhjBeomdKMVq97uP"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/lib/bonds/BondFixedTermSDA.sol",
    "id": 55072,
    "exportedSymbols": {
      "Authority": [
        23835
      ],
      "BondBaseSDA": [
        57878
      ],
      "BondFixedTermSDA": [
        55071
      ],
      "IBondAggregator": [
        58985
      ],
      "IBondTeller": [
        59499
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2077:123",
    "nodes": [
      {
        "id": 54997,
        "nodeType": "PragmaDirective",
        "src": "46:23:123",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 55001,
        "nodeType": "ImportDirective",
        "src": "71:80:123",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/bases/BondBaseSDA.sol",
        "file": "./bases/BondBaseSDA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55072,
        "sourceUnit": 57879,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54998,
              "name": "BondBaseSDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57878,
              "src": "79:11:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 54999,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58985,
              "src": "92:15:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55000,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23835,
              "src": "109:9:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55003,
        "nodeType": "ImportDirective",
        "src": "152:57:123",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/interfaces/IBondTeller.sol",
        "file": "./interfaces/IBondTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55072,
        "sourceUnit": 59500,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55002,
              "name": "IBondTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59499,
              "src": "160:11:123",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55071,
        "nodeType": "ContractDefinition",
        "src": "1198:924:123",
        "nodes": [
          {
            "id": 55027,
            "nodeType": "FunctionDefinition",
            "src": "1289:200:123",
            "nodes": [],
            "body": {
              "id": 55026,
              "nodeType": "Block",
              "src": "1487:2:123",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 55020,
                    "name": "teller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55009,
                    "src": "1442:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$59499",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  {
                    "id": 55021,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55012,
                    "src": "1451:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 55022,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55014,
                    "src": "1464:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 55023,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55017,
                    "src": "1475:10:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 55024,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 55019,
                  "name": "BondBaseSDA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57878,
                  "src": "1430:11:123"
                },
                "nodeType": "ModifierInvocation",
                "src": "1430:56:123"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55009,
                  "mutability": "mutable",
                  "name": "teller_",
                  "nameLocation": "1322:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "1310:19:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondTeller_$59499",
                    "typeString": "contract IBondTeller"
                  },
                  "typeName": {
                    "id": 55008,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55007,
                      "name": "IBondTeller",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59499,
                      "src": "1310:11:123"
                    },
                    "referencedDeclaration": 59499,
                    "src": "1310:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondTeller_$59499",
                      "typeString": "contract IBondTeller"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55012,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1355:11:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "1339:27:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 55011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55010,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58985,
                      "src": "1339:15:123"
                    },
                    "referencedDeclaration": 58985,
                    "src": "1339:15:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55014,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1384:9:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "1376:17:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55017,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "1413:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "1403:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$23835",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 55016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55015,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23835,
                      "src": "1403:9:123"
                    },
                    "referencedDeclaration": 23835,
                    "src": "1403:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:129:123"
            },
            "returnParameters": {
              "id": 55025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:0:123"
            },
            "scope": 55071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55070,
            "nodeType": "FunctionDefinition",
            "src": "1576:544:123",
            "nodes": [],
            "body": {
              "id": 55069,
              "nodeType": "Block",
              "src": "1658:462:123",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55038,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1762:6:123",
                      "nodeType": "VariableDeclaration",
                      "scope": 55069,
                      "src": "1742:26:123",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                        "typeString": "struct IBondSDA.MarketParams"
                      },
                      "typeName": {
                        "id": 55037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55036,
                          "name": "MarketParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59414,
                          "src": "1742:12:123"
                        },
                        "referencedDeclaration": 59414,
                        "src": "1742:12:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$59414_storage_ptr",
                          "typeString": "struct IBondSDA.MarketParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55045,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55041,
                        "name": "params_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55030,
                        "src": "1782:7:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 55042,
                            "name": "MarketParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59414,
                            "src": "1792:12:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_MarketParams_$59414_storage_ptr_$",
                              "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                            }
                          }
                        ],
                        "id": 55043,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1791:14:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$59414_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_MarketParams_$59414_storage_ptr_$",
                          "typeString": "type(struct IBondSDA.MarketParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 55039,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1771:3:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 55040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1771:10:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 55044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:35:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                      "typeString": "struct IBondSDA.MarketParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1742:64:123"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 55060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "id": 55049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 55046,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55038,
                          "src": "1898:6:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                            "typeString": "struct IBondSDA.MarketParams memory"
                          }
                        },
                        "id": 55047,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vesting",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59407,
                        "src": "1898:14:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 55048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1916:1:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1898:19:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 55058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 55053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 55050,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55038,
                                "src": "1922:6:123",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 55051,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59407,
                              "src": "1922:14:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 55052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1939:6:123",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "1922:23:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 55057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 55054,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55038,
                                "src": "1949:6:123",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                                  "typeString": "struct IBondSDA.MarketParams memory"
                                }
                              },
                              "id": 55055,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vesting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59407,
                              "src": "1949:14:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 55056,
                              "name": "MAX_FIXED_TERM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55838,
                              "src": "1966:14:123",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "1949:31:123",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1922:58:123",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 55059,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1921:60:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1898:83:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55064,
                  "nodeType": "IfStatement",
                  "src": "1894:134:123",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55061,
                        "name": "Auctioneer_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55740,
                        "src": "2002:24:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2002:26:123",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55063,
                    "nodeType": "RevertStatement",
                    "src": "1995:33:123"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55066,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55038,
                        "src": "2106:6:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_MarketParams_$59414_memory_ptr",
                          "typeString": "struct IBondSDA.MarketParams memory"
                        }
                      ],
                      "id": 55065,
                      "name": "_createMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56316,
                      "src": "2092:13:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParams_$59414_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct IBondSDA.MarketParams memory) returns (uint256)"
                      }
                    },
                    "id": 55067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2092:21:123",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 55035,
                  "id": 55068,
                  "nodeType": "Return",
                  "src": "2085:28:123"
                }
              ]
            },
            "baseFunctions": [
              55910
            ],
            "documentation": {
              "id": 55028,
              "nodeType": "StructuredDocumentation",
              "src": "1544:27:123",
              "text": "@inheritdoc BondBaseSDA"
            },
            "functionSelector": "53c7f8e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMarket",
            "nameLocation": "1585:12:123",
            "overrides": {
              "id": 55032,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1631:8:123"
            },
            "parameters": {
              "id": 55031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55030,
                  "mutability": "mutable",
                  "name": "params_",
                  "nameLocation": "1613:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 55070,
                  "src": "1598:22:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55029,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:5:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:24:123"
            },
            "returnParameters": {
              "id": 55035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55070,
                  "src": "1649:7:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:9:123"
            },
            "scope": 55071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55005,
              "name": "BondBaseSDA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57878,
              "src": "1227:11:123"
            },
            "id": 55006,
            "nodeType": "InheritanceSpecifier",
            "src": "1227:11:123"
          }
        ],
        "canonicalName": "BondFixedTermSDA",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 55004,
          "nodeType": "StructuredDocumentation",
          "src": "211:987:123",
          "text": "@title Bond Fixed-Term Sequential Dutch Auctioneer\n @notice Bond Fixed-Term Sequential Dutch Auctioneer Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Fixed-Term Auctioneer is an implementation of the\n      Bond Base Auctioneer contract specific to creating bond markets where\n      purchases vest in a fixed amount of time after purchased (rounded to the day).\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55071,
          57878,
          23822,
          59440,
          59170
        ],
        "name": "BondFixedTermSDA",
        "nameLocation": "1207:16:123",
        "scope": 55072,
        "usedErrors": [
          55722,
          55724,
          55728,
          55730,
          55732,
          55734,
          55736,
          55738,
          55740,
          55742,
          55744
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 123
}