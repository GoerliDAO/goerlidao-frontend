{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC1155BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts_",
          "type": "uint256[]"
        }
      ],
      "name": "batchRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        }
      ],
      "name": "getTokenNameAndSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016002553480156200001657600080fd5b5060405162003b2d38038062003b2d83398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051613973620001ba60003960008181610c020152611d7c015260008181610df2015261140601526139736000f3fe608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a7146101a157806306692a37146101c45780630d4dfc21146101f457806313af4035146102095780632eb2c2d61461021c5780632f6fa94e1461022f57806335312c85146102425780634e1273f4146102635780636914db60146102835780636de5b4cd1461031c5780637a9e5e4b1461034b5780637cbc23731461035e57806381690927146103715780638da5cb5b1461038457806392593277146103a4578063a22cb465146103b7578063b0e21e8a146103ca578063b1e55529146103dc578063b7314ef9146103ef578063b88c914814610410578063bf7e214f14610423578063c23135dd14610436578063c6e38a4b1461045e578063ccf288c614610471578063e70b9e271461047b578063e985e9c5146104a6578063e9dc30f3146104d4578063f242432a146104e7575b600080fd5b61018e610171366004612a57565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101b46101af366004612a99565b6104fa565b6040519015158152602001610198565b6004546101dd90600160301b900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610198565b610207610202366004612aca565b61054c565b005b610207610217366004612ae7565b6105d8565b61020761022a366004612c50565b610655565b61020761023d366004612cfd565b6108c2565b610255610250366004612da8565b610991565b604051610198929190612e19565b610276610271366004612e47565b610a19565b6040516101989190612f43565b6102db610291366004612da8565b6008602052600090815260409020805460019091015460ff8083169261010081046001600160a01b031692600160a81b820490921691600160b01b90910465ffffffffffff169085565b6040805195151586526001600160a01b03909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610198565b61032f61032a366004612f56565b610b24565b6040805192835265ffffffffffff909116602083015201610198565b610207610359366004612ae7565b610ec7565b61020761036c366004612fa7565b610fb1565b61020761037f366004612aca565b610fea565b600054610397906001600160a01b031681565b6040516101989190612fc9565b61018e6103b2366004612fdd565b611075565b6102076103c5366004613024565b6110dc565b6004546101dd9065ffffffffffff1681565b6102076103ea366004612aca565b611148565b6104026103fd366004613052565b6111c5565b604051610198929190613093565b6101dd61041e366004612ae7565b6114b1565b600154610397906001600160a01b031681565b6101dd610444366004612ae7565b60036020526000908152604090205465ffffffffffff1681565b61018e61046c366004612fdd565b6114e2565b6101dd620186a081565b61018e6104893660046130a1565b600560209081526000928352604080842090915290825290205481565b6101b46104b43660046130a1565b600760209081526000928352604080842090915290825290205460ff1681565b6102076104e236600461311a565b611546565b6102076104f5366004613185565b6115ef565b60006301ffc9a760e01b6001600160e01b03198316148061052b5750636cdb3d1360e11b6001600160e01b03198316145b8061054657506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001146105775760405162461bcd60e51b815260040161056e906131ed565b60405180910390fd5b6002805561138865ffffffffffff821611156105a65760405163e94b8f2760e01b815260040160405180910390fd5b336000908152600360205260409020805465ffffffffffff191665ffffffffffff929092169190911790556001600255565b6105ee336000356001600160e01b0319166117c5565b61060a5760405162461bcd60e51b815260040161056e90613211565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b8251825181146106775760405162461bcd60e51b815260040161056e90613237565b336001600160a01b03871614806106b157506001600160a01b038616600090815260076020908152604080832033845290915290205460ff165b6106cd5760405162461bcd60e51b815260040161056e90613260565b60008060005b8381101561079e578681815181106106ed576106ed613288565b6020026020010151925085818151811061070957610709613288565b6020026020010151915081600660008b6001600160a01b03166001600160a01b031681526020019081526020016000206000858152602001908152602001600020600082825461075991906132b4565b90915550506001600160a01b0388166000908152600660209081526040808320868452909152812080548492906107919084906132cb565b90915550506001016106d3565b50866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb89896040516107ee9291906132e3565b60405180910390a46001600160a01b0387163b1561088f5760405163bc197c8160e01b808252906001600160a01b0389169063bc197c819061083c9033908d908c908c908c90600401613308565b6020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190613366565b6001600160e01b0319161461089c565b6001600160a01b03871615155b6108b85760405162461bcd60e51b815260040161056e90613383565b5050505050505050565b6002546001146108e45760405162461bcd60e51b815260040161056e906131ed565b60028055815160005b8181101561098657600084828151811061090957610909613288565b6020908102919091018101513360009081526005835260408082206001600160a01b038416835290935291909120549091508015610973573360009081526005602090815260408083206001600160a01b038616808552925282209190915561097390868361186f565b50508061097f906133ad565b90506108ed565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff8082161515835261010082046001600160a01b0316958301869052600160a81b82041693820193909352600160b01b90920465ffffffffffff16606080840182905260019092015460808401529093849390918291610a0c91611975565b9097909650945050505050565b81518151606091908114610a3f5760405162461bcd60e51b815260040161056e90613237565b806001600160401b03811115610a5757610a57612b04565b604051908082528060200260200182016040528015610a80578160200160208202803683370190505b50915060005b81811015610b1c5760066000868381518110610aa457610aa4613288565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610ae057610ae0613288565b6020026020010151815260200190815260200160002054838281518110610b0957610b09613288565b6020908102919091010152600101610a86565b505092915050565b600080600254600114610b495760405162461bcd60e51b815260040161056e906131ed565b600280556001600160a01b0386166000908152600360205260408120548190819081908190610b85908a9065ffffffffffff16620186a0611cc0565b6001600160a01b038c1660009081526003602052604081205460045492935090918391610bd491610bc19165ffffffffffff90811691166133c6565b8c9065ffffffffffff16620186a0611cc0565b610bde91906132b4565b6040516329023ca160e11b8152600481018d90529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d91906133f0565b604051632b3155c360e21b8152600481018e90529091506000906001600160a01b0383169063acc5570c9060240160c060405180830381865afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc919061340d565b50919b50995097509091506000905083610cf6868f6132b4565b610d0091906132b4565b9050826001600160a01b031663e007fa978f838f6040518463ffffffff1660e01b8152600401610d43939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d86919061348a565b955050505081600560008e6001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b031681526020019081526020016000206000828254610de391906132cb565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e3f9084906132cb565b90915550610e5a90508b8b85610e5585876132cb565b611d74565b6000610e688e858988612288565b90508c6001600160a01b03168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ea6929190613093565b60405180910390a36001600255929d929c50919a5050505050505050505050565b6000546001600160a01b0316331480610f5c575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f1b90339030906001600160e01b031960003516906004016134a3565b602060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c91906134d0565b610f6557600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b600254600114610fd35760405162461bcd60e51b815260040161056e906131ed565b60028055610fe18282612312565b50506001600255565b611000336000356001600160e01b0319166117c5565b61101c5760405162461bcd60e51b815260040161056e90613211565b60045465ffffffffffff908116908216111561104b5760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff909216600160301b0265ffffffffffff60301b19909216919091179055565b600080836110866201518085613503565b6040516020016110bc92919060609290921b6001600160601b031916825260d01b6001600160d01b0319166014820152601a0190565b60408051808303601f190181529190528051602090910120949350505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61115e336000356001600160e01b0319166117c5565b61117a5760405162461bcd60e51b815260040161056e90613211565b6113888165ffffffffffff1611156111a55760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff191665ffffffffffff92909216919091179055565b6000806002546001146111ea5760405162461bcd60e51b815260040161056e906131ed565b6002805560006111fd6201518086613503565b61120a9062015180613528565b9050428165ffffffffffff1610156112355760405163e94b8f2760e01b815260040160405180910390fd5b60006112418783611075565b60008181526008602052604090205490915060ff1661128c5760405163cb66c9db60e01b81526001600160a01b038816600482015265ffffffffffff8316602482015260440161056e565b6040516370a0823160e01b81526000906001600160a01b038916906370a08231906112bb903090600401612fc9565b602060405180830381865afa1580156112d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fc919061348a565b90506113136001600160a01b038916333089612407565b61131d86826132cb565b6040516370a0823160e01b81526001600160a01b038a16906370a0823190611349903090600401612fc9565b602060405180830381865afa158015611366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138a919061348a565b10156113a9576040516334d5114960e21b815260040160405180910390fd5b60045465ffffffffffff600160301b820481169116111561148a576004546000906113fc906113e99065ffffffffffff600160301b820481169116613556565b889065ffffffffffff16620186a0611cc0565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e168352929052908120805492935083929091906114589084906132cb565b909155506114729050338461146d848b6132b4565b612522565b8261147d82896132b4565b95509550505050506114a2565b611495338388612522565b5092508391506114a29050565b60016002559094909350915050565b6001600160a01b0381166000908152600360205260408120546004546105469165ffffffffffff90811691166133c6565b60006002546001146115065760405162461bcd60e51b815260040161056e906131ed565b6002805560006115168484611075565b60008181526008602052604090205490915060ff1661153a5761153a818585612565565b60016002559392505050565b6002546001146115685760405162461bcd60e51b815260040161056e906131ed565b600280558281811461158d5760405163e94b8f2760e01b815260040160405180910390fd5b60005b818110156115e2576115d28686838181106115ad576115ad613288565b905060200201358585848181106115c6576115c6613288565b90506020020135612312565b6115db816133ad565b9050611590565b5050600160025550505050565b336001600160a01b038616148061162957506001600160a01b038516600090815260076020908152604080832033845290915290205460ff165b6116455760405162461bcd60e51b815260040161056e90613260565b6001600160a01b0385166000908152600660209081526040808320868452909152812080548492906116789084906132b4565b90915550506001600160a01b0384166000908152600660209081526040808320868452909152812080548492906116b09084906132cb565b92505081905550836001600160a01b0316856001600160a01b0316336001600160a01b031660008051602061391e83398151915286866040516116f4929190613093565b60405180910390a46001600160a01b0384163b156117955760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906117429033908a9089908990899060040161357d565b6020604051808303816000875af1158015611761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117859190613366565b6001600160e01b031916146117a2565b6001600160a01b03841615155b6117be5760405162461bcd60e51b815260040161056e90613383565b5050505050565b6001546000906001600160a01b0316801580159061184f575060405163b700961360e01b81526001600160a01b0382169063b70096139061180e908790309088906004016134a3565b602060405180830381865afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f91906134d0565b8061186757506000546001600160a01b038581169116145b949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118cb91906135c2565b6000604051808303816000865af19150503d8060008114611908576040519150601f19603f3d011682016040523d82523d6000602084013e61190d565b606091505b509150915081801561193757508051158061193757508080602001905181019061193791906134d0565b6117be5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161056e565b606080600080808061198a62015180886135de565b9050600061199b8262010bd96135f2565b6119a89062253d8c6135f2565b9050600062023ab16119bb836004613633565b6119c591906136b8565b905060046119d68262023ab1613633565b6119e19060036135f2565b6119eb91906136b8565b6119f590836136e6565b9150600062164b09611a088460016135f2565b611a1490610fa0613633565b611a1e91906136b8565b90506004611a2e826105b5613633565b611a3891906136b8565b611a4290846136e6565b611a4d90601f6135f2565b9250600061098f611a5f856050613633565b611a6991906136b8565b905060006050611a7b8361098f613633565b611a8591906136b8565b611a8f90866136e6565b9050611a9c600b836136b8565b9450611aa985600c613633565b611ab48360026135f2565b611abe91906136e6565b91508483611acd6031876136e6565b611ad8906064613633565b611ae291906135f2565b611aec91906135f2565b9850909650945060009350611b119250611b0c9150612710905086613725565b612724565b90506000600a8410611b2b57611b2684612724565b611b54565b611b3484612724565b604051602001611b449190613739565b6040516020818303038152906040525b90506000600a8410611b6e57611b6984612724565b611b97565b611b7784612724565b604051602001611b879190613739565b6040516020818303038152906040525b9050896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611bd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bff9190810190613762565b838383604051602001611c1594939291906137cf565b6040516020818303038152906040529750896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c64573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c8c9190810190613762565b838383604051602001611ca2949392919061384c565b60405160208183030381529060405296505050505050509250929050565b6000808060001985870985870292508281108382030391505080600003611cf95760008411611cee57600080fd5b508290049050611d6d565b808411611d0557600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166352047942896040518263ffffffff1660e01b8152600401611dc891815260200190565b602060405180830381865afa158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0991906133f0565b6001600160a01b031663acc5570c896040518263ffffffff1660e01b8152600401611e3691815260200190565b60c060405180830381865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e77919061340d565b5050935093509350935060008588611e8f91906132b4565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611ebf9190612fc9565b602060405180830381865afa158015611edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f00919061348a565b9050611f176001600160a01b03841633308c612407565b611f2189826132cb565b6040516370a0823160e01b81526001600160a01b038516906370a0823190611f4d903090600401612fc9565b602060405180830381865afa158015611f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8e919061348a565b1015611fad576040516334d5114960e21b815260040160405180910390fd5b6001600160a01b0385161561214957611fd06001600160a01b038416868461186f565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611fff903090600401612fc9565b602060405180830381865afa15801561201c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612040919061348a565b6040516312e779df60e21b8152600481018d905260248101859052604481018b90529091506001600160a01b03871690634b9de77c90606401600060405180830381600087803b15801561209357600080fd5b505af11580156120a7573d6000803e3d6000fd5b5050505088816120b791906132cb565b6040516370a0823160e01b81526001600160a01b038716906370a08231906120e3903090600401612fc9565b602060405180830381865afa158015612100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612124919061348a565b101561214357604051637152badd60e11b815260040160405180910390fd5b5061227c565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612178903090600401612fc9565b602060405180830381865afa158015612195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b9919061348a565b90506121d06001600160a01b03861688308c612407565b6121da89826132cb565b6040516370a0823160e01b81526001600160a01b038716906370a0823190612206903090600401612fc9565b602060405180830381865afa158015612223573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612247919061348a565b1015612266576040516334d5114960e21b815260040160405180910390fd5b61227a6001600160a01b038516888561186f565b505b50505050505050505050565b600065ffffffffffff8216156122fe5762015180806122a742856133c6565b6122b19190613503565b6122bb9190613528565b905060006122c98483611075565b60008181526008602052604090205490915060ff166122ed576122ed818584612565565b6122f8868287612522565b50611867565b6118676001600160a01b038416868661186f565b60008281526008602052604090205460ff166123415760405163e94b8f2760e01b815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff8082161515835261010082046001600160a01b031694830194909452600160a81b810490931693810193909352600160b01b90910465ffffffffffff166060830181905260019091015460808301524210156123de576060810151604051634fb1e97360e01b815265ffffffffffff909116600482015260240161056e565b6123e933848461284f565b6020810151612402906001600160a01b0316338461186f565b505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161246b91906135c2565b6000604051808303816000865af19150503d80600081146124a8576040519150601f19603f3d011682016040523d82523d6000602084013e6124ad565b606091505b50915091508180156124d75750805115806124d75750808060200190518101906124d791906134d0565b61251a5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161056e565b505050505050565b600082815260086020526040812060010180548392906125439084906132cb565b9250508190555061240283838360405180602001604052806000815250612881565b60006125746201518083613503565b6125819062015180613528565b9050428165ffffffffffff1610156125ac5760405163e94b8f2760e01b815260040160405180910390fd5b6040518060a00160405280600115158152602001846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561260d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263191906138b6565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716600160b01b0265ffffffffffff60b01b1997909816600160a81b029690961666ffffffffffffff60a81b196001600160a01b0397881661010002610100600160a81b0319941515949094166001600160a81b03199093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361274b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612775578061275f816133ad565b915061276e9050600a836135de565b915061274f565b6000816001600160401b0381111561278f5761278f612b04565b6040519080825280601f01601f1916602001820160405280156127b9576020820181803683370190505b509050815b8515612846576127cf6001826132b4565b905060006127de600a886135de565b6127e990600a6138d9565b6127f390886132b4565b6127fe9060306138f8565b905060008160f81b90508084848151811061281b5761281b613288565b60200101906001600160f81b031916908160001a90535061283d600a896135de565b975050506127be565b50949350505050565b600082815260086020526040812060010180548392906128709084906132b4565b9091555061240290508383836129ba565b6001600160a01b0384166000908152600660209081526040808320868452909152812080548492906128b49084906132cb565b90915550506040516001600160a01b03851690600090339060008051602061391e833981519152906128e99088908890613093565b60405180910390a46001600160a01b0384163b1561298b5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061293890339060009089908990899060040161357d565b6020604051808303816000875af1158015612957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297b9190613366565b6001600160e01b03191614612998565b6001600160a01b03841615155b6129b45760405162461bcd60e51b815260040161056e90613383565b50505050565b6001600160a01b0383166000908152600660209081526040808320858452909152812080548392906129ed9084906132b4565b90915550506040516000906001600160a01b03851690339060008051602061391e83398151915290612a229087908790613093565b60405180910390a4505050565b6001600160a01b0381168114612a4457600080fd5b50565b8035612a5281612a2f565b919050565b60008060408385031215612a6a57600080fd5b8235612a7581612a2f565b946020939093013593505050565b6001600160e01b031981168114612a4457600080fd5b600060208284031215612aab57600080fd5b8135611d6d81612a83565b65ffffffffffff81168114612a4457600080fd5b600060208284031215612adc57600080fd5b8135611d6d81612ab6565b600060208284031215612af957600080fd5b8135611d6d81612a2f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612b4257612b42612b04565b604052919050565b60006001600160401b03821115612b6357612b63612b04565b5060051b60200190565b600082601f830112612b7e57600080fd5b81356020612b93612b8e83612b4a565b612b1a565b82815260059290921b84018101918181019086841115612bb257600080fd5b8286015b84811015612bcd5780358352918301918301612bb6565b509695505050505050565b60006001600160401b03821115612bf157612bf1612b04565b50601f01601f191660200190565b600082601f830112612c1057600080fd5b8135612c1e612b8e82612bd8565b818152846020838601011115612c3357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612c6857600080fd5b8535612c7381612a2f565b94506020860135612c8381612a2f565b935060408601356001600160401b0380821115612c9f57600080fd5b612cab89838a01612b6d565b94506060880135915080821115612cc157600080fd5b612ccd89838a01612b6d565b93506080880135915080821115612ce357600080fd5b50612cf088828901612bff565b9150509295509295909350565b60008060408385031215612d1057600080fd5b82356001600160401b03811115612d2657600080fd5b8301601f81018513612d3757600080fd5b80356020612d47612b8e83612b4a565b82815260059290921b83018101918181019088841115612d6657600080fd5b938201935b83851015612d8d578435612d7e81612a2f565b82529382019390820190612d6b565b9550612d9c9050868201612a47565b93505050509250929050565b600060208284031215612dba57600080fd5b5035919050565b60005b83811015612ddc578181015183820152602001612dc4565b838111156129b45750506000910152565b60008151808452612e05816020860160208601612dc1565b601f01601f19169290920160200192915050565b604081526000612e2c6040830185612ded565b8281036020840152612e3e8185612ded565b95945050505050565b60008060408385031215612e5a57600080fd5b82356001600160401b0380821115612e7157600080fd5b818501915085601f830112612e8557600080fd5b81356020612e95612b8e83612b4a565b82815260059290921b84018101918181019089841115612eb457600080fd5b948201945b83861015612edb578535612ecc81612a2f565b82529482019490820190612eb9565b96505086013592505080821115612ef157600080fd5b50612efe85828601612b6d565b9150509250929050565b600081518084526020808501945080840160005b83811015612f3857815187529582019590820190600101612f1c565b509495945050505050565b602081526000611d6d6020830184612f08565b600080600080600060a08688031215612f6e57600080fd5b8535612f7981612a2f565b94506020860135612f8981612a2f565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215612fba57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60008060408385031215612ff057600080fd5b8235612ffb81612a2f565b9150602083013561300b81612ab6565b809150509250929050565b8015158114612a4457600080fd5b6000806040838503121561303757600080fd5b823561304281612a2f565b9150602083013561300b81613016565b60008060006060848603121561306757600080fd5b833561307281612a2f565b9250602084013561308281612ab6565b929592945050506040919091013590565b918252602082015260400190565b600080604083850312156130b457600080fd5b82356130bf81612a2f565b9150602083013561300b81612a2f565b60008083601f8401126130e157600080fd5b5081356001600160401b038111156130f857600080fd5b6020830191508360208260051b850101111561311357600080fd5b9250929050565b6000806000806040858703121561313057600080fd5b84356001600160401b038082111561314757600080fd5b613153888389016130cf565b9096509450602087013591508082111561316c57600080fd5b50613179878288016130cf565b95989497509550505050565b600080600080600060a0868803121561319d57600080fd5b85356131a881612a2f565b945060208601356131b881612a2f565b9350604086013592506060860135915060808601356001600160401b038111156131e157600080fd5b612cf088828901612bff565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156132c6576132c661329e565b500390565b600082198211156132de576132de61329e565b500190565b6040815260006132f66040830185612f08565b8281036020840152612e3e8185612f08565b6001600160a01b0386811682528516602082015260a06040820181905260009061333490830186612f08565b82810360608401526133468186612f08565b9050828103608084015261335a8185612ded565b98975050505050505050565b60006020828403121561337857600080fd5b8151611d6d81612a83565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000600182016133bf576133bf61329e565b5060010190565b600065ffffffffffff8083168185168083038211156133e7576133e761329e565b01949350505050565b60006020828403121561340257600080fd5b8151611d6d81612a2f565b60008060008060008060c0878903121561342657600080fd5b865161343181612a2f565b602088015190965061344281612a2f565b604088015190955061345381612a2f565b606088015190945061346481612a2f565b608088015190935061347581612ab6565b8092505060a087015190509295509295509295565b60006020828403121561349c57600080fd5b5051919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156134e257600080fd5b8151611d6d81613016565b634e487b7160e01b600052601260045260246000fd5b600065ffffffffffff8084168061351c5761351c6134ed565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561354d5761354d61329e565b02949350505050565b600065ffffffffffff838116908316818110156135755761357561329e565b039392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906135b790830184612ded565b979650505050505050565b600082516135d4818460208701612dc1565b9190910192915050565b6000826135ed576135ed6134ed565b500490565b600080821280156001600160ff1b03849003851316156136145761361461329e565b600160ff1b839003841281161561362d5761362d61329e565b50500190565b60006001600160ff1b03818413828413808216868404861116156136595761365961329e565b600160ff1b60008712828116878305891216156136785761367861329e565b600087129250878205871284841616156136945761369461329e565b878505871281841616156136aa576136aa61329e565b505050929093029392505050565b6000826136c7576136c76134ed565b600160ff1b8214600019841416156136e1576136e161329e565b500590565b60008083128015600160ff1b8501841216156137045761370461329e565b6001600160ff1b038401831381161561371f5761371f61329e565b50500390565b600082613734576137346134ed565b500690565b600360fc1b815260008251613755816001850160208701612dc1565b9190910160010192915050565b60006020828403121561377457600080fd5b81516001600160401b0381111561378a57600080fd5b8201601f8101841361379b57600080fd5b80516137a9612b8e82612bd8565b8181528560208385010111156137be57600080fd5b612e3e826020830160208601612dc1565b600085516137e1818460208a01612dc1565b600160fd1b90830190815285516137ff816001840160208a01612dc1565b808201915050602d60f81b8060018301528551613823816002850160208a01612dc1565b6002920191820152835161383e816003840160208801612dc1565b016003019695505050505050565b6000855161385e818460208a01612dc1565b602d60f81b908301908152855161387c816001840160208a01612dc1565b8551910190613892816001840160208901612dc1565b84519101906138a8816001840160208801612dc1565b016001019695505050505050565b6000602082840312156138c857600080fd5b815160ff81168114611d6d57600080fd5b60008160001904831182151516156138f3576138f361329e565b500290565b600060ff821660ff84168060ff038211156139155761391561329e565b01939250505056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a264697066735822122017d4fe703ed4b26e0a3bdca46723be0df0ac4867be42e53e96a760611e348d9864736f6c634300080f0033",
    "sourceMap": "1429:9355:103:-:0;;;451:1:29;426:26;;1905:203:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:22;:14;;-1:-1:-1;;;;;;671:14:22;;;-1:-1:-1;;;;;671:14:22;;;;;;;;-1:-1:-1;695:22:22;;;;;;;;;;;;733:32;;2059:9:103;;2070:11;;671:14:22;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:22;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3877:21:105;;::::1;;::::0;-1:-1:-1;3908:25:105::1;;::::0;-1:-1:-1;;4007:11:105::1;:15:::0;;-1:-1:-1;;;;;;4032:21:105;;;-1:-1:-1;1429:9355:103;;-1:-1:-1;1429:9355:103;14:131:164;-1:-1:-1;;;;;89:31:164;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:164;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:164;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:164;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:164;;-1:-1:-1;;150:698:164:o;:::-;1429:9355:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a7146101a157806306692a37146101c45780630d4dfc21146101f457806313af4035146102095780632eb2c2d61461021c5780632f6fa94e1461022f57806335312c85146102425780634e1273f4146102635780636914db60146102835780636de5b4cd1461031c5780637a9e5e4b1461034b5780637cbc23731461035e57806381690927146103715780638da5cb5b1461038457806392593277146103a4578063a22cb465146103b7578063b0e21e8a146103ca578063b1e55529146103dc578063b7314ef9146103ef578063b88c914814610410578063bf7e214f14610423578063c23135dd14610436578063c6e38a4b1461045e578063ccf288c614610471578063e70b9e271461047b578063e985e9c5146104a6578063e9dc30f3146104d4578063f242432a146104e7575b600080fd5b61018e610171366004612a57565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101b46101af366004612a99565b6104fa565b6040519015158152602001610198565b6004546101dd90600160301b900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610198565b610207610202366004612aca565b61054c565b005b610207610217366004612ae7565b6105d8565b61020761022a366004612c50565b610655565b61020761023d366004612cfd565b6108c2565b610255610250366004612da8565b610991565b604051610198929190612e19565b610276610271366004612e47565b610a19565b6040516101989190612f43565b6102db610291366004612da8565b6008602052600090815260409020805460019091015460ff8083169261010081046001600160a01b031692600160a81b820490921691600160b01b90910465ffffffffffff169085565b6040805195151586526001600160a01b03909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610198565b61032f61032a366004612f56565b610b24565b6040805192835265ffffffffffff909116602083015201610198565b610207610359366004612ae7565b610ec7565b61020761036c366004612fa7565b610fb1565b61020761037f366004612aca565b610fea565b600054610397906001600160a01b031681565b6040516101989190612fc9565b61018e6103b2366004612fdd565b611075565b6102076103c5366004613024565b6110dc565b6004546101dd9065ffffffffffff1681565b6102076103ea366004612aca565b611148565b6104026103fd366004613052565b6111c5565b604051610198929190613093565b6101dd61041e366004612ae7565b6114b1565b600154610397906001600160a01b031681565b6101dd610444366004612ae7565b60036020526000908152604090205465ffffffffffff1681565b61018e61046c366004612fdd565b6114e2565b6101dd620186a081565b61018e6104893660046130a1565b600560209081526000928352604080842090915290825290205481565b6101b46104b43660046130a1565b600760209081526000928352604080842090915290825290205460ff1681565b6102076104e236600461311a565b611546565b6102076104f5366004613185565b6115ef565b60006301ffc9a760e01b6001600160e01b03198316148061052b5750636cdb3d1360e11b6001600160e01b03198316145b8061054657506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001146105775760405162461bcd60e51b815260040161056e906131ed565b60405180910390fd5b6002805561138865ffffffffffff821611156105a65760405163e94b8f2760e01b815260040160405180910390fd5b336000908152600360205260409020805465ffffffffffff191665ffffffffffff929092169190911790556001600255565b6105ee336000356001600160e01b0319166117c5565b61060a5760405162461bcd60e51b815260040161056e90613211565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b8251825181146106775760405162461bcd60e51b815260040161056e90613237565b336001600160a01b03871614806106b157506001600160a01b038616600090815260076020908152604080832033845290915290205460ff165b6106cd5760405162461bcd60e51b815260040161056e90613260565b60008060005b8381101561079e578681815181106106ed576106ed613288565b6020026020010151925085818151811061070957610709613288565b6020026020010151915081600660008b6001600160a01b03166001600160a01b031681526020019081526020016000206000858152602001908152602001600020600082825461075991906132b4565b90915550506001600160a01b0388166000908152600660209081526040808320868452909152812080548492906107919084906132cb565b90915550506001016106d3565b50866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb89896040516107ee9291906132e3565b60405180910390a46001600160a01b0387163b1561088f5760405163bc197c8160e01b808252906001600160a01b0389169063bc197c819061083c9033908d908c908c908c90600401613308565b6020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190613366565b6001600160e01b0319161461089c565b6001600160a01b03871615155b6108b85760405162461bcd60e51b815260040161056e90613383565b5050505050505050565b6002546001146108e45760405162461bcd60e51b815260040161056e906131ed565b60028055815160005b8181101561098657600084828151811061090957610909613288565b6020908102919091018101513360009081526005835260408082206001600160a01b038416835290935291909120549091508015610973573360009081526005602090815260408083206001600160a01b038616808552925282209190915561097390868361186f565b50508061097f906133ad565b90506108ed565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff8082161515835261010082046001600160a01b0316958301869052600160a81b82041693820193909352600160b01b90920465ffffffffffff16606080840182905260019092015460808401529093849390918291610a0c91611975565b9097909650945050505050565b81518151606091908114610a3f5760405162461bcd60e51b815260040161056e90613237565b806001600160401b03811115610a5757610a57612b04565b604051908082528060200260200182016040528015610a80578160200160208202803683370190505b50915060005b81811015610b1c5760066000868381518110610aa457610aa4613288565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610ae057610ae0613288565b6020026020010151815260200190815260200160002054838281518110610b0957610b09613288565b6020908102919091010152600101610a86565b505092915050565b600080600254600114610b495760405162461bcd60e51b815260040161056e906131ed565b600280556001600160a01b0386166000908152600360205260408120548190819081908190610b85908a9065ffffffffffff16620186a0611cc0565b6001600160a01b038c1660009081526003602052604081205460045492935090918391610bd491610bc19165ffffffffffff90811691166133c6565b8c9065ffffffffffff16620186a0611cc0565b610bde91906132b4565b6040516329023ca160e11b8152600481018d90529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d91906133f0565b604051632b3155c360e21b8152600481018e90529091506000906001600160a01b0383169063acc5570c9060240160c060405180830381865afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc919061340d565b50919b50995097509091506000905083610cf6868f6132b4565b610d0091906132b4565b9050826001600160a01b031663e007fa978f838f6040518463ffffffff1660e01b8152600401610d43939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d86919061348a565b955050505081600560008e6001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b031681526020019081526020016000206000828254610de391906132cb565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600090815260056020908152604080832093891683529290529081208054839290610e3f9084906132cb565b90915550610e5a90508b8b85610e5585876132cb565b611d74565b6000610e688e858988612288565b90508c6001600160a01b03168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d87604051610ea6929190613093565b60405180910390a36001600255929d929c50919a5050505050505050505050565b6000546001600160a01b0316331480610f5c575060015460405163b700961360e01b81526001600160a01b039091169063b700961390610f1b90339030906001600160e01b031960003516906004016134a3565b602060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c91906134d0565b610f6557600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b600254600114610fd35760405162461bcd60e51b815260040161056e906131ed565b60028055610fe18282612312565b50506001600255565b611000336000356001600160e01b0319166117c5565b61101c5760405162461bcd60e51b815260040161056e90613211565b60045465ffffffffffff908116908216111561104b5760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff909216600160301b0265ffffffffffff60301b19909216919091179055565b600080836110866201518085613503565b6040516020016110bc92919060609290921b6001600160601b031916825260d01b6001600160d01b0319166014820152601a0190565b60408051808303601f190181529190528051602090910120949350505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61115e336000356001600160e01b0319166117c5565b61117a5760405162461bcd60e51b815260040161056e90613211565b6113888165ffffffffffff1611156111a55760405163e94b8f2760e01b815260040160405180910390fd5b6004805465ffffffffffff191665ffffffffffff92909216919091179055565b6000806002546001146111ea5760405162461bcd60e51b815260040161056e906131ed565b6002805560006111fd6201518086613503565b61120a9062015180613528565b9050428165ffffffffffff1610156112355760405163e94b8f2760e01b815260040160405180910390fd5b60006112418783611075565b60008181526008602052604090205490915060ff1661128c5760405163cb66c9db60e01b81526001600160a01b038816600482015265ffffffffffff8316602482015260440161056e565b6040516370a0823160e01b81526000906001600160a01b038916906370a08231906112bb903090600401612fc9565b602060405180830381865afa1580156112d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fc919061348a565b90506113136001600160a01b038916333089612407565b61131d86826132cb565b6040516370a0823160e01b81526001600160a01b038a16906370a0823190611349903090600401612fc9565b602060405180830381865afa158015611366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138a919061348a565b10156113a9576040516334d5114960e21b815260040160405180910390fd5b60045465ffffffffffff600160301b820481169116111561148a576004546000906113fc906113e99065ffffffffffff600160301b820481169116613556565b889065ffffffffffff16620186a0611cc0565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e168352929052908120805492935083929091906114589084906132cb565b909155506114729050338461146d848b6132b4565b612522565b8261147d82896132b4565b95509550505050506114a2565b611495338388612522565b5092508391506114a29050565b60016002559094909350915050565b6001600160a01b0381166000908152600360205260408120546004546105469165ffffffffffff90811691166133c6565b60006002546001146115065760405162461bcd60e51b815260040161056e906131ed565b6002805560006115168484611075565b60008181526008602052604090205490915060ff1661153a5761153a818585612565565b60016002559392505050565b6002546001146115685760405162461bcd60e51b815260040161056e906131ed565b600280558281811461158d5760405163e94b8f2760e01b815260040160405180910390fd5b60005b818110156115e2576115d28686838181106115ad576115ad613288565b905060200201358585848181106115c6576115c6613288565b90506020020135612312565b6115db816133ad565b9050611590565b5050600160025550505050565b336001600160a01b038616148061162957506001600160a01b038516600090815260076020908152604080832033845290915290205460ff165b6116455760405162461bcd60e51b815260040161056e90613260565b6001600160a01b0385166000908152600660209081526040808320868452909152812080548492906116789084906132b4565b90915550506001600160a01b0384166000908152600660209081526040808320868452909152812080548492906116b09084906132cb565b92505081905550836001600160a01b0316856001600160a01b0316336001600160a01b031660008051602061391e83398151915286866040516116f4929190613093565b60405180910390a46001600160a01b0384163b156117955760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906117429033908a9089908990899060040161357d565b6020604051808303816000875af1158015611761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117859190613366565b6001600160e01b031916146117a2565b6001600160a01b03841615155b6117be5760405162461bcd60e51b815260040161056e90613383565b5050505050565b6001546000906001600160a01b0316801580159061184f575060405163b700961360e01b81526001600160a01b0382169063b70096139061180e908790309088906004016134a3565b602060405180830381865afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f91906134d0565b8061186757506000546001600160a01b038581169116145b949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118cb91906135c2565b6000604051808303816000865af19150503d8060008114611908576040519150601f19603f3d011682016040523d82523d6000602084013e61190d565b606091505b509150915081801561193757508051158061193757508080602001905181019061193791906134d0565b6117be5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161056e565b606080600080808061198a62015180886135de565b9050600061199b8262010bd96135f2565b6119a89062253d8c6135f2565b9050600062023ab16119bb836004613633565b6119c591906136b8565b905060046119d68262023ab1613633565b6119e19060036135f2565b6119eb91906136b8565b6119f590836136e6565b9150600062164b09611a088460016135f2565b611a1490610fa0613633565b611a1e91906136b8565b90506004611a2e826105b5613633565b611a3891906136b8565b611a4290846136e6565b611a4d90601f6135f2565b9250600061098f611a5f856050613633565b611a6991906136b8565b905060006050611a7b8361098f613633565b611a8591906136b8565b611a8f90866136e6565b9050611a9c600b836136b8565b9450611aa985600c613633565b611ab48360026135f2565b611abe91906136e6565b91508483611acd6031876136e6565b611ad8906064613633565b611ae291906135f2565b611aec91906135f2565b9850909650945060009350611b119250611b0c9150612710905086613725565b612724565b90506000600a8410611b2b57611b2684612724565b611b54565b611b3484612724565b604051602001611b449190613739565b6040516020818303038152906040525b90506000600a8410611b6e57611b6984612724565b611b97565b611b7784612724565b604051602001611b879190613739565b6040516020818303038152906040525b9050896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611bd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bff9190810190613762565b838383604051602001611c1594939291906137cf565b6040516020818303038152906040529750896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611c64573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c8c9190810190613762565b838383604051602001611ca2949392919061384c565b60405160208183030381529060405296505050505050509250929050565b6000808060001985870985870292508281108382030391505080600003611cf95760008411611cee57600080fd5b508290049050611d6d565b808411611d0557600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166352047942896040518263ffffffff1660e01b8152600401611dc891815260200190565b602060405180830381865afa158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0991906133f0565b6001600160a01b031663acc5570c896040518263ffffffff1660e01b8152600401611e3691815260200190565b60c060405180830381865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e77919061340d565b5050935093509350935060008588611e8f91906132b4565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611ebf9190612fc9565b602060405180830381865afa158015611edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f00919061348a565b9050611f176001600160a01b03841633308c612407565b611f2189826132cb565b6040516370a0823160e01b81526001600160a01b038516906370a0823190611f4d903090600401612fc9565b602060405180830381865afa158015611f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8e919061348a565b1015611fad576040516334d5114960e21b815260040160405180910390fd5b6001600160a01b0385161561214957611fd06001600160a01b038416868461186f565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611fff903090600401612fc9565b602060405180830381865afa15801561201c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612040919061348a565b6040516312e779df60e21b8152600481018d905260248101859052604481018b90529091506001600160a01b03871690634b9de77c90606401600060405180830381600087803b15801561209357600080fd5b505af11580156120a7573d6000803e3d6000fd5b5050505088816120b791906132cb565b6040516370a0823160e01b81526001600160a01b038716906370a08231906120e3903090600401612fc9565b602060405180830381865afa158015612100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612124919061348a565b101561214357604051637152badd60e11b815260040160405180910390fd5b5061227c565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190612178903090600401612fc9565b602060405180830381865afa158015612195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b9919061348a565b90506121d06001600160a01b03861688308c612407565b6121da89826132cb565b6040516370a0823160e01b81526001600160a01b038716906370a0823190612206903090600401612fc9565b602060405180830381865afa158015612223573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612247919061348a565b1015612266576040516334d5114960e21b815260040160405180910390fd5b61227a6001600160a01b038516888561186f565b505b50505050505050505050565b600065ffffffffffff8216156122fe5762015180806122a742856133c6565b6122b19190613503565b6122bb9190613528565b905060006122c98483611075565b60008181526008602052604090205490915060ff166122ed576122ed818584612565565b6122f8868287612522565b50611867565b6118676001600160a01b038416868661186f565b60008281526008602052604090205460ff166123415760405163e94b8f2760e01b815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff8082161515835261010082046001600160a01b031694830194909452600160a81b810490931693810193909352600160b01b90910465ffffffffffff166060830181905260019091015460808301524210156123de576060810151604051634fb1e97360e01b815265ffffffffffff909116600482015260240161056e565b6123e933848461284f565b6020810151612402906001600160a01b0316338461186f565b505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161246b91906135c2565b6000604051808303816000865af19150503d80600081146124a8576040519150601f19603f3d011682016040523d82523d6000602084013e6124ad565b606091505b50915091508180156124d75750805115806124d75750808060200190518101906124d791906134d0565b61251a5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161056e565b505050505050565b600082815260086020526040812060010180548392906125439084906132cb565b9250508190555061240283838360405180602001604052806000815250612881565b60006125746201518083613503565b6125819062015180613528565b9050428165ffffffffffff1610156125ac5760405163e94b8f2760e01b815260040160405180910390fd5b6040518060a00160405280600115158152602001846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561260d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263191906138b6565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716600160b01b0265ffffffffffff60b01b1997909816600160a81b029690961666ffffffffffffff60a81b196001600160a01b0397881661010002610100600160a81b0319941515949094166001600160a81b03199093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361274b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612775578061275f816133ad565b915061276e9050600a836135de565b915061274f565b6000816001600160401b0381111561278f5761278f612b04565b6040519080825280601f01601f1916602001820160405280156127b9576020820181803683370190505b509050815b8515612846576127cf6001826132b4565b905060006127de600a886135de565b6127e990600a6138d9565b6127f390886132b4565b6127fe9060306138f8565b905060008160f81b90508084848151811061281b5761281b613288565b60200101906001600160f81b031916908160001a90535061283d600a896135de565b975050506127be565b50949350505050565b600082815260086020526040812060010180548392906128709084906132b4565b9091555061240290508383836129ba565b6001600160a01b0384166000908152600660209081526040808320868452909152812080548492906128b49084906132cb565b90915550506040516001600160a01b03851690600090339060008051602061391e833981519152906128e99088908890613093565b60405180910390a46001600160a01b0384163b1561298b5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061293890339060009089908990899060040161357d565b6020604051808303816000875af1158015612957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297b9190613366565b6001600160e01b03191614612998565b6001600160a01b03841615155b6129b45760405162461bcd60e51b815260040161056e90613383565b50505050565b6001600160a01b0383166000908152600660209081526040808320858452909152812080548392906129ed9084906132b4565b90915550506040516000906001600160a01b03851690339060008051602061391e83398151915290612a229087908790613093565b60405180910390a4505050565b6001600160a01b0381168114612a4457600080fd5b50565b8035612a5281612a2f565b919050565b60008060408385031215612a6a57600080fd5b8235612a7581612a2f565b946020939093013593505050565b6001600160e01b031981168114612a4457600080fd5b600060208284031215612aab57600080fd5b8135611d6d81612a83565b65ffffffffffff81168114612a4457600080fd5b600060208284031215612adc57600080fd5b8135611d6d81612ab6565b600060208284031215612af957600080fd5b8135611d6d81612a2f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612b4257612b42612b04565b604052919050565b60006001600160401b03821115612b6357612b63612b04565b5060051b60200190565b600082601f830112612b7e57600080fd5b81356020612b93612b8e83612b4a565b612b1a565b82815260059290921b84018101918181019086841115612bb257600080fd5b8286015b84811015612bcd5780358352918301918301612bb6565b509695505050505050565b60006001600160401b03821115612bf157612bf1612b04565b50601f01601f191660200190565b600082601f830112612c1057600080fd5b8135612c1e612b8e82612bd8565b818152846020838601011115612c3357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612c6857600080fd5b8535612c7381612a2f565b94506020860135612c8381612a2f565b935060408601356001600160401b0380821115612c9f57600080fd5b612cab89838a01612b6d565b94506060880135915080821115612cc157600080fd5b612ccd89838a01612b6d565b93506080880135915080821115612ce357600080fd5b50612cf088828901612bff565b9150509295509295909350565b60008060408385031215612d1057600080fd5b82356001600160401b03811115612d2657600080fd5b8301601f81018513612d3757600080fd5b80356020612d47612b8e83612b4a565b82815260059290921b83018101918181019088841115612d6657600080fd5b938201935b83851015612d8d578435612d7e81612a2f565b82529382019390820190612d6b565b9550612d9c9050868201612a47565b93505050509250929050565b600060208284031215612dba57600080fd5b5035919050565b60005b83811015612ddc578181015183820152602001612dc4565b838111156129b45750506000910152565b60008151808452612e05816020860160208601612dc1565b601f01601f19169290920160200192915050565b604081526000612e2c6040830185612ded565b8281036020840152612e3e8185612ded565b95945050505050565b60008060408385031215612e5a57600080fd5b82356001600160401b0380821115612e7157600080fd5b818501915085601f830112612e8557600080fd5b81356020612e95612b8e83612b4a565b82815260059290921b84018101918181019089841115612eb457600080fd5b948201945b83861015612edb578535612ecc81612a2f565b82529482019490820190612eb9565b96505086013592505080821115612ef157600080fd5b50612efe85828601612b6d565b9150509250929050565b600081518084526020808501945080840160005b83811015612f3857815187529582019590820190600101612f1c565b509495945050505050565b602081526000611d6d6020830184612f08565b600080600080600060a08688031215612f6e57600080fd5b8535612f7981612a2f565b94506020860135612f8981612a2f565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215612fba57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60008060408385031215612ff057600080fd5b8235612ffb81612a2f565b9150602083013561300b81612ab6565b809150509250929050565b8015158114612a4457600080fd5b6000806040838503121561303757600080fd5b823561304281612a2f565b9150602083013561300b81613016565b60008060006060848603121561306757600080fd5b833561307281612a2f565b9250602084013561308281612ab6565b929592945050506040919091013590565b918252602082015260400190565b600080604083850312156130b457600080fd5b82356130bf81612a2f565b9150602083013561300b81612a2f565b60008083601f8401126130e157600080fd5b5081356001600160401b038111156130f857600080fd5b6020830191508360208260051b850101111561311357600080fd5b9250929050565b6000806000806040858703121561313057600080fd5b84356001600160401b038082111561314757600080fd5b613153888389016130cf565b9096509450602087013591508082111561316c57600080fd5b50613179878288016130cf565b95989497509550505050565b600080600080600060a0868803121561319d57600080fd5b85356131a881612a2f565b945060208601356131b881612a2f565b9350604086013592506060860135915060808601356001600160401b038111156131e157600080fd5b612cf088828901612bff565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156132c6576132c661329e565b500390565b600082198211156132de576132de61329e565b500190565b6040815260006132f66040830185612f08565b8281036020840152612e3e8185612f08565b6001600160a01b0386811682528516602082015260a06040820181905260009061333490830186612f08565b82810360608401526133468186612f08565b9050828103608084015261335a8185612ded565b98975050505050505050565b60006020828403121561337857600080fd5b8151611d6d81612a83565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000600182016133bf576133bf61329e565b5060010190565b600065ffffffffffff8083168185168083038211156133e7576133e761329e565b01949350505050565b60006020828403121561340257600080fd5b8151611d6d81612a2f565b60008060008060008060c0878903121561342657600080fd5b865161343181612a2f565b602088015190965061344281612a2f565b604088015190955061345381612a2f565b606088015190945061346481612a2f565b608088015190935061347581612ab6565b8092505060a087015190509295509295509295565b60006020828403121561349c57600080fd5b5051919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156134e257600080fd5b8151611d6d81613016565b634e487b7160e01b600052601260045260246000fd5b600065ffffffffffff8084168061351c5761351c6134ed565b92169190910492915050565b600065ffffffffffff8083168185168183048111821515161561354d5761354d61329e565b02949350505050565b600065ffffffffffff838116908316818110156135755761357561329e565b039392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906135b790830184612ded565b979650505050505050565b600082516135d4818460208701612dc1565b9190910192915050565b6000826135ed576135ed6134ed565b500490565b600080821280156001600160ff1b03849003851316156136145761361461329e565b600160ff1b839003841281161561362d5761362d61329e565b50500190565b60006001600160ff1b03818413828413808216868404861116156136595761365961329e565b600160ff1b60008712828116878305891216156136785761367861329e565b600087129250878205871284841616156136945761369461329e565b878505871281841616156136aa576136aa61329e565b505050929093029392505050565b6000826136c7576136c76134ed565b600160ff1b8214600019841416156136e1576136e161329e565b500590565b60008083128015600160ff1b8501841216156137045761370461329e565b6001600160ff1b038401831381161561371f5761371f61329e565b50500390565b600082613734576137346134ed565b500690565b600360fc1b815260008251613755816001850160208701612dc1565b9190910160010192915050565b60006020828403121561377457600080fd5b81516001600160401b0381111561378a57600080fd5b8201601f8101841361379b57600080fd5b80516137a9612b8e82612bd8565b8181528560208385010111156137be57600080fd5b612e3e826020830160208601612dc1565b600085516137e1818460208a01612dc1565b600160fd1b90830190815285516137ff816001840160208a01612dc1565b808201915050602d60f81b8060018301528551613823816002850160208a01612dc1565b6002920191820152835161383e816003840160208801612dc1565b016003019695505050505050565b6000855161385e818460208a01612dc1565b602d60f81b908301908152855161387c816001840160208a01612dc1565b8551910190613892816001840160208901612dc1565b84519101906138a8816001840160208801612dc1565b016001019695505050505050565b6000602082840312156138c857600080fd5b815160ff81168114611d6d57600080fd5b60008160001904831182151516156138f3576138f361329e565b500290565b600060ff821660ff84168060ff038211156139155761391561329e565b01939250505056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a264697066735822122017d4fe703ed4b26e0a3bdca46723be0df0ac4867be42e53e96a760611e348d9864736f6c634300080f0033",
    "sourceMap": "1429:9355:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:64:112;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:25:164;;;743:2;728:18;1187:64:112;;;;;;;;4612:340;;;;;;:::i;:::-;;:::i;:::-;;;1342:14:164;;1335:22;1317:41;;1305:2;1290:18;4612:340:112;1177:187:164;3272:31:105;;;;;-1:-1:-1;;;3272:31:105;;;;;;;;;1543:14:164;1531:27;;;1513:46;;1501:2;1486:18;3272:31:105;1369:196:164;4098:171:105;;;;;;:::i;:::-;;:::i;:::-;;1944:147:22;;;;;;:::i;:::-;;:::i;2428:1353:112:-;;;;;;:::i;:::-;;:::i;4734:414:105:-;;;;;;:::i;:::-;;:::i;10400:382:103:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3787:636:112:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1772:54:103:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1772:54:103;;-1:-1:-1;;;1772:54:103;;;;;;-1:-1:-1;;;1772:54:103;;;;;;;;;;;;9577:14:164;;9570:22;9552:41;;-1:-1:-1;;;;;9629:32:164;;;9624:2;9609:18;;9602:60;9710:4;9698:17;;;9678:18;;;9671:45;;;;9764:14;9752:27;;;9747:2;9732:18;;9725:55;9811:3;9796:19;;9789:35;9539:3;9524:19;1772:54:103;9290:540:164;5399:1838:105;;;;;;:::i;:::-;;:::i;:::-;;;;10606:25:164;;;10679:14;10667:27;;;10662:2;10647:18;;10640:55;10579:18;5399:1838:105;10434:267:164;1504:434:22;;;;;;:::i;:::-;;:::i;6833:123:103:-;;;;;;:::i;:::-;;:::i;4503:193:105:-;;;;;;:::i;:::-;;:::i;551:20:22:-;;;;;-1:-1:-1;;;;;551:20:22;;;;;;;;;;:::i;9971:382:103:-;;;;;;:::i;:::-;;:::i;1516:203:112:-;;;;;;:::i;:::-;;:::i;3045:25:105:-;;;;;;;;;4307:158;;;;;;:::i;:::-;;:::i;4320:1834:103:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5186:127:105:-;;;;;;:::i;:::-;;:::i;578:26:22:-;;;;;-1:-1:-1;;;;;578:26:22;;;2919:46:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7447:386:103;;;;;;:::i;:::-;;:::i;3310:41:105:-;;3348:3;3310:41;;3438:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1258:68:112;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;7003:351:103;;;;;;:::i;:::-;;:::i;1725:697:112:-;;;;;;:::i;:::-;;:::i;4612:340::-;4688:4;-1:-1:-1;;;;;;;;;4723:25:112;;;;:100;;-1:-1:-1;;;;;;;;;;4798:25:112;;;4723:100;:176;;;-1:-1:-1;;;;;;;;;;4874:25:112;;;4723:176;4704:195;4612:340;-1:-1:-1;;4612:340:112:o;4098:171:105:-;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;;;;;;;;;555:1;546:10;;4187:3:105::1;4180:10;::::0;::::1;;4176:45;;;4199:22;;-1:-1:-1::0;;;4199:22:105::1;;;;;;;;;;;4176:45;4244:10;4231:24;::::0;;;:12:::1;:24;::::0;;;;:31;;-1:-1:-1;;4231:31:105::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;579:6:29;:10;4098:171:105:o;1944:147:22:-;883:33;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;2018:5:::1;:16:::0;;-1:-1:-1;;;;;;2018:16:22::1;-1:-1:-1::0;;;;;2018:16:22;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;2428:1353:112:-;2643:10;;2702:14;;2689:27;;2681:55;;;;-1:-1:-1;;;2681:55:112;;;;;;;:::i;:::-;2755:10;-1:-1:-1;;;;;2755:18:112;;;;:56;;-1:-1:-1;;;;;;2777:22:112;;;;;;:16;:22;;;;;;;;2800:10;2777:34;;;;;;;;;;2755:56;2747:83;;;;-1:-1:-1;;;2747:83:112;;;;;;;:::i;:::-;2912:10;2932:14;2962:9;2957:347;2977:9;2973:1;:13;2957:347;;;3009:3;3013:1;3009:6;;;;;;;;:::i;:::-;;;;;;;3004:11;;3038:7;3046:1;3038:10;;;;;;;;:::i;:::-;;;;;;;3029:19;;3086:6;3063:9;:15;3073:4;-1:-1:-1;;;;;3063:15:112;-1:-1:-1;;;;;3063:15:112;;;;;;;;;;;;:19;3079:2;3063:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3106:13:112;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;3127:6;;3106:13;:27;;3127:6;;3106:27;:::i;:::-;;;;-1:-1:-1;;3276:3:112;;2957:347;;;;3351:2;-1:-1:-1;;;;;3319:49:112;3345:4;-1:-1:-1;;;;;3319:49:112;3333:10;-1:-1:-1;;;;;3319:49:112;;3355:3;3360:7;3319:49;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3400:14:112;;;:19;:332;;3473:203;;-1:-1:-1;;;3473:203:112;;;3680:52;-1:-1:-1;;;;;3473:47:112;;;3680:52;;3473:203;;3542:10;;3574:4;;3600:3;;3625:7;;3654:4;;3473:203;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3473:259:112;;3400:332;;;-1:-1:-1;;;;;3438:16:112;;;;3400:332;3379:395;;;;-1:-1:-1;;;3379:395:112;;;;;;;:::i;:::-;2613:1168;;;2428:1353;;;;;:::o;4734:414:105:-;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;4845:14:105;;4831:11:::1;4869:273;4889:3;4885:1;:7;4869:273;;;4913:11;4927:7;4935:1;4927:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4974::::1;4951:12;4966:19:::0;;;:7:::1;:19:::0;;;;;;-1:-1:-1;;;;;4966:26:105;::::1;::::0;;;;;;;;;;4927:10;;-1:-1:-1;5011:9:105;;5007:125:::1;;5048:10;5069:1;5040:19:::0;;;:7:::1;:19;::::0;;;;;;;-1:-1:-1;;;;;5040:26:105;::::1;::::0;;;;;;;:30;;;;5088:29:::1;::::0;5107:3;5112:4;5088:18:::1;:29::i;:::-;4899:243;;4894:3;;;;:::i;:::-;;;4869:273;;;-1:-1:-1::0;;588:1:29;579:6;:10;-1:-1:-1;;4734:414:105:o;10400:382:103:-;10557:25;10585:23;;;:13;:23;;;;;;;;10557:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10557:51:103;;;;;;;-1:-1:-1;;;10557:51:103;;;;;;;;;;-1:-1:-1;;;10557:51:103;;;;;10513:13;10557:51;;;;;;;;;;;;;;;10513:13;;;;10557:25;;;;10663:81;;:17;:81::i;:::-;10618:126;;;;-1:-1:-1;10400:382:103;-1:-1:-1;;;;;10400:382:103:o;3787:636:112:-;3983:13;;4048:10;;3919:25;;3983:13;4032:26;;4024:54;;;;-1:-1:-1;;;4024:54:112;;;;;;;:::i;:::-;4114:12;-1:-1:-1;;;;;4100:27:112;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4100:27:112;;4089:38;;4298:9;4293:114;4313:12;4309:1;:16;4293:114;;;4364:9;:20;4374:6;4381:1;4374:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4364:20:112;-1:-1:-1;;;;;4364:20:112;;;;;;;;;;;;:28;4385:3;4389:1;4385:6;;;;;;;;:::i;:::-;;;;;;;4364:28;;;;;;;;;;;;4350:8;4359:1;4350:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4327:3;;4293:114;;;;3950:473;3787:636;;;;:::o;5399:1838:105:-;5594:7;5603:6;509::29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;-1:-1:-1;;;;;6003:23:105;::::1;5621:17;6003:23:::0;;;:12:::1;:23;::::0;;;;;5621:17;;;;;;;;5988:53:::1;::::0;:7;;6003:23:::1;;3348:3;5988:14;:53::i;:::-;-1:-1:-1::0;;;;;6101:23:105;::::1;6051:18;6101:23:::0;;;:12:::1;:23;::::0;;;;;6087:11:::1;::::0;5967:74;;-1:-1:-1;6051:18:105;;5967:74;;6072:67:::1;::::0;6087:37:::1;::::0;6101:23:::1;::::0;;::::1;::::0;6087:11:::1;:37;:::i;:::-;6072:7:::0;;:67:::1;;3348:3;6072:14;:67::i;:::-;:92;;;;:::i;:::-;6218:30;::::0;-1:-1:-1;;;6218:30:105;;::::1;::::0;::::1;755:25:164::0;;;6051:113:105;;-1:-1:-1;6189:26:105::1;::::0;-1:-1:-1;;;;;6218:11:105::1;:25;::::0;::::1;::::0;728:18:164;;6218:30:105::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6337:70;::::0;-1:-1:-1;;;6337:70:105;;::::1;::::0;::::1;755:25:164::0;;;6189:59:105;;-1:-1:-1;6262:13:105::1;::::0;-1:-1:-1;;;;;6337:35:105;::::1;::::0;::::1;::::0;728:18:164;;6337:70:105::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6289:118:105;;-1:-1:-1;6289:118:105;-1:-1:-1;6289:118:105;-1:-1:-1;6289:118:105;;-1:-1:-1;6493:21:105::1;::::0;-1:-1:-1;6540:10:105;6517:20:::1;6527:10:::0;6517:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6493:57;;6573:10;-1:-1:-1::0;;;;;6573:23:105::1;;6597:3;6602:13;6617;6573:58;;;;;;;;;;;;;;;;21537:25:164::0;;;21593:2;21578:18;;21571:34;;;;21636:2;21621:18;;21614:34;21525:2;21510:18;;21335:319;6573:58:105::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:67;;6175:467;;;6736:10;6702:7;:18;6710:9;-1:-1:-1::0;;;;;6702:18:105::1;-1:-1:-1::0;;;;;6702:18:105::1;;;;;;;;;;;;:30;6721:10;-1:-1:-1::0;;;;;6702:30:105::1;-1:-1:-1::0;;;;;6702:30:105::1;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6764:9:105::1;6756:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6790:10;;6756:18;:44:::1;::::0;6790:10;;6756:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6902:63:105::1;::::0;-1:-1:-1;6919:3:105;6924:7;6933:6;6941:23:::1;6954:10:::0;6941;:23:::1;:::i;:::-;6902:16;:63::i;:::-;7070:13;7086:55;7100:10;7112:6;7120:11;7133:7;7086:13;:55::i;:::-;7070:71;;7169:9;-1:-1:-1::0;;;;;7157:39:105::1;7164:3;7157:39;7180:7;7189:6;7157:39;;;;;;;:::i;:::-;;;;;;;;588:1:29::0;579:6;:10;7215:6:105;;;;-1:-1:-1;5399:1838:105;;-1:-1:-1;;;;;;;;;;;5399:1838:105:o;1504:434:22:-;1775:5;;-1:-1:-1;;;;;1775:5:22;1761:10;:19;;:76;;-1:-1:-1;1784:9:22;;:53;;-1:-1:-1;;;1784:53:22;;-1:-1:-1;;;;;1784:9:22;;;;:17;;:53;;1802:10;;1822:4;;-1:-1:-1;;;;;;1784:9:22;1829:7;;;1784:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;-1:-1:-1;;;;;;1849:24:22;-1:-1:-1;;;;;1849:24:22;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:22;1504:434;:::o;6833:123:103:-;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;6923:26:103::1;6931:8:::0;6941:7;6923::::1;:26::i;:::-;-1:-1:-1::0;;588:1:29;579:6;:10;6833:123:103:o;4503:193:105:-;883:33:22;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;4608:11:105::1;::::0;::::1;::::0;;::::1;4596:23:::0;;::::1;;4592:58;;;4628:22;;-1:-1:-1::0;;;4628:22:105::1;;;;;;;;;;;4592:58;4660:17;:29:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4660:29:105::1;-1:-1:-1::0;;;;4660:29:105;;::::1;::::0;;;::::1;::::0;;4503:193::o;9971:382:103:-;10056:7;;10273:11;10286:24;10303:6;10286:7;:24;:::i;:::-;10256:55;;;;;;;;23050:2:164;23021:15;;;;-1:-1:-1;;;;;;23017:45:164;23005:58;;23127:3;23097:16;-1:-1:-1;;;;;;23093:47:164;23088:2;23079:12;;23072:69;23166:2;23157:12;;22835:340;10256:55:103;;;;;;;-1:-1:-1;;10256:55:103;;;;;;10246:66;;10256:55;10246:66;;;;;9971:382;-1:-1:-1;;;;9971:382:103:o;1516:203:112:-;1618:10;1601:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;1601:38:112;;;;;;;;;;;;:49;;-1:-1:-1;;1601:49:112;;;;;;;;;;1666:46;;1317:41:164;;;1601:38:112;;1618:10;1666:46;;1290:18:164;1666:46:112;;;;;;;1516:203;;:::o;4307:158:105:-;883:33:22;896:10;908:7;;-1:-1:-1;;;;;;908:7:22;883:12;:33::i;:::-;875:58;;;;-1:-1:-1;;;875:58:22;;;;;;;:::i;:::-;4396:3:105::1;4389:4;:10;;;4385:45;;;4408:22;;-1:-1:-1::0;;;4408:22:105::1;;;;;;;;;;;4385:45;4440:11;:18:::0;;-1:-1:-1;;4440:18:105::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4307:158::o;4320:1834:103:-;4458:7;4467;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;4640:13:103::1;4663:16;4673:6;4663:7:::0;:16:::1;:::i;:::-;4656:33;::::0;4683:6:::1;4656:33;:::i;:::-;4640:49;;4756:15;4747:6;:24;;;4743:59;;;4780:22;;-1:-1:-1::0;;;4780:22:103::1;;;;;;;;;;;4743:59;4813:15;4831:31;4842:11;4855:6;4831:10;:31::i;:::-;4939:22;::::0;;;:13:::1;:22;::::0;;;;:29;4813:49;;-1:-1:-1;4939:29:103::1;;4934:88;;4977:45;::::0;-1:-1:-1;;;4977:45:103;;-1:-1:-1;;;;;23656:32:164;;4977:45:103::1;::::0;::::1;23638:51:164::0;23737:14;23725:27;;23705:18;;;23698:55;23611:18;;4977:45:103::1;23451:308:164::0;4934:88:103::1;5243:36;::::0;-1:-1:-1;;;5243:36:103;;5222:18:::1;::::0;-1:-1:-1;;;;;5243:21:103;::::1;::::0;::::1;::::0;:36:::1;::::0;5273:4:::1;::::0;5243:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5222:57:::0;-1:-1:-1;5289:64:103::1;-1:-1:-1::0;;;;;5289:28:103;::::1;5318:10;5338:4;5345:7:::0;5289:28:::1;:64::i;:::-;5406:20;5419:7:::0;5406:10;:20:::1;:::i;:::-;5367:36;::::0;-1:-1:-1;;;5367:36:103;;-1:-1:-1;;;;;5367:21:103;::::1;::::0;::::1;::::0;:36:::1;::::0;5397:4:::1;::::0;5367:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5363:109;;;5447:25;;-1:-1:-1::0;;;5447:25:103::1;;;;;;;;;;;5363:109;5627:17;::::0;::::1;-1:-1:-1::0;;;5627:17:103;::::1;::::0;::::1;5613:11:::0;::::1;:31;5609:539;;;5745:17;::::0;5696::::1;::::0;5716:61:::1;::::0;5731:31:::1;::::0;5745:17:::1;-1:-1:-1::0;;;5745:17:103;::::1;::::0;::::1;::::0;5731:11:::1;:31;:::i;:::-;5716:7:::0;;:61:::1;;3348:3:105;5716:14:103;:61::i;:::-;-1:-1:-1::0;;;;;5799:9:103::1;5791:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5696:81;;-1:-1:-1;5696:81:103;;5791:31;;:18;:44:::1;::::0;5696:81;;5791:44:::1;:::i;:::-;::::0;;;-1:-1:-1;5886:52:103::1;::::0;-1:-1:-1;5897:10:103::1;5909:7:::0;5918:19:::1;5928:9:::0;5918:7;:19:::1;:::i;:::-;5886:10;:52::i;:::-;5961:7:::0;5970:19:::1;5980:9:::0;5970:7;:19:::1;:::i;:::-;5953:37;;;;;;;;;;5609:539;6057:40;6068:10;6080:7;6089;6057:10;:40::i;:::-;-1:-1:-1::0;6120:7:103;-1:-1:-1;6129:7:103;;-1:-1:-1;6112:25:103::1;::::0;-1:-1:-1;6112:25:103::1;567:1:29;588::::0;579:6;:10;4320:1834:103;;;;-1:-1:-1;4320:1834:103;-1:-1:-1;;4320:1834:103:o;5186:127:105:-;-1:-1:-1;;;;;5283:23:105;;5244:6;5283:23;;;:12;:23;;;;;;5269:11;;:37;;5283:23;;;;;5269:11;:37;:::i;7447:386:103:-;7570:7;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;7593:15:103::1;7611:32;7622:11:::0;7635:7;7611:10:::1;:32::i;:::-;7709:22;::::0;;;:13:::1;:22;::::0;;;;:29;7593:50;;-1:-1:-1;7709:29:103::1;;7704:99;;7754:38;7762:7;7771:11;7784:7;7754;:38::i;:::-;588:1:29::0;579:6;:10;7819:7:103;7447:386;-1:-1:-1;;;7447:386:103:o;7003:351::-;509:6:29;;519:1;509:11;501:34;;;;-1:-1:-1;;;501:34:29;;;;;;;:::i;:::-;555:1;546:10;;7166:9:103;7196:22;;::::1;7192:57;;7227:22;;-1:-1:-1::0;;;7227:22:103::1;;;;;;;;;;;7192:57;7264:9;7259:89;7279:3;7275:1;:7;7259:89;;;7303:34;7311:9;;7321:1;7311:12;;;;;;;:::i;:::-;;;;;;;7325:8;;7334:1;7325:11;;;;;;;:::i;:::-;;;;;;;7303:7;:34::i;:::-;7284:3;::::0;::::1;:::i;:::-;;;7259:89;;;-1:-1:-1::0;;588:1:29;579:6;:10;-1:-1:-1;;;;7003:351:103:o;1725:697:112:-;1903:10;-1:-1:-1;;;;;1903:18:112;;;;:56;;-1:-1:-1;;;;;;1925:22:112;;;;;;:16;:22;;;;;;;;1948:10;1925:34;;;;;;;;;;1903:56;1895:83;;;;-1:-1:-1;;;1895:83:112;;;;;;;:::i;:::-;-1:-1:-1;;;;;1989:15:112;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;2012:6;;1989:15;:29;;2012:6;;1989:29;:::i;:::-;;;;-1:-1:-1;;;;;;;2028:13:112;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;2049:6;;2028:13;:27;;2049:6;;2028:27;:::i;:::-;;;;;;;;2104:2;-1:-1:-1;;;;;2071:48:112;2098:4;-1:-1:-1;;;;;2071:48:112;2086:10;-1:-1:-1;;;;;2071:48:112;-1:-1:-1;;;;;;;;;;;2108:2:112;2112:6;2071:48;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2151:14:112;;;:19;:222;;2224:78;;-1:-1:-1;;;2224:78:112;;;2326:47;-1:-1:-1;;;;;2224:42:112;;;2326:47;;2224:78;;2267:10;;2279:4;;2285:2;;2289:6;;2297:4;;2224:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2224:149:112;;2151:222;;;-1:-1:-1;;;;;2189:16:112;;;;2151:222;2130:285;;;;-1:-1:-1;;;2130:285:112;;;;;;;:::i;:::-;1725:697;;;;;:::o;958:540:22:-;1078:9;;1045:4;;-1:-1:-1;;;;;1078:9:22;1396:27;;;;;:77;;-1:-1:-1;1427:46:22;;-1:-1:-1;;;1427:46:22;;-1:-1:-1;;;;;1427:12:22;;;;;:46;;1440:4;;1454;;1461:11;;1427:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:22;;-1:-1:-1;;;;;1478:13:22;;;1486:5;;1478:13;1395:96;1388:103;958:540;-1:-1:-1;;;;958:540:22:o;784:353:67:-;965:59;;;-1:-1:-1;;;;;24752:32:164;;;965:59:67;;;24734:51:164;24801:18;;;;24794:34;;;965:59:67;;;;;;;;;;24707:18:164;;;;965:59:67;;;;;;;-1:-1:-1;;;;;965:59:67;-1:-1:-1;;;965:59:67;;;932:102;;-1:-1:-1;;;;932:19:67;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:67;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;-1:-1:-1;;;1045:85:67;;25320:2:164;1045:85:67;;;25302:21:164;25359:2;25339:18;;;25332:30;-1:-1:-1;;;25378:18:164;;;25371:45;25433:18;;1045:85:67;25118:339:164;10985:1744:105;11095:18;;11373:12;;;;11476:16;11486:6;11476:7;:16;:::i;:::-;11453:40;-1:-1:-1;11508:11:105;11522:14;11453:40;11531:5;11522:14;:::i;:::-;:24;;11539:7;11522:24;:::i;:::-;11508:38;-1:-1:-1;11588:11:105;11615:6;11603:8;11508:38;11603:1;:8;:::i;:::-;11602:19;;;;:::i;:::-;11588:33;-1:-1:-1;11671:1:105;11650:13;11588:33;11650:6;:13;:::i;:::-;:17;;11666:1;11650:17;:::i;:::-;11649:23;;;;:::i;:::-;11642:30;;:4;:30;:::i;:::-;11635:37;-1:-1:-1;11686:12:105;11723:7;11710:8;11635:37;11717:1;11710:8;:::i;:::-;11702:17;;:4;:17;:::i;:::-;11701:29;;;;:::i;:::-;11686:44;-1:-1:-1;11775:1:105;11759:12;11686:44;11759:4;:12;:::i;:::-;11758:18;;;;:::i;:::-;11751:25;;:4;:25;:::i;:::-;:30;;11779:2;11751:30;:::i;:::-;11744:37;-1:-1:-1;11795:13:105;11825:4;11812:9;11744:37;11812:2;:9;:::i;:::-;11811:18;;;;:::i;:::-;11795:34;-1:-1:-1;11843:11:105;11882:2;11865:13;11795:34;11865:4;:13;:::i;:::-;11864:20;;;;:::i;:::-;11857:27;;:4;:27;:::i;:::-;11843:41;-1:-1:-1;11905:11:105;11914:2;11905:6;:11;:::i;:::-;11898:18;-1:-1:-1;11952:9:105;11898:18;11952:2;:9;:::i;:::-;11939:10;:6;11948:1;11939:10;:::i;:::-;:22;;;;:::i;:::-;11930:31;-1:-1:-1;12011:4:105;12003:5;11990:9;11997:2;11990:4;:9;:::i;:::-;11983:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;11975:40;-1:-1:-1;12081:6:105;;-1:-1:-1;12116:4:105;-1:-1:-1;12142:21:105;;-1:-1:-1;12166:23:105;;-1:-1:-1;12176:12:105;;-1:-1:-1;12183:5:105;;-1:-1:-1;11975:40:105;12176:12;:::i;:::-;12166:9;:23::i;:::-;12142:47;;12199:22;12232:2;12224:5;:10;:103;;12311:16;12321:5;12311:9;:16::i;:::-;12224:103;;;12278:16;12288:5;12278:9;:16::i;:::-;12256:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12224:103;12199:128;;12337:20;12366:2;12360:3;:8;:97;;12443:14;12453:3;12443:9;:14::i;:::-;12360:97;;;12412:14;12422:3;12412:9;:14::i;:::-;12390:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12360:97;12337:120;;12554:11;-1:-1:-1;;;;;12554:16:105;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12554:18:105;;;;;;;;;;;;:::i;:::-;12579:7;12593:8;12608:6;12537:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12510:115;;12668:11;-1:-1:-1;;;;;12668:18:105;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12668:20:105;;;;;;;;;;;;:::i;:::-;12695:7;12704:8;12714:6;12651:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12635:87;;11141:1588;;;;;;10985:1744;;;;;:::o;742:4147:66:-;854:14;;;-1:-1:-1;;1417:1:66;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:66;;;;-1:-1:-1;1787:13:66;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:66;;;;;;:::o;7325:2480:105:-;7510:13;7525:20;7547:17;7566:16;7590:11;-1:-1:-1;;;;;7590:38:105;;7629:3;7590:43;;;;;;;;;;;;;755:25:164;;743:2;728:18;;609:177;7590:43:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7590:81:105;;7672:3;7590:86;;;;;;;;;;;;;755:25:164;;743:2;728:18;;609:177;7590:86:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7509:167;;;;;;;;;;7727:21;7761:8;7751:7;:18;;;;:::i;:::-;7727:42;;8024:20;8047:10;-1:-1:-1;;;;;8047:20:105;;8076:4;8047:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8024:58;-1:-1:-1;8092:63:105;-1:-1:-1;;;;;8092:27:105;;8120:10;8140:4;8147:7;8092:27;:63::i;:::-;8207:22;8222:7;8207:12;:22;:::i;:::-;8169:35;;-1:-1:-1;;;8169:35:105;;-1:-1:-1;;;;;8169:20:105;;;;;:35;;8198:4;;8169:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8165:110;;;8250:25;;-1:-1:-1;;;8250:25:105;;;;;;;;;;;8165:110;-1:-1:-1;;;;;8466:26:105;;;8462:1337;;8604:52;-1:-1:-1;;;;;8604:23:105;;8628:12;8642:13;8604:23;:52::i;:::-;8773:36;;-1:-1:-1;;;8773:36:105;;8749:21;;-1:-1:-1;;;;;8773:21:105;;;;;:36;;8803:4;;8773:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8823:65;;-1:-1:-1;;;8823:65:105;;;;;21537:25:164;;;21578:18;;;21571:34;;;21621:18;;;21614:34;;;8749:60:105;;-1:-1:-1;;;;;;8823:36:105;;;;;21510:18:164;;8823:65:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9074:7;9058:13;:23;;;;:::i;:::-;9018:36;;-1:-1:-1;;;9018:36:105;;-1:-1:-1;;;;;9018:21:105;;;;;:36;;9048:4;;9018:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9014:117;;;9107:24;;-1:-1:-1;;;9107:24:105;;;;;;;;;;;9014:117;8494:648;8462:1337;;;9487:36;;-1:-1:-1;;;9487:36:105;;9463:21;;-1:-1:-1;;;;;9487:21:105;;;;;:36;;9517:4;;9487:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9463:60;-1:-1:-1;9537:59:105;-1:-1:-1;;;;;9537:28:105;;9566:5;9581:4;9588:7;9537:28;:59::i;:::-;9654:23;9670:7;9654:13;:23;:::i;:::-;9614:36;;-1:-1:-1;;;9614:36:105;;-1:-1:-1;;;;;9614:21:105;;;;;:36;;9644:4;;9614:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9610:118;;;9703:25;;-1:-1:-1;;;9703:25:105;;;;;;;;;;;9610:118;9743:45;-1:-1:-1;;;;;9743:23:105;;9767:5;9774:13;9743:23;:45::i;:::-;9148:651;8462:1337;7463:2342;;;;;;7325:2480;;;;:::o;2515:1712:103:-;2677:13;3392;;;;3388:833;;3578:6;;3515:34;3533:15;3515:8;:34;:::i;:::-;3514:53;;;;:::i;:::-;3513:72;;;;:::i;:::-;3504:81;;3735:15;3753:32;3764:12;3778:6;3753:10;:32::i;:::-;3866:22;;;;:13;:22;;;;;:29;3735:50;;-1:-1:-1;3866:29:103;;3861:107;;3915:38;3923:7;3932:12;3946:6;3915:7;:38::i;:::-;4026:40;4037:10;4049:7;4058;4026:10;:40::i;:::-;3407:670;3388:833;;;4164:46;-1:-1:-1;;;;;4164:25:103;;4190:10;4202:7;4164:25;:46::i;6200:586::-;6320:23;;;;:13;:23;;;;;:30;;;6315:66;;6359:22;;-1:-1:-1;;;6359:22:103;;;;;;;;;;;6315:66;6424:25;6452:23;;;:13;:23;;;;;;;;;6424:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6424:51:103;;;;;;;;-1:-1:-1;;;6424:51:103;;;;;;;;;;;;-1:-1:-1;;;6424:51:103;;;;;;;;;;;;;;;;;;;;6534:15;:29;6530:77;;;6595:11;;;;6572:35;;-1:-1:-1;;;6572:35:103;;1543:14:164;1531:27;;;6572:35:103;;;1513:46:164;1486:18;;6572:35:103;1369:196:164;6530:77:103;6679:41;6690:10;6702:8;6712:7;6679:10;:41::i;:::-;6730:15;;;;:49;;-1:-1:-1;;;;;6730:28:103;6759:10;6771:7;6730:28;:49::i;:::-;6261:525;6200:586;;:::o;384:394:67:-;591:69;;;-1:-1:-1;;;;;30619:15:164;;;591:69:67;;;30601:34:164;30671:15;;;30651:18;;;30644:43;30703:18;;;;30696:34;;;591:69:67;;;;;;;;;;30536:18:164;;;;591:69:67;;;;;;;-1:-1:-1;;;;;591:69:67;-1:-1:-1;;;591:69:67;;;558:112;;-1:-1:-1;;;;558:19:67;;;;:112;;591:69;558:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:148;;;;689:7;:57;;;;-1:-1:-1;701:11:67;;:16;;:44;;;732:4;721:24;;;;;;;;;;;;:::i;:::-;681:90;;;;-1:-1:-1;;;681:90:67;;30943:2:164;681:90:67;;;30925:21:164;30982:2;30962:18;;;30955:30;-1:-1:-1;;;31001:18:164;;;30994:50;31061:18;;681:90:67;30741:344:164;681:90:67;512:266;;384:394;;;;:::o;9221:215:103:-;9338:23;;;;:13;:23;;;;;:30;;:41;;9372:7;;9338:23;:41;;9372:7;;9338:41;:::i;:::-;;;;;;;;9389:40;9395:3;9400:8;9410:7;9419:9;;;;;;;;;;;;9389:5;:40::i;8254:734::-;8527:13;8550:16;8560:6;8550:7;:16;:::i;:::-;8543:33;;8570:6;8543:33;:::i;:::-;8527:49;;8652:15;8642:6;8634:15;;:33;8630:68;;;8676:22;;-1:-1:-1;;;8676:22:103;;;;;;;;;;;8630:68;8767:144;;;;;;;;8794:4;8767:144;;;;;;8812:11;-1:-1:-1;;;;;8767:144:103;;;;;8843:11;-1:-1:-1;;;;;8843:20:103;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8767:144;;;;;;;;;;;;;;;;;-1:-1:-1;8767:144:103;;;;;;;8741:23;;;:13;:23;;;;;:170;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8741:170:103;-1:-1:-1;;;;8741:170:103;;;;-1:-1:-1;;;8741:170:103;;;;;-1:-1:-1;;;;;;;;;8741:170:103;;;;;-1:-1:-1;;;;;;8741:170:103;;;;;;;-1:-1:-1;;;;;;8741:170:103;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8741:170:103;;;;;;;8927:54;;755:25:164;;;8767:144:103;;8927:54;;;;;;728:18:164;8927:54:103;;;;;;;8363:625;8254:734;;;:::o;12947:556:105:-;13001:13;13030:2;13036:1;13030:7;13026:48;;-1:-1:-1;;13053:10:105;;;;;;;;;;;;-1:-1:-1;;;13053:10:105;;;;;12947:556::o;13026:48::-;13095:2;13083:9;13128:66;13135:6;;13128:66;;13157:5;;;;:::i;:::-;;-1:-1:-1;13176:7:105;;-1:-1:-1;13181:2:105;13176:7;;:::i;:::-;;;13128:66;;;13203:17;13233:3;-1:-1:-1;;;;;13223:14:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13223:14:105;-1:-1:-1;13203:34:105;-1:-1:-1;13259:3:105;13272:196;13279:7;;13272:196;;13306:5;13310:1;13306;:5;:::i;:::-;13302:9;-1:-1:-1;13325:10:105;13356:7;13361:2;13356;:7;:::i;:::-;13355:14;;13367:2;13355:14;:::i;:::-;13350:19;;:2;:19;:::i;:::-;13339:31;;:2;:31;:::i;:::-;13325:46;;13385:9;13404:4;13397:12;;13385:24;;13433:2;13423:4;13428:1;13423:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;13423:12:105;;;;;;;;-1:-1:-1;13449:8:105;13455:2;13449:8;;:::i;:::-;;;13288:180;;13272:196;;;-1:-1:-1;13491:4:105;12947:556;-1:-1:-1;;;;12947:556:105:o;9670:208:103:-;9789:23;;;;:13;:23;;;;;:30;;:41;;9823:7;;9789:23;:41;;9823:7;;9789:41;:::i;:::-;;;;-1:-1:-1;9840:31:103;;-1:-1:-1;9846:5:103;9853:8;9863:7;9840:5;:31::i;5147:635:112:-;-1:-1:-1;;;;;5278:13:112;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5299:6;;5278:13;:27;;5299:6;;5278:27;:::i;:::-;;;;-1:-1:-1;;5321:54:112;;-1:-1:-1;;;;;5321:54:112;;;5356:1;;5336:10;;-1:-1:-1;;;;;;;;;;;5321:54:112;;;5364:2;;5368:6;;5321:54;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5407:14:112;;;:19;:326;;5480:202;;-1:-1:-1;;;5480:202:112;;;5686:47;-1:-1:-1;;;;;5480:42:112;;;5686:47;;5480:202;;5544:10;;5584:1;;5608:2;;5632:6;;5660:4;;5480:202;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5480:253:112;;5407:326;;;-1:-1:-1;;;;;5445:16:112;;;;5407:326;5386:389;;;;-1:-1:-1;;;5386:389:112;;;;;;;:::i;:::-;5147:635;;;;:::o;7411:214::-;-1:-1:-1;;;;;7517:15:112;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;7540:6;;7517:15;:29;;7540:6;;7517:29;:::i;:::-;;;;-1:-1:-1;;7562:56:112;;7603:1;;-1:-1:-1;;;;;7562:56:112;;;7577:10;;-1:-1:-1;;;;;;;;;;;7562:56:112;;;7607:2;;7611:6;;7562:56;:::i;:::-;;;;;;;;7411:214;;;:::o;14:131:164:-;-1:-1:-1;;;;;89:31:164;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:164:o;791:131::-;-1:-1:-1;;;;;;865:32:164;;855:43;;845:71;;912:1;909;902:12;927:245;985:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:52;;;1054:1;1051;1044:12;1006:52;1093:9;1080:23;1112:30;1136:5;1112:30;:::i;1570:125::-;1655:14;1648:5;1644:26;1637:5;1634:37;1624:65;;1685:1;1682;1675:12;1700:245;1758:6;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1866:9;1853:23;1885:30;1909:5;1885:30;:::i;1950:247::-;2009:6;2062:2;2050:9;2041:7;2037:23;2033:32;2030:52;;;2078:1;2075;2068:12;2030:52;2117:9;2104:23;2136:31;2161:5;2136:31;:::i;2202:127::-;2263:10;2258:3;2254:20;2251:1;2244:31;2294:4;2291:1;2284:15;2318:4;2315:1;2308:15;2334:275;2405:2;2399:9;2470:2;2451:13;;-1:-1:-1;;2447:27:164;2435:40;;-1:-1:-1;;;;;2490:34:164;;2526:22;;;2487:62;2484:88;;;2552:18;;:::i;:::-;2588:2;2581:22;2334:275;;-1:-1:-1;2334:275:164:o;2614:183::-;2674:4;-1:-1:-1;;;;;2696:30:164;;2693:56;;;2729:18;;:::i;:::-;-1:-1:-1;2774:1:164;2770:14;2786:4;2766:25;;2614:183::o;2802:662::-;2856:5;2909:3;2902:4;2894:6;2890:17;2886:27;2876:55;;2927:1;2924;2917:12;2876:55;2963:6;2950:20;2989:4;3013:60;3029:43;3069:2;3029:43;:::i;:::-;3013:60;:::i;:::-;3107:15;;;3193:1;3189:10;;;;3177:23;;3173:32;;;3138:12;;;;3217:15;;;3214:35;;;3245:1;3242;3235:12;3214:35;3281:2;3273:6;3269:15;3293:142;3309:6;3304:3;3301:15;3293:142;;;3375:17;;3363:30;;3413:12;;;;3326;;3293:142;;;-1:-1:-1;3453:5:164;2802:662;-1:-1:-1;;;;;;2802:662:164:o;3469:186::-;3517:4;-1:-1:-1;;;;;3539:30:164;;3536:56;;;3572:18;;:::i;:::-;-1:-1:-1;3638:2:164;3617:15;-1:-1:-1;;3613:29:164;3644:4;3609:40;;3469:186::o;3660:462::-;3702:5;3755:3;3748:4;3740:6;3736:17;3732:27;3722:55;;3773:1;3770;3763:12;3722:55;3809:6;3796:20;3840:48;3856:31;3884:2;3856:31;:::i;3840:48::-;3913:2;3904:7;3897:19;3959:3;3952:4;3947:2;3939:6;3935:15;3931:26;3928:35;3925:55;;;3976:1;3973;3966:12;3925:55;4041:2;4034:4;4026:6;4022:17;4015:4;4006:7;4002:18;3989:55;4089:1;4064:16;;;4082:4;4060:27;4053:38;;;;4068:7;3660:462;-1:-1:-1;;;3660:462:164:o;4127:1071::-;4281:6;4289;4297;4305;4313;4366:3;4354:9;4345:7;4341:23;4337:33;4334:53;;;4383:1;4380;4373:12;4334:53;4422:9;4409:23;4441:31;4466:5;4441:31;:::i;:::-;4491:5;-1:-1:-1;4548:2:164;4533:18;;4520:32;4561:33;4520:32;4561:33;:::i;:::-;4613:7;-1:-1:-1;4671:2:164;4656:18;;4643:32;-1:-1:-1;;;;;4724:14:164;;;4721:34;;;4751:1;4748;4741:12;4721:34;4774:61;4827:7;4818:6;4807:9;4803:22;4774:61;:::i;:::-;4764:71;;4888:2;4877:9;4873:18;4860:32;4844:48;;4917:2;4907:8;4904:16;4901:36;;;4933:1;4930;4923:12;4901:36;4956:63;5011:7;5000:8;4989:9;4985:24;4956:63;:::i;:::-;4946:73;;5072:3;5061:9;5057:19;5044:33;5028:49;;5102:2;5092:8;5089:16;5086:36;;;5118:1;5115;5108:12;5086:36;;5141:51;5184:7;5173:8;5162:9;5158:24;5141:51;:::i;:::-;5131:61;;;4127:1071;;;;;;;;:::o;5203:1057::-;5311:6;5319;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;5415:23;;-1:-1:-1;;;;;5450:30:164;;5447:50;;;5493:1;5490;5483:12;5447:50;5516:22;;5569:4;5561:13;;5557:27;-1:-1:-1;5547:55:164;;5598:1;5595;5588:12;5547:55;5634:2;5621:16;5656:4;5680:60;5696:43;5736:2;5696:43;:::i;5680:60::-;5774:15;;;5856:1;5852:10;;;;5844:19;;5840:28;;;5805:12;;;;5880:19;;;5877:39;;;5912:1;5909;5902:12;5877:39;5936:11;;;;5956:217;5972:6;5967:3;5964:15;5956:217;;;6052:3;6039:17;6069:31;6094:5;6069:31;:::i;:::-;6113:18;;5989:12;;;;6151;;;;5956:217;;;6192:5;-1:-1:-1;6216:38:164;;-1:-1:-1;6235:18:164;;;6216:38;:::i;:::-;6206:48;;;;;5203:1057;;;;;:::o;6265:180::-;6324:6;6377:2;6365:9;6356:7;6352:23;6348:32;6345:52;;;6393:1;6390;6383:12;6345:52;-1:-1:-1;6416:23:164;;6265:180;-1:-1:-1;6265:180:164:o;6450:258::-;6522:1;6532:113;6546:6;6543:1;6540:13;6532:113;;;6622:11;;;6616:18;6603:11;;;6596:39;6568:2;6561:10;6532:113;;;6663:6;6660:1;6657:13;6654:48;;;-1:-1:-1;;6698:1:164;6680:16;;6673:27;6450:258::o;6713:::-;6755:3;6793:5;6787:12;6820:6;6815:3;6808:19;6836:63;6892:6;6885:4;6880:3;6876:14;6869:4;6862:5;6858:16;6836:63;:::i;:::-;6953:2;6932:15;-1:-1:-1;;6928:29:164;6919:39;;;;6960:4;6915:50;;6713:258;-1:-1:-1;;6713:258:164:o;6976:383::-;7173:2;7162:9;7155:21;7136:4;7199:45;7240:2;7229:9;7225:18;7217:6;7199:45;:::i;:::-;7292:9;7284:6;7280:22;7275:2;7264:9;7260:18;7253:50;7320:33;7346:6;7338;7320:33;:::i;:::-;7312:41;6976:383;-1:-1:-1;;;;;6976:383:164:o;7364:1215::-;7482:6;7490;7543:2;7531:9;7522:7;7518:23;7514:32;7511:52;;;7559:1;7556;7549:12;7511:52;7586:23;;-1:-1:-1;;;;;7658:14:164;;;7655:34;;;7685:1;7682;7675:12;7655:34;7723:6;7712:9;7708:22;7698:32;;7768:7;7761:4;7757:2;7753:13;7749:27;7739:55;;7790:1;7787;7780:12;7739:55;7826:2;7813:16;7848:4;7872:60;7888:43;7928:2;7888:43;:::i;7872:60::-;7966:15;;;8048:1;8044:10;;;;8036:19;;8032:28;;;7997:12;;;;8072:19;;;8069:39;;;8104:1;8101;8094:12;8069:39;8128:11;;;;8148:217;8164:6;8159:3;8156:15;8148:217;;;8244:3;8231:17;8261:31;8286:5;8261:31;:::i;:::-;8305:18;;8181:12;;;;8343;;;;8148:217;;;8384:5;-1:-1:-1;;8427:18:164;;8414:32;;-1:-1:-1;;8458:16:164;;;8455:36;;;8487:1;8484;8477:12;8455:36;;8510:63;8565:7;8554:8;8543:9;8539:24;8510:63;:::i;:::-;8500:73;;;7364:1215;;;;;:::o;8584:435::-;8637:3;8675:5;8669:12;8702:6;8697:3;8690:19;8728:4;8757:2;8752:3;8748:12;8741:19;;8794:2;8787:5;8783:14;8815:1;8825:169;8839:6;8836:1;8833:13;8825:169;;;8900:13;;8888:26;;8934:12;;;;8969:15;;;;8861:1;8854:9;8825:169;;;-1:-1:-1;9010:3:164;;8584:435;-1:-1:-1;;;;;8584:435:164:o;9024:261::-;9203:2;9192:9;9185:21;9166:4;9223:56;9275:2;9264:9;9260:18;9252:6;9223:56;:::i;9835:594::-;9930:6;9938;9946;9954;9962;10015:3;10003:9;9994:7;9990:23;9986:33;9983:53;;;10032:1;10029;10022:12;9983:53;10071:9;10058:23;10090:31;10115:5;10090:31;:::i;:::-;10140:5;-1:-1:-1;10197:2:164;10182:18;;10169:32;10210:33;10169:32;10210:33;:::i;:::-;9835:594;;10262:7;;-1:-1:-1;;;;10316:2:164;10301:18;;10288:32;;10367:2;10352:18;;10339:32;;10418:3;10403:19;;;10390:33;;-1:-1:-1;9835:594:164:o;10977:248::-;11045:6;11053;11106:2;11094:9;11085:7;11081:23;11077:32;11074:52;;;11122:1;11119;11112:12;11074:52;-1:-1:-1;;11145:23:164;;;11215:2;11200:18;;;11187:32;;-1:-1:-1;10977:248:164:o;11230:203::-;-1:-1:-1;;;;;11394:32:164;;;;11376:51;;11364:2;11349:18;;11230:203::o;11438:401::-;11520:6;11528;11581:2;11569:9;11560:7;11556:23;11552:32;11549:52;;;11597:1;11594;11587:12;11549:52;11636:9;11623:23;11655:31;11680:5;11655:31;:::i;:::-;11705:5;-1:-1:-1;11762:2:164;11747:18;;11734:32;11775;11734;11775;:::i;:::-;11826:7;11816:17;;;11438:401;;;;;:::o;11844:118::-;11930:5;11923:13;11916:21;11909:5;11906:32;11896:60;;11952:1;11949;11942:12;11967:382;12032:6;12040;12093:2;12081:9;12072:7;12068:23;12064:32;12061:52;;;12109:1;12106;12099:12;12061:52;12148:9;12135:23;12167:31;12192:5;12167:31;:::i;:::-;12217:5;-1:-1:-1;12274:2:164;12259:18;;12246:32;12287:30;12246:32;12287:30;:::i;12354:469::-;12445:6;12453;12461;12514:2;12502:9;12493:7;12489:23;12485:32;12482:52;;;12530:1;12527;12520:12;12482:52;12569:9;12556:23;12588:31;12613:5;12588:31;:::i;:::-;12638:5;-1:-1:-1;12695:2:164;12680:18;;12667:32;12708;12667;12708;:::i;:::-;12354:469;;12759:7;;-1:-1:-1;;;12813:2:164;12798:18;;;;12785:32;;12354:469::o;12828:248::-;13002:25;;;13058:2;13043:18;;13036:34;12990:2;12975:18;;12828:248::o;13308:403::-;13391:6;13399;13452:2;13440:9;13431:7;13427:23;13423:32;13420:52;;;13468:1;13465;13458:12;13420:52;13507:9;13494:23;13526:31;13551:5;13526:31;:::i;:::-;13576:5;-1:-1:-1;13633:2:164;13618:18;;13605:32;13646:33;13605:32;13646:33;:::i;14109:367::-;14172:8;14182:6;14236:3;14229:4;14221:6;14217:17;14213:27;14203:55;;14254:1;14251;14244:12;14203:55;-1:-1:-1;14277:20:164;;-1:-1:-1;;;;;14309:30:164;;14306:50;;;14352:1;14349;14342:12;14306:50;14389:4;14381:6;14377:17;14365:29;;14449:3;14442:4;14432:6;14429:1;14425:14;14417:6;14413:27;14409:38;14406:47;14403:67;;;14466:1;14463;14456:12;14403:67;14109:367;;;;;:::o;14481:773::-;14603:6;14611;14619;14627;14680:2;14668:9;14659:7;14655:23;14651:32;14648:52;;;14696:1;14693;14686:12;14648:52;14723:23;;-1:-1:-1;;;;;14795:14:164;;;14792:34;;;14822:1;14819;14812:12;14792:34;14861:70;14923:7;14914:6;14903:9;14899:22;14861:70;:::i;:::-;14950:8;;-1:-1:-1;14835:96:164;-1:-1:-1;15038:2:164;15023:18;;15010:32;;-1:-1:-1;15054:16:164;;;15051:36;;;15083:1;15080;15073:12;15051:36;;15122:72;15186:7;15175:8;15164:9;15160:24;15122:72;:::i;:::-;14481:773;;;;-1:-1:-1;15213:8:164;-1:-1:-1;;;;14481:773:164:o;15259:734::-;15363:6;15371;15379;15387;15395;15448:3;15436:9;15427:7;15423:23;15419:33;15416:53;;;15465:1;15462;15455:12;15416:53;15504:9;15491:23;15523:31;15548:5;15523:31;:::i;:::-;15573:5;-1:-1:-1;15630:2:164;15615:18;;15602:32;15643:33;15602:32;15643:33;:::i;:::-;15695:7;-1:-1:-1;15749:2:164;15734:18;;15721:32;;-1:-1:-1;15800:2:164;15785:18;;15772:32;;-1:-1:-1;15855:3:164;15840:19;;15827:33;-1:-1:-1;;;;;15872:30:164;;15869:50;;;15915:1;15912;15905:12;15869:50;15938:49;15979:7;15970:6;15959:9;15955:22;15938:49;:::i;15998:334::-;16200:2;16182:21;;;16239:2;16219:18;;;16212:30;-1:-1:-1;;;16273:2:164;16258:18;;16251:40;16323:2;16308:18;;15998:334::o;16337:336::-;16539:2;16521:21;;;16578:2;16558:18;;;16551:30;-1:-1:-1;;;16612:2:164;16597:18;;16590:42;16664:2;16649:18;;16337:336::o;16678:339::-;16880:2;16862:21;;;16919:2;16899:18;;;16892:30;-1:-1:-1;;;16953:2:164;16938:18;;16931:45;17008:2;16993:18;;16678:339::o;17022:338::-;17224:2;17206:21;;;17263:2;17243:18;;;17236:30;-1:-1:-1;;;17297:2:164;17282:18;;17275:44;17351:2;17336:18;;17022:338::o;17365:127::-;17426:10;17421:3;17417:20;17414:1;17407:31;17457:4;17454:1;17447:15;17481:4;17478:1;17471:15;17497:127;17558:10;17553:3;17549:20;17546:1;17539:31;17589:4;17586:1;17579:15;17613:4;17610:1;17603:15;17629:125;17669:4;17697:1;17694;17691:8;17688:34;;;17702:18;;:::i;:::-;-1:-1:-1;17739:9:164;;17629:125::o;17759:128::-;17799:3;17830:1;17826:6;17823:1;17820:13;17817:39;;;17836:18;;:::i;:::-;-1:-1:-1;17872:9:164;;17759:128::o;17892:465::-;18149:2;18138:9;18131:21;18112:4;18175:56;18227:2;18216:9;18212:18;18204:6;18175:56;:::i;:::-;18279:9;18271:6;18267:22;18262:2;18251:9;18247:18;18240:50;18307:44;18344:6;18336;18307:44;:::i;18362:827::-;-1:-1:-1;;;;;18759:15:164;;;18741:34;;18811:15;;18806:2;18791:18;;18784:43;18721:3;18858:2;18843:18;;18836:31;;;18684:4;;18890:57;;18927:19;;18919:6;18890:57;:::i;:::-;18995:9;18987:6;18983:22;18978:2;18967:9;18963:18;18956:50;19029:44;19066:6;19058;19029:44;:::i;:::-;19015:58;;19122:9;19114:6;19110:22;19104:3;19093:9;19089:19;19082:51;19150:33;19176:6;19168;19150:33;:::i;:::-;19142:41;18362:827;-1:-1:-1;;;;;;;;18362:827:164:o;19194:249::-;19263:6;19316:2;19304:9;19295:7;19291:23;19287:32;19284:52;;;19332:1;19329;19322:12;19284:52;19364:9;19358:16;19383:30;19407:5;19383:30;:::i;19448:340::-;19650:2;19632:21;;;19689:2;19669:18;;;19662:30;-1:-1:-1;;;19723:2:164;19708:18;;19701:46;19779:2;19764:18;;19448:340::o;19793:135::-;19832:3;19853:17;;;19850:43;;19873:18;;:::i;:::-;-1:-1:-1;19920:1:164;19909:13;;19793:135::o;19933:232::-;19972:3;20000:14;20041:2;20038:1;20034:10;20071:2;20068:1;20064:10;20102:3;20098:2;20094:12;20089:3;20086:21;20083:47;;;20110:18;;:::i;:::-;20146:13;;19933:232;-1:-1:-1;;;;19933:232:164:o;20170:276::-;20265:6;20318:2;20306:9;20297:7;20293:23;20289:32;20286:52;;;20334:1;20331;20324:12;20286:52;20366:9;20360:16;20385:31;20410:5;20385:31;:::i;20451:879::-;20595:6;20603;20611;20619;20627;20635;20688:3;20676:9;20667:7;20663:23;20659:33;20656:53;;;20705:1;20702;20695:12;20656:53;20737:9;20731:16;20756:31;20781:5;20756:31;:::i;:::-;20856:2;20841:18;;20835:25;20806:5;;-1:-1:-1;20869:33:164;20835:25;20869:33;:::i;:::-;20973:2;20958:18;;20952:25;20921:7;;-1:-1:-1;20986:33:164;20952:25;20986:33;:::i;:::-;21090:2;21075:18;;21069:25;21038:7;;-1:-1:-1;21103:33:164;21069:25;21103:33;:::i;:::-;21207:3;21192:19;;21186:26;21155:7;;-1:-1:-1;21221:32:164;21186:26;21221:32;:::i;:::-;21272:7;21262:17;;;21319:3;21308:9;21304:19;21298:26;21288:36;;20451:879;;;;;;;;:::o;21659:184::-;21729:6;21782:2;21770:9;21761:7;21757:23;21753:32;21750:52;;;21798:1;21795;21788:12;21750:52;-1:-1:-1;21821:16:164;;21659:184;-1:-1:-1;21659:184:164:o;21848:400::-;-1:-1:-1;;;;;22104:15:164;;;22086:34;;22156:15;;;;22151:2;22136:18;;22129:43;-1:-1:-1;;;;;;22208:33:164;;;22203:2;22188:18;;22181:61;22036:2;22021:18;;21848:400::o;22253:245::-;22320:6;22373:2;22361:9;22352:7;22348:23;22344:32;22341:52;;;22389:1;22386;22379:12;22341:52;22421:9;22415:16;22440:28;22462:5;22440:28;:::i;22503:127::-;22564:10;22559:3;22555:20;22552:1;22545:31;22595:4;22592:1;22585:15;22619:4;22616:1;22609:15;22635:195;22674:1;22700:14;22741:2;22738:1;22734:10;22763:3;22753:37;;22770:18;;:::i;:::-;22808:10;;22804:20;;;;;22635:195;-1:-1:-1;;22635:195:164:o;23180:266::-;23219:7;23251:14;23292:2;23289:1;23285:10;23322:2;23319:1;23315:10;23378:3;23374:2;23370:12;23365:3;23362:21;23355:3;23348:11;23341:19;23337:47;23334:73;;;23387:18;;:::i;:::-;23427:13;;23180:266;-1:-1:-1;;;;23180:266:164:o;23764:225::-;23803:4;23832:14;23896:10;;;;23866;;23918:12;;;23915:38;;;23933:18;;:::i;:::-;23970:13;;23764:225;-1:-1:-1;;;23764:225:164:o;23994:561::-;-1:-1:-1;;;;;24291:15:164;;;24273:34;;24343:15;;24338:2;24323:18;;24316:43;24390:2;24375:18;;24368:34;;;24433:2;24418:18;;24411:34;;;24253:3;24476;24461:19;;24454:32;;;24216:4;;24503:46;;24529:19;;24521:6;24503:46;:::i;:::-;24495:54;23994:561;-1:-1:-1;;;;;;;23994:561:164:o;24839:274::-;24968:3;25006:6;25000:13;25022:53;25068:6;25063:3;25056:4;25048:6;25044:17;25022:53;:::i;:::-;25091:16;;;;;24839:274;-1:-1:-1;;24839:274:164:o;25462:120::-;25502:1;25528;25518:35;;25533:18;;:::i;:::-;-1:-1:-1;25567:9:164;;25462:120::o;25587:265::-;25626:3;25654:9;;;25679:10;;-1:-1:-1;;;;;25698:27:164;;;25691:35;;25675:52;25672:78;;;25730:18;;:::i;:::-;-1:-1:-1;;;25777:19:164;;;25770:27;;25762:36;;25759:62;;;25801:18;;:::i;:::-;-1:-1:-1;;25837:9:164;;25587:265::o;25857:553::-;25896:7;-1:-1:-1;;;;;25966:9:164;;;25994;;;26019:11;;;26038:10;;;26032:17;;26015:35;26012:61;;;26053:18;;:::i;:::-;-1:-1:-1;;;26129:1:164;26122:9;;26147:11;;;26167;;;26160:19;;26143:37;26140:63;;;26183:18;;:::i;:::-;26229:1;26226;26222:9;26212:19;;26276:1;26272:2;26267:11;26264:1;26260:19;26255:2;26251;26247:11;26243:37;26240:63;;;26283:18;;:::i;:::-;26348:1;26344:2;26339:11;26336:1;26332:19;26327:2;26323;26319:11;26315:37;26312:63;;;26355:18;;:::i;:::-;-1:-1:-1;;;26395:9:164;;;;;25857:553;-1:-1:-1;;;25857:553:164:o;26415:193::-;26454:1;26480;26470:35;;26485:18;;:::i;:::-;-1:-1:-1;;;26521:18:164;;-1:-1:-1;;26541:13:164;;26517:38;26514:64;;;26558:18;;:::i;:::-;-1:-1:-1;26592:10:164;;26415:193::o;26613:267::-;26652:4;26681:9;;;26706:10;;-1:-1:-1;;;26725:19:164;;26718:27;;26702:44;26699:70;;;26749:18;;:::i;:::-;-1:-1:-1;;;;;26796:27:164;;26789:35;;26781:44;;26778:70;;;26828:18;;:::i;:::-;-1:-1:-1;;26865:9:164;;26613:267::o;26885:112::-;26917:1;26943;26933:35;;26948:18;;:::i;:::-;-1:-1:-1;26982:9:164;;26885:112::o;27002:418::-;-1:-1:-1;;;27259:3:164;27252:16;27234:3;27297:6;27291:13;27313:61;27367:6;27363:1;27358:3;27354:11;27347:4;27339:6;27335:17;27313:61;:::i;:::-;27394:16;;;;27412:1;27390:24;;27002:418;-1:-1:-1;;27002:418:164:o;27425:635::-;27505:6;27558:2;27546:9;27537:7;27533:23;27529:32;27526:52;;;27574:1;27571;27564:12;27526:52;27601:16;;-1:-1:-1;;;;;27629:30:164;;27626:50;;;27672:1;27669;27662:12;27626:50;27695:22;;27748:4;27740:13;;27736:27;-1:-1:-1;27726:55:164;;27777:1;27774;27767:12;27726:55;27806:2;27800:9;27831:48;27847:31;27875:2;27847:31;:::i;27831:48::-;27902:2;27895:5;27888:17;27942:7;27937:2;27932;27928;27924:11;27920:20;27917:33;27914:53;;;27963:1;27960;27953:12;27914:53;27976:54;28027:2;28022;28015:5;28011:14;28006:2;28002;27998:11;27976:54;:::i;28065:1286::-;28643:3;28681:6;28675:13;28697:53;28743:6;28738:3;28731:4;28723:6;28719:17;28697:53;:::i;:::-;-1:-1:-1;;;28772:16:164;;;28797:18;;;28840:13;;28862:65;28840:13;28914:1;28903:13;;28896:4;28884:17;;28862:65;:::i;:::-;28957:8;28950:5;28946:20;28936:30;;;-1:-1:-1;;;29016:2:164;29012:1;29008:2;29004:10;28997:22;29050:6;29044:13;29066:62;29119:8;29115:1;29111:2;29107:10;29100:4;29092:6;29088:17;29066:62;:::i;:::-;29188:1;29147:17;;29180:10;;;29173:22;29220:13;;29242:62;29220:13;29291:1;29283:10;;29276:4;29264:17;;29242:62;:::i;:::-;29324:17;29343:1;29320:25;;28065:1286;-1:-1:-1;;;;;;28065:1286:164:o;29356:1000::-;29732:3;29770:6;29764:13;29786:53;29832:6;29827:3;29820:4;29812:6;29808:17;29786:53;:::i;:::-;-1:-1:-1;;;29861:16:164;;;29886:18;;;29929:13;;29951:65;29929:13;30003:1;29992:13;;29985:4;29973:17;;29951:65;:::i;:::-;30080:13;;30035:20;;;30102:62;30080:13;30151:1;30143:10;;30136:4;30124:17;;30102:62;:::i;:::-;30225:13;;30183:17;;;30247:62;30225:13;30296:1;30288:10;;30281:4;30269:17;;30247:62;:::i;:::-;30329:17;30348:1;30325:25;;29356:1000;-1:-1:-1;;;;;;29356:1000:164:o;31090:273::-;31158:6;31211:2;31199:9;31190:7;31186:23;31182:32;31179:52;;;31227:1;31224;31217:12;31179:52;31259:9;31253:16;31309:4;31302:5;31298:16;31291:5;31288:27;31278:55;;31329:1;31326;31319:12;31368:168;31408:7;31474:1;31470;31466:6;31462:14;31459:1;31456:21;31451:1;31444:9;31437:17;31433:45;31430:71;;;31481:18;;:::i;:::-;-1:-1:-1;31521:9:164;;31368:168::o;31541:204::-;31579:3;31615:4;31612:1;31608:12;31647:4;31644:1;31640:12;31682:3;31676:4;31672:14;31667:3;31664:23;31661:49;;;31690:18;;:::i;:::-;31726:13;;31541:204;-1:-1:-1;;;31541:204:164:o",
    "linkReferences": {},
    "immutableReferences": {
      "63707": [
        {
          "start": 3570,
          "length": 32
        },
        {
          "start": 5126,
          "length": 32
        }
      ],
      "63710": [
        {
          "start": 3074,
          "length": 32
        },
        {
          "start": 7548,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchRedeem(uint256[],uint256[])": "e9dc30f3",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getFee(address)": "b88c9148",
    "getTokenId(address,uint48)": "92593277",
    "getTokenNameAndSymbol(uint256)": "35312c85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(uint256,uint256)": "7cbc2373",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint256)": "6914db60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC1155BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"batchRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenNameAndSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Bond Fixed Term Teller is an implementation of the      Bond Base Teller contract specific to handling user bond transactions      and tokenizing bond markets where purchases vest in a fixed amount of time      (rounded to the day) as ERC1155 tokens.\",\"kind\":\"dev\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"params\":{\"amounts_\":\"Array of amounts of bond tokens to redeem\",\"tokenIds_\":\"Array of bond token ids\"}},\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token received\",\"_1\":\"Amount of the ERC1155 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token being created\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"getTokenId(address,uint48)\":{\"params\":{\"expiry_\":\"Expiry of the bond\",\"payoutToken_\":\"Payout token of bond\"},\"returns\":{\"_0\":\"ID of the bond token\"}},\"getTokenNameAndSymbol(uint256)\":{\"params\":{\"tokenId_\":\"ID of the bond token\"},\"returns\":{\"_0\":\"name        Bond token name\",\"_1\":\"symbol      Bond token symbol\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(uint256,uint256)\":{\"params\":{\"amount_\":\"Amount of bond token to redeem\",\"tokenId_\":\"ID of the bond token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"title\":\"Bond Fixed Term Teller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"notice\":\"Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC1155 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"\\\"Deploy\\\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"getTokenId(address,uint48)\":{\"notice\":\"Get token ID from token and expiry\"},\"getTokenNameAndSymbol(uint256)\":{\"notice\":\"Get the token name and symbol for a bond token\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem a fixed-term bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"Bond Fixed Term Teller Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/lib/bonds/BondFixedTermTeller.sol\":\"BondFixedTermTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/test/lib/bonds/BondFixedTermTeller.sol\":{\"keccak256\":\"0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97\",\"dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT\"]},\"src/test/lib/bonds/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6\",\"dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH\"]},\"src/test/lib/bonds/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/test/lib/bonds/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/test/lib/bonds/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9\",\"dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7\"]},\"src/test/lib/bonds/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/test/lib/bonds/lib/ERC1155.sol\":{\"keccak256\":\"0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11\",\"dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC1155BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRedeem"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenNameAndSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "params": {
              "amounts_": "Array of amounts of bond tokens to redeem",
              "tokenIds_": "Array of bond token ids"
            }
          },
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token received",
              "_1": "Amount of the ERC1155 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token being created"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "getTokenId(address,uint48)": {
            "params": {
              "expiry_": "Expiry of the bond",
              "payoutToken_": "Payout token of bond"
            },
            "returns": {
              "_0": "ID of the bond token"
            }
          },
          "getTokenNameAndSymbol(uint256)": {
            "params": {
              "tokenId_": "ID of the bond token"
            },
            "returns": {
              "_0": "name        Bond token name",
              "_1": "symbol      Bond token symbol"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(uint256,uint256)": {
            "params": {
              "amount_": "Amount of bond token to redeem",
              "tokenId_": "ID of the bond token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "notice": "Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC1155 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "\"Deploy\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "getTokenId(address,uint48)": {
            "notice": "Get token ID from token and expiry"
          },
          "getTokenNameAndSymbol(uint256)": {
            "notice": "Get the token name and symbol for a bond token"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem a fixed-term bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/lib/bonds/BondFixedTermTeller.sol": "BondFixedTermTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/bonds/BondFixedTermTeller.sol": {
        "keccak256": "0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3",
        "urls": [
          "bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97",
          "dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseTeller.sol": {
        "keccak256": "0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098",
        "urls": [
          "bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6",
          "dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746",
        "urls": [
          "bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9",
          "dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/lib/ERC1155.sol": {
        "keccak256": "0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197",
        "urls": [
          "bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11",
          "dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/lib/bonds/BondFixedTermTeller.sol",
    "id": 61428,
    "exportedSymbols": {
      "Authority": [
        27251
      ],
      "BondBaseTeller": [
        64556
      ],
      "BondFixedTermTeller": [
        61427
      ],
      "ERC1155": [
        65863
      ],
      "ERC20": [
        29147
      ],
      "FullMath": [
        43648
      ],
      "IBondAggregator": [
        64726
      ],
      "IBondFixedTermTeller": [
        65054
      ],
      "TransferHelper": [
        43804
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:10739:103",
    "nodes": [
      {
        "id": 60814,
        "nodeType": "PragmaDirective",
        "src": "46:23:103",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 60816,
        "nodeType": "ImportDirective",
        "src": "71:47:103",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 29148,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60815,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29147,
              "src": "79:5:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60820,
        "nodeType": "ImportDirective",
        "src": "120:86:103",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/bases/BondBaseTeller.sol",
        "file": "./bases/BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 64557,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60817,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64556,
              "src": "128:14:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 60818,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64726,
              "src": "144:15:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 60819,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27251,
              "src": "161:9:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60822,
        "nodeType": "ImportDirective",
        "src": "207:75:103",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol",
        "file": "./interfaces/IBondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 65055,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60821,
              "name": "IBondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65054,
              "src": "215:20:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60824,
        "nodeType": "ImportDirective",
        "src": "284:60:103",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 43805,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60823,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43804,
              "src": "292:14:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60826,
        "nodeType": "ImportDirective",
        "src": "345:48:103",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 43649,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60825,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43648,
              "src": "353:8:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60828,
        "nodeType": "ImportDirective",
        "src": "394:42:103",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/lib/ERC1155.sol",
        "file": "./lib/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61428,
        "sourceUnit": 65898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60827,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65863,
              "src": "402:7:103",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61427,
        "nodeType": "ContractDefinition",
        "src": "1429:9355:103",
        "nodes": [
          {
            "id": 60839,
            "nodeType": "UsingForDirective",
            "src": "1513:31:103",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60836,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43804,
              "src": "1519:14:103"
            },
            "typeName": {
              "id": 60838,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60837,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29147,
                "src": "1538:5:103"
              },
              "referencedDeclaration": 29147,
              "src": "1538:5:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$29147",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 60842,
            "nodeType": "UsingForDirective",
            "src": "1549:27:103",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60840,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43648,
              "src": "1555:8:103"
            },
            "typeName": {
              "id": 60841,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1568:7:103",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 60851,
            "nodeType": "EventDefinition",
            "src": "1621:96:103",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27",
            "name": "ERC1155BondTokenCreated",
            "nameLocation": "1627:23:103",
            "parameters": {
              "id": 60850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1659:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60851,
                  "src": "1651:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60847,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1682:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60851,
                  "src": "1668:24:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 60846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60845,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "1668:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "1668:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60849,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1709:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60851,
                  "src": "1694:21:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 60848,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:66:103"
            }
          },
          {
            "id": 60856,
            "nodeType": "VariableDeclaration",
            "src": "1772:54:103",
            "nodes": [],
            "constant": false,
            "functionSelector": "6914db60",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1813:13:103",
            "scope": 61427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
              "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
            },
            "typeName": {
              "id": 60855,
              "keyType": {
                "id": 60852,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1780:7:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1772:33:103",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
              },
              "valueType": {
                "id": 60854,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60853,
                  "name": "TokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64988,
                  "src": "1791:13:103"
                },
                "referencedDeclaration": 64988,
                "src": "1791:13:103",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage_ptr",
                  "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 60876,
            "nodeType": "FunctionDefinition",
            "src": "1905:203:103",
            "nodes": [],
            "body": {
              "id": 60875,
              "nodeType": "Block",
              "src": "2106:2:103",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60869,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60858,
                    "src": "2059:9:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 60870,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60861,
                    "src": "2070:11:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$64726",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 60871,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60863,
                    "src": "2083:9:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 60872,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60866,
                    "src": "2094:10:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$27251",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 60873,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 60868,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64556,
                  "src": "2044:14:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:61:103"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60858,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "1934:9:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60876,
                  "src": "1926:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60861,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1969:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60876,
                  "src": "1953:27:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$64726",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 60860,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60859,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64726,
                      "src": "1953:15:103"
                    },
                    "referencedDeclaration": 64726,
                    "src": "1953:15:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$64726",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60863,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1998:9:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60876,
                  "src": "1990:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60866,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2027:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60876,
                  "src": "2017:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$27251",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 60865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60864,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27251,
                      "src": "2017:9:103"
                    },
                    "referencedDeclaration": 27251,
                    "src": "2017:9:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$27251",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1916:127:103"
            },
            "returnParameters": {
              "id": 60874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60954,
            "nodeType": "FunctionDefinition",
            "src": "2515:1712:103",
            "nodes": [],
            "body": {
              "id": 60953,
              "nodeType": "Block",
              "src": "2692:1535:103",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 60894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60892,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60886,
                      "src": "3392:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3404:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3392:13:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 60951,
                    "nodeType": "Block",
                    "src": "4083:138:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60947,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60879,
                              "src": "4190:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60948,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60881,
                              "src": "4202:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 60944,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60884,
                              "src": "4164:12:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 60946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43754,
                            "src": "4164:25:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$29147_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$29147_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 60949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4164:46:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60950,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:46:103"
                      }
                    ]
                  },
                  "id": 60952,
                  "nodeType": "IfStatement",
                  "src": "3388:833:103",
                  "trueBody": {
                    "id": 60943,
                    "nodeType": "Block",
                    "src": "3407:670:103",
                    "statements": [
                      {
                        "expression": {
                          "id": 60915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60895,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60890,
                            "src": "3504:6:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 60914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  "id": 60908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        },
                                        "id": 60902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 60896,
                                          "name": "vesting_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 60886,
                                          "src": "3515:8:103",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 60899,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3533:5:103",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 60900,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3533:15:103",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 60898,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3526:6:103",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint48_$",
                                              "typeString": "type(uint48)"
                                            },
                                            "typeName": {
                                              "id": 60897,
                                              "name": "uint48",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3526:6:103",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 60901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3526:23:103",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "src": "3515:34:103",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      }
                                    ],
                                    "id": 60903,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3514:36:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 60906,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3560:6:103",
                                        "subdenomination": "days",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        }
                                      ],
                                      "id": 60905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3553:6:103",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint48_$",
                                        "typeString": "type(uint48)"
                                      },
                                      "typeName": {
                                        "id": 60904,
                                        "name": "uint48",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3553:6:103",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 60907,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3553:14:103",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "3514:53:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "id": 60909,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3513:55:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 60912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3578:6:103",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  }
                                ],
                                "id": 60911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3571:6:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 60910,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3571:6:103",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 60913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3571:14:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "3513:72:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3504:81:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 60916,
                        "nodeType": "ExpressionStatement",
                        "src": "3504:81:103"
                      },
                      {
                        "assignments": [
                          60918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 60918,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3743:7:103",
                            "nodeType": "VariableDeclaration",
                            "scope": 60943,
                            "src": "3735:15:103",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 60917,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3735:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 60923,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 60920,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60884,
                              "src": "3764:12:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 60921,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60890,
                              "src": "3778:6:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 60919,
                            "name": "getTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61392,
                            "src": "3753:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$29147_$_t_uint48_$returns$_t_uint256_$",
                              "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                            }
                          },
                          "id": 60922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3753:32:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3735:50:103"
                      },
                      {
                        "condition": {
                          "id": 60928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3865:30:103",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 60924,
                                "name": "tokenMetadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60856,
                                "src": "3866:13:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                                  "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                                }
                              },
                              "id": 60926,
                              "indexExpression": {
                                "id": 60925,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60918,
                                "src": "3880:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3866:22:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                                "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                              }
                            },
                            "id": 60927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64978,
                            "src": "3866:29:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60936,
                        "nodeType": "IfStatement",
                        "src": "3861:107:103",
                        "trueBody": {
                          "id": 60935,
                          "nodeType": "Block",
                          "src": "3897:71:103",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 60930,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60918,
                                    "src": "3923:7:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 60931,
                                    "name": "payoutToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60884,
                                    "src": "3932:12:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$29147",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "id": 60932,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60890,
                                    "src": "3946:6:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$29147",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  ],
                                  "id": 60929,
                                  "name": "_deploy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61307,
                                  "src": "3915:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$29147_$_t_uint48_$returns$__$",
                                    "typeString": "function (uint256,contract ERC20,uint48)"
                                  }
                                },
                                "id": 60933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3915:38:103",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 60934,
                              "nodeType": "ExpressionStatement",
                              "src": "3915:38:103"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60938,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60879,
                              "src": "4037:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60939,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60918,
                              "src": "4049:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60940,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60881,
                              "src": "4058:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 60937,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61335,
                            "src": "4026:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 60941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:40:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60942,
                        "nodeType": "ExpressionStatement",
                        "src": "4026:40:103"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              64220
            ],
            "documentation": {
              "id": 60877,
              "nodeType": "StructuredDocumentation",
              "src": "2156:354:103",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param payoutToken_   Token to be paid out\n @param vesting_     Amount of time to vest from current timestamp\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "2524:13:103",
            "overrides": {
              "id": 60888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2659:8:103"
            },
            "parameters": {
              "id": 60887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60879,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "2555:10:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "2547:18:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60881,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "2583:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "2575:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60884,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "2606:12:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "2600:18:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 60883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60882,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "2600:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "2600:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60886,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "2635:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "2628:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 60885,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:112:103"
            },
            "returnParameters": {
              "id": 60891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60890,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2684:6:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "2677:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 60889,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:15:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61097,
            "nodeType": "FunctionDefinition",
            "src": "4320:1834:103",
            "nodes": [],
            "body": {
              "id": 61096,
              "nodeType": "Block",
              "src": "4476:1678:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60973,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4647:6:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61096,
                      "src": "4640:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 60972,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4640:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60982,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 60981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 60978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60976,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60960,
                            "src": "4663:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 60977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4673:6:103",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4663:16:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 60975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4656:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 60974,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4656:6:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4656:24:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 60980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4683:6:103",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4656:33:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4640:49:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60983,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60973,
                      "src": "4747:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 60984,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4756:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 60985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4756:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4747:24:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60990,
                  "nodeType": "IfStatement",
                  "src": "4743:59:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 60987,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63673,
                        "src": "4780:20:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 60988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4780:22:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 60989,
                    "nodeType": "RevertStatement",
                    "src": "4773:29:103"
                  }
                },
                {
                  "assignments": [
                    60992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60992,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "4821:7:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61096,
                      "src": "4813:15:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60991,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60997,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60994,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60958,
                        "src": "4842:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 60995,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60973,
                        "src": "4855:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 60993,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61392,
                      "src": "4831:10:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$29147_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 60996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:31:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:49:103"
                },
                {
                  "condition": {
                    "id": 61002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4938:30:103",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 60998,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60856,
                          "src": "4939:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 61000,
                        "indexExpression": {
                          "id": 60999,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60992,
                          "src": "4953:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4939:22:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 61001,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64978,
                      "src": "4939:29:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61008,
                  "nodeType": "IfStatement",
                  "src": "4934:88:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 61004,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60958,
                          "src": "5002:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$29147",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 61005,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60973,
                          "src": "5015:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$29147",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 61003,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63669,
                        "src": "4977:24:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$29147_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 61006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4977:45:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61007,
                    "nodeType": "RevertStatement",
                    "src": "4970:52:103"
                  }
                },
                {
                  "assignments": [
                    61010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61010,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5230:10:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61096,
                      "src": "5222:18:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5222:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61018,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61015,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5273:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 61014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5265:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5265:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5265:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 61011,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60958,
                        "src": "5243:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 61012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "5243:21:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 61017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5243:36:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5222:57:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5318:3:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5318:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61026,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5338:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 61025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5330:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61024,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5330:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5330:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61028,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60962,
                        "src": "5345:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61019,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60958,
                        "src": "5289:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 61021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43705,
                      "src": "5289:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$29147_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$29147_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 61029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5289:64:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61030,
                  "nodeType": "ExpressionStatement",
                  "src": "5289:64:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 61035,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5397:4:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$61427",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 61034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5389:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61033,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5389:7:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:13:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 61031,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60958,
                          "src": "5367:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$29147",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 61032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28798,
                        "src": "5367:21:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 61037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5367:36:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 61038,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61010,
                        "src": "5406:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 61039,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60962,
                        "src": "5419:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5406:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5367:59:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61045,
                  "nodeType": "IfStatement",
                  "src": "5363:109:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61042,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63671,
                        "src": "5447:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5447:25:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61044,
                    "nodeType": "RevertStatement",
                    "src": "5440:32:103"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 61048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61046,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63691,
                      "src": "5613:11:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 61047,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63694,
                      "src": "5627:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5613:31:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61094,
                    "nodeType": "Block",
                    "src": "6007:141:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61084,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6068:3:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 61085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6068:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61086,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60992,
                              "src": "6080:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61087,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60962,
                              "src": "6089:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 61083,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61335,
                            "src": "6057:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 61088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6057:40:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61089,
                        "nodeType": "ExpressionStatement",
                        "src": "6057:40:103"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 61090,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60992,
                              "src": "6120:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61091,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60962,
                              "src": "6129:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 61092,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6119:18:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 60971,
                        "id": 61093,
                        "nodeType": "Return",
                        "src": "6112:25:103"
                      }
                    ]
                  },
                  "id": 61095,
                  "nodeType": "IfStatement",
                  "src": "5609:539:103",
                  "trueBody": {
                    "id": 61082,
                    "nodeType": "Block",
                    "src": "5646:355:103",
                    "statements": [
                      {
                        "assignments": [
                          61050
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61050,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5704:9:103",
                            "nodeType": "VariableDeclaration",
                            "scope": 61082,
                            "src": "5696:17:103",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 61049,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5696:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61058,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 61055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61053,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63691,
                                "src": "5731:11:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 61054,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63694,
                                "src": "5745:17:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5731:31:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 61056,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63697,
                              "src": "5764:12:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 61051,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60962,
                              "src": "5716:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 61052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43603,
                            "src": "5716:14:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 61057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5716:61:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5696:81:103"
                      },
                      {
                        "expression": {
                          "id": 61065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 61059,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63705,
                                "src": "5791:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$29147_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 61062,
                              "indexExpression": {
                                "id": 61060,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63707,
                                "src": "5799:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5791:18:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$29147_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 61063,
                            "indexExpression": {
                              "id": 61061,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60958,
                              "src": "5810:11:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5791:31:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 61064,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61050,
                            "src": "5826:9:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5791:44:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61066,
                        "nodeType": "ExpressionStatement",
                        "src": "5791:44:103"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61068,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5897:3:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 61069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5897:10:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61070,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60992,
                              "src": "5909:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 61073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61071,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60962,
                                "src": "5918:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 61072,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61050,
                                "src": "5928:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5918:19:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 61067,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61335,
                            "src": "5886:10:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 61074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61075,
                        "nodeType": "ExpressionStatement",
                        "src": "5886:52:103"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 61076,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60992,
                              "src": "5961:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 61079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61077,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60962,
                                "src": "5970:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 61078,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61050,
                                "src": "5980:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5970:19:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 61080,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5960:30:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 60971,
                        "id": 61081,
                        "nodeType": "Return",
                        "src": "5953:37:103"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              65003
            ],
            "documentation": {
              "id": 60955,
              "nodeType": "StructuredDocumentation",
              "src": "4279:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60966,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60965,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29291,
                  "src": "4436:12:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "4436:12:103"
              }
            ],
            "name": "create",
            "nameLocation": "4329:6:103",
            "overrides": {
              "id": 60964,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4427:8:103"
            },
            "parameters": {
              "id": 60963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60958,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4351:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "4345:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 60957,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60956,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "4345:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "4345:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60960,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4379:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "4372:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 60959,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60962,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4404:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "4396:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4396:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4335:82:103"
            },
            "returnParameters": {
              "id": 60971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "4458:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "4467:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:18:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61149,
            "nodeType": "FunctionDefinition",
            "src": "6200:586:103",
            "nodes": [],
            "body": {
              "id": 61148,
              "nodeType": "Block",
              "src": "6261:525:103",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 61108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6319:31:103",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 61104,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60856,
                          "src": "6320:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 61106,
                        "indexExpression": {
                          "id": 61105,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61099,
                          "src": "6334:8:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6320:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 61107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64978,
                      "src": "6320:30:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61112,
                  "nodeType": "IfStatement",
                  "src": "6315:66:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61109,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63673,
                        "src": "6359:20:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6359:22:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61111,
                    "nodeType": "RevertStatement",
                    "src": "6352:29:103"
                  }
                },
                {
                  "assignments": [
                    61115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61115,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6445:4:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61148,
                      "src": "6424:25:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 61114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61113,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64988,
                          "src": "6424:13:103"
                        },
                        "referencedDeclaration": 64988,
                        "src": "6424:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61119,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61116,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60856,
                      "src": "6452:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 61118,
                    "indexExpression": {
                      "id": 61117,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61099,
                      "src": "6466:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6452:23:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6424:51:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61120,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6534:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 61121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6534:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 61122,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61115,
                        "src": "6552:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                        }
                      },
                      "id": 61123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64985,
                      "src": "6552:11:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6534:29:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61130,
                  "nodeType": "IfStatement",
                  "src": "6530:77:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 61126,
                            "name": "meta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61115,
                            "src": "6595:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                              "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                            }
                          },
                          "id": 61127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64985,
                          "src": "6595:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 61125,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63660,
                        "src": "6572:22:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 61128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6572:35:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61129,
                    "nodeType": "RevertStatement",
                    "src": "6565:42:103"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6690:3:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6690:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61134,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61099,
                        "src": "6702:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61135,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61101,
                        "src": "6712:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61131,
                      "name": "_burnToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61359,
                      "src": "6679:10:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 61136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:41:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61137,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:41:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6759:3:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6759:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61145,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61101,
                        "src": "6771:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 61138,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61115,
                          "src": "6730:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 61141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64981,
                        "src": "6730:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 61142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43754,
                      "src": "6730:28:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$29147_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$29147_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 61146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6730:49:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61147,
                  "nodeType": "ExpressionStatement",
                  "src": "6730:49:103"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "6209:7:103",
            "parameters": {
              "id": 61102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61099,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6225:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61149,
                  "src": "6217:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61101,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6243:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61149,
                  "src": "6235:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6235:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6216:35:103"
            },
            "returnParameters": {
              "id": 61103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6261:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61166,
            "nodeType": "FunctionDefinition",
            "src": "6833:123:103",
            "nodes": [],
            "body": {
              "id": 61165,
              "nodeType": "Block",
              "src": "6913:43:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61161,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61152,
                        "src": "6931:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61162,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61154,
                        "src": "6941:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61160,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61149,
                      "src": "6923:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 61163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6923:26:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61164,
                  "nodeType": "ExpressionStatement",
                  "src": "6923:26:103"
                }
              ]
            },
            "baseFunctions": [
              65022
            ],
            "documentation": {
              "id": 61150,
              "nodeType": "StructuredDocumentation",
              "src": "6792:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "7cbc2373",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61157,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29291,
                  "src": "6900:12:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "6900:12:103"
              }
            ],
            "name": "redeem",
            "nameLocation": "6842:6:103",
            "overrides": {
              "id": 61156,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6891:8:103"
            },
            "parameters": {
              "id": 61155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61152,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6857:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61166,
                  "src": "6849:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6849:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61154,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6875:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61166,
                  "src": "6867:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6848:35:103"
            },
            "returnParameters": {
              "id": 61159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6913:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61213,
            "nodeType": "FunctionDefinition",
            "src": "7003:351:103",
            "nodes": [],
            "body": {
              "id": 61212,
              "nodeType": "Block",
              "src": "7142:212:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61180,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7160:3:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61212,
                      "src": "7152:11:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7152:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61183,
                  "initialValue": {
                    "expression": {
                      "id": 61181,
                      "name": "tokenIds_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61170,
                      "src": "7166:9:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 61182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7166:16:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7152:30:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61184,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61180,
                      "src": "7196:3:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 61185,
                        "name": "amounts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61173,
                        "src": "7203:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 61186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7203:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7196:22:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61191,
                  "nodeType": "IfStatement",
                  "src": "7192:57:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61188,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63673,
                        "src": "7227:20:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7227:22:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61190,
                    "nodeType": "RevertStatement",
                    "src": "7220:29:103"
                  }
                },
                {
                  "body": {
                    "id": 61210,
                    "nodeType": "Block",
                    "src": "7289:59:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 61202,
                                "name": "tokenIds_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61170,
                                "src": "7311:9:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 61204,
                              "indexExpression": {
                                "id": 61203,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61193,
                                "src": "7321:1:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7311:12:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 61205,
                                "name": "amounts_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61173,
                                "src": "7325:8:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 61207,
                              "indexExpression": {
                                "id": 61206,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61193,
                                "src": "7334:1:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7325:11:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 61201,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61149,
                            "src": "7303:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 61208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7303:34:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61209,
                        "nodeType": "ExpressionStatement",
                        "src": "7303:34:103"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61195,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61193,
                      "src": "7275:1:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 61196,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61180,
                      "src": "7279:3:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7275:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61211,
                  "initializationExpression": {
                    "assignments": [
                      61193
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 61193,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7272:1:103",
                        "nodeType": "VariableDeclaration",
                        "scope": 61211,
                        "src": "7264:9:103",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 61192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7264:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 61194,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7264:9:103"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 61199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7284:3:103",
                      "subExpression": {
                        "id": 61198,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61193,
                        "src": "7286:1:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61200,
                    "nodeType": "ExpressionStatement",
                    "src": "7284:3:103"
                  },
                  "nodeType": "ForStatement",
                  "src": "7259:89:103"
                }
              ]
            },
            "baseFunctions": [
              65032
            ],
            "documentation": {
              "id": 61167,
              "nodeType": "StructuredDocumentation",
              "src": "6962:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "e9dc30f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61176,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29291,
                  "src": "7125:12:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "7125:12:103"
              }
            ],
            "name": "batchRedeem",
            "nameLocation": "7012:11:103",
            "overrides": {
              "id": 61175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7108:8:103"
            },
            "parameters": {
              "id": 61174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61170,
                  "mutability": "mutable",
                  "name": "tokenIds_",
                  "nameLocation": "7043:9:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61213,
                  "src": "7024:28:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61168,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7024:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61169,
                    "nodeType": "ArrayTypeName",
                    "src": "7024:9:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61173,
                  "mutability": "mutable",
                  "name": "amounts_",
                  "nameLocation": "7073:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61213,
                  "src": "7054:27:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61171,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7054:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61172,
                    "nodeType": "ArrayTypeName",
                    "src": "7054:9:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7023:59:103"
            },
            "returnParameters": {
              "id": 61178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7142:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61250,
            "nodeType": "FunctionDefinition",
            "src": "7447:386:103",
            "nodes": [],
            "body": {
              "id": 61249,
              "nodeType": "Block",
              "src": "7583:250:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61228,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "7601:7:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61249,
                      "src": "7593:15:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61230,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61217,
                        "src": "7622:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 61231,
                        "name": "expiry_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61219,
                        "src": "7635:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 61229,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61392,
                      "src": "7611:10:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$29147_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 61232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7611:32:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:50:103"
                },
                {
                  "condition": {
                    "id": 61238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7708:30:103",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 61234,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60856,
                          "src": "7709:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 61236,
                        "indexExpression": {
                          "id": 61235,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61228,
                          "src": "7723:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7709:22:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 61237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64978,
                      "src": "7709:29:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61246,
                  "nodeType": "IfStatement",
                  "src": "7704:99:103",
                  "trueBody": {
                    "id": 61245,
                    "nodeType": "Block",
                    "src": "7740:63:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 61240,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61228,
                              "src": "7762:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61241,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61217,
                              "src": "7771:11:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 61242,
                              "name": "expiry_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61219,
                              "src": "7784:7:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$29147",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 61239,
                            "name": "_deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61307,
                            "src": "7754:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$29147_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256,contract ERC20,uint48)"
                            }
                          },
                          "id": 61243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7754:38:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61244,
                        "nodeType": "ExpressionStatement",
                        "src": "7754:38:103"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 61247,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61228,
                    "src": "7819:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61226,
                  "id": 61248,
                  "nodeType": "Return",
                  "src": "7812:14:103"
                }
              ]
            },
            "baseFunctions": [
              65014
            ],
            "documentation": {
              "id": 61214,
              "nodeType": "StructuredDocumentation",
              "src": "7406:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61222,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29291,
                  "src": "7540:12:103"
                },
                "nodeType": "ModifierInvocation",
                "src": "7540:12:103"
              }
            ],
            "name": "deploy",
            "nameLocation": "7456:6:103",
            "overrides": {
              "id": 61221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7523:8:103"
            },
            "parameters": {
              "id": 61220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61217,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7469:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61250,
                  "src": "7463:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 61216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61215,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "7463:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "7463:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61219,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7489:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61250,
                  "src": "7482:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 61218,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7482:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7462:35:103"
            },
            "returnParameters": {
              "id": 61226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61250,
                  "src": "7570:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7569:9:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61307,
            "nodeType": "FunctionDefinition",
            "src": "8254:734:103",
            "nodes": [],
            "body": {
              "id": 61306,
              "nodeType": "Block",
              "src": "8363:625:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61262,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8534:6:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61306,
                      "src": "8527:13:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 61261,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8527:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 61270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 61267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61265,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61258,
                            "src": "8550:7:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 61266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8560:6:103",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8550:16:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 61264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8543:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 61263,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "8543:6:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8543:24:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 61269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8570:6:103",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "8543:33:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8527:49:103"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 61274,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61262,
                          "src": "8642:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 61273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8634:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 61272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8634:7:103",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8634:15:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 61276,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8652:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 61277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8652:15:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8634:33:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61282,
                  "nodeType": "IfStatement",
                  "src": "8630:68:103",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61279,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63673,
                        "src": "8676:20:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8676:22:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61281,
                    "nodeType": "RevertStatement",
                    "src": "8669:29:103"
                  }
                },
                {
                  "expression": {
                    "id": 61298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61283,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60856,
                        "src": "8741:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                          "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                        }
                      },
                      "id": 61285,
                      "indexExpression": {
                        "id": 61284,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61253,
                        "src": "8755:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8741:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 61287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8794:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 61288,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61256,
                          "src": "8812:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$29147",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 61291,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61256,
                                  "src": "8843:11:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$29147",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 61292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28792,
                                "src": "8843:20:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 61293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8843:22:103",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 61290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8837:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 61289,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8837:5:103",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8837:29:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 61295,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61262,
                          "src": "8880:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 61296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8900:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$29147",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 61286,
                        "name": "TokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64988,
                        "src": "8767:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenMetadata_$64988_storage_ptr_$",
                          "typeString": "type(struct IBondFixedTermTeller.TokenMetadata storage pointer)"
                        }
                      },
                      "id": 61297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8767:144:103",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                      }
                    },
                    "src": "8741:170:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "id": 61299,
                  "nodeType": "ExpressionStatement",
                  "src": "8741:170:103"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61301,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61253,
                        "src": "8951:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61302,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61256,
                        "src": "8961:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 61303,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61262,
                        "src": "8974:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 61300,
                      "name": "ERC1155BondTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60851,
                      "src": "8927:23:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_ERC20_$29147_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256,contract ERC20,uint48)"
                      }
                    },
                    "id": 61304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8927:54:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61305,
                  "nodeType": "EmitStatement",
                  "src": "8922:59:103"
                }
              ]
            },
            "documentation": {
              "id": 61251,
              "nodeType": "StructuredDocumentation",
              "src": "7839:410:103",
              "text": "@notice             \"Deploy\" a new ERC1155 bond token and stores its ID\n @dev                ERC1155 tokens used for fixed term bonds\n @param tokenId_     Calculated ID of new bond token (from getTokenId)\n @param underlying_  Underlying token to be paid out when the bond token vests\n @param expiry_      Timestamp that the token will vest at, will be rounded to the nearest day"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "8263:7:103",
            "parameters": {
              "id": 61259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61253,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "8288:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61307,
                  "src": "8280:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8280:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61256,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8312:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61307,
                  "src": "8306:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 61255,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61254,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "8306:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "8306:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61258,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8340:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61307,
                  "src": "8333:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 61257,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8333:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8270:83:103"
            },
            "returnParameters": {
              "id": 61260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8363:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61335,
            "nodeType": "FunctionDefinition",
            "src": "9221:215:103",
            "nodes": [],
            "body": {
              "id": 61334,
              "nodeType": "Block",
              "src": "9328:108:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 61317,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60856,
                          "src": "9338:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 61319,
                        "indexExpression": {
                          "id": 61318,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61312,
                          "src": "9352:8:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9338:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 61320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64987,
                      "src": "9338:30:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 61321,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61314,
                      "src": "9372:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9338:41:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61323,
                  "nodeType": "ExpressionStatement",
                  "src": "9338:41:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61325,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61310,
                        "src": "9395:3:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61326,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61312,
                        "src": "9400:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61327,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61314,
                        "src": "9410:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9425:2:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9419:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61328,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9419:5:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9419:9:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61324,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65674,
                      "src": "9389:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 61332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9389:40:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61333,
                  "nodeType": "ExpressionStatement",
                  "src": "9389:40:103"
                }
              ]
            },
            "documentation": {
              "id": 61308,
              "nodeType": "StructuredDocumentation",
              "src": "8994:222:103",
              "text": "@notice             Mint bond token and update supply\n @param to_          Address to mint tokens to\n @param tokenId_     ID of bond token to mint\n @param amount_      Amount of bond tokens to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToken",
            "nameLocation": "9230:10:103",
            "parameters": {
              "id": 61315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61310,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "9258:3:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61335,
                  "src": "9250:11:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9250:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61312,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9279:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61335,
                  "src": "9271:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9271:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61314,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9305:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61335,
                  "src": "9297:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9297:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9240:78:103"
            },
            "returnParameters": {
              "id": 61316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9328:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61359,
            "nodeType": "FunctionDefinition",
            "src": "9670:208:103",
            "nodes": [],
            "body": {
              "id": 61358,
              "nodeType": "Block",
              "src": "9779:99:103",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 61345,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60856,
                          "src": "9789:13:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 61347,
                        "indexExpression": {
                          "id": 61346,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61340,
                          "src": "9803:8:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9789:23:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 61348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64987,
                      "src": "9789:30:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 61349,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61342,
                      "src": "9823:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9789:41:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61351,
                  "nodeType": "ExpressionStatement",
                  "src": "9789:41:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61353,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61338,
                        "src": "9846:5:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61354,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61340,
                        "src": "9853:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61355,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61342,
                        "src": "9863:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61352,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65862,
                      "src": "9840:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 61356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:31:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61357,
                  "nodeType": "ExpressionStatement",
                  "src": "9840:31:103"
                }
              ]
            },
            "documentation": {
              "id": 61336,
              "nodeType": "StructuredDocumentation",
              "src": "9442:223:103",
              "text": "@notice             Burn bond token and update supply\n @param from_        Address to burn tokens from\n @param tokenId_     ID of bond token to burn\n @param amount_      Amount of bond token to burn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnToken",
            "nameLocation": "9679:10:103",
            "parameters": {
              "id": 61343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61338,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "9707:5:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61359,
                  "src": "9699:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9699:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61340,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9730:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61359,
                  "src": "9722:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9722:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61342,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9756:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61359,
                  "src": "9748:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9748:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9689:80:103"
            },
            "returnParameters": {
              "id": 61344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9779:0:103"
            },
            "scope": 61427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61392,
            "nodeType": "FunctionDefinition",
            "src": "9971:382:103",
            "nodes": [],
            "body": {
              "id": 61391,
              "nodeType": "Block",
              "src": "10065:288:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61372,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10215:7:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61391,
                      "src": "10207:15:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10207:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61388,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61378,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61363,
                                "src": "10273:11:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$29147",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                "id": 61384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61379,
                                  "name": "expiry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61365,
                                  "src": "10286:7:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 61382,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10303:6:103",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      }
                                    ],
                                    "id": 61381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10296:6:103",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 61380,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10296:6:103",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 61383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10296:14:103",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "10286:24:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$29147",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              ],
                              "expression": {
                                "id": 61376,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10256:3:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 61377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10256:16:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 61385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10256:55:103",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 61375,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10246:9:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10246:66:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 61374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10225:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 61373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10225:7:103",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10225:97:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10207:115:103"
                },
                {
                  "expression": {
                    "id": 61389,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61372,
                    "src": "10339:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61370,
                  "id": 61390,
                  "nodeType": "Return",
                  "src": "10332:14:103"
                }
              ]
            },
            "baseFunctions": [
              65043
            ],
            "documentation": {
              "id": 61360,
              "nodeType": "StructuredDocumentation",
              "src": "9930:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "92593277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenId",
            "nameLocation": "9980:10:103",
            "overrides": {
              "id": 61367,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10038:8:103"
            },
            "parameters": {
              "id": 61366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61363,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "9997:11:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61392,
                  "src": "9991:17:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$29147",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 61362,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61361,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29147,
                      "src": "9991:5:103"
                    },
                    "referencedDeclaration": 29147,
                    "src": "9991:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$29147",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61365,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "10017:7:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61392,
                  "src": "10010:14:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 61364,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "10010:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9990:35:103"
            },
            "returnParameters": {
              "id": 61370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61392,
                  "src": "10056:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10056:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10055:9:103"
            },
            "scope": 61427,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61426,
            "nodeType": "FunctionDefinition",
            "src": "10400:382:103",
            "nodes": [],
            "body": {
              "id": 61425,
              "nodeType": "Block",
              "src": "10547:235:103",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61405,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "10578:4:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61425,
                      "src": "10557:25:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 61404,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61403,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64988,
                          "src": "10557:13:103"
                        },
                        "referencedDeclaration": 64988,
                        "src": "10557:13:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61409,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61406,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60856,
                      "src": "10585:13:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$64988_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 61408,
                    "indexExpression": {
                      "id": 61407,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61395,
                      "src": "10599:8:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10585:23:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$64988_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10557:51:103"
                },
                {
                  "assignments": [
                    61411,
                    61413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61411,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "10633:4:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61425,
                      "src": "10619:18:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 61410,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10619:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61413,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "10653:6:103",
                      "nodeType": "VariableDeclaration",
                      "scope": 61425,
                      "src": "10639:20:103",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 61412,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10639:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61420,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61415,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61405,
                          "src": "10694:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 61416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64981,
                        "src": "10694:15:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 61417,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61405,
                          "src": "10723:4:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$64988_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 61418,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64985,
                        "src": "10723:11:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$29147",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 61414,
                      "name": "_getNameAndSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64460,
                      "src": "10663:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$29147_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                      }
                    },
                    "id": 61419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:81:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10618:126:103"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 61421,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61411,
                        "src": "10762:4:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 61422,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61413,
                        "src": "10768:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 61423,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10761:14:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 61402,
                  "id": 61424,
                  "nodeType": "Return",
                  "src": "10754:21:103"
                }
              ]
            },
            "baseFunctions": [
              65053
            ],
            "documentation": {
              "id": 61393,
              "nodeType": "StructuredDocumentation",
              "src": "10359:36:103",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "35312c85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNameAndSymbol",
            "nameLocation": "10409:21:103",
            "overrides": {
              "id": 61397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10487:8:103"
            },
            "parameters": {
              "id": 61396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61395,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10439:8:103",
                  "nodeType": "VariableDeclaration",
                  "scope": 61426,
                  "src": "10431:16:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10431:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10430:18:103"
            },
            "returnParameters": {
              "id": 61402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61426,
                  "src": "10513:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10513:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61426,
                  "src": "10528:13:103",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61400,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10528:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10512:30:103"
            },
            "scope": 61427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60830,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64556,
              "src": "1461:14:103"
            },
            "id": 60831,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:14:103"
          },
          {
            "baseName": {
              "id": 60832,
              "name": "IBondFixedTermTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65054,
              "src": "1477:20:103"
            },
            "id": 60833,
            "nodeType": "InheritanceSpecifier",
            "src": "1477:20:103"
          },
          {
            "baseName": {
              "id": 60834,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65863,
              "src": "1499:7:103"
            },
            "id": 60835,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:7:103"
          }
        ],
        "canonicalName": "BondFixedTermTeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 60829,
          "nodeType": "StructuredDocumentation",
          "src": "438:991:103",
          "text": "@title Bond Fixed Term Teller\n @notice Bond Fixed Term Teller Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Bond Fixed Term Teller is an implementation of the\n      Bond Base Teller contract specific to handling user bond transactions\n      and tokenizing bond markets where purchases vest in a fixed amount of time\n      (rounded to the day) as ERC1155 tokens.\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61427,
          65863,
          65054,
          64556,
          29292,
          27238,
          65240
        ],
        "name": "BondFixedTermTeller",
        "nameLocation": "1438:19:103",
        "scope": 61428,
        "usedErrors": [
          63656,
          63660,
          63662,
          63669,
          63671,
          63673
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 103
}