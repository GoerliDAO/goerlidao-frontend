{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocol_",
          "type": "address"
        },
        {
          "internalType": "contract IBondAggregator",
          "name": "aggregator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "authority_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "maturesOn",
          "type": "uint48"
        }
      ],
      "name": "Teller_TokenNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Teller_UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Bonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        }
      ],
      "name": "ERC1155BondTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds_",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts_",
          "type": "uint256[]"
        }
      ],
      "name": "batchRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        }
      ],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFeeDiscount",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "expiry_",
          "type": "uint48"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        }
      ],
      "name": "getTokenNameAndSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "discount_",
          "type": "uint48"
        }
      ],
      "name": "setCreateFeeDiscount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "fee_",
          "type": "uint48"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint48",
          "name": "expiry",
          "type": "uint48"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016002553480156200001657600080fd5b5060405162004d9538038062004d9583398101604081905262000039916200011e565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051869286928692869284928492909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b03928316608052501660a0525050600480546001600160601b031916905550620001869050565b6001600160a01b03811681146200011b57600080fd5b50565b600080600080608085870312156200013557600080fd5b8451620001428162000105565b6020860151909450620001558162000105565b6040860151909350620001688162000105565b60608601519092506200017b8162000105565b939692955090935050565b60805160a051614bdb620001ba600039600081816111a20152612a310152600081816114060152611d920152614bdb6000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b75565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bcf565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c00565b6106ca565b005b61027a61028a366004613c1d565b6107ce565b61027a61029d366004613dde565b6108d2565b61027a6102b0366004613e8c565b610cdd565b6102c86102c3366004613f38565b610e10565b604051610208929190613fc7565b6102e96102e4366004613ff5565b610eca565b60405161020891906140f2565b610380610304366004613f38565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614105565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c1d565b6114f1565b61027a61041e366004614156565b61164e565b61027a610431366004613c00565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614178565b6117f0565b61027a61049c3660046141bf565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c00565b61193c565b6104d96104d43660046141ed565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c1d565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c1d565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614178565b611e7b565b610250620186a081565b6101fe61057436600461422e565b600560209081526000928352604080842090915290825290205481565b61022461059f36600461422e565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142a8565b611f29565b61027a6105e0366004614314565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a1861437d565b60200260200101519250858181518110610a3457610a3461437d565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e91906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae39084906143f2565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b6792919061440a565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c9060040161442f565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e61437d565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144b7565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125b6565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c3a565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa061437d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff661437d565b602002602001015181526020019081526020016000205483828151811061101f5761101f61437d565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff90811691166144ef565b8c9065ffffffffffff16620186a0612957565b61115891906143db565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d9190614519565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190614536565b50919b509950975090915060009050836112bc868f6143db565b6112c691906143db565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145b3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea91906143f2565b909155505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938916835292905290812080548392906114539084906143f2565b9091555061146e90508b8b8561146985876143f2565b612a29565b600061147c8e8589886130d1565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906145cc565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c88282613168565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836118016201518085614618565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf6201518086614618565b611adc906201518061463d565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145b3565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132ce565b611c5c86826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145b3565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff660100000000000082048116911661466b565b889065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de49084906143f2565b90915550611dfe90503384611df9848b6143db565b613447565b82611e0982896143db565b9550955050505050611e2e565b611e21338388613447565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff90811691166144ef565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d81858561348a565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff361437d565b9050602002013585858481811061200c5761200c61437d565b90506020020135613168565b612021816144b7565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f9084906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906121749084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a90899089908990600401614692565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d919061449a565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242091906145cc565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e491906146e2565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b509150915081801561255057508051158061255057508080602001905181019061255091906145cc565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125cb62015180886146fe565b905060006125dc8262010bd9614712565b6125e99062253d8c614712565b9050600062023ab16125fc836004614786565b6126069190614842565b905060046126178262023ab1614786565b612622906003614712565b61262c9190614842565b61263690836148aa565b9150600062164b09612649846001614712565b61265590610fa0614786565b61265f9190614842565b9050600461266f826105b5614786565b6126799190614842565b61268390846148aa565b61268e90601f614712565b9250600061098f6126a0856050614786565b6126aa9190614842565b9050600060506126bc8361098f614786565b6126c69190614842565b6126d090866148aa565b90506126dd600b83614842565b94506126ea85600c614786565b6126f5836002614712565b6126ff91906148aa565b9150848361270e6031876148aa565b612719906064614786565b6127239190614712565b61272d9190614712565b9850909650945060009350612752925061274d915061271090508661491e565b613708565b90506000600a841061276c5761276784613708565b612795565b61277584613708565b6040516020016127859190614932565b6040516020818303038152906040525b90506000600a84106127af576127aa84613708565b6127d8565b6127b884613708565b6040516020016127c89190614932565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612825573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261286b9190810190614977565b83838360405160200161288194939291906149e5565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526129239190810190614977565b8383836040516020016129399493929190614a9a565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129ae57600084116129a357600080fd5b508290049050612a22565b8084116129ba57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8a91815260200190565b602060405180830381865afa158015612aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acb9190614519565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0591815260200190565b60c060405180830381865afa158015612b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b469190614536565b5050935093509350935060008588612b5e91906143db565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf291906145b3565b9050612c1673ffffffffffffffffffffffffffffffffffffffff841633308c6132ce565b612c2089826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cae91906145b3565b1015612ce6576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1d57612d2373ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db491906145b3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2d57600080fd5b505af1158015612e41573d6000803e3d6000fd5b505050508881612e5191906143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edf91906145b3565b1015612f17576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130c5565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fae91906145b3565b9050612fd273ffffffffffffffffffffffffffffffffffffffff861688308c6132ce565b612fdc89826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306a91906145b3565b10156130a2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130c373ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff8216156131475762015180806130f042856144ef565b6130fa9190614618565b613104919061463d565b9050600061311284836117f0565b60008181526008602052604090205490915060ff166131365761313681858461348a565b613141868287613447565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131b0576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132985760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132a3338484613868565b60208101516132c99073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161336d91906146e2565b6000604051808303816000865af19150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b50915091508180156133d95750805115806133d95750808060200190518101906133d991906145cc565b61343f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134689084906143f2565b925050819055506132c98383836040518060200160405280600081525061389a565b60006134996201518083614618565b6134a6906201518061463d565b9050428165ffffffffffff1610156134ea576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135899190614b20565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361374b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613775578061375f816144b7565b915061376e9050600a836146fe565b915061374f565b60008167ffffffffffffffff81111561379057613790613c3a565b6040519080825280601f01601f1916602001820160405280156137ba576020820181803683370190505b509050815b851561385f576137d06001826143db565b905060006137df600a886146fe565b6137ea90600a614b43565b6137f490886143db565b6137ff906030614b80565b905060008160f81b90508084848151811061381c5761381c61437d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613856600a896146fe565b975050506137bf565b50949350505050565b600082815260086020526040812060010180548392906138899084906143db565b909155506132c99050838383613aa0565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138da9084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a1a576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139af903390600090899089908990600401614692565b6020604051808303816000875af11580156139ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f2919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a34565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613ae09084906143db565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b6257600080fd5b50565b8035613b7081613b40565b919050565b60008060408385031215613b8857600080fd5b8235613b9381613b40565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b6257600080fd5b600060208284031215613be157600080fd5b8135612a2281613ba1565b65ffffffffffff81168114613b6257600080fd5b600060208284031215613c1257600080fd5b8135612a2281613bec565b600060208284031215613c2f57600080fd5b8135612a2281613b40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cb057613cb0613c3a565b604052919050565b600067ffffffffffffffff821115613cd257613cd2613c3a565b5060051b60200190565b600082601f830112613ced57600080fd5b81356020613d02613cfd83613cb8565b613c69565b82815260059290921b84018101918181019086841115613d2157600080fd5b8286015b84811015613d3c5780358352918301918301613d25565b509695505050505050565b600067ffffffffffffffff821115613d6157613d61613c3a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613d9e57600080fd5b8135613dac613cfd82613d47565b818152846020838601011115613dc157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613df657600080fd5b8535613e0181613b40565b94506020860135613e1181613b40565b9350604086013567ffffffffffffffff80821115613e2e57600080fd5b613e3a89838a01613cdc565b94506060880135915080821115613e5057600080fd5b613e5c89838a01613cdc565b93506080880135915080821115613e7257600080fd5b50613e7f88828901613d8d565b9150509295509295909350565b60008060408385031215613e9f57600080fd5b823567ffffffffffffffff811115613eb657600080fd5b8301601f81018513613ec757600080fd5b80356020613ed7613cfd83613cb8565b82815260059290921b83018101918181019088841115613ef657600080fd5b938201935b83851015613f1d578435613f0e81613b40565b82529382019390820190613efb565b9550613f2c9050868201613b65565b93505050509250929050565b600060208284031215613f4a57600080fd5b5035919050565b60005b83811015613f6c578181015183820152602001613f54565b83811115613a9a5750506000910152565b60008151808452613f95816020860160208601613f51565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613fda6040830185613f7d565b8281036020840152613fec8185613f7d565b95945050505050565b6000806040838503121561400857600080fd5b823567ffffffffffffffff8082111561402057600080fd5b818501915085601f83011261403457600080fd5b81356020614044613cfd83613cb8565b82815260059290921b8401810191818101908984111561406357600080fd5b948201945b8386101561408a57853561407b81613b40565b82529482019490820190614068565b965050860135925050808211156140a057600080fd5b506140ad85828601613cdc565b9150509250929050565b600081518084526020808501945080840160005b838110156140e7578151875295820195908201906001016140cb565b509495945050505050565b602081526000612a2260208301846140b7565b600080600080600060a0868803121561411d57600080fd5b853561412881613b40565b9450602086013561413881613b40565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561416957600080fd5b50508035926020909101359150565b6000806040838503121561418b57600080fd5b823561419681613b40565b915060208301356141a681613bec565b809150509250929050565b8015158114613b6257600080fd5b600080604083850312156141d257600080fd5b82356141dd81613b40565b915060208301356141a6816141b1565b60008060006060848603121561420257600080fd5b833561420d81613b40565b9250602084013561421d81613bec565b929592945050506040919091013590565b6000806040838503121561424157600080fd5b823561424c81613b40565b915060208301356141a681613b40565b60008083601f84011261426e57600080fd5b50813567ffffffffffffffff81111561428657600080fd5b6020830191508360208260051b85010111156142a157600080fd5b9250929050565b600080600080604085870312156142be57600080fd5b843567ffffffffffffffff808211156142d657600080fd5b6142e28883890161425c565b909650945060208701359150808211156142fb57600080fd5b506143088782880161425c565b95989497509550505050565b600080600080600060a0868803121561432c57600080fd5b853561433781613b40565b9450602086013561434781613b40565b93506040860135925060608601359150608086013567ffffffffffffffff81111561437157600080fd5b613e7f88828901613d8d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156143ed576143ed6143ac565b500390565b60008219821115614405576144056143ac565b500190565b60408152600061441d60408301856140b7565b8281036020840152613fec81856140b7565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261446860a08301866140b7565b828103606084015261447a81866140b7565b9050828103608084015261448e8185613f7d565b98975050505050505050565b6000602082840312156144ac57600080fd5b8151612a2281613ba1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144e8576144e86143ac565b5060010190565b600065ffffffffffff808316818516808303821115614510576145106143ac565b01949350505050565b60006020828403121561452b57600080fd5b8151612a2281613b40565b60008060008060008060c0878903121561454f57600080fd5b865161455a81613b40565b602088015190965061456b81613b40565b604088015190955061457c81613b40565b606088015190945061458d81613b40565b608088015190935061459e81613bec565b8092505060a087015190509295509295509295565b6000602082840312156145c557600080fd5b5051919050565b6000602082840312156145de57600080fd5b8151612a22816141b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680614631576146316145e9565b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615614662576146626143ac565b02949350505050565b600065ffffffffffff8381169083168181101561468a5761468a6143ac565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526146d760a0830184613f7d565b979650505050505050565b600082516146f4818460208701613f51565b9190910192915050565b60008261470d5761470d6145e9565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561474c5761474c6143ac565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614780576147806143ac565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156147c7576147c76143ac565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614802576148026143ac565b6000871292508782058712848416161561481e5761481e6143ac565b87850587128184161615614834576148346143ac565b505050929093029392505050565b600082614851576148516145e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148a5576148a56143ac565b500590565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156148e4576148e46143ac565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615614918576149186143ac565b50500390565b60008261492d5761492d6145e9565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161496a816001850160208701613f51565b9190910160010192915050565b60006020828403121561498957600080fd5b815167ffffffffffffffff8111156149a057600080fd5b8201601f810184136149b157600080fd5b80516149bf613cfd82613d47565b8181528560208385010111156149d457600080fd5b613fec826020830160208601613f51565b600085516149f7818460208a01613f51565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a31816001840160208a01613f51565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614a71816002850160208a01613f51565b60029201918201528351614a8c816003840160208801613f51565b016003019695505050505050565b60008551614aac818460208a01613f51565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614ae6816001840160208a01613f51565b8551910190614afc816001840160208901613f51565b8451910190614b12816001840160208801613f51565b016001019695505050505050565b600060208284031215614b3257600080fd5b815160ff81168114612a2257600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614b7b57614b7b6143ac565b500290565b600060ff821660ff84168060ff03821115614b9d57614b9d6143ac565b01939250505056fea2646970667358221220c10ea4b06a86647b13ebdaa04f3e2482dfa627bbaef97658048bb27d315bd1d064736f6c634300080f0033",
    "sourceMap": "1429:9355:124:-:0;;;451:1:14;426:26;;1905:203:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:7;:14;;-1:-1:-1;;;;;;671:14:7;;;-1:-1:-1;;;;;671:14:7;;;;;;;;-1:-1:-1;695:22:7;;;;;;;;;;;;733:32;;2059:9:124;;2070:11;;671:14:7;;695:22;;671:14;;695:22;;671:14;;746:10;;733:32;;671:5;733:32;780:40;;-1:-1:-1;;;;;780:40:7;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;3877:21:126;;::::1;;::::0;-1:-1:-1;3908:25:126::1;;::::0;-1:-1:-1;;4007:11:126::1;:15:::0;;-1:-1:-1;;;;;;4032:21:126;;;-1:-1:-1;1429:9355:124;;-1:-1:-1;1429:9355:124;14:131:183;-1:-1:-1;;;;;89:31:183;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:698::-;291:6;299;307;315;368:3;356:9;347:7;343:23;339:33;336:53;;;385:1;382;375:12;336:53;417:9;411:16;436:31;461:5;436:31;:::i;:::-;536:2;521:18;;515:25;486:5;;-1:-1:-1;549:33:183;515:25;549:33;:::i;:::-;653:2;638:18;;632:25;601:7;;-1:-1:-1;666:33:183;632:25;666:33;:::i;:::-;770:2;755:18;;749:25;718:7;;-1:-1:-1;783:33:183;749:25;783:33;:::i;:::-;150:698;;;;-1:-1:-1;150:698:183;;-1:-1:-1;;150:698:183:o;:::-;1429:9355:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638da5cb5b11610104578063bf7e214f116100a2578063e70b9e2711610071578063e70b9e2714610566578063e985e9c514610591578063e9dc30f3146105bf578063f242432a146105d257600080fd5b8063bf7e214f14610501578063c23135dd14610521578063c6e38a4b14610549578063ccf288c61461055c57600080fd5b8063b0e21e8a116100de578063b0e21e8a146104a1578063b1e55529146104b3578063b7314ef9146104c6578063b88c9148146104ee57600080fd5b80638da5cb5b14610436578063925932771461047b578063a22cb4651461048e57600080fd5b806335312c85116101715780636de5b4cd1161014b5780636de5b4cd146103ce5780637a9e5e4b146103fd5780637cbc237314610410578063816909271461042357600080fd5b806335312c85146102b55780634e1273f4146102d65780636914db60146102f657600080fd5b80630d4dfc21116101ad5780630d4dfc211461026757806313af40351461027c5780632eb2c2d61461028f5780632f6fa94e146102a257600080fd5b8062fdd58e146101d357806301ffc9a71461021157806306692a3714610234575b600080fd5b6101fe6101e1366004613b75565b600660209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022461021f366004613bcf565b6105e5565b6040519015158152602001610208565b600454610250906601000000000000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610208565b61027a610275366004613c00565b6106ca565b005b61027a61028a366004613c1d565b6107ce565b61027a61029d366004613dde565b6108d2565b61027a6102b0366004613e8c565b610cdd565b6102c86102c3366004613f38565b610e10565b604051610208929190613fc7565b6102e96102e4366004613ff5565b610eca565b60405161020891906140f2565b610380610304366004613f38565b6008602052600090815260409020805460019091015460ff80831692610100810473ffffffffffffffffffffffffffffffffffffffff1692750100000000000000000000000000000000000000000082049092169176010000000000000000000000000000000000000000000090910465ffffffffffff169085565b60408051951515865273ffffffffffffffffffffffffffffffffffffffff909416602086015260ff9092169284019290925265ffffffffffff9091166060830152608082015260a001610208565b6103e16103dc366004614105565b61103a565b6040805192835265ffffffffffff909116602083015201610208565b61027a61040b366004613c1d565b6114f1565b61027a61041e366004614156565b61164e565b61027a610431366004613c00565b6116d1565b6000546104569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610208565b6101fe610489366004614178565b6117f0565b61027a61049c3660046141bf565b6118a5565b6004546102509065ffffffffffff1681565b61027a6104c1366004613c00565b61193c565b6104d96104d43660046141ed565b611a4d565b60408051928352602083019190915201610208565b6102506104fc366004613c1d565b611e3d565b6001546104569073ffffffffffffffffffffffffffffffffffffffff1681565b61025061052f366004613c1d565b60036020526000908152604090205465ffffffffffff1681565b6101fe610557366004614178565b611e7b565b610250620186a081565b6101fe61057436600461422e565b600560209081526000928352604080842090915290825290205481565b61022461059f36600461422e565b600760209081526000928352604080842090915290825290205460ff1681565b61027a6105cd3660046142a8565b611f29565b61027a6105e0366004614314565b612035565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061067857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806106c457507f0e89341c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60025460011461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002805561138865ffffffffffff82161115610783576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff929092169190911790556001600255565b6107fc336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b82518251811461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b3373ffffffffffffffffffffffffffffffffffffffff87161480610992575073ffffffffffffffffffffffffffffffffffffffff8616600090815260076020908152604080832033845290915290205460ff165b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b60008060005b83811015610af057868181518110610a1857610a1861437d565b60200260200101519250858181518110610a3457610a3461437d565b6020026020010151915081600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610a9e91906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff8816600090815260066020908152604080832086845290915281208054849290610ae39084906143f2565b90915550506001016109fe565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989604051610b6792919061440a565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff87163b15610c53576040517fbc197c81000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff89169063bc197c8190610be89033908d908c908c908c9060040161442f565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c6d565b73ffffffffffffffffffffffffffffffffffffffff871615155b610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050505050565b600254600114610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b60028055815160005b81811015610e05576000848281518110610d6e57610d6e61437d565b60209081029190910181015133600090815260058352604080822073ffffffffffffffffffffffffffffffffffffffff8416835290935291909120549091508015610df25733600090815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252822091909155610df290868361244d565b505080610dfe906144b7565b9050610d52565b505060016002555050565b6000818152600860209081526040808320815160a081018352815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1695830186905275010000000000000000000000000000000000000000008204169382019390935276010000000000000000000000000000000000000000000090920465ffffffffffff16606080840182905260019092015460808401529093849390918291610ebd916125b6565b9097909650945050505050565b81518151606091908114610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152606401610732565b8067ffffffffffffffff811115610f5357610f53613c3a565b604051908082528060200260200182016040528015610f7c578160200160208202803683370190505b50915060005b818110156110325760066000868381518110610fa057610fa061437d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858381518110610ff657610ff661437d565b602002602001015181526020019081526020016000205483828151811061101f5761101f61437d565b6020908102919091010152600101610f82565b505092915050565b6000806002546001146110a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805573ffffffffffffffffffffffffffffffffffffffff861660009081526003602052604081205481908190819081906110f2908a9065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600360205260408120546004549293509091839161114e9161113b9165ffffffffffff90811691166144ef565b8c9065ffffffffffff16620186a0612957565b61115891906143db565b6040517f52047942000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635204794290602401602060405180830381865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d9190614519565b6040517facc5570c000000000000000000000000000000000000000000000000000000008152600481018e905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063acc5570c9060240160c060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190614536565b50919b509950975090915060009050836112bc868f6143db565b6112c691906143db565b90508273ffffffffffffffffffffffffffffffffffffffff1663e007fa978f838f6040518463ffffffff1660e01b8152600401611316939291909283526020830191909152604082015260600190565b6020604051808303816000875af1158015611335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135991906145b3565b955050505081600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ea91906143f2565b909155505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938916835292905290812080548392906114539084906143f2565b9091555061146e90508b8b8561146985876143f2565b612a29565b600061147c8e8589886130d1565b90508c73ffffffffffffffffffffffffffffffffffffffff168c7f3ae5efadaccde413bdfcb3a4626babecd844c502ee4c2c9b340f28cd9d5527328d876040516114d0929190918252602082015260400190565b60405180910390a36001600255929d929c50919a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314806115d457506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906145cc565b6115dd57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6002546001146116ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556116c88282613168565b50506001600255565b6116ff336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b611765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b60045465ffffffffffff90811690821611156117ad576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004805465ffffffffffff9092166601000000000000027fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff909216919091179055565b600080836118016201518085614618565b60405160200161186792919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260d01b7fffffffffffff0000000000000000000000000000000000000000000000000000166014820152601a0190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190528051602090910120949350505050565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61196a336000357fffffffff000000000000000000000000000000000000000000000000000000001661233c565b6119d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610732565b6113888165ffffffffffff161115611a14576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff92909216919091179055565b600080600254600114611abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611acf6201518086614618565b611adc906201518061463d565b9050428165ffffffffffff161015611b20576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b2c87836117f0565b60008181526008602052604090205490915060ff16611b9d576040517fcb66c9db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015265ffffffffffff83166024820152604401610732565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906145b3565b9050611c5273ffffffffffffffffffffffffffffffffffffffff89163330896132ce565b611c5c86826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8a16906370a0823190602401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea91906145b3565b1015611d22576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045465ffffffffffff66010000000000008204811691161115611e1657600454600090611d7b90611d689065ffffffffffff660100000000000082048116911661466b565b889065ffffffffffff16620186a0612957565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166000908152600560209081526040808320938e16835292905290812080549293508392909190611de49084906143f2565b90915550611dfe90503384611df9848b6143db565b613447565b82611e0982896143db565b9550955050505050611e2e565b611e21338388613447565b509250839150611e2e9050565b60016002559094909350915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546004546106c49165ffffffffffff90811691166144ef565b6000600254600114611ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b600280556000611ef984846117f0565b60008181526008602052604090205490915060ff16611f1d57611f1d81858561348a565b60016002559392505050565b600254600114611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610732565b6002805582818114611fd3576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561202857612018868683818110611ff357611ff361437d565b9050602002013585858481811061200c5761200c61437d565b90506020020135613168565b612021816144b7565b9050611fd6565b5050600160025550505050565b3373ffffffffffffffffffffffffffffffffffffffff86161480612089575073ffffffffffffffffffffffffffffffffffffffff8516600090815260076020908152604080832033845290915290205460ff165b6120ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610732565b73ffffffffffffffffffffffffffffffffffffffff851660009081526006602090815260408083208684529091528120805484929061212f9084906143db565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906121749084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff808716929088169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b156122b5576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e619061224a9033908a90899089908990600401614692565b6020604051808303816000875af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d919061449a565b7fffffffff0000000000000000000000000000000000000000000000000000000016146122cf565b73ffffffffffffffffffffffffffffffffffffffff841615155b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b5050505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061242057506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242091906145cc565b80612445575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916124e491906146e2565b6000604051808303816000865af19150503d8060008114612521576040519150601f19603f3d011682016040523d82523d6000602084013e612526565b606091505b509150915081801561255057508051158061255057508080602001905181019061255091906145cc565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610732565b60608060008080806125cb62015180886146fe565b905060006125dc8262010bd9614712565b6125e99062253d8c614712565b9050600062023ab16125fc836004614786565b6126069190614842565b905060046126178262023ab1614786565b612622906003614712565b61262c9190614842565b61263690836148aa565b9150600062164b09612649846001614712565b61265590610fa0614786565b61265f9190614842565b9050600461266f826105b5614786565b6126799190614842565b61268390846148aa565b61268e90601f614712565b9250600061098f6126a0856050614786565b6126aa9190614842565b9050600060506126bc8361098f614786565b6126c69190614842565b6126d090866148aa565b90506126dd600b83614842565b94506126ea85600c614786565b6126f5836002614712565b6126ff91906148aa565b9150848361270e6031876148aa565b612719906064614786565b6127239190614712565b61272d9190614712565b9850909650945060009350612752925061274d915061271090508661491e565b613708565b90506000600a841061276c5761276784613708565b612795565b61277584613708565b6040516020016127859190614932565b6040516020818303038152906040525b90506000600a84106127af576127aa84613708565b6127d8565b6127b884613708565b6040516020016127c89190614932565b6040516020818303038152906040525b90508973ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015612825573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261286b9190810190614977565b83838360405160200161288194939291906149e5565b60405160208183030381529060405297508973ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156128dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526129239190810190614977565b8383836040516020016129399493929190614a9a565b60405160208183030381529060405296505050505050509250929050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129ae57600084116129a357600080fd5b508290049050612a22565b8084116129ba57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352047942896040518263ffffffff1660e01b8152600401612a8a91815260200190565b602060405180830381865afa158015612aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acb9190614519565b73ffffffffffffffffffffffffffffffffffffffff1663acc5570c896040518263ffffffff1660e01b8152600401612b0591815260200190565b60c060405180830381865afa158015612b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b469190614536565b5050935093509350935060008588612b5e91906143db565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015612bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf291906145b3565b9050612c1673ffffffffffffffffffffffffffffffffffffffff841633308c6132ce565b612c2089826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015612c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cae91906145b3565b1015612ce6576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851615612f1d57612d2373ffffffffffffffffffffffffffffffffffffffff8416868461244d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db491906145b3565b6040517f4b9de77c000000000000000000000000000000000000000000000000000000008152600481018d905260248101859052604481018b905290915073ffffffffffffffffffffffffffffffffffffffff871690634b9de77c90606401600060405180830381600087803b158015612e2d57600080fd5b505af1158015612e41573d6000803e3d6000fd5b505050508881612e5191906143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015612ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612edf91906145b3565b1015612f17576040517fe2a575ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506130c5565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015612f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fae91906145b3565b9050612fd273ffffffffffffffffffffffffffffffffffffffff861688308c6132ce565b612fdc89826143f2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015613046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306a91906145b3565b10156130a2576040517fd354452400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6130c373ffffffffffffffffffffffffffffffffffffffff8516888561244d565b505b50505050505050505050565b600065ffffffffffff8216156131475762015180806130f042856144ef565b6130fa9190614618565b613104919061463d565b9050600061311284836117f0565b60008181526008602052604090205490915060ff166131365761313681858461348a565b613141868287613447565b50612445565b61244573ffffffffffffffffffffffffffffffffffffffff8416868661244d565b60008281526008602052604090205460ff166131b0576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260086020908152604091829020825160a081018452815460ff80821615158352610100820473ffffffffffffffffffffffffffffffffffffffff1694830194909452750100000000000000000000000000000000000000000081049093169381019390935276010000000000000000000000000000000000000000000090910465ffffffffffff166060830181905260019091015460808301524210156132985760608101516040517f4fb1e97300000000000000000000000000000000000000000000000000000000815265ffffffffffff9091166004820152602401610732565b6132a3338484613868565b60208101516132c99073ffffffffffffffffffffffffffffffffffffffff16338461244d565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161336d91906146e2565b6000604051808303816000865af19150503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b50915091508180156133d95750805115806133d95750808060200190518101906133d991906145cc565b61343f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610732565b505050505050565b600082815260086020526040812060010180548392906134689084906143f2565b925050819055506132c98383836040518060200160405280600081525061389a565b60006134996201518083614618565b6134a6906201518061463d565b9050428165ffffffffffff1610156134ea576040517fe94b8f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052806001151581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135899190614b20565b60ff908116825265ffffffffffff8481166020808501829052600060409586018190528a81526008825285902086518154888401518989015160608b0151909716760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff97909816750100000000000000000000000000000000000000000002969096167fffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff978816610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff941515949094167fffffffffffffffffffffff0000000000000000000000000000000000000000009093169290921792909217161794909417845560809095015160019093019290925591518781529092918616917fd5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27910160405180910390a350505050565b60608160000361374b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613775578061375f816144b7565b915061376e9050600a836146fe565b915061374f565b60008167ffffffffffffffff81111561379057613790613c3a565b6040519080825280601f01601f1916602001820160405280156137ba576020820181803683370190505b509050815b851561385f576137d06001826143db565b905060006137df600a886146fe565b6137ea90600a614b43565b6137f490886143db565b6137ff906030614b80565b905060008160f81b90508084848151811061381c5761381c61437d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613856600a896146fe565b975050506137bf565b50949350505050565b600082815260086020526040812060010180548392906138899084906143db565b909155506132c99050838383613aa0565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320868452909152812080548492906138da9084906143f2565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff86169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a473ffffffffffffffffffffffffffffffffffffffff84163b15613a1a576040517ff23a6e61000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063f23a6e61906139af903390600090899089908990600401614692565b6020604051808303816000875af11580156139ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139f2919061449a565b7fffffffff000000000000000000000000000000000000000000000000000000001614613a34565b73ffffffffffffffffffffffffffffffffffffffff841615155b613a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610732565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020908152604080832085845290915281208054839290613ae09084906143db565b9091555050604080518381526020810183905260009173ffffffffffffffffffffffffffffffffffffffff86169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613b6257600080fd5b50565b8035613b7081613b40565b919050565b60008060408385031215613b8857600080fd5b8235613b9381613b40565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114613b6257600080fd5b600060208284031215613be157600080fd5b8135612a2281613ba1565b65ffffffffffff81168114613b6257600080fd5b600060208284031215613c1257600080fd5b8135612a2281613bec565b600060208284031215613c2f57600080fd5b8135612a2281613b40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cb057613cb0613c3a565b604052919050565b600067ffffffffffffffff821115613cd257613cd2613c3a565b5060051b60200190565b600082601f830112613ced57600080fd5b81356020613d02613cfd83613cb8565b613c69565b82815260059290921b84018101918181019086841115613d2157600080fd5b8286015b84811015613d3c5780358352918301918301613d25565b509695505050505050565b600067ffffffffffffffff821115613d6157613d61613c3a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112613d9e57600080fd5b8135613dac613cfd82613d47565b818152846020838601011115613dc157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215613df657600080fd5b8535613e0181613b40565b94506020860135613e1181613b40565b9350604086013567ffffffffffffffff80821115613e2e57600080fd5b613e3a89838a01613cdc565b94506060880135915080821115613e5057600080fd5b613e5c89838a01613cdc565b93506080880135915080821115613e7257600080fd5b50613e7f88828901613d8d565b9150509295509295909350565b60008060408385031215613e9f57600080fd5b823567ffffffffffffffff811115613eb657600080fd5b8301601f81018513613ec757600080fd5b80356020613ed7613cfd83613cb8565b82815260059290921b83018101918181019088841115613ef657600080fd5b938201935b83851015613f1d578435613f0e81613b40565b82529382019390820190613efb565b9550613f2c9050868201613b65565b93505050509250929050565b600060208284031215613f4a57600080fd5b5035919050565b60005b83811015613f6c578181015183820152602001613f54565b83811115613a9a5750506000910152565b60008151808452613f95816020860160208601613f51565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000613fda6040830185613f7d565b8281036020840152613fec8185613f7d565b95945050505050565b6000806040838503121561400857600080fd5b823567ffffffffffffffff8082111561402057600080fd5b818501915085601f83011261403457600080fd5b81356020614044613cfd83613cb8565b82815260059290921b8401810191818101908984111561406357600080fd5b948201945b8386101561408a57853561407b81613b40565b82529482019490820190614068565b965050860135925050808211156140a057600080fd5b506140ad85828601613cdc565b9150509250929050565b600081518084526020808501945080840160005b838110156140e7578151875295820195908201906001016140cb565b509495945050505050565b602081526000612a2260208301846140b7565b600080600080600060a0868803121561411d57600080fd5b853561412881613b40565b9450602086013561413881613b40565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561416957600080fd5b50508035926020909101359150565b6000806040838503121561418b57600080fd5b823561419681613b40565b915060208301356141a681613bec565b809150509250929050565b8015158114613b6257600080fd5b600080604083850312156141d257600080fd5b82356141dd81613b40565b915060208301356141a6816141b1565b60008060006060848603121561420257600080fd5b833561420d81613b40565b9250602084013561421d81613bec565b929592945050506040919091013590565b6000806040838503121561424157600080fd5b823561424c81613b40565b915060208301356141a681613b40565b60008083601f84011261426e57600080fd5b50813567ffffffffffffffff81111561428657600080fd5b6020830191508360208260051b85010111156142a157600080fd5b9250929050565b600080600080604085870312156142be57600080fd5b843567ffffffffffffffff808211156142d657600080fd5b6142e28883890161425c565b909650945060208701359150808211156142fb57600080fd5b506143088782880161425c565b95989497509550505050565b600080600080600060a0868803121561432c57600080fd5b853561433781613b40565b9450602086013561434781613b40565b93506040860135925060608601359150608086013567ffffffffffffffff81111561437157600080fd5b613e7f88828901613d8d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156143ed576143ed6143ac565b500390565b60008219821115614405576144056143ac565b500190565b60408152600061441d60408301856140b7565b8281036020840152613fec81856140b7565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261446860a08301866140b7565b828103606084015261447a81866140b7565b9050828103608084015261448e8185613f7d565b98975050505050505050565b6000602082840312156144ac57600080fd5b8151612a2281613ba1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144e8576144e86143ac565b5060010190565b600065ffffffffffff808316818516808303821115614510576145106143ac565b01949350505050565b60006020828403121561452b57600080fd5b8151612a2281613b40565b60008060008060008060c0878903121561454f57600080fd5b865161455a81613b40565b602088015190965061456b81613b40565b604088015190955061457c81613b40565b606088015190945061458d81613b40565b608088015190935061459e81613bec565b8092505060a087015190509295509295509295565b6000602082840312156145c557600080fd5b5051919050565b6000602082840312156145de57600080fd5b8151612a22816141b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600065ffffffffffff80841680614631576146316145e9565b92169190910492915050565b600065ffffffffffff80831681851681830481118215151615614662576146626143ac565b02949350505050565b600065ffffffffffff8381169083168181101561468a5761468a6143ac565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526146d760a0830184613f7d565b979650505050505050565b600082516146f4818460208701613f51565b9190910192915050565b60008261470d5761470d6145e9565b500490565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561474c5761474c6143ac565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614780576147806143ac565b50500190565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156147c7576147c76143ac565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614802576148026143ac565b6000871292508782058712848416161561481e5761481e6143ac565b87850587128184161615614834576148346143ac565b505050929093029392505050565b600082614851576148516145e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156148a5576148a56143ac565b500590565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156148e4576148e46143ac565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615614918576149186143ac565b50500390565b60008261492d5761492d6145e9565b500690565b7f300000000000000000000000000000000000000000000000000000000000000081526000825161496a816001850160208701613f51565b9190910160010192915050565b60006020828403121561498957600080fd5b815167ffffffffffffffff8111156149a057600080fd5b8201601f810184136149b157600080fd5b80516149bf613cfd82613d47565b8181528560208385010111156149d457600080fd5b613fec826020830160208601613f51565b600085516149f7818460208a01613f51565b7f20000000000000000000000000000000000000000000000000000000000000009083019081528551614a31816001840160208a01613f51565b8082019150507f2d000000000000000000000000000000000000000000000000000000000000008060018301528551614a71816002850160208a01613f51565b60029201918201528351614a8c816003840160208801613f51565b016003019695505050505050565b60008551614aac818460208a01613f51565b7f2d000000000000000000000000000000000000000000000000000000000000009083019081528551614ae6816001840160208a01613f51565b8551910190614afc816001840160208901613f51565b8451910190614b12816001840160208801613f51565b016001019695505050505050565b600060208284031215614b3257600080fd5b815160ff81168114612a2257600080fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614b7b57614b7b6143ac565b500290565b600060ff821660ff84168060ff03821115614b9d57614b9d6143ac565b01939250505056fea2646970667358221220c10ea4b06a86647b13ebdaa04f3e2482dfa627bbaef97658048bb27d315bd1d064736f6c634300080f0033",
    "sourceMap": "1429:9355:124:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:64:133;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:25:183;;;766:2;751:18;1187:64:133;;;;;;;;4612:340;;;;;;:::i;:::-;;:::i;:::-;;;1411:14:183;;1404:22;1386:41;;1374:2;1359:18;4612:340:133;1246:187:183;3272:31:126;;;;;;;;;;;;;;;1612:14:183;1600:27;;;1582:46;;1570:2;1555:18;3272:31:126;1438:196:183;4098:171:126;;;;;;:::i;:::-;;:::i;:::-;;1944:147:7;;;;;;:::i;:::-;;:::i;2428:1353:133:-;;;;;;:::i;:::-;;:::i;4734:414:126:-;;;;;;:::i;:::-;;:::i;10400:382:124:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3787:636:133:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1772:54:124:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9880:14:183;;9873:22;9855:41;;9944:42;9932:55;;;9927:2;9912:18;;9905:83;10036:4;10024:17;;;10004:18;;;9997:45;;;;10090:14;10078:27;;;10073:2;10058:18;;10051:55;10137:3;10122:19;;10115:35;9842:3;9827:19;1772:54:124;9593:563:183;5399:1838:126;;;;;;:::i;:::-;;:::i;:::-;;;;10932:25:183;;;11005:14;10993:27;;;10988:2;10973:18;;10966:55;10905:18;5399:1838:126;10760:267:183;1504:434:7;;;;;;:::i;:::-;;:::i;6833:123:124:-;;;;;;:::i;:::-;;:::i;4503:193:126:-;;;;;;:::i;:::-;;:::i;551:20:7:-;;;;;;;;;;;;11732:42:183;11720:55;;;11702:74;;11690:2;11675:18;551:20:7;11556:226:183;9971:382:124;;;;;;:::i;:::-;;:::i;1516:203:133:-;;;;;;:::i;:::-;;:::i;3045:25:126:-;;;;;;;;;4307:158;;;;;;:::i;:::-;;:::i;4320:1834:124:-;;;;;;:::i;:::-;;:::i;:::-;;;;13351:25:183;;;13407:2;13392:18;;13385:34;;;;13324:18;4320:1834:124;13177:248:183;5186:127:126;;;;;;:::i;:::-;;:::i;578:26:7:-;;;;;;;;;2919:46:126;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7447:386:124;;;;;;:::i;:::-;;:::i;3310:41:126:-;;3348:3;3310:41;;3438:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1258:68:133;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;7003:351:124;;;;;;:::i;:::-;;:::i;1725:697:133:-;;;;;;:::i;:::-;;:::i;4612:340::-;4688:4;4723:25;;;;;;:100;;-1:-1:-1;4798:25:133;;;;;4723:100;:176;;;-1:-1:-1;4874:25:133;;;;;4723:176;4704:195;4612:340;-1:-1:-1;;4612:340:133:o;4098:171:126:-;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;;;;;;;;;555:1;546:10;;4187:3:126::1;4180:10;::::0;::::1;;4176:45;;;4199:22;;;;;;;;;;;;;;4176:45;4244:10;4231:24;::::0;;;:12:::1;:24;::::0;;;;:31;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;579:6:14;:10;4098:171:126:o;1944:147:7:-;883:33;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;16911:2:183;875:58:7;;;16893:21:183;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;875:58:7;16709:336:183;875:58:7;2018:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2050:34:::1;::::0;2018:16;;2063:10:::1;::::0;2050:34:::1;::::0;2018:5;2050:34:::1;1944:147:::0;:::o;2428:1353:133:-;2643:10;;2702:14;;2689:27;;2681:55;;;;;;;17252:2:183;2681:55:133;;;17234:21:183;17291:2;17271:18;;;17264:30;17330:17;17310:18;;;17303:45;17365:18;;2681:55:133;17050:339:183;2681:55:133;2755:10;:18;;;;;:56;;-1:-1:-1;2777:22:133;;;;;;;:16;:22;;;;;;;;2800:10;2777:34;;;;;;;;;;2755:56;2747:83;;;;;;;17596:2:183;2747:83:133;;;17578:21:183;17635:2;17615:18;;;17608:30;17674:16;17654:18;;;17647:44;17708:18;;2747:83:133;17394:338:183;2747:83:133;2912:10;2932:14;2962:9;2957:347;2977:9;2973:1;:13;2957:347;;;3009:3;3013:1;3009:6;;;;;;;;:::i;:::-;;;;;;;3004:11;;3038:7;3046:1;3038:10;;;;;;;;:::i;:::-;;;;;;;3029:19;;3086:6;3063:9;:15;3073:4;3063:15;;;;;;;;;;;;;;;:19;3079:2;3063:19;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;3106:13:133;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;3127:6;;3106:13;:27;;3127:6;;3106:27;:::i;:::-;;;;-1:-1:-1;;3276:3:133;;2957:347;;;;3351:2;3319:49;;3345:4;3319:49;;3333:10;3319:49;;;3355:3;3360:7;3319:49;;;;;;;:::i;:::-;;;;;;;;3400:14;;;;:19;:332;;3473:203;;3680:52;3473:203;;;3680:52;3473:47;;;;3680:52;;3473:203;;3542:10;;3574:4;;3600:3;;3625:7;;3654:4;;3473:203;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:259;;;3400:332;;;3438:16;;;;;3400:332;3379:395;;;;;;;20159:2:183;3379:395:133;;;20141:21:183;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;3379:395:133;19957:340:183;3379:395:133;2613:1168;;;2428:1353;;;;;:::o;4734:414:126:-;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;4845:14:126;;4831:11:::1;4869:273;4889:3;4885:1;:7;4869:273;;;4913:11;4927:7;4935:1;4927:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4974::::1;4951:12;4966:19:::0;;;:7:::1;:19:::0;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;;;;4927:10;;-1:-1:-1;5011:9:126;;5007:125:::1;;5048:10;5069:1;5040:19:::0;;;:7:::1;:19;::::0;;;;;;;::::1;:26:::0;::::1;::::0;;;;;;;:30;;;;5088:29:::1;::::0;5107:3;5112:4;5088:18:::1;:29::i;:::-;4899:243;;4894:3;;;;:::i;:::-;;;4869:273;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;4734:414:126:o;10400:382:124:-;10557:25;10585:23;;;:13;:23;;;;;;;;10557:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10513:13;10557:51;;;;;;;;;;;;;;;10513:13;;;;10557:25;;;;10663:81;;:17;:81::i;:::-;10618:126;;;;-1:-1:-1;10400:382:124;-1:-1:-1;;;;;10400:382:124:o;3787:636:133:-;3983:13;;4048:10;;3919:25;;3983:13;4032:26;;4024:54;;;;;;;17252:2:183;4024:54:133;;;17234:21:183;17291:2;17271:18;;;17264:30;17330:17;17310:18;;;17303:45;17365:18;;4024:54:133;17050:339:183;4024:54:133;4114:12;4100:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4100:27:133;;4089:38;;4298:9;4293:114;4313:12;4309:1;:16;4293:114;;;4364:9;:20;4374:6;4381:1;4374:9;;;;;;;;:::i;:::-;;;;;;;4364:20;;;;;;;;;;;;;;;:28;4385:3;4389:1;4385:6;;;;;;;;:::i;:::-;;;;;;;4364:28;;;;;;;;;;;;4350:8;4359:1;4350:11;;;;;;;;:::i;:::-;;;;;;;;;;:42;4327:3;;4293:114;;;;3950:473;3787:636;;;;:::o;5399:1838:126:-;5594:7;5603:6;509::14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;6003:23:126::1;::::0;::::1;5621:17;6003:23:::0;;;:12:::1;:23;::::0;;;;;5621:17;;;;;;;;5988:53:::1;::::0;:7;;6003:23:::1;;3348:3;5988:14;:53::i;:::-;6101:23;::::0;::::1;6051:18;6101:23:::0;;;:12:::1;:23;::::0;;;;;6087:11:::1;::::0;5967:74;;-1:-1:-1;6051:18:126;;5967:74;;6072:67:::1;::::0;6087:37:::1;::::0;6101:23:::1;::::0;;::::1;::::0;6087:11:::1;:37;:::i;:::-;6072:7:::0;;:67:::1;;3348:3;6072:14;:67::i;:::-;:92;;;;:::i;:::-;6218:30;::::0;;;;::::1;::::0;::::1;778:25:183::0;;;6051:113:126;;-1:-1:-1;6189:26:126::1;::::0;6218:25:::1;:11;:25;::::0;::::1;::::0;751:18:183;;6218:30:126::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6337:70;::::0;;;;::::1;::::0;::::1;778:25:183::0;;;6189:59:126;;-1:-1:-1;6262:13:126::1;::::0;6337:35:::1;::::0;::::1;::::0;::::1;::::0;751:18:183;;6337:70:126::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6289:118:126;;-1:-1:-1;6289:118:126;-1:-1:-1;6289:118:126;-1:-1:-1;6289:118:126;;-1:-1:-1;6493:21:126::1;::::0;-1:-1:-1;6540:10:126;6517:20:::1;6527:10:::0;6517:7;:20:::1;:::i;:::-;:33;;;;:::i;:::-;6493:57;;6573:10;:23;;;6597:3;6602:13;6617;6573:58;;;;;;;;;;;;;;;;22106:25:183::0;;;22162:2;22147:18;;22140:34;;;;22205:2;22190:18;;22183:34;22094:2;22079:18;;21904:319;6573:58:126::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:67;;6175:467;;;6736:10;6702:7;:18;6710:9;6702:18;;;;;;;;;;;;;;;:30;6721:10;6702:30;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6756:18:126::1;6764:9;6756:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:44;;6790:10;;6756:18;:44:::1;::::0;6790:10;;6756:44:::1;:::i;:::-;::::0;;;-1:-1:-1;6902:63:126::1;::::0;-1:-1:-1;6919:3:126;6924:7;6933:6;6941:23:::1;6954:10:::0;6941;:23:::1;:::i;:::-;6902:16;:63::i;:::-;7070:13;7086:55;7100:10;7112:6;7120:11;7133:7;7086:13;:55::i;:::-;7070:71;;7169:9;7157:39;;7164:3;7157:39;7180:7;7189:6;7157:39;;;;;;13351:25:183::0;;;13407:2;13392:18;;13385:34;13339:2;13324:18;;13177:248;7157:39:126::1;;;;;;;;588:1:14::0;579:6;:10;7215:6:126;;;;-1:-1:-1;5399:1838:126;;-1:-1:-1;;;;;;;;;;;5399:1838:126:o;1504:434:7:-;1775:5;;;;1761:10;:19;;:76;;-1:-1:-1;1784:9:7;;:53;;;;;1802:10;1784:53;;;22678:34:183;1822:4:7;22728:18:183;;;22721:43;1784:9:7;1829:7;;;22780:18:183;;;22773:107;1784:9:7;;;;;:17;;22590:18:183;;1784:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:85;;;;;;1849:9;:24;;;;;;;;;;;;;1889:42;;1906:10;;1889:42;;-1:-1:-1;;1889:42:7;1504:434;:::o;6833:123:124:-;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;6923:26:124::1;6931:8:::0;6941:7;6923::::1;:26::i;:::-;-1:-1:-1::0;;588:1:14;579:6;:10;6833:123:124:o;4503:193:126:-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;16911:2:183;875:58:7;;;16893:21:183;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;875:58:7;16709:336:183;875:58:7;4608:11:126::1;::::0;::::1;::::0;;::::1;4596:23:::0;;::::1;;4592:58;;;4628:22;;;;;;;;;;;;;;4592:58;4660:17;:29:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4503:193::o;9971:382:124:-;10056:7;;10273:11;10286:24;10303:6;10286:7;:24;:::i;:::-;10256:55;;;;;;;;23720:2:183;23716:15;;;;23733:66;23712:88;23700:101;;23839:3;23835:16;23853:66;23831:89;23826:2;23817:12;;23810:111;23946:2;23937:12;;23530:425;10256:55:124;;;;;;;;;;;;;;10246:66;;10256:55;10246:66;;;;;9971:382;-1:-1:-1;;;;9971:382:124:o;1516:203:133:-;1618:10;1601:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;1666:46;;1386:41:183;;;1601:38:133;;1618:10;1666:46;;1359:18:183;1666:46:133;;;;;;;1516:203;;:::o;4307:158:126:-;883:33:7;896:10;908:7;;;;883:12;:33::i;:::-;875:58;;;;;;;16911:2:183;875:58:7;;;16893:21:183;16950:2;16930:18;;;16923:30;16989:14;16969:18;;;16962:42;17021:18;;875:58:7;16709:336:183;875:58:7;4396:3:126::1;4389:4;:10;;;4385:45;;;4408:22;;;;;;;;;;;;;;4385:45;4440:11;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4307:158::o;4320:1834:124:-;4458:7;4467;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;4640:13:124::1;4663:16;4673:6;4663:7:::0;:16:::1;:::i;:::-;4656:33;::::0;4683:6:::1;4656:33;:::i;:::-;4640:49;;4756:15;4747:6;:24;;;4743:59;;;4780:22;;;;;;;;;;;;;;4743:59;4813:15;4831:31;4842:11;4855:6;4831:10;:31::i;:::-;4939:22;::::0;;;:13:::1;:22;::::0;;;;:29;4813:49;;-1:-1:-1;4939:29:124::1;;4934:88;;4977:45;::::0;::::1;::::0;;24448:42:183;24436:55;;4977:45:124::1;::::0;::::1;24418:74:183::0;24540:14;24528:27;;24508:18;;;24501:55;24391:18;;4977:45:124::1;24231:331:183::0;4934:88:124::1;5243:36;::::0;;;;5273:4:::1;5243:36;::::0;::::1;11702:74:183::0;5222:18:124::1;::::0;5243:21:::1;::::0;::::1;::::0;::::1;::::0;11675:18:183;;5243:36:124::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5222:57:::0;-1:-1:-1;5289:64:124::1;:28;::::0;::::1;5318:10;5338:4;5345:7:::0;5289:28:::1;:64::i;:::-;5406:20;5419:7:::0;5406:10;:20:::1;:::i;:::-;5367:36;::::0;;;;5397:4:::1;5367:36;::::0;::::1;11702:74:183::0;5367:21:124::1;::::0;::::1;::::0;::::1;::::0;11675:18:183;;5367:36:124::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;5363:109;;;5447:25;;;;;;;;;;;;;;5363:109;5627:17;::::0;::::1;::::0;;::::1;::::0;::::1;5613:11:::0;::::1;:31;5609:539;;;5745:17;::::0;5696::::1;::::0;5716:61:::1;::::0;5731:31:::1;::::0;5745:17:::1;::::0;;::::1;::::0;::::1;::::0;5731:11:::1;:31;:::i;:::-;5716:7:::0;;:61:::1;;3348:3:126;5716:14:124;:61::i;:::-;5791:18;5799:9;5791:18:::0;::::1;;::::0;;;:7:::1;:18;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:44;;5696:81;;-1:-1:-1;5696:81:124;;5791:31;;:18;:44:::1;::::0;5696:81;;5791:44:::1;:::i;:::-;::::0;;;-1:-1:-1;5886:52:124::1;::::0;-1:-1:-1;5897:10:124::1;5909:7:::0;5918:19:::1;5928:9:::0;5918:7;:19:::1;:::i;:::-;5886:10;:52::i;:::-;5961:7:::0;5970:19:::1;5980:9:::0;5970:7;:19:::1;:::i;:::-;5953:37;;;;;;;;;;5609:539;6057:40;6068:10;6080:7;6089;6057:10;:40::i;:::-;-1:-1:-1::0;6120:7:124;-1:-1:-1;6129:7:124;;-1:-1:-1;6112:25:124::1;::::0;-1:-1:-1;6112:25:124::1;567:1:14;588::::0;579:6;:10;4320:1834:124;;;;-1:-1:-1;4320:1834:124;-1:-1:-1;;4320:1834:124:o;5186:127:126:-;5283:23;;;5244:6;5283:23;;;:12;:23;;;;;;5269:11;;:37;;5283:23;;;;;5269:11;:37;:::i;7447:386:124:-;7570:7;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;7593:15:124::1;7611:32;7622:11:::0;7635:7;7611:10:::1;:32::i;:::-;7709:22;::::0;;;:13:::1;:22;::::0;;;;:29;7593:50;;-1:-1:-1;7709:29:124::1;;7704:99;;7754:38;7762:7;7771:11;7784:7;7754;:38::i;:::-;588:1:14::0;579:6;:10;7819:7:124;7447:386;-1:-1:-1;;;7447:386:124:o;7003:351::-;509:6:14;;519:1;509:11;501:34;;;;;;;16572:2:183;501:34:14;;;16554:21:183;16611:2;16591:18;;;16584:30;16650:12;16630:18;;;16623:40;16680:18;;501:34:14;16370:334:183;501:34:14;555:1;546:10;;7166:9:124;7196:22;;::::1;7192:57;;7227:22;;;;;;;;;;;;;;7192:57;7264:9;7259:89;7279:3;7275:1;:7;7259:89;;;7303:34;7311:9;;7321:1;7311:12;;;;;;;:::i;:::-;;;;;;;7325:8;;7334:1;7325:11;;;;;;;:::i;:::-;;;;;;;7303:7;:34::i;:::-;7284:3;::::0;::::1;:::i;:::-;;;7259:89;;;-1:-1:-1::0;;588:1:14;579:6;:10;-1:-1:-1;;;;7003:351:124:o;1725:697:133:-;1903:10;:18;;;;;:56;;-1:-1:-1;1925:22:133;;;;;;;:16;:22;;;;;;;;1948:10;1925:34;;;;;;;;;;1903:56;1895:83;;;;;;;17596:2:183;1895:83:133;;;17578:21:183;17635:2;17615:18;;;17608:30;17674:16;17654:18;;;17647:44;17708:18;;1895:83:133;17394:338:183;1895:83:133;1989:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;2012:6;;1989:15;:29;;2012:6;;1989:29;:::i;:::-;;;;-1:-1:-1;;2028:13:133;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;2049:6;;2028:13;:27;;2049:6;;2028:27;:::i;:::-;;;;-1:-1:-1;;2071:48:133;;;13351:25:183;;;13407:2;13392:18;;13385:34;;;2071:48:133;;;;;;;;;2086:10;;2071:48;;13324:18:183;2071:48:133;;;;;;;2151:14;;;;:19;:222;;2224:78;;2326:47;2224:78;;;2326:47;2224:42;;;;2326:47;;2224:78;;2267:10;;2279:4;;2285:2;;2289:6;;2297:4;;2224:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:149;;;2151:222;;;2189:16;;;;;2151:222;2130:285;;;;;;;20159:2:183;2130:285:133;;;20141:21:183;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;2130:285:133;19957:340:183;2130:285:133;1725:697;;;;;:::o;958:540:7:-;1078:9;;1045:4;;1078:9;;1396:27;;;;;:77;;-1:-1:-1;1427:46:7;;;;;:12;22696:15:183;;;1427:46:7;;;22678:34:183;1454:4:7;22728:18:183;;;22721:43;22812:66;22800:79;;22780:18;;;22773:107;1427:12:7;;;;;22590:18:183;;1427:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:96;;;-1:-1:-1;1486:5:7;;;1478:13;;;1486:5;;1478:13;1395:96;1388:103;958:540;-1:-1:-1;;;;958:540:7:o;784:353:89:-;965:59;;;932:19;25578:55:183;;;965:59:89;;;25560:74:183;25650:18;;;;25643:34;;;965:59:89;;;;;;;;;;25533:18:183;;;;965:59:89;;;;;;;;;988:23;965:59;;;932:102;;-1:-1:-1;;;;932:19:89;;;;:102;;965:59;932:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:138;;;;1053:7;:57;;;;-1:-1:-1;1065:11:89;;:16;;:44;;;1096:4;1085:24;;;;;;;;;;;;:::i;:::-;1045:85;;;;;;;26169:2:183;1045:85:89;;;26151:21:183;26208:2;26188:18;;;26181:30;26247:17;26227:18;;;26220:45;26282:18;;1045:85:89;25967:339:183;10985:1744:126;11095:18;;11373:12;;;;11476:16;11486:6;11476:7;:16;:::i;:::-;11453:40;-1:-1:-1;11508:11:126;11522:14;11453:40;11531:5;11522:14;:::i;:::-;:24;;11539:7;11522:24;:::i;:::-;11508:38;-1:-1:-1;11588:11:126;11615:6;11603:8;11508:38;11603:1;:8;:::i;:::-;11602:19;;;;:::i;:::-;11588:33;-1:-1:-1;11671:1:126;11650:13;11588:33;11650:6;:13;:::i;:::-;:17;;11666:1;11650:17;:::i;:::-;11649:23;;;;:::i;:::-;11642:30;;:4;:30;:::i;:::-;11635:37;-1:-1:-1;11686:12:126;11723:7;11710:8;11635:37;11717:1;11710:8;:::i;:::-;11702:17;;:4;:17;:::i;:::-;11701:29;;;;:::i;:::-;11686:44;-1:-1:-1;11775:1:126;11759:12;11686:44;11759:4;:12;:::i;:::-;11758:18;;;;:::i;:::-;11751:25;;:4;:25;:::i;:::-;:30;;11779:2;11751:30;:::i;:::-;11744:37;-1:-1:-1;11795:13:126;11825:4;11812:9;11744:37;11812:2;:9;:::i;:::-;11811:18;;;;:::i;:::-;11795:34;-1:-1:-1;11843:11:126;11882:2;11865:13;11795:34;11865:4;:13;:::i;:::-;11864:20;;;;:::i;:::-;11857:27;;:4;:27;:::i;:::-;11843:41;-1:-1:-1;11905:11:126;11914:2;11905:6;:11;:::i;:::-;11898:18;-1:-1:-1;11952:9:126;11898:18;11952:2;:9;:::i;:::-;11939:10;:6;11948:1;11939:10;:::i;:::-;:22;;;;:::i;:::-;11930:31;-1:-1:-1;12011:4:126;12003:5;11990:9;11997:2;11990:4;:9;:::i;:::-;11983:17;;:3;:17;:::i;:::-;:25;;;;:::i;:::-;:32;;;;:::i;:::-;11975:40;-1:-1:-1;12081:6:126;;-1:-1:-1;12116:4:126;-1:-1:-1;12142:21:126;;-1:-1:-1;12166:23:126;;-1:-1:-1;12176:12:126;;-1:-1:-1;12183:5:126;;-1:-1:-1;11975:40:126;12176:12;:::i;:::-;12166:9;:23::i;:::-;12142:47;;12199:22;12232:2;12224:5;:10;:103;;12311:16;12321:5;12311:9;:16::i;:::-;12224:103;;;12278:16;12288:5;12278:9;:16::i;:::-;12256:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;12224:103;12199:128;;12337:20;12366:2;12360:3;:8;:97;;12443:14;12453:3;12443:9;:14::i;:::-;12360:97;;;12412:14;12422:3;12412:9;:14::i;:::-;12390:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;12360:97;12337:120;;12554:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12579:7;12593:8;12608:6;12537:78;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12510:115;;12668:11;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12695:7;12704:8;12714:6;12651:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12635:87;;11141:1588;;;;;;10985:1744;;;;;:::o;742:4147:86:-;854:14;;;1420:6;1417:1;1414;1407:20;1460:1;1457;1453:9;1444:18;;1515:5;1511:2;1508:13;1500:5;1496:2;1492:14;1488:34;1479:43;;;1616:5;1625:1;1616:10;1612:203;;1668:1;1654:11;:15;1646:24;;;;;;-1:-1:-1;1729:23:86;;;;-1:-1:-1;1787:13:86;;1612:203;1954:5;1940:11;:19;1932:28;;;;;;2261:17;2345:11;2342:1;2339;2332:25;2753:31;;2787:1;2753:35;;;2752:51;;2909:22;;;;;2537:21;;;3053:16;;;2490:20;;;;2479:32;;;2737:12;3321;;;3317:23;;;;3313:31;;;3380:12;;;;3371:21;;;;3765:1;:15;;3784:1;3764:21;;;4027:17;;;4023:21;;4016:28;4089:17;;;4085:21;;4078:28;4152:17;;;4148:21;;4141:28;4215:17;;;4211:21;;4204:28;4278:17;;;4274:21;;4267:28;4342:17;;;4338:21;;;4331:28;4834:11;;-1:-1:-1;;742:4147:86;;;;;;:::o;7325:2480:126:-;7510:13;7525:20;7547:17;7566:16;7590:11;:38;;;7629:3;7590:43;;;;;;;;;;;;;778:25:183;;766:2;751:18;;632:177;7590:43:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;7672:3;7590:86;;;;;;;;;;;;;778:25:183;;766:2;751:18;;632:177;7590:86:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7509:167;;;;;;;;;;7727:21;7761:8;7751:7;:18;;;;:::i;:::-;8047:35;;;;;8076:4;8047:35;;;11702:74:183;7727:42:126;;-1:-1:-1;8024:20:126;;8047;;;;;;11675:18:183;;8047:35:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8024:58;-1:-1:-1;8092:63:126;:27;;;8120:10;8140:4;8147:7;8092:27;:63::i;:::-;8207:22;8222:7;8207:12;:22;:::i;:::-;8169:35;;;;;8198:4;8169:35;;;11702:74:183;8169:20:126;;;;;;11675:18:183;;8169:35:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;8165:110;;;8250:25;;;;;;;;;;;;;;8165:110;8466:26;;;;8462:1337;;8604:52;:23;;;8628:12;8642:13;8604:23;:52::i;:::-;8773:36;;;;;8803:4;8773:36;;;11702:74:183;8749:21:126;;8773;;;;;;11675:18:183;;8773:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8823:65;;;;;;;;22106:25:183;;;22147:18;;;22140:34;;;22190:18;;;22183:34;;;8749:60:126;;-1:-1:-1;8823:36:126;;;;;;22079:18:183;;8823:65:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9074:7;9058:13;:23;;;;:::i;:::-;9018:36;;;;;9048:4;9018:36;;;11702:74:183;9018:21:126;;;;;;11675:18:183;;9018:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9014:117;;;9107:24;;;;;;;;;;;;;;9014:117;8494:648;8462:1337;;;9487:36;;;;;9517:4;9487:36;;;11702:74:183;9463:21:126;;9487;;;;;;11675:18:183;;9487:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9463:60;-1:-1:-1;9537:59:126;:28;;;9566:5;9581:4;9588:7;9537:28;:59::i;:::-;9654:23;9670:7;9654:13;:23;:::i;:::-;9614:36;;;;;9644:4;9614:36;;;11702:74:183;9614:21:126;;;;;;11675:18:183;;9614:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;9610:118;;;9703:25;;;;;;;;;;;;;;9610:118;9743:45;:23;;;9767:5;9774:13;9743:23;:45::i;:::-;9148:651;8462:1337;7463:2342;;;;;;7325:2480;;;;:::o;2515:1712:124:-;2677:13;3392;;;;3388:833;;3578:6;;3515:34;3533:15;3515:8;:34;:::i;:::-;3514:53;;;;:::i;:::-;3513:72;;;;:::i;:::-;3504:81;;3735:15;3753:32;3764:12;3778:6;3753:10;:32::i;:::-;3866:22;;;;:13;:22;;;;;:29;3735:50;;-1:-1:-1;3866:29:124;;3861:107;;3915:38;3923:7;3932:12;3946:6;3915:7;:38::i;:::-;4026:40;4037:10;4049:7;4058;4026:10;:40::i;:::-;3407:670;3388:833;;;4164:46;:25;;;4190:10;4202:7;4164:25;:46::i;6200:586::-;6320:23;;;;:13;:23;;;;;:30;;;6315:66;;6359:22;;;;;;;;;;;;;;6315:66;6424:25;6452:23;;;:13;:23;;;;;;;;;6424:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6534:15;:29;6530:77;;;6595:11;;;;6572:35;;;;;1612:14:183;1600:27;;;6572:35:124;;;1582:46:183;1555:18;;6572:35:124;1438:196:183;6530:77:124;6679:41;6690:10;6702:8;6712:7;6679:10;:41::i;:::-;6730:15;;;;:49;;:28;;6759:10;6771:7;6730:28;:49::i;:::-;6261:525;6200:586;;:::o;384:394:89:-;591:69;;;558:19;31912:15:183;;;591:69:89;;;31894:34:183;31964:15;;;31944:18;;;31937:43;31996:18;;;;31989:34;;;591:69:89;;;;;;;;;;31806:18:183;;;;591:69:89;;;;;;;;;614:27;591:69;;;558:112;;-1:-1:-1;;;;558:19:89;;;;:112;;591:69;558:112;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:148;;;;689:7;:57;;;;-1:-1:-1;701:11:89;;:16;;:44;;;732:4;721:24;;;;;;;;;;;;:::i;:::-;681:90;;;;;;;32236:2:183;681:90:89;;;32218:21:183;32275:2;32255:18;;;32248:30;32314:22;32294:18;;;32287:50;32354:18;;681:90:89;32034:344:183;681:90:89;512:266;;384:394;;;;:::o;9221:215:124:-;9338:23;;;;:13;:23;;;;;:30;;:41;;9372:7;;9338:23;:41;;9372:7;;9338:41;:::i;:::-;;;;;;;;9389:40;9395:3;9400:8;9410:7;9419:9;;;;;;;;;;;;9389:5;:40::i;8254:734::-;8527:13;8550:16;8560:6;8550:7;:16;:::i;:::-;8543:33;;8570:6;8543:33;:::i;:::-;8527:49;;8652:15;8642:6;8634:15;;:33;8630:68;;;8676:22;;;;;;;;;;;;;;8630:68;8767:144;;;;;;;;8794:4;8767:144;;;;;;8812:11;8767:144;;;;;;8843:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8767:144;;;;;;;;;;;;;;;;;-1:-1:-1;8767:144:124;;;;;;;8741:23;;;:13;:23;;;;;:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8741:170:124;;;;;;;8927:54;;778:25:183;;;8767:144:124;;8927:54;;;;;;751:18:183;8927:54:124;;;;;;;8363:625;8254:734;;;:::o;12947:556:126:-;13001:13;13030:2;13036:1;13030:7;13026:48;;-1:-1:-1;;13053:10:126;;;;;;;;;;;;;;;;;;12947:556::o;13026:48::-;13095:2;13083:9;13128:66;13135:6;;13128:66;;13157:5;;;;:::i;:::-;;-1:-1:-1;13176:7:126;;-1:-1:-1;13181:2:126;13176:7;;:::i;:::-;;;13128:66;;;13203:17;13233:3;13223:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13223:14:126;-1:-1:-1;13203:34:126;-1:-1:-1;13259:3:126;13272:196;13279:7;;13272:196;;13306:5;13310:1;13306;:5;:::i;:::-;13302:9;-1:-1:-1;13325:10:126;13356:7;13361:2;13356;:7;:::i;:::-;13355:14;;13367:2;13355:14;:::i;:::-;13350:19;;:2;:19;:::i;:::-;13339:31;;:2;:31;:::i;:::-;13325:46;;13385:9;13404:4;13397:12;;13385:24;;13433:2;13423:4;13428:1;13423:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;13449:8:126;13455:2;13449:8;;:::i;:::-;;;13288:180;;13272:196;;;-1:-1:-1;13491:4:126;12947:556;-1:-1:-1;;;;12947:556:126:o;9670:208:124:-;9789:23;;;;:13;:23;;;;;:30;;:41;;9823:7;;9789:23;:41;;9823:7;;9789:41;:::i;:::-;;;;-1:-1:-1;9840:31:124;;-1:-1:-1;9846:5:124;9853:8;9863:7;9840:5;:31::i;5147:635:133:-;5278:13;;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5299:6;;5278:13;:27;;5299:6;;5278:27;:::i;:::-;;;;-1:-1:-1;;5321:54:133;;;13351:25:183;;;13407:2;13392:18;;13385:34;;;5321:54:133;;;;5356:1;;5336:10;;5321:54;;13324:18:183;5321:54:133;;;;;;;5407:14;;;;:19;:326;;5480:202;;5686:47;5480:202;;;5686:47;5480:42;;;;5686:47;;5480:202;;5544:10;;5584:1;;5608:2;;5632:6;;5660:4;;5480:202;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:253;;;5407:326;;;5445:16;;;;;5407:326;5386:389;;;;;;;20159:2:183;5386:389:133;;;20141:21:183;20198:2;20178:18;;;20171:30;20237:18;20217;;;20210:46;20273:18;;5386:389:133;19957:340:183;5386:389:133;5147:635;;;;:::o;7411:214::-;7517:15;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;:29;;7540:6;;7517:15;:29;;7540:6;;7517:29;:::i;:::-;;;;-1:-1:-1;;7562:56:133;;;13351:25:183;;;13407:2;13392:18;;13385:34;;;7603:1:133;;7562:56;;;;7577:10;;7562:56;;13324:18:183;7562:56:133;;;;;;;7411:214;;;:::o;14:154:183:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:134::-;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;617:2;602:18;;;;589:32;;-1:-1:-1;;;312:315:183:o;814:177::-;899:66;892:5;888:78;881:5;878:89;868:117;;981:1;978;971:12;996:245;1054:6;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;1162:9;1149:23;1181:30;1205:5;1181:30;:::i;1639:125::-;1724:14;1717:5;1713:26;1706:5;1703:37;1693:65;;1754:1;1751;1744:12;1769:245;1827:6;1880:2;1868:9;1859:7;1855:23;1851:32;1848:52;;;1896:1;1893;1886:12;1848:52;1935:9;1922:23;1954:30;1978:5;1954:30;:::i;2019:247::-;2078:6;2131:2;2119:9;2110:7;2106:23;2102:32;2099:52;;;2147:1;2144;2137:12;2099:52;2186:9;2173:23;2205:31;2230:5;2205:31;:::i;2271:184::-;2323:77;2320:1;2313:88;2420:4;2417:1;2410:15;2444:4;2441:1;2434:15;2460:334;2531:2;2525:9;2587:2;2577:13;;2592:66;2573:86;2561:99;;2690:18;2675:34;;2711:22;;;2672:62;2669:88;;;2737:18;;:::i;:::-;2773:2;2766:22;2460:334;;-1:-1:-1;2460:334:183:o;2799:183::-;2859:4;2892:18;2884:6;2881:30;2878:56;;;2914:18;;:::i;:::-;-1:-1:-1;2959:1:183;2955:14;2971:4;2951:25;;2799:183::o;2987:662::-;3041:5;3094:3;3087:4;3079:6;3075:17;3071:27;3061:55;;3112:1;3109;3102:12;3061:55;3148:6;3135:20;3174:4;3198:60;3214:43;3254:2;3214:43;:::i;:::-;3198:60;:::i;:::-;3292:15;;;3378:1;3374:10;;;;3362:23;;3358:32;;;3323:12;;;;3402:15;;;3399:35;;;3430:1;3427;3420:12;3399:35;3466:2;3458:6;3454:15;3478:142;3494:6;3489:3;3486:15;3478:142;;;3560:17;;3548:30;;3598:12;;;;3511;;3478:142;;;-1:-1:-1;3638:5:183;2987:662;-1:-1:-1;;;;;;2987:662:183:o;3654:245::-;3702:4;3735:18;3727:6;3724:30;3721:56;;;3757:18;;:::i;:::-;-1:-1:-1;3814:2:183;3802:15;3819:66;3798:88;3888:4;3794:99;;3654:245::o;3904:462::-;3946:5;3999:3;3992:4;3984:6;3980:17;3976:27;3966:55;;4017:1;4014;4007:12;3966:55;4053:6;4040:20;4084:48;4100:31;4128:2;4100:31;:::i;4084:48::-;4157:2;4148:7;4141:19;4203:3;4196:4;4191:2;4183:6;4179:15;4175:26;4172:35;4169:55;;;4220:1;4217;4210:12;4169:55;4285:2;4278:4;4270:6;4266:17;4259:4;4250:7;4246:18;4233:55;4333:1;4308:16;;;4326:4;4304:27;4297:38;;;;4312:7;3904:462;-1:-1:-1;;;3904:462:183:o;4371:1071::-;4525:6;4533;4541;4549;4557;4610:3;4598:9;4589:7;4585:23;4581:33;4578:53;;;4627:1;4624;4617:12;4578:53;4666:9;4653:23;4685:31;4710:5;4685:31;:::i;:::-;4735:5;-1:-1:-1;4792:2:183;4777:18;;4764:32;4805:33;4764:32;4805:33;:::i;:::-;4857:7;-1:-1:-1;4915:2:183;4900:18;;4887:32;4938:18;4968:14;;;4965:34;;;4995:1;4992;4985:12;4965:34;5018:61;5071:7;5062:6;5051:9;5047:22;5018:61;:::i;:::-;5008:71;;5132:2;5121:9;5117:18;5104:32;5088:48;;5161:2;5151:8;5148:16;5145:36;;;5177:1;5174;5167:12;5145:36;5200:63;5255:7;5244:8;5233:9;5229:24;5200:63;:::i;:::-;5190:73;;5316:3;5305:9;5301:19;5288:33;5272:49;;5346:2;5336:8;5333:16;5330:36;;;5362:1;5359;5352:12;5330:36;;5385:51;5428:7;5417:8;5406:9;5402:24;5385:51;:::i;:::-;5375:61;;;4371:1071;;;;;;;;:::o;5447:1057::-;5555:6;5563;5616:2;5604:9;5595:7;5591:23;5587:32;5584:52;;;5632:1;5629;5622:12;5584:52;5672:9;5659:23;5705:18;5697:6;5694:30;5691:50;;;5737:1;5734;5727:12;5691:50;5760:22;;5813:4;5805:13;;5801:27;-1:-1:-1;5791:55:183;;5842:1;5839;5832:12;5791:55;5878:2;5865:16;5900:4;5924:60;5940:43;5980:2;5940:43;:::i;5924:60::-;6018:15;;;6100:1;6096:10;;;;6088:19;;6084:28;;;6049:12;;;;6124:19;;;6121:39;;;6156:1;6153;6146:12;6121:39;6180:11;;;;6200:217;6216:6;6211:3;6208:15;6200:217;;;6296:3;6283:17;6313:31;6338:5;6313:31;:::i;:::-;6357:18;;6233:12;;;;6395;;;;6200:217;;;6436:5;-1:-1:-1;6460:38:183;;-1:-1:-1;6479:18:183;;;6460:38;:::i;:::-;6450:48;;;;;5447:1057;;;;;:::o;6509:180::-;6568:6;6621:2;6609:9;6600:7;6596:23;6592:32;6589:52;;;6637:1;6634;6627:12;6589:52;-1:-1:-1;6660:23:183;;6509:180;-1:-1:-1;6509:180:183:o;6694:258::-;6766:1;6776:113;6790:6;6787:1;6784:13;6776:113;;;6866:11;;;6860:18;6847:11;;;6840:39;6812:2;6805:10;6776:113;;;6907:6;6904:1;6901:13;6898:48;;;-1:-1:-1;;6942:1:183;6924:16;;6917:27;6694:258::o;6957:317::-;6999:3;7037:5;7031:12;7064:6;7059:3;7052:19;7080:63;7136:6;7129:4;7124:3;7120:14;7113:4;7106:5;7102:16;7080:63;:::i;:::-;7188:2;7176:15;7193:66;7172:88;7163:98;;;;7263:4;7159:109;;6957:317;-1:-1:-1;;6957:317:183:o;7279:383::-;7476:2;7465:9;7458:21;7439:4;7502:45;7543:2;7532:9;7528:18;7520:6;7502:45;:::i;:::-;7595:9;7587:6;7583:22;7578:2;7567:9;7563:18;7556:50;7623:33;7649:6;7641;7623:33;:::i;:::-;7615:41;7279:383;-1:-1:-1;;;;;7279:383:183:o;7667:1215::-;7785:6;7793;7846:2;7834:9;7825:7;7821:23;7817:32;7814:52;;;7862:1;7859;7852:12;7814:52;7902:9;7889:23;7931:18;7972:2;7964:6;7961:14;7958:34;;;7988:1;7985;7978:12;7958:34;8026:6;8015:9;8011:22;8001:32;;8071:7;8064:4;8060:2;8056:13;8052:27;8042:55;;8093:1;8090;8083:12;8042:55;8129:2;8116:16;8151:4;8175:60;8191:43;8231:2;8191:43;:::i;8175:60::-;8269:15;;;8351:1;8347:10;;;;8339:19;;8335:28;;;8300:12;;;;8375:19;;;8372:39;;;8407:1;8404;8397:12;8372:39;8431:11;;;;8451:217;8467:6;8462:3;8459:15;8451:217;;;8547:3;8534:17;8564:31;8589:5;8564:31;:::i;:::-;8608:18;;8484:12;;;;8646;;;;8451:217;;;8687:5;-1:-1:-1;;8730:18:183;;8717:32;;-1:-1:-1;;8761:16:183;;;8758:36;;;8790:1;8787;8780:12;8758:36;;8813:63;8868:7;8857:8;8846:9;8842:24;8813:63;:::i;:::-;8803:73;;;7667:1215;;;;;:::o;8887:435::-;8940:3;8978:5;8972:12;9005:6;9000:3;8993:19;9031:4;9060:2;9055:3;9051:12;9044:19;;9097:2;9090:5;9086:14;9118:1;9128:169;9142:6;9139:1;9136:13;9128:169;;;9203:13;;9191:26;;9237:12;;;;9272:15;;;;9164:1;9157:9;9128:169;;;-1:-1:-1;9313:3:183;;8887:435;-1:-1:-1;;;;;8887:435:183:o;9327:261::-;9506:2;9495:9;9488:21;9469:4;9526:56;9578:2;9567:9;9563:18;9555:6;9526:56;:::i;10161:594::-;10256:6;10264;10272;10280;10288;10341:3;10329:9;10320:7;10316:23;10312:33;10309:53;;;10358:1;10355;10348:12;10309:53;10397:9;10384:23;10416:31;10441:5;10416:31;:::i;:::-;10466:5;-1:-1:-1;10523:2:183;10508:18;;10495:32;10536:33;10495:32;10536:33;:::i;:::-;10161:594;;10588:7;;-1:-1:-1;;;;10642:2:183;10627:18;;10614:32;;10693:2;10678:18;;10665:32;;10744:3;10729:19;;;10716:33;;-1:-1:-1;10161:594:183:o;11303:248::-;11371:6;11379;11432:2;11420:9;11411:7;11407:23;11403:32;11400:52;;;11448:1;11445;11438:12;11400:52;-1:-1:-1;;11471:23:183;;;11541:2;11526:18;;;11513:32;;-1:-1:-1;11303:248:183:o;11787:401::-;11869:6;11877;11930:2;11918:9;11909:7;11905:23;11901:32;11898:52;;;11946:1;11943;11936:12;11898:52;11985:9;11972:23;12004:31;12029:5;12004:31;:::i;:::-;12054:5;-1:-1:-1;12111:2:183;12096:18;;12083:32;12124;12083;12124;:::i;:::-;12175:7;12165:17;;;11787:401;;;;;:::o;12193:118::-;12279:5;12272:13;12265:21;12258:5;12255:32;12245:60;;12301:1;12298;12291:12;12316:382;12381:6;12389;12442:2;12430:9;12421:7;12417:23;12413:32;12410:52;;;12458:1;12455;12448:12;12410:52;12497:9;12484:23;12516:31;12541:5;12516:31;:::i;:::-;12566:5;-1:-1:-1;12623:2:183;12608:18;;12595:32;12636:30;12595:32;12636:30;:::i;12703:469::-;12794:6;12802;12810;12863:2;12851:9;12842:7;12838:23;12834:32;12831:52;;;12879:1;12876;12869:12;12831:52;12918:9;12905:23;12937:31;12962:5;12937:31;:::i;:::-;12987:5;-1:-1:-1;13044:2:183;13029:18;;13016:32;13057;13016;13057;:::i;:::-;12703:469;;13108:7;;-1:-1:-1;;;13162:2:183;13147:18;;;;13134:32;;12703:469::o;13680:403::-;13763:6;13771;13824:2;13812:9;13803:7;13799:23;13795:32;13792:52;;;13840:1;13837;13830:12;13792:52;13879:9;13866:23;13898:31;13923:5;13898:31;:::i;:::-;13948:5;-1:-1:-1;14005:2:183;13990:18;;13977:32;14018:33;13977:32;14018:33;:::i;14481:367::-;14544:8;14554:6;14608:3;14601:4;14593:6;14589:17;14585:27;14575:55;;14626:1;14623;14616:12;14575:55;-1:-1:-1;14649:20:183;;14692:18;14681:30;;14678:50;;;14724:1;14721;14714:12;14678:50;14761:4;14753:6;14749:17;14737:29;;14821:3;14814:4;14804:6;14801:1;14797:14;14789:6;14785:27;14781:38;14778:47;14775:67;;;14838:1;14835;14828:12;14775:67;14481:367;;;;;:::o;14853:773::-;14975:6;14983;14991;14999;15052:2;15040:9;15031:7;15027:23;15023:32;15020:52;;;15068:1;15065;15058:12;15020:52;15108:9;15095:23;15137:18;15178:2;15170:6;15167:14;15164:34;;;15194:1;15191;15184:12;15164:34;15233:70;15295:7;15286:6;15275:9;15271:22;15233:70;:::i;:::-;15322:8;;-1:-1:-1;15207:96:183;-1:-1:-1;15410:2:183;15395:18;;15382:32;;-1:-1:-1;15426:16:183;;;15423:36;;;15455:1;15452;15445:12;15423:36;;15494:72;15558:7;15547:8;15536:9;15532:24;15494:72;:::i;:::-;14853:773;;;;-1:-1:-1;15585:8:183;-1:-1:-1;;;;14853:773:183:o;15631:734::-;15735:6;15743;15751;15759;15767;15820:3;15808:9;15799:7;15795:23;15791:33;15788:53;;;15837:1;15834;15827:12;15788:53;15876:9;15863:23;15895:31;15920:5;15895:31;:::i;:::-;15945:5;-1:-1:-1;16002:2:183;15987:18;;15974:32;16015:33;15974:32;16015:33;:::i;:::-;16067:7;-1:-1:-1;16121:2:183;16106:18;;16093:32;;-1:-1:-1;16172:2:183;16157:18;;16144:32;;-1:-1:-1;16227:3:183;16212:19;;16199:33;16255:18;16244:30;;16241:50;;;16287:1;16284;16277:12;16241:50;16310:49;16351:7;16342:6;16331:9;16327:22;16310:49;:::i;17737:184::-;17789:77;17786:1;17779:88;17886:4;17883:1;17876:15;17910:4;17907:1;17900:15;17926:184;17978:77;17975:1;17968:88;18075:4;18072:1;18065:15;18099:4;18096:1;18089:15;18115:125;18155:4;18183:1;18180;18177:8;18174:34;;;18188:18;;:::i;:::-;-1:-1:-1;18225:9:183;;18115:125::o;18245:128::-;18285:3;18316:1;18312:6;18309:1;18306:13;18303:39;;;18322:18;;:::i;:::-;-1:-1:-1;18358:9:183;;18245:128::o;18378:465::-;18635:2;18624:9;18617:21;18598:4;18661:56;18713:2;18702:9;18698:18;18690:6;18661:56;:::i;:::-;18765:9;18757:6;18753:22;18748:2;18737:9;18733:18;18726:50;18793:44;18830:6;18822;18793:44;:::i;18848:850::-;19170:4;19199:42;19280:2;19272:6;19268:15;19257:9;19250:34;19332:2;19324:6;19320:15;19315:2;19304:9;19300:18;19293:43;;19372:3;19367:2;19356:9;19352:18;19345:31;19399:57;19451:3;19440:9;19436:19;19428:6;19399:57;:::i;:::-;19504:9;19496:6;19492:22;19487:2;19476:9;19472:18;19465:50;19538:44;19575:6;19567;19538:44;:::i;:::-;19524:58;;19631:9;19623:6;19619:22;19613:3;19602:9;19598:19;19591:51;19659:33;19685:6;19677;19659:33;:::i;:::-;19651:41;18848:850;-1:-1:-1;;;;;;;;18848:850:183:o;19703:249::-;19772:6;19825:2;19813:9;19804:7;19800:23;19796:32;19793:52;;;19841:1;19838;19831:12;19793:52;19873:9;19867:16;19892:30;19916:5;19892:30;:::i;20302:195::-;20341:3;20372:66;20365:5;20362:77;20359:103;;20442:18;;:::i;:::-;-1:-1:-1;20489:1:183;20478:13;;20302:195::o;20502:232::-;20541:3;20569:14;20610:2;20607:1;20603:10;20640:2;20637:1;20633:10;20671:3;20667:2;20663:12;20658:3;20655:21;20652:47;;;20679:18;;:::i;:::-;20715:13;;20502:232;-1:-1:-1;;;;20502:232:183:o;20739:276::-;20834:6;20887:2;20875:9;20866:7;20862:23;20858:32;20855:52;;;20903:1;20900;20893:12;20855:52;20935:9;20929:16;20954:31;20979:5;20954:31;:::i;21020:879::-;21164:6;21172;21180;21188;21196;21204;21257:3;21245:9;21236:7;21232:23;21228:33;21225:53;;;21274:1;21271;21264:12;21225:53;21306:9;21300:16;21325:31;21350:5;21325:31;:::i;:::-;21425:2;21410:18;;21404:25;21375:5;;-1:-1:-1;21438:33:183;21404:25;21438:33;:::i;:::-;21542:2;21527:18;;21521:25;21490:7;;-1:-1:-1;21555:33:183;21521:25;21555:33;:::i;:::-;21659:2;21644:18;;21638:25;21607:7;;-1:-1:-1;21672:33:183;21638:25;21672:33;:::i;:::-;21776:3;21761:19;;21755:26;21724:7;;-1:-1:-1;21790:32:183;21755:26;21790:32;:::i;:::-;21841:7;21831:17;;;21888:3;21877:9;21873:19;21867:26;21857:36;;21020:879;;;;;;;;:::o;22228:184::-;22298:6;22351:2;22339:9;22330:7;22326:23;22322:32;22319:52;;;22367:1;22364;22357:12;22319:52;-1:-1:-1;22390:16:183;;22228:184;-1:-1:-1;22228:184:183:o;22891:245::-;22958:6;23011:2;22999:9;22990:7;22986:23;22982:32;22979:52;;;23027:1;23024;23017:12;22979:52;23059:9;23053:16;23078:28;23100:5;23078:28;:::i;23141:184::-;23193:77;23190:1;23183:88;23290:4;23287:1;23280:15;23314:4;23311:1;23304:15;23330:195;23369:1;23395:14;23436:2;23433:1;23429:10;23458:3;23448:37;;23465:18;;:::i;:::-;23503:10;;23499:20;;;;;23330:195;-1:-1:-1;;23330:195:183:o;23960:266::-;23999:7;24031:14;24072:2;24069:1;24065:10;24102:2;24099:1;24095:10;24158:3;24154:2;24150:12;24145:3;24142:21;24135:3;24128:11;24121:19;24117:47;24114:73;;;24167:18;;:::i;:::-;24207:13;;23960:266;-1:-1:-1;;;;23960:266:183:o;24567:225::-;24606:4;24635:14;24699:10;;;;24669;;24721:12;;;24718:38;;;24736:18;;:::i;:::-;24773:13;;24567:225;-1:-1:-1;;;24567:225:183:o;24797:584::-;25019:4;25048:42;25129:2;25121:6;25117:15;25106:9;25099:34;25181:2;25173:6;25169:15;25164:2;25153:9;25149:18;25142:43;;25221:6;25216:2;25205:9;25201:18;25194:34;25264:6;25259:2;25248:9;25244:18;25237:34;25308:3;25302;25291:9;25287:19;25280:32;25329:46;25370:3;25359:9;25355:19;25347:6;25329:46;:::i;:::-;25321:54;24797:584;-1:-1:-1;;;;;;;24797:584:183:o;25688:274::-;25817:3;25855:6;25849:13;25871:53;25917:6;25912:3;25905:4;25897:6;25893:17;25871:53;:::i;:::-;25940:16;;;;;25688:274;-1:-1:-1;;25688:274:183:o;26311:120::-;26351:1;26377;26367:35;;26382:18;;:::i;:::-;-1:-1:-1;26416:9:183;;26311:120::o;26436:367::-;26475:3;26510:1;26507;26503:9;26619:1;26551:66;26547:74;26544:1;26540:82;26535:2;26528:10;26524:99;26521:125;;;26626:18;;:::i;:::-;26745:1;26677:66;26673:74;26670:1;26666:82;26662:2;26658:91;26655:117;;;26752:18;;:::i;:::-;-1:-1:-1;;26788:9:183;;26436:367::o;26808:655::-;26847:7;26879:66;26971:1;26968;26964:9;26999:1;26996;26992:9;27044:1;27040:2;27036:10;27033:1;27030:17;27025:2;27021;27017:11;27013:35;27010:61;;;27051:18;;:::i;:::-;27090:66;27182:1;27179;27175:9;27229:1;27225:2;27220:11;27217:1;27213:19;27208:2;27204;27200:11;27196:37;27193:63;;;27236:18;;:::i;:::-;27282:1;27279;27275:9;27265:19;;27329:1;27325:2;27320:11;27317:1;27313:19;27308:2;27304;27300:11;27296:37;27293:63;;;27336:18;;:::i;:::-;27401:1;27397:2;27392:11;27389:1;27385:19;27380:2;27376;27372:11;27368:37;27365:63;;;27408:18;;:::i;:::-;-1:-1:-1;;;27448:9:183;;;;;26808:655;-1:-1:-1;;;26808:655:183:o;27468:308::-;27507:1;27533;27523:35;;27538:18;;:::i;:::-;27655:66;27652:1;27649:73;27580:66;27577:1;27574:73;27570:153;27567:179;;;27726:18;;:::i;:::-;-1:-1:-1;27760:10:183;;27468:308::o;27781:369::-;27820:4;27856:1;27853;27849:9;27965:1;27897:66;27893:74;27890:1;27886:82;27881:2;27874:10;27870:99;27867:125;;;27972:18;;:::i;:::-;28091:1;28023:66;28019:74;28016:1;28012:82;28008:2;28004:91;28001:117;;;28098:18;;:::i;:::-;-1:-1:-1;;28135:9:183;;27781:369::o;28155:112::-;28187:1;28213;28203:35;;28218:18;;:::i;:::-;-1:-1:-1;28252:9:183;;28155:112::o;28272:418::-;28534:3;28529;28522:16;28504:3;28567:6;28561:13;28583:61;28637:6;28633:1;28628:3;28624:11;28617:4;28609:6;28605:17;28583:61;:::i;:::-;28664:16;;;;28682:1;28660:24;;28272:418;-1:-1:-1;;28272:418:183:o;28695:635::-;28775:6;28828:2;28816:9;28807:7;28803:23;28799:32;28796:52;;;28844:1;28841;28834:12;28796:52;28877:9;28871:16;28910:18;28902:6;28899:30;28896:50;;;28942:1;28939;28932:12;28896:50;28965:22;;29018:4;29010:13;;29006:27;-1:-1:-1;28996:55:183;;29047:1;29044;29037:12;28996:55;29076:2;29070:9;29101:48;29117:31;29145:2;29117:31;:::i;29101:48::-;29172:2;29165:5;29158:17;29212:7;29207:2;29202;29198;29194:11;29190:20;29187:33;29184:53;;;29233:1;29230;29223:12;29184:53;29246:54;29297:2;29292;29285:5;29281:14;29276:2;29272;29268:11;29246:54;:::i;29335:1286::-;29913:3;29951:6;29945:13;29967:53;30013:6;30008:3;30001:4;29993:6;29989:17;29967:53;:::i;:::-;30081:3;30042:16;;;30067:18;;;30110:13;;30132:65;30110:13;30184:1;30173:13;;30166:4;30154:17;;30132:65;:::i;:::-;30227:8;30220:5;30216:20;30206:30;;;30255:3;30286:2;30282:1;30278:2;30274:10;30267:22;30320:6;30314:13;30336:62;30389:8;30385:1;30381:2;30377:10;30370:4;30362:6;30358:17;30336:62;:::i;:::-;30458:1;30417:17;;30450:10;;;30443:22;30490:13;;30512:62;30490:13;30561:1;30553:10;;30546:4;30534:17;;30512:62;:::i;:::-;30594:17;30613:1;30590:25;;29335:1286;-1:-1:-1;;;;;;29335:1286:183:o;30626:1000::-;31002:3;31040:6;31034:13;31056:53;31102:6;31097:3;31090:4;31082:6;31078:17;31056:53;:::i;:::-;31170:3;31131:16;;;31156:18;;;31199:13;;31221:65;31199:13;31273:1;31262:13;;31255:4;31243:17;;31221:65;:::i;:::-;31350:13;;31305:20;;;31372:62;31350:13;31421:1;31413:10;;31406:4;31394:17;;31372:62;:::i;:::-;31495:13;;31453:17;;;31517:62;31495:13;31566:1;31558:10;;31551:4;31539:17;;31517:62;:::i;:::-;31599:17;31618:1;31595:25;;30626:1000;-1:-1:-1;;;;;;30626:1000:183:o;32383:273::-;32451:6;32504:2;32492:9;32483:7;32479:23;32475:32;32472:52;;;32520:1;32517;32510:12;32472:52;32552:9;32546:16;32602:4;32595:5;32591:16;32584:5;32581:27;32571:55;;32622:1;32619;32612:12;32661:228;32701:7;32827:1;32759:66;32755:74;32752:1;32749:81;32744:1;32737:9;32730:17;32726:105;32723:131;;;32834:18;;:::i;:::-;-1:-1:-1;32874:9:183;;32661:228::o;32894:204::-;32932:3;32968:4;32965:1;32961:12;33000:4;32997:1;32993:12;33035:3;33029:4;33025:14;33020:3;33017:23;33014:49;;;33043:18;;:::i;:::-;33079:13;;32894:204;-1:-1:-1;;;32894:204:183:o",
    "linkReferences": {},
    "immutableReferences": {
      "57966": [
        {
          "start": 5126,
          "length": 32
        },
        {
          "start": 7570,
          "length": 32
        }
      ],
      "57969": [
        {
          "start": 4514,
          "length": 32
        },
        {
          "start": 10801,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEE_DECIMALS()": "ccf288c6",
    "authority()": "bf7e214f",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchRedeem(uint256[],uint256[])": "e9dc30f3",
    "claimFees(address[],address)": "2f6fa94e",
    "create(address,uint48,uint256)": "b7314ef9",
    "createFeeDiscount()": "06692a37",
    "deploy(address,uint48)": "c6e38a4b",
    "getFee(address)": "b88c9148",
    "getTokenId(address,uint48)": "92593277",
    "getTokenNameAndSymbol(uint256)": "35312c85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "owner()": "8da5cb5b",
    "protocolFee()": "b0e21e8a",
    "purchase(address,address,uint256,uint256,uint256)": "6de5b4cd",
    "redeem(uint256,uint256)": "7cbc2373",
    "referrerFees(address)": "c23135dd",
    "rewards(address,address)": "e70b9e27",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuthority(address)": "7a9e5e4b",
    "setCreateFeeDiscount(uint48)": "81690927",
    "setOwner(address)": "13af4035",
    "setProtocolFee(uint48)": "b1e55529",
    "setReferrerFee(uint48)": "0d4dfc21",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenMetadata(uint256)": "6914db60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocol_\",\"type\":\"address\"},{\"internalType\":\"contract IBondAggregator\",\"name\":\"aggregator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"authority_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Teller_InvalidCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"maturesOn\",\"type\":\"uint48\"}],\"name\":\"Teller_TokenNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Teller_UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Bonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"}],\"name\":\"ERC1155BondTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"batchRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFeeDiscount\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expiry_\",\"type\":\"uint48\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenNameAndSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"discount_\",\"type\":\"uint48\"}],\"name\":\"setCreateFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"fee_\",\"type\":\"uint48\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"expiry\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oighty, Zeus, Potted Meat, indigo\",\"details\":\"Bond Protocol is a permissionless system to create Olympus-style bond markets      for any token pair. The markets do not require maintenance and will manage      bond prices based on activity. Bond issuers create BondMarkets that pay out      a Payout Token in exchange for deposited Quote Tokens. Users can purchase      future-dated Payout Tokens with Quote Tokens at the current market price and      receive Bond Tokens to represent their position while their bond vests.      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.The Bond Fixed Term Teller is an implementation of the      Bond Base Teller contract specific to handling user bond transactions      and tokenizing bond markets where purchases vest in a fixed amount of time      (rounded to the day) as ERC1155 tokens.\",\"kind\":\"dev\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"params\":{\"amounts_\":\"Array of amounts of bond tokens to redeem\",\"tokenIds_\":\"Array of bond token ids\"}},\"claimFees(address[],address)\":{\"params\":{\"to_\":\"Address to send fees to\",\"tokens_\":\"Array of tokens to claim fees for\"}},\"create(address,uint48,uint256)\":{\"params\":{\"amount_\":\"Amount of underlying tokens to deposit\",\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token received\",\"_1\":\"Amount of the ERC1155 bond token received\"}},\"deploy(address,uint48)\":{\"details\":\"ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID\",\"params\":{\"expiry_\":\"Timestamp at which the bond token can be redeemed for the underlying token\",\"underlying_\":\"ERC20 token redeemable when the bond token vests\"},\"returns\":{\"_0\":\"ID of the ERC1155 bond token being created\"}},\"getFee(address)\":{\"params\":{\"referrer_\":\"Address of the referrer\"},\"returns\":{\"_0\":\"Fee in basis points (3 decimal places)\"}},\"getTokenId(address,uint48)\":{\"params\":{\"expiry_\":\"Expiry of the bond\",\"payoutToken_\":\"Payout token of bond\"},\"returns\":{\"_0\":\"ID of the bond token\"}},\"getTokenNameAndSymbol(uint256)\":{\"params\":{\"tokenId_\":\"ID of the bond token\"},\"returns\":{\"_0\":\"name        Bond token name\",\"_1\":\"symbol      Bond token symbol\"}},\"purchase(address,address,uint256,uint256,uint256)\":{\"params\":{\"amount_\":\"Amount to deposit in exchange for bond\",\"id_\":\"ID of the Market the bond is being purchased from\",\"minAmountOut_\":\"Minimum acceptable amount of bond to receive. Prevents frontrunning\",\"recipient_\":\"Address of recipient of bond. Allows deposits for other addresses\",\"referrer_\":\"Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee.\"},\"returns\":{\"_0\":\"Amount of payout token to be received from the bond\",\"_1\":\"Timestamp at which the bond token can be redeemed for the underlying token\"}},\"redeem(uint256,uint256)\":{\"params\":{\"amount_\":\"Amount of bond token to redeem\",\"tokenId_\":\"ID of the bond token to redeem\"}},\"setCreateFeeDiscount(uint48)\":{\"details\":\"The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer\",\"params\":{\"discount_\":\"Create Fee Discount in basis points (3 decimal places)\"}},\"setProtocolFee(uint48)\":{\"params\":{\"fee_\":\"Protocol fee in basis points (3 decimal places)\"}},\"setReferrerFee(uint48)\":{\"params\":{\"fee_\":\"Referrer fee in basis points (3 decimal places)\"}}},\"title\":\"Bond Fixed Term Teller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchRedeem(uint256[],uint256[])\":{\"notice\":\"Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)\"},\"claimFees(address[],address)\":{\"notice\":\"Claim fees accrued by sender in the input tokens and sends them to the provided address\"},\"create(address,uint48,uint256)\":{\"notice\":\"Deposit an ERC20 token and mint a future-dated ERC1155 bond token\"},\"createFeeDiscount()\":{\"notice\":\"'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens.\"},\"deploy(address,uint48)\":{\"notice\":\"\\\"Deploy\\\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID\"},\"getFee(address)\":{\"notice\":\"Get current fee charged by the teller based on the combined protocol and referrer fee\"},\"getTokenId(address,uint48)\":{\"notice\":\"Get token ID from token and expiry\"},\"getTokenNameAndSymbol(uint256)\":{\"notice\":\"Get the token name and symbol for a bond token\"},\"protocolFee()\":{\"notice\":\"Fee paid to protocol in basis points (3 decimal places).\"},\"purchase(address,address,uint256,uint256,uint256)\":{\"notice\":\"Exchange quote tokens for a bond in a specified market\"},\"redeem(uint256,uint256)\":{\"notice\":\"Redeem a fixed-term bond token for the underlying token (bond token must have matured)\"},\"referrerFees(address)\":{\"notice\":\"Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3).\"},\"rewards(address,address)\":{\"notice\":\"Fees earned by an address, by token\"},\"setCreateFeeDiscount(uint48)\":{\"notice\":\"Set the discount for creating bond tokens from the base protocol fee\"},\"setProtocolFee(uint48)\":{\"notice\":\"Set protocol feeMust be guardian\"},\"setReferrerFee(uint48)\":{\"notice\":\"Set your fee as a referrer to the protocolFee is set for sending address\"}},\"notice\":\"Bond Fixed Term Teller Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/lib/bonds/BondFixedTermTeller.sol\":\"BondFixedTermTeller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c\",\"dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/test/lib/bonds/BondFixedTermTeller.sol\":{\"keccak256\":\"0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97\",\"dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT\"]},\"src/test/lib/bonds/bases/BondBaseTeller.sol\":{\"keccak256\":\"0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6\",\"dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH\"]},\"src/test/lib/bonds/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/test/lib/bonds/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/test/lib/bonds/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809\",\"dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh\"]},\"src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol\":{\"keccak256\":\"0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9\",\"dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7\"]},\"src/test/lib/bonds/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/test/lib/bonds/lib/ERC1155.sol\":{\"keccak256\":\"0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11\",\"dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocol_",
              "type": "address"
            },
            {
              "internalType": "contract IBondAggregator",
              "name": "aggregator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "guardian_",
              "type": "address"
            },
            {
              "internalType": "contract Authority",
              "name": "authority_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "maturesOn",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "Teller_TokenNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Teller_UnsupportedToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ERC1155BondTokenCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_DECIMALS",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds_",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRedeem"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "createFeeDiscount",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying_",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "expiry_",
              "type": "uint48"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenNameAndSymbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referrerFees",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "discount_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCreateFeeDiscount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "fee_",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferrerFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMetadata",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint48",
              "name": "expiry",
              "type": "uint48"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "params": {
              "amounts_": "Array of amounts of bond tokens to redeem",
              "tokenIds_": "Array of bond token ids"
            }
          },
          "claimFees(address[],address)": {
            "params": {
              "to_": "Address to send fees to",
              "tokens_": "Array of tokens to claim fees for"
            }
          },
          "create(address,uint48,uint256)": {
            "params": {
              "amount_": "Amount of underlying tokens to deposit",
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token received",
              "_1": "Amount of the ERC1155 bond token received"
            }
          },
          "deploy(address,uint48)": {
            "details": "ERC1155 used for fixed-termIf a bond token exists for the (underlying, expiry) pair, it returns that token ID",
            "params": {
              "expiry_": "Timestamp at which the bond token can be redeemed for the underlying token",
              "underlying_": "ERC20 token redeemable when the bond token vests"
            },
            "returns": {
              "_0": "ID of the ERC1155 bond token being created"
            }
          },
          "getFee(address)": {
            "params": {
              "referrer_": "Address of the referrer"
            },
            "returns": {
              "_0": "Fee in basis points (3 decimal places)"
            }
          },
          "getTokenId(address,uint48)": {
            "params": {
              "expiry_": "Expiry of the bond",
              "payoutToken_": "Payout token of bond"
            },
            "returns": {
              "_0": "ID of the bond token"
            }
          },
          "getTokenNameAndSymbol(uint256)": {
            "params": {
              "tokenId_": "ID of the bond token"
            },
            "returns": {
              "_0": "name        Bond token name",
              "_1": "symbol      Bond token symbol"
            }
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "params": {
              "amount_": "Amount to deposit in exchange for bond",
              "id_": "ID of the Market the bond is being purchased from",
              "minAmountOut_": "Minimum acceptable amount of bond to receive. Prevents frontrunning",
              "recipient_": "Address of recipient of bond. Allows deposits for other addresses",
              "referrer_": "Address of referrer who will receive referral fee. For frontends to fill.                         Direct calls can use the zero address for no referrer fee."
            },
            "returns": {
              "_0": "Amount of payout token to be received from the bond",
              "_1": "Timestamp at which the bond token can be redeemed for the underlying token"
            }
          },
          "redeem(uint256,uint256)": {
            "params": {
              "amount_": "Amount of bond token to redeem",
              "tokenId_": "ID of the bond token to redeem"
            }
          },
          "setCreateFeeDiscount(uint48)": {
            "details": "The discount is subtracted from the protocol fee to determine the fee                  when using create() to mint bond tokens without using an Auctioneer",
            "params": {
              "discount_": "Create Fee Discount in basis points (3 decimal places)"
            }
          },
          "setProtocolFee(uint48)": {
            "params": {
              "fee_": "Protocol fee in basis points (3 decimal places)"
            }
          },
          "setReferrerFee(uint48)": {
            "params": {
              "fee_": "Referrer fee in basis points (3 decimal places)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRedeem(uint256[],uint256[])": {
            "notice": "Redeem multiple fixed-term bond tokens for the underlying tokens (bond tokens must have matured)"
          },
          "claimFees(address[],address)": {
            "notice": "Claim fees accrued by sender in the input tokens and sends them to the provided address"
          },
          "create(address,uint48,uint256)": {
            "notice": "Deposit an ERC20 token and mint a future-dated ERC1155 bond token"
          },
          "createFeeDiscount()": {
            "notice": "'Create' function fee discount in basis points (3 decimal places). Amount standard fee is reduced by for partners who just want to use the 'create' function to issue bond tokens."
          },
          "deploy(address,uint48)": {
            "notice": "\"Deploy\" a new ERC1155 bond token for an (underlying, expiry) pair and return its token ID"
          },
          "getFee(address)": {
            "notice": "Get current fee charged by the teller based on the combined protocol and referrer fee"
          },
          "getTokenId(address,uint48)": {
            "notice": "Get token ID from token and expiry"
          },
          "getTokenNameAndSymbol(uint256)": {
            "notice": "Get the token name and symbol for a bond token"
          },
          "protocolFee()": {
            "notice": "Fee paid to protocol in basis points (3 decimal places)."
          },
          "purchase(address,address,uint256,uint256,uint256)": {
            "notice": "Exchange quote tokens for a bond in a specified market"
          },
          "redeem(uint256,uint256)": {
            "notice": "Redeem a fixed-term bond token for the underlying token (bond token must have matured)"
          },
          "referrerFees(address)": {
            "notice": "Fee paid to a front end operator in basis points (3 decimals). Set by the referrer, must be less than or equal to 5% (5e3)."
          },
          "rewards(address,address)": {
            "notice": "Fees earned by an address, by token"
          },
          "setCreateFeeDiscount(uint48)": {
            "notice": "Set the discount for creating bond tokens from the base protocol fee"
          },
          "setProtocolFee(uint48)": {
            "notice": "Set protocol feeMust be guardian"
          },
          "setReferrerFee(uint48)": {
            "notice": "Set your fee as a referrer to the protocolFee is set for sending address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/lib/bonds/BondFixedTermTeller.sol": "BondFixedTermTeller"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xb4564103cc4b8eba1d359c964ef8d9b0eda15f7a0f331bee2c1e33f4785720cc",
        "urls": [
          "bzz-raw://461fab510f592e098d7747c70b9d26c5e21107e64bf9a9d7a404c47d5df6568c",
          "dweb:/ipfs/QmcKVze9fyNscYXWvjxNPq4kCm5F6NdLymcciBUDts1WHd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/bonds/BondFixedTermTeller.sol": {
        "keccak256": "0xf41df75daafd6ef1d46c187980510c91ddac5a0f41207a2fd530cdbd49e71bc3",
        "urls": [
          "bzz-raw://3b818fcdb31233f719cf1586999ec59c2cdd1989ef5a0204bc69f2ed05b33b97",
          "dweb:/ipfs/QmTkhGpu7NZi9WtwXTeJqSEkD6gNUr7ctvYJRP3VSEh8ZT"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/bases/BondBaseTeller.sol": {
        "keccak256": "0x8720130e39b8838ea835b10c7a1d6f411de1302bdcfd762043b2f4ea2af5a098",
        "urls": [
          "bzz-raw://10334ebc24b63412ead4fbdbfed44b5468316756d23c944d3bf8b6ec169aecc6",
          "dweb:/ipfs/QmQcpJM6dXs6sq9wMCEBWzsVb8evDZeHc4rUmdXB1ifFWH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/lib/bonds/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondCallback.sol": {
        "keccak256": "0x3d3883bc1365a89aed6362221cee2da26d5bd8e2a1e4a01b5134415948df5a3e",
        "urls": [
          "bzz-raw://c16aa500c4aeaf62a3d46a93e8341b5a4c41ff3bdb203a15c465cd6dabf4f809",
          "dweb:/ipfs/QmaaQWiCbcxR5mUKKcjpWPDM8tqjBzbpvSzQfueG8yP4Bh"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol": {
        "keccak256": "0xaa32de5e96622801fa0c713ebfa1cef7995b9fb6eb8ed1d52f72bf16c15e4746",
        "urls": [
          "bzz-raw://3d449701024b3db40724c131782a5f651c851f6888ab2f389ad9cf5ca0161bc9",
          "dweb:/ipfs/QmUoDyDZEgu1j5BkQHq8FGMmjRi4vKWxTSxF8ZeMFRRHH7"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/bonds/lib/ERC1155.sol": {
        "keccak256": "0xa9136ddf0056c1b0ad132d67656dc502220bf753bfe66007d852c1dabaeaa197",
        "urls": [
          "bzz-raw://917eadae8f00274f6ca75989e137f69a1f0a13ebaba7b953448d6fa017435a11",
          "dweb:/ipfs/QmT5d7jJU9AJm9rqnQyLmLaopyrhAH5NNecD8SYrXWSb2H"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/lib/bonds/BondFixedTermTeller.sol",
    "id": 55687,
    "exportedSymbols": {
      "Authority": [
        23835
      ],
      "BondBaseTeller": [
        58815
      ],
      "BondFixedTermTeller": [
        55686
      ],
      "ERC1155": [
        60122
      ],
      "ERC20": [
        25731
      ],
      "FullMath": [
        37546
      ],
      "IBondAggregator": [
        58985
      ],
      "IBondFixedTermTeller": [
        59313
      ],
      "TransferHelper": [
        38101
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:10739:124",
    "nodes": [
      {
        "id": 55073,
        "nodeType": "PragmaDirective",
        "src": "46:23:124",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 55075,
        "nodeType": "ImportDirective",
        "src": "71:47:124",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 25732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55074,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "79:5:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55079,
        "nodeType": "ImportDirective",
        "src": "120:86:124",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/bases/BondBaseTeller.sol",
        "file": "./bases/BondBaseTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 58816,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55076,
              "name": "BondBaseTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58815,
              "src": "128:14:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55077,
              "name": "IBondAggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58985,
              "src": "144:15:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55078,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23835,
              "src": "161:9:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55081,
        "nodeType": "ImportDirective",
        "src": "207:75:124",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/interfaces/IBondFixedTermTeller.sol",
        "file": "./interfaces/IBondFixedTermTeller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 59314,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55080,
              "name": "IBondFixedTermTeller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59313,
              "src": "215:20:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55083,
        "nodeType": "ImportDirective",
        "src": "284:60:124",
        "nodes": [],
        "absolutePath": "src/libraries/TransferHelper.sol",
        "file": "libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 38102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55082,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38101,
              "src": "292:14:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55085,
        "nodeType": "ImportDirective",
        "src": "345:48:124",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 37547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55084,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37546,
              "src": "353:8:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55087,
        "nodeType": "ImportDirective",
        "src": "394:42:124",
        "nodes": [],
        "absolutePath": "src/test/lib/bonds/lib/ERC1155.sol",
        "file": "./lib/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55687,
        "sourceUnit": 60157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55086,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60122,
              "src": "402:7:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55686,
        "nodeType": "ContractDefinition",
        "src": "1429:9355:124",
        "nodes": [
          {
            "id": 55098,
            "nodeType": "UsingForDirective",
            "src": "1513:31:124",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 55095,
              "name": "TransferHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38101,
              "src": "1519:14:124"
            },
            "typeName": {
              "id": 55097,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55096,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25731,
                "src": "1538:5:124"
              },
              "referencedDeclaration": 25731,
              "src": "1538:5:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25731",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 55101,
            "nodeType": "UsingForDirective",
            "src": "1549:27:124",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 55099,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37546,
              "src": "1555:8:124"
            },
            "typeName": {
              "id": 55100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1568:7:124",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 55110,
            "nodeType": "EventDefinition",
            "src": "1621:96:124",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5a20d99fad8d4fec2eae3eb7d21c0bebeaecce7cf87b698ddba05071e7bde27",
            "name": "ERC1155BondTokenCreated",
            "nameLocation": "1627:23:124",
            "parameters": {
              "id": 55109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1659:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55110,
                  "src": "1651:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1682:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55110,
                  "src": "1668:24:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55105,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55104,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "1668:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "1668:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55108,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1709:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55110,
                  "src": "1694:21:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55107,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:66:124"
            }
          },
          {
            "id": 55115,
            "nodeType": "VariableDeclaration",
            "src": "1772:54:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "6914db60",
            "mutability": "mutable",
            "name": "tokenMetadata",
            "nameLocation": "1813:13:124",
            "scope": 55686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
              "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
            },
            "typeName": {
              "id": 55114,
              "keyType": {
                "id": 55111,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1780:7:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1772:33:124",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata)"
              },
              "valueType": {
                "id": 55113,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55112,
                  "name": "TokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59247,
                  "src": "1791:13:124"
                },
                "referencedDeclaration": 59247,
                "src": "1791:13:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage_ptr",
                  "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 55135,
            "nodeType": "FunctionDefinition",
            "src": "1905:203:124",
            "nodes": [],
            "body": {
              "id": 55134,
              "nodeType": "Block",
              "src": "2106:2:124",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 55128,
                    "name": "protocol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55117,
                    "src": "2059:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 55129,
                    "name": "aggregator_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55120,
                    "src": "2070:11:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  {
                    "id": 55130,
                    "name": "guardian_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55122,
                    "src": "2083:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 55131,
                    "name": "authority_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55125,
                    "src": "2094:10:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 55132,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 55127,
                  "name": "BondBaseTeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58815,
                  "src": "2044:14:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:61:124"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55117,
                  "mutability": "mutable",
                  "name": "protocol_",
                  "nameLocation": "1934:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55135,
                  "src": "1926:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55120,
                  "mutability": "mutable",
                  "name": "aggregator_",
                  "nameLocation": "1969:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55135,
                  "src": "1953:27:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                    "typeString": "contract IBondAggregator"
                  },
                  "typeName": {
                    "id": 55119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55118,
                      "name": "IBondAggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58985,
                      "src": "1953:15:124"
                    },
                    "referencedDeclaration": 58985,
                    "src": "1953:15:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBondAggregator_$58985",
                      "typeString": "contract IBondAggregator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55122,
                  "mutability": "mutable",
                  "name": "guardian_",
                  "nameLocation": "1998:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55135,
                  "src": "1990:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55125,
                  "mutability": "mutable",
                  "name": "authority_",
                  "nameLocation": "2027:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55135,
                  "src": "2017:20:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$23835",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 55124,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55123,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23835,
                      "src": "2017:9:124"
                    },
                    "referencedDeclaration": 23835,
                    "src": "2017:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$23835",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1916:127:124"
            },
            "returnParameters": {
              "id": 55133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55213,
            "nodeType": "FunctionDefinition",
            "src": "2515:1712:124",
            "nodes": [],
            "body": {
              "id": 55212,
              "nodeType": "Block",
              "src": "2692:1535:124",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 55153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55151,
                      "name": "vesting_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55145,
                      "src": "3392:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 55152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3404:1:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3392:13:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 55210,
                    "nodeType": "Block",
                    "src": "4083:138:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55206,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55138,
                              "src": "4190:10:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 55207,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55140,
                              "src": "4202:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 55203,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55143,
                              "src": "4164:12:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 55205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38051,
                            "src": "4164:25:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 55208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4164:46:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55209,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:46:124"
                      }
                    ]
                  },
                  "id": 55211,
                  "nodeType": "IfStatement",
                  "src": "3388:833:124",
                  "trueBody": {
                    "id": 55202,
                    "nodeType": "Block",
                    "src": "3407:670:124",
                    "statements": [
                      {
                        "expression": {
                          "id": 55174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55154,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55149,
                            "src": "3504:6:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            "id": 55173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  "id": 55167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        },
                                        "id": 55161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 55155,
                                          "name": "vesting_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55145,
                                          "src": "3515:8:124",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 55158,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "3533:5:124",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 55159,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "3533:15:124",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 55157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3526:6:124",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint48_$",
                                              "typeString": "type(uint48)"
                                            },
                                            "typeName": {
                                              "id": 55156,
                                              "name": "uint48",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3526:6:124",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 55160,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3526:23:124",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint48",
                                            "typeString": "uint48"
                                          }
                                        },
                                        "src": "3515:34:124",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint48",
                                          "typeString": "uint48"
                                        }
                                      }
                                    ],
                                    "id": 55162,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3514:36:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 55165,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3560:6:124",
                                        "subdenomination": "days",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_86400_by_1",
                                          "typeString": "int_const 86400"
                                        }
                                      ],
                                      "id": 55164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3553:6:124",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint48_$",
                                        "typeString": "type(uint48)"
                                      },
                                      "typeName": {
                                        "id": 55163,
                                        "name": "uint48",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3553:6:124",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 55166,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3553:14:124",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  },
                                  "src": "3514:53:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "id": 55168,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3513:55:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 55171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3578:6:124",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_86400_by_1",
                                    "typeString": "int_const 86400"
                                  }
                                ],
                                "id": 55170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3571:6:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 55169,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3571:6:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 55172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3571:14:124",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            "src": "3513:72:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "src": "3504:81:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 55175,
                        "nodeType": "ExpressionStatement",
                        "src": "3504:81:124"
                      },
                      {
                        "assignments": [
                          55177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55177,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3743:7:124",
                            "nodeType": "VariableDeclaration",
                            "scope": 55202,
                            "src": "3735:15:124",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 55176,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3735:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 55182,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 55179,
                              "name": "payoutToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55143,
                              "src": "3764:12:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 55180,
                              "name": "expiry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55149,
                              "src": "3778:6:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 55178,
                            "name": "getTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55651,
                            "src": "3753:10:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                              "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                            }
                          },
                          "id": 55181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3753:32:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3735:50:124"
                      },
                      {
                        "condition": {
                          "id": 55187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3865:30:124",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 55183,
                                "name": "tokenMetadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55115,
                                "src": "3866:13:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                                  "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                                }
                              },
                              "id": 55185,
                              "indexExpression": {
                                "id": 55184,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55177,
                                "src": "3880:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3866:22:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                                "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                              }
                            },
                            "id": 55186,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59237,
                            "src": "3866:29:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55195,
                        "nodeType": "IfStatement",
                        "src": "3861:107:124",
                        "trueBody": {
                          "id": 55194,
                          "nodeType": "Block",
                          "src": "3897:71:124",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 55189,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55177,
                                    "src": "3923:7:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 55190,
                                    "name": "payoutToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55143,
                                    "src": "3932:12:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$25731",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "id": 55191,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55149,
                                    "src": "3946:6:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$25731",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint48",
                                      "typeString": "uint48"
                                    }
                                  ],
                                  "id": 55188,
                                  "name": "_deploy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55566,
                                  "src": "3915:7:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                                    "typeString": "function (uint256,contract ERC20,uint48)"
                                  }
                                },
                                "id": 55192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3915:38:124",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 55193,
                              "nodeType": "ExpressionStatement",
                              "src": "3915:38:124"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55197,
                              "name": "recipient_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55138,
                              "src": "4037:10:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 55198,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55177,
                              "src": "4049:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55199,
                              "name": "payout_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55140,
                              "src": "4058:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55196,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55594,
                            "src": "4026:10:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 55200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:40:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55201,
                        "nodeType": "ExpressionStatement",
                        "src": "4026:40:124"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              58479
            ],
            "documentation": {
              "id": 55136,
              "nodeType": "StructuredDocumentation",
              "src": "2156:354:124",
              "text": "@notice             Handle payout to recipient\n @param recipient_   Address to receive payout\n @param payout_      Amount of payoutToken to be paid\n @param payoutToken_   Token to be paid out\n @param vesting_     Amount of time to vest from current timestamp\n @return expiry      Timestamp when the payout will vest"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handlePayout",
            "nameLocation": "2524:13:124",
            "overrides": {
              "id": 55147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2659:8:124"
            },
            "parameters": {
              "id": 55146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55138,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nameLocation": "2555:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55213,
                  "src": "2547:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55140,
                  "mutability": "mutable",
                  "name": "payout_",
                  "nameLocation": "2583:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55213,
                  "src": "2575:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55143,
                  "mutability": "mutable",
                  "name": "payoutToken_",
                  "nameLocation": "2606:12:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55213,
                  "src": "2600:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55141,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "2600:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "2600:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55145,
                  "mutability": "mutable",
                  "name": "vesting_",
                  "nameLocation": "2635:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55213,
                  "src": "2628:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55144,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:112:124"
            },
            "returnParameters": {
              "id": 55150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55149,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2684:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55213,
                  "src": "2677:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55148,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:15:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55356,
            "nodeType": "FunctionDefinition",
            "src": "4320:1834:124",
            "nodes": [],
            "body": {
              "id": 55355,
              "nodeType": "Block",
              "src": "4476:1678:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55232,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "4647:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55355,
                      "src": "4640:13:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 55231,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "4640:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55241,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 55240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 55237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 55235,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55219,
                            "src": "4663:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 55236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4673:6:124",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "4663:16:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 55234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4656:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 55233,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "4656:6:124",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 55238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4656:24:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 55239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4683:6:124",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4656:33:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4640:49:124"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55242,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55232,
                      "src": "4747:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 55243,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4756:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 55244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4756:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4747:24:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55249,
                  "nodeType": "IfStatement",
                  "src": "4743:59:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55246,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57932,
                        "src": "4780:20:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4780:22:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55248,
                    "nodeType": "RevertStatement",
                    "src": "4773:29:124"
                  }
                },
                {
                  "assignments": [
                    55251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55251,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "4821:7:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55355,
                      "src": "4813:15:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55250,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55256,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55253,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55217,
                        "src": "4842:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 55254,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55232,
                        "src": "4855:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 55252,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55651,
                      "src": "4831:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 55255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:31:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4813:49:124"
                },
                {
                  "condition": {
                    "id": 55261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4938:30:124",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 55257,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55115,
                          "src": "4939:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 55259,
                        "indexExpression": {
                          "id": 55258,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55251,
                          "src": "4953:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4939:22:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 55260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59237,
                      "src": "4939:29:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55267,
                  "nodeType": "IfStatement",
                  "src": "4934:88:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 55263,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55217,
                          "src": "5002:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 55264,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55232,
                          "src": "5015:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 55262,
                        "name": "Teller_TokenDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57928,
                        "src": "4977:24:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                          "typeString": "function (contract ERC20,uint48) pure"
                        }
                      },
                      "id": 55265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4977:45:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55266,
                    "nodeType": "RevertStatement",
                    "src": "4970:52:124"
                  }
                },
                {
                  "assignments": [
                    55269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55269,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "5230:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55355,
                      "src": "5222:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5222:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55277,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55274,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5273:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 55273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5265:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5265:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5265:13:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55270,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55217,
                        "src": "5243:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 55271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "5243:21:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5243:36:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5222:57:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5318:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5318:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 55285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5338:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                              "typeString": "contract BondFixedTermTeller"
                            }
                          ],
                          "id": 55284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5330:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5330:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5330:13:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55287,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55221,
                        "src": "5345:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55278,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55217,
                        "src": "5289:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 55280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38002,
                      "src": "5289:28:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 55288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5289:64:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55289,
                  "nodeType": "ExpressionStatement",
                  "src": "5289:64:124"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 55294,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5397:4:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondFixedTermTeller_$55686",
                                "typeString": "contract BondFixedTermTeller"
                              }
                            ],
                            "id": 55293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5389:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 55292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5389:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 55290,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55217,
                          "src": "5367:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 55291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "5367:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 55296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5367:36:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 55299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 55297,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55269,
                        "src": "5406:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 55298,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55221,
                        "src": "5419:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5406:20:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5367:59:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55304,
                  "nodeType": "IfStatement",
                  "src": "5363:109:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55301,
                        "name": "Teller_UnsupportedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57930,
                        "src": "5447:23:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5447:25:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55303,
                    "nodeType": "RevertStatement",
                    "src": "5440:32:124"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 55307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55305,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57950,
                      "src": "5613:11:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 55306,
                      "name": "createFeeDiscount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57953,
                      "src": "5627:17:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "5613:31:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 55353,
                    "nodeType": "Block",
                    "src": "6007:141:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 55343,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6068:3:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 55344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6068:10:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 55345,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55251,
                              "src": "6080:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55346,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55221,
                              "src": "6089:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55342,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55594,
                            "src": "6057:10:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 55347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6057:40:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55348,
                        "nodeType": "ExpressionStatement",
                        "src": "6057:40:124"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 55349,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55251,
                              "src": "6120:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55350,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55221,
                              "src": "6129:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 55351,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6119:18:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 55230,
                        "id": 55352,
                        "nodeType": "Return",
                        "src": "6112:25:124"
                      }
                    ]
                  },
                  "id": 55354,
                  "nodeType": "IfStatement",
                  "src": "5609:539:124",
                  "trueBody": {
                    "id": 55341,
                    "nodeType": "Block",
                    "src": "5646:355:124",
                    "statements": [
                      {
                        "assignments": [
                          55309
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55309,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "5704:9:124",
                            "nodeType": "VariableDeclaration",
                            "scope": 55341,
                            "src": "5696:17:124",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 55308,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5696:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 55317,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 55314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 55312,
                                "name": "protocolFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57950,
                                "src": "5731:11:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 55313,
                                "name": "createFeeDiscount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57953,
                                "src": "5745:17:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "src": "5731:31:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "id": 55315,
                              "name": "FEE_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57956,
                              "src": "5764:12:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "expression": {
                              "id": 55310,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55221,
                              "src": "5716:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 55311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37501,
                            "src": "5716:14:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 55316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5716:61:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5696:81:124"
                      },
                      {
                        "expression": {
                          "id": 55324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 55318,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57964,
                                "src": "5791:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_ERC20_$25731_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract ERC20 => uint256))"
                                }
                              },
                              "id": 55321,
                              "indexExpression": {
                                "id": 55319,
                                "name": "_protocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57966,
                                "src": "5799:9:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5791:18:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$25731_$_t_uint256_$",
                                "typeString": "mapping(contract ERC20 => uint256)"
                              }
                            },
                            "id": 55322,
                            "indexExpression": {
                              "id": 55320,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55217,
                              "src": "5810:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5791:31:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 55323,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55309,
                            "src": "5826:9:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5791:44:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 55325,
                        "nodeType": "ExpressionStatement",
                        "src": "5791:44:124"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 55327,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5897:3:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 55328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5897:10:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 55329,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55251,
                              "src": "5909:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 55332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 55330,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55221,
                                "src": "5918:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 55331,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55309,
                                "src": "5928:9:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5918:19:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55326,
                            "name": "_mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55594,
                            "src": "5886:10:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 55333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55334,
                        "nodeType": "ExpressionStatement",
                        "src": "5886:52:124"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 55335,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55251,
                              "src": "5961:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 55338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 55336,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55221,
                                "src": "5970:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 55337,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55309,
                                "src": "5980:9:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5970:19:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 55339,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5960:30:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 55230,
                        "id": 55340,
                        "nodeType": "Return",
                        "src": "5953:37:124"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              59262
            ],
            "documentation": {
              "id": 55214,
              "nodeType": "StructuredDocumentation",
              "src": "4279:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "b7314ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55224,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "4436:12:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "4436:12:124"
              }
            ],
            "name": "create",
            "nameLocation": "4329:6:124",
            "overrides": {
              "id": 55223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4427:8:124"
            },
            "parameters": {
              "id": 55222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55217,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "4351:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55356,
                  "src": "4345:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55215,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "4345:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "4345:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55219,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "4379:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55356,
                  "src": "4372:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55218,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55221,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4404:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55356,
                  "src": "4396:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4396:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4335:82:124"
            },
            "returnParameters": {
              "id": 55230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55356,
                  "src": "4458:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55356,
                  "src": "4467:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:18:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55408,
            "nodeType": "FunctionDefinition",
            "src": "6200:586:124",
            "nodes": [],
            "body": {
              "id": 55407,
              "nodeType": "Block",
              "src": "6261:525:124",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 55367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6319:31:124",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 55363,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55115,
                          "src": "6320:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 55365,
                        "indexExpression": {
                          "id": 55364,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55358,
                          "src": "6334:8:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6320:23:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 55366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59237,
                      "src": "6320:30:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55371,
                  "nodeType": "IfStatement",
                  "src": "6315:66:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55368,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57932,
                        "src": "6359:20:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6359:22:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55370,
                    "nodeType": "RevertStatement",
                    "src": "6352:29:124"
                  }
                },
                {
                  "assignments": [
                    55374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55374,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6445:4:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55407,
                      "src": "6424:25:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 55373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55372,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59247,
                          "src": "6424:13:124"
                        },
                        "referencedDeclaration": 59247,
                        "src": "6424:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55378,
                  "initialValue": {
                    "baseExpression": {
                      "id": 55375,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55115,
                      "src": "6452:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 55377,
                    "indexExpression": {
                      "id": 55376,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55358,
                      "src": "6466:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6452:23:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6424:51:124"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 55379,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6534:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 55380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6534:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 55381,
                        "name": "meta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55374,
                        "src": "6552:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                        }
                      },
                      "id": 55382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59244,
                      "src": "6552:11:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "src": "6534:29:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55389,
                  "nodeType": "IfStatement",
                  "src": "6530:77:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 55385,
                            "name": "meta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55374,
                            "src": "6595:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                              "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                            }
                          },
                          "id": 55386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59244,
                          "src": "6595:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 55384,
                        "name": "Teller_TokenNotMatured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57919,
                        "src": "6572:22:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
                          "typeString": "function (uint48) pure"
                        }
                      },
                      "id": 55387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6572:35:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55388,
                    "nodeType": "RevertStatement",
                    "src": "6565:42:124"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6690:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6690:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55393,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55358,
                        "src": "6702:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55394,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55360,
                        "src": "6712:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55390,
                      "name": "_burnToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55618,
                      "src": "6679:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 55395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:41:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55396,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6759:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6759:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55404,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55360,
                        "src": "6771:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 55397,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55374,
                          "src": "6730:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 55400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59240,
                        "src": "6730:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 55401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38051,
                      "src": "6730:28:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$25731_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$25731_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 55405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6730:49:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55406,
                  "nodeType": "ExpressionStatement",
                  "src": "6730:49:124"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_redeem",
            "nameLocation": "6209:7:124",
            "parameters": {
              "id": 55361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55358,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6225:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55408,
                  "src": "6217:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6217:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55360,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6243:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55408,
                  "src": "6235:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6235:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6216:35:124"
            },
            "returnParameters": {
              "id": 55362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6261:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55425,
            "nodeType": "FunctionDefinition",
            "src": "6833:123:124",
            "nodes": [],
            "body": {
              "id": 55424,
              "nodeType": "Block",
              "src": "6913:43:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55420,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55411,
                        "src": "6931:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55421,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55413,
                        "src": "6941:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55419,
                      "name": "_redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55408,
                      "src": "6923:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 55422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6923:26:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55423,
                  "nodeType": "ExpressionStatement",
                  "src": "6923:26:124"
                }
              ]
            },
            "baseFunctions": [
              59281
            ],
            "documentation": {
              "id": 55409,
              "nodeType": "StructuredDocumentation",
              "src": "6792:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "7cbc2373",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55416,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "6900:12:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "6900:12:124"
              }
            ],
            "name": "redeem",
            "nameLocation": "6842:6:124",
            "overrides": {
              "id": 55415,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6891:8:124"
            },
            "parameters": {
              "id": 55414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55411,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "6857:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55425,
                  "src": "6849:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6849:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55413,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "6875:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55425,
                  "src": "6867:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6848:35:124"
            },
            "returnParameters": {
              "id": 55418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6913:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55472,
            "nodeType": "FunctionDefinition",
            "src": "7003:351:124",
            "nodes": [],
            "body": {
              "id": 55471,
              "nodeType": "Block",
              "src": "7142:212:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55439,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7160:3:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55471,
                      "src": "7152:11:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7152:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55442,
                  "initialValue": {
                    "expression": {
                      "id": 55440,
                      "name": "tokenIds_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55429,
                      "src": "7166:9:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 55441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7166:16:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7152:30:124"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55443,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55439,
                      "src": "7196:3:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 55444,
                        "name": "amounts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55432,
                        "src": "7203:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 55445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7203:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7196:22:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55450,
                  "nodeType": "IfStatement",
                  "src": "7192:57:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55447,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57932,
                        "src": "7227:20:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7227:22:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55449,
                    "nodeType": "RevertStatement",
                    "src": "7220:29:124"
                  }
                },
                {
                  "body": {
                    "id": 55469,
                    "nodeType": "Block",
                    "src": "7289:59:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 55461,
                                "name": "tokenIds_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55429,
                                "src": "7311:9:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 55463,
                              "indexExpression": {
                                "id": 55462,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55452,
                                "src": "7321:1:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7311:12:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 55464,
                                "name": "amounts_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55432,
                                "src": "7325:8:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 55466,
                              "indexExpression": {
                                "id": 55465,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55452,
                                "src": "7334:1:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7325:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 55460,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55408,
                            "src": "7303:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 55467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7303:34:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55468,
                        "nodeType": "ExpressionStatement",
                        "src": "7303:34:124"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55454,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55452,
                      "src": "7275:1:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 55455,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55439,
                      "src": "7279:3:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7275:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55470,
                  "initializationExpression": {
                    "assignments": [
                      55452
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 55452,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7272:1:124",
                        "nodeType": "VariableDeclaration",
                        "scope": 55470,
                        "src": "7264:9:124",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55451,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7264:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 55453,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7264:9:124"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 55458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7284:3:124",
                      "subExpression": {
                        "id": 55457,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55452,
                        "src": "7286:1:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55459,
                    "nodeType": "ExpressionStatement",
                    "src": "7284:3:124"
                  },
                  "nodeType": "ForStatement",
                  "src": "7259:89:124"
                }
              ]
            },
            "baseFunctions": [
              59291
            ],
            "documentation": {
              "id": 55426,
              "nodeType": "StructuredDocumentation",
              "src": "6962:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "e9dc30f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55435,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "7125:12:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "7125:12:124"
              }
            ],
            "name": "batchRedeem",
            "nameLocation": "7012:11:124",
            "overrides": {
              "id": 55434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7108:8:124"
            },
            "parameters": {
              "id": 55433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55429,
                  "mutability": "mutable",
                  "name": "tokenIds_",
                  "nameLocation": "7043:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55472,
                  "src": "7024:28:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7024:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55428,
                    "nodeType": "ArrayTypeName",
                    "src": "7024:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55432,
                  "mutability": "mutable",
                  "name": "amounts_",
                  "nameLocation": "7073:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55472,
                  "src": "7054:27:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55430,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7054:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55431,
                    "nodeType": "ArrayTypeName",
                    "src": "7054:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7023:59:124"
            },
            "returnParameters": {
              "id": 55437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7142:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55509,
            "nodeType": "FunctionDefinition",
            "src": "7447:386:124",
            "nodes": [],
            "body": {
              "id": 55508,
              "nodeType": "Block",
              "src": "7583:250:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55487,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "7601:7:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55508,
                      "src": "7593:15:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55492,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55489,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55476,
                        "src": "7622:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 55490,
                        "name": "expiry_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55478,
                        "src": "7635:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 55488,
                      "name": "getTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55651,
                      "src": "7611:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_ERC20_$25731_$_t_uint48_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint48) pure returns (uint256)"
                      }
                    },
                    "id": 55491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7611:32:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:50:124"
                },
                {
                  "condition": {
                    "id": 55497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7708:30:124",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 55493,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55115,
                          "src": "7709:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 55495,
                        "indexExpression": {
                          "id": 55494,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55487,
                          "src": "7723:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7709:22:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 55496,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59237,
                      "src": "7709:29:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55505,
                  "nodeType": "IfStatement",
                  "src": "7704:99:124",
                  "trueBody": {
                    "id": 55504,
                    "nodeType": "Block",
                    "src": "7740:63:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55499,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55487,
                              "src": "7762:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 55500,
                              "name": "underlying_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55476,
                              "src": "7771:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 55501,
                              "name": "expiry_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55478,
                              "src": "7784:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$25731",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 55498,
                            "name": "_deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55566,
                            "src": "7754:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                              "typeString": "function (uint256,contract ERC20,uint48)"
                            }
                          },
                          "id": 55502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7754:38:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55503,
                        "nodeType": "ExpressionStatement",
                        "src": "7754:38:124"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 55506,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55487,
                    "src": "7819:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 55485,
                  "id": 55507,
                  "nodeType": "Return",
                  "src": "7812:14:124"
                }
              ]
            },
            "baseFunctions": [
              59273
            ],
            "documentation": {
              "id": 55473,
              "nodeType": "StructuredDocumentation",
              "src": "7406:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "c6e38a4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55481,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25875,
                  "src": "7540:12:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "7540:12:124"
              }
            ],
            "name": "deploy",
            "nameLocation": "7456:6:124",
            "overrides": {
              "id": 55480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7523:8:124"
            },
            "parameters": {
              "id": 55479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55476,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "7469:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55509,
                  "src": "7463:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55475,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55474,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "7463:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "7463:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55478,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "7489:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55509,
                  "src": "7482:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55477,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7482:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7462:35:124"
            },
            "returnParameters": {
              "id": 55485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55509,
                  "src": "7570:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7569:9:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55566,
            "nodeType": "FunctionDefinition",
            "src": "8254:734:124",
            "nodes": [],
            "body": {
              "id": 55565,
              "nodeType": "Block",
              "src": "8363:625:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55521,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "8534:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55565,
                      "src": "8527:13:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 55520,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8527:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55530,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "id": 55529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          "id": 55526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 55524,
                            "name": "expiry_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55517,
                            "src": "8550:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 55525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8560:6:124",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "1"
                          },
                          "src": "8550:16:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 55523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8543:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint48_$",
                          "typeString": "type(uint48)"
                        },
                        "typeName": {
                          "id": 55522,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "8543:6:124",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 55527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8543:24:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 55528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8570:6:124",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "8543:33:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8527:49:124"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 55533,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55521,
                          "src": "8642:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 55532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8634:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 55531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8634:7:124",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 55534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8634:15:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 55535,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8652:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 55536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8652:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8634:33:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55541,
                  "nodeType": "IfStatement",
                  "src": "8630:68:124",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55538,
                        "name": "Teller_InvalidParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57932,
                        "src": "8676:20:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 55539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8676:22:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55540,
                    "nodeType": "RevertStatement",
                    "src": "8669:29:124"
                  }
                },
                {
                  "expression": {
                    "id": 55557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 55542,
                        "name": "tokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55115,
                        "src": "8741:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                          "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                        }
                      },
                      "id": 55544,
                      "indexExpression": {
                        "id": 55543,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55512,
                        "src": "8755:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8741:23:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 55546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8794:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 55547,
                          "name": "underlying_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55515,
                          "src": "8812:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 55550,
                                  "name": "underlying_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55515,
                                  "src": "8843:11:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$25731",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 55551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25376,
                                "src": "8843:20:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 55552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8843:22:124",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 55549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8837:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 55548,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8837:5:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8837:29:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 55554,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55521,
                          "src": "8880:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 55555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8900:1:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$25731",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 55545,
                        "name": "TokenMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59247,
                        "src": "8767:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenMetadata_$59247_storage_ptr_$",
                          "typeString": "type(struct IBondFixedTermTeller.TokenMetadata storage pointer)"
                        }
                      },
                      "id": 55556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8767:144:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                      }
                    },
                    "src": "8741:170:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "id": 55558,
                  "nodeType": "ExpressionStatement",
                  "src": "8741:170:124"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 55560,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55512,
                        "src": "8951:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55561,
                        "name": "underlying_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55515,
                        "src": "8961:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 55562,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55521,
                        "src": "8974:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 55559,
                      "name": "ERC1155BondTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55110,
                      "src": "8927:23:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_ERC20_$25731_$_t_uint48_$returns$__$",
                        "typeString": "function (uint256,contract ERC20,uint48)"
                      }
                    },
                    "id": 55563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8927:54:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55564,
                  "nodeType": "EmitStatement",
                  "src": "8922:59:124"
                }
              ]
            },
            "documentation": {
              "id": 55510,
              "nodeType": "StructuredDocumentation",
              "src": "7839:410:124",
              "text": "@notice             \"Deploy\" a new ERC1155 bond token and stores its ID\n @dev                ERC1155 tokens used for fixed term bonds\n @param tokenId_     Calculated ID of new bond token (from getTokenId)\n @param underlying_  Underlying token to be paid out when the bond token vests\n @param expiry_      Timestamp that the token will vest at, will be rounded to the nearest day"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "8263:7:124",
            "parameters": {
              "id": 55518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55512,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "8288:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55566,
                  "src": "8280:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8280:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55515,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "8312:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55566,
                  "src": "8306:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55514,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55513,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "8306:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "8306:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55517,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "8340:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55566,
                  "src": "8333:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55516,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "8333:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8270:83:124"
            },
            "returnParameters": {
              "id": 55519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8363:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55594,
            "nodeType": "FunctionDefinition",
            "src": "9221:215:124",
            "nodes": [],
            "body": {
              "id": 55593,
              "nodeType": "Block",
              "src": "9328:108:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 55576,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55115,
                          "src": "9338:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 55578,
                        "indexExpression": {
                          "id": 55577,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55571,
                          "src": "9352:8:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9338:23:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 55579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59246,
                      "src": "9338:30:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 55580,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55573,
                      "src": "9372:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9338:41:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55582,
                  "nodeType": "ExpressionStatement",
                  "src": "9338:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55584,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55569,
                        "src": "9395:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55585,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55571,
                        "src": "9400:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55586,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55573,
                        "src": "9410:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 55589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9425:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 55588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9419:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 55587,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9419:5:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9419:9:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 55583,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59933,
                      "src": "9389:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 55591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9389:40:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55592,
                  "nodeType": "ExpressionStatement",
                  "src": "9389:40:124"
                }
              ]
            },
            "documentation": {
              "id": 55567,
              "nodeType": "StructuredDocumentation",
              "src": "8994:222:124",
              "text": "@notice             Mint bond token and update supply\n @param to_          Address to mint tokens to\n @param tokenId_     ID of bond token to mint\n @param amount_      Amount of bond tokens to mint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToken",
            "nameLocation": "9230:10:124",
            "parameters": {
              "id": 55574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55569,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "9258:3:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55594,
                  "src": "9250:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9250:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55571,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9279:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55594,
                  "src": "9271:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9271:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55573,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9305:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55594,
                  "src": "9297:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9297:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9240:78:124"
            },
            "returnParameters": {
              "id": 55575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9328:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55618,
            "nodeType": "FunctionDefinition",
            "src": "9670:208:124",
            "nodes": [],
            "body": {
              "id": 55617,
              "nodeType": "Block",
              "src": "9779:99:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 55604,
                          "name": "tokenMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55115,
                          "src": "9789:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                            "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                          }
                        },
                        "id": 55606,
                        "indexExpression": {
                          "id": 55605,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55599,
                          "src": "9803:8:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9789:23:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                        }
                      },
                      "id": 55607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59246,
                      "src": "9789:30:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 55608,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55601,
                      "src": "9823:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9789:41:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55610,
                  "nodeType": "ExpressionStatement",
                  "src": "9789:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55612,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55597,
                        "src": "9846:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55613,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55599,
                        "src": "9853:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 55614,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55601,
                        "src": "9863:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55611,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60121,
                      "src": "9840:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 55615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:31:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55616,
                  "nodeType": "ExpressionStatement",
                  "src": "9840:31:124"
                }
              ]
            },
            "documentation": {
              "id": 55595,
              "nodeType": "StructuredDocumentation",
              "src": "9442:223:124",
              "text": "@notice             Burn bond token and update supply\n @param from_        Address to burn tokens from\n @param tokenId_     ID of bond token to burn\n @param amount_      Amount of bond token to burn"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnToken",
            "nameLocation": "9679:10:124",
            "parameters": {
              "id": 55602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55597,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "9707:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55618,
                  "src": "9699:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9699:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55599,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "9730:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55618,
                  "src": "9722:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9722:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55601,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "9756:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55618,
                  "src": "9748:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9748:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9689:80:124"
            },
            "returnParameters": {
              "id": 55603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9779:0:124"
            },
            "scope": 55686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55651,
            "nodeType": "FunctionDefinition",
            "src": "9971:382:124",
            "nodes": [],
            "body": {
              "id": 55650,
              "nodeType": "Block",
              "src": "10065:288:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55631,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10215:7:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55650,
                      "src": "10207:15:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55630,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10207:7:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55647,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55637,
                                "name": "underlying_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55622,
                                "src": "10273:11:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$25731",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                },
                                "id": 55643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 55638,
                                  "name": "expiry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55624,
                                  "src": "10286:7:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 55641,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10303:6:124",
                                      "subdenomination": "days",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_86400_by_1",
                                        "typeString": "int_const 86400"
                                      }
                                    ],
                                    "id": 55640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10296:6:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 55639,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10296:6:124",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 55642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10296:14:124",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                "src": "10286:24:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$25731",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              ],
                              "expression": {
                                "id": 55635,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10256:3:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 55636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10256:16:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 55644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10256:55:124",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 55634,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10246:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 55645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10246:66:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 55633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10225:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 55632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10225:7:124",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 55646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10225:97:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10207:115:124"
                },
                {
                  "expression": {
                    "id": 55648,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55631,
                    "src": "10339:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 55629,
                  "id": 55649,
                  "nodeType": "Return",
                  "src": "10332:14:124"
                }
              ]
            },
            "baseFunctions": [
              59302
            ],
            "documentation": {
              "id": 55619,
              "nodeType": "StructuredDocumentation",
              "src": "9930:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "92593277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenId",
            "nameLocation": "9980:10:124",
            "overrides": {
              "id": 55626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10038:8:124"
            },
            "parameters": {
              "id": 55625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55622,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "9997:11:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55651,
                  "src": "9991:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$25731",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55620,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25731,
                      "src": "9991:5:124"
                    },
                    "referencedDeclaration": 25731,
                    "src": "9991:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25731",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55624,
                  "mutability": "mutable",
                  "name": "expiry_",
                  "nameLocation": "10017:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55651,
                  "src": "10010:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 55623,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "10010:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9990:35:124"
            },
            "returnParameters": {
              "id": 55629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55651,
                  "src": "10056:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10056:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10055:9:124"
            },
            "scope": 55686,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55685,
            "nodeType": "FunctionDefinition",
            "src": "10400:382:124",
            "nodes": [],
            "body": {
              "id": 55684,
              "nodeType": "Block",
              "src": "10547:235:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55664,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "10578:4:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55684,
                      "src": "10557:25:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                        "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                      },
                      "typeName": {
                        "id": 55663,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55662,
                          "name": "TokenMetadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59247,
                          "src": "10557:13:124"
                        },
                        "referencedDeclaration": 59247,
                        "src": "10557:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage_ptr",
                          "typeString": "struct IBondFixedTermTeller.TokenMetadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55668,
                  "initialValue": {
                    "baseExpression": {
                      "id": 55665,
                      "name": "tokenMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55115,
                      "src": "10585:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetadata_$59247_storage_$",
                        "typeString": "mapping(uint256 => struct IBondFixedTermTeller.TokenMetadata storage ref)"
                      }
                    },
                    "id": 55667,
                    "indexExpression": {
                      "id": 55666,
                      "name": "tokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55654,
                      "src": "10599:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10585:23:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenMetadata_$59247_storage",
                      "typeString": "struct IBondFixedTermTeller.TokenMetadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10557:51:124"
                },
                {
                  "assignments": [
                    55670,
                    55672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55670,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "10633:4:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55684,
                      "src": "10619:18:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55669,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10619:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55672,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "10653:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 55684,
                      "src": "10639:20:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 55671,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10639:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55679,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55674,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55664,
                          "src": "10694:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 55675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59240,
                        "src": "10694:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 55676,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55664,
                          "src": "10723:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenMetadata_$59247_memory_ptr",
                            "typeString": "struct IBondFixedTermTeller.TokenMetadata memory"
                          }
                        },
                        "id": 55677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59244,
                        "src": "10723:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$25731",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      ],
                      "id": 55673,
                      "name": "_getNameAndSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58719,
                      "src": "10663:17:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$25731_$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                        "typeString": "function (contract ERC20,uint256) view returns (string memory,string memory)"
                      }
                    },
                    "id": 55678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:81:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10618:126:124"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 55680,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55670,
                        "src": "10762:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 55681,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55672,
                        "src": "10768:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 55682,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10761:14:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 55661,
                  "id": 55683,
                  "nodeType": "Return",
                  "src": "10754:21:124"
                }
              ]
            },
            "baseFunctions": [
              59312
            ],
            "documentation": {
              "id": 55652,
              "nodeType": "StructuredDocumentation",
              "src": "10359:36:124",
              "text": "@inheritdoc IBondFixedTermTeller"
            },
            "functionSelector": "35312c85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNameAndSymbol",
            "nameLocation": "10409:21:124",
            "overrides": {
              "id": 55656,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10487:8:124"
            },
            "parameters": {
              "id": 55655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55654,
                  "mutability": "mutable",
                  "name": "tokenId_",
                  "nameLocation": "10439:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 55685,
                  "src": "10431:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10431:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10430:18:124"
            },
            "returnParameters": {
              "id": 55661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55658,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55685,
                  "src": "10513:13:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55657,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10513:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55685,
                  "src": "10528:13:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10528:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10512:30:124"
            },
            "scope": 55686,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55089,
              "name": "BondBaseTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58815,
              "src": "1461:14:124"
            },
            "id": 55090,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:14:124"
          },
          {
            "baseName": {
              "id": 55091,
              "name": "IBondFixedTermTeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59313,
              "src": "1477:20:124"
            },
            "id": 55092,
            "nodeType": "InheritanceSpecifier",
            "src": "1477:20:124"
          },
          {
            "baseName": {
              "id": 55093,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60122,
              "src": "1499:7:124"
            },
            "id": 55094,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:7:124"
          }
        ],
        "canonicalName": "BondFixedTermTeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 55088,
          "nodeType": "StructuredDocumentation",
          "src": "438:991:124",
          "text": "@title Bond Fixed Term Teller\n @notice Bond Fixed Term Teller Contract\n @dev Bond Protocol is a permissionless system to create Olympus-style bond markets\n      for any token pair. The markets do not require maintenance and will manage\n      bond prices based on activity. Bond issuers create BondMarkets that pay out\n      a Payout Token in exchange for deposited Quote Tokens. Users can purchase\n      future-dated Payout Tokens with Quote Tokens at the current market price and\n      receive Bond Tokens to represent their position while their bond vests.\n      Once the Bond Tokens vest, they can redeem it for the Quote Tokens.\n @dev The Bond Fixed Term Teller is an implementation of the\n      Bond Base Teller contract specific to handling user bond transactions\n      and tokenizing bond markets where purchases vest in a fixed amount of time\n      (rounded to the day) as ERC1155 tokens.\n @author Oighty, Zeus, Potted Meat, indigo"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55686,
          60122,
          59313,
          58815,
          25876,
          23822,
          59499
        ],
        "name": "BondFixedTermTeller",
        "nameLocation": "1438:19:124",
        "scope": 55687,
        "usedErrors": [
          57915,
          57919,
          57921,
          57928,
          57930,
          57932
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 124
}