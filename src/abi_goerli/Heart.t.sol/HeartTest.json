{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "testCorrectnes_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_activate_deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfInactive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfTooEarly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_viewFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfOperateReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfPriceReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1395:11870:169:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1395:11870:169;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1395:11870:169:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136;;;:::i;:::-;;6704:388;;;:::i;12595:668::-;;;:::i;9600:1809::-;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;321:38:1;;;;;;;;9289:305:169;;;;;;:::i;:::-;;:::i;8531:752::-;;;:::i;5578:731::-;;;:::i;4914:334::-;;;:::i;7167:246::-;;;:::i;5254:318::-;;;:::i;4286:622::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;832:14:183;;825:22;807:41;;795:2;780:18;1819:584:0;667:187:183;1461:30:169;;;;;-1:-1:-1;;;;;1461:30:169;;;6315:383;;;:::i;7693:832::-;;;:::i;11415:1174::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;1818:2136:169;1852:32;;;;;1860:23;1852:32;;;1274:25:183;250:64:1;;1852:7:169;;1247:18:183;;1852:32:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1962:11:169;:31;;;;-1:-1:-1;;;;;1962:31:169;;;;;;;;;2042:21;;;;;2061:1;2042:21;;;1274:25:183;-1:-1:-1;;1962:31:169;2042:18;;1247::183;;2042:21:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2017:46;;2085:5;2091:1;2085:8;;;;;;;;:::i;:::-;;;;;;;2077:5;;:16;;;;;-1:-1:-1;;;;;2077:16:169;;;;;-1:-1:-1;;;;;2077:16:169;;;;;;2113:5;2119:1;2113:8;;;;;;;;:::i;:::-;;;;;;;2107:3;;:14;;;;;-1:-1:-1;;;;;2107:14:169;;;;;-1:-1:-1;;;;;2107:14:169;;;;;;2144:5;2150:1;2144:8;;;;;;;;:::i;:::-;;;;;;;2135:6;;:17;;;;;-1:-1:-1;;;;;2135:17:169;;;;;-1:-1:-1;;;;;2135:17:169;;;;;;2003:160;2272:2;2235:40;;;;;:::i;:::-;3552:2:183;3534:21;;;3591:2;3571:18;;;3564:30;3631:14;3625:3;3610:19;;3603:43;3684:3;3677:4;3662:20;;3655:33;;;3725:1;3704:19;;;3697:30;3764:5;3758:3;3743:19;;3736:34;3854:4;3842:17;;;-1:-1:-1;3822:18:183;;3815:45;3802:3;3787:19;2235:40:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2221:11:169;:54;;;;-1:-1:-1;;;;;2221:54:169;;;;;;;;;;2349:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2340:6:169;:21;;;;-1:-1:-1;;;;;2340:21:169;;;;;;;;;2466:49;;2495:7;;2505:9;;2466:49;;;:::i;:::-;-1:-1:-1;;;;;4132:55:183;;;4114:74;;4236:14;4224:27;;;4219:2;4204:18;;4197:55;4283:2;4268:18;;4261:34;4102:2;4087:18;2466:49:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2458:5:169;:57;;;;-1:-1:-1;;;;;2458:57:169;;;;;;2556:6;;2537:26;;2556:6;;;2537:26;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2537:26:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:5:169;:34;;;;-1:-1:-1;;;;;2529:34:169;;;;;;2610:5;;:34;;;;;2633:10;2610:34;;;1274:25:183;2610:5:169;;;:22;;1247:18:183;;2610:34:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2658:5:169;;:30;;;;;2677:10;2658:30;;;1274:25:183;-1:-1:-1;;;;;2658:5:169;;;;-1:-1:-1;2658:18:169;;-1:-1:-1;1247:18:183;;2658:30:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2702:5:169;;:33;;;;;2724:10;2702:33;;;1274:25:183;-1:-1:-1;;;;;2702:5:169;;;;-1:-1:-1;2702:21:169;;-1:-1:-1;1247:18:183;;2702:33:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2749:5:169;;:21;;;;;2767:2;2749:21;;;4916:36:183;-1:-1:-1;;;;;2749:5:169;;;;-1:-1:-1;2749:17:169;;-1:-1:-1;4889:18:183;;2749:21:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2870:6:169;;2853:24;;-1:-1:-1;;;;;2870:6:169;;;;-1:-1:-1;2853:24:169;;-1:-1:-1;2853:24:169;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;2853:24:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:8:169;:35;;;;-1:-1:-1;;;;;2842:35:169;;;;;;;;;2963:6;;3033:11;;2929:179;;2963:6;;;;3033:11;;3070:4;;2929:179;;;:::i;:::-;-1:-1:-1;;;;;5327:15:183;;;5309:34;;5379:15;;;5374:2;5359:18;;5352:43;5431:15;;5426:2;5411:18;;5404:43;5478:2;5463:18;;5456:34;;;;5235:3;5220:19;2929:179:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2921:5:169;:187;;;;-1:-1:-1;;;;;2921:187:169;;;;;;3151:6;;3136:22;;3151:6;;;3136:22;;;:::i;:::-;-1:-1:-1;;;;;189:55:183;;;171:74;;159:2;144:18;3136:22:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3123:10:169;:35;;;;-1:-1:-1;;;;;3123:35:169;;;;;;3271:6;;3323:5;;3271:59;;;;;:6;;;;:20;;:59;;-1:-1:-1;;3323:5:169;;3271:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3344:6:169;;3396:5;;3344:59;;;;;-1:-1:-1;;;;;3344:6:169;;;;-1:-1:-1;3344:20:169;;-1:-1:-1;3344:59:169;;:6;;3396:5;;3344:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3451:6:169;;3504:8;;3451:63;;;;;-1:-1:-1;;;;;3451:6:169;;;;-1:-1:-1;3451:20:169;;-1:-1:-1;3451:63:169;;3472:22;;3504:8;;3451:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3528:6:169;;3581:5;;3528:60;;;;;-1:-1:-1;;;;;3528:6:169;;;;-1:-1:-1;3528:20:169;;-1:-1:-1;3528:60:169;;3549:22;;3581:5;;3528:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3602:6:169;;3655:10;;3602:65;;;;;-1:-1:-1;;;;;3602:6:169;;;;-1:-1:-1;3602:20:169;;-1:-1:-1;3602:65:169;;3623:22;;3655:10;;3602:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3752:10:169;;3788:6;;3752:43;;;;;6279:13:183;3752:43:169;;;6261:32:183;-1:-1:-1;;;;;3788:6:169;;;6309:18:183;;;6302:83;3752:10:169;;;-1:-1:-1;3752:20:169;;-1:-1:-1;6234:18:183;;3752:43:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3883:11:169;;3908:5;;3883:54;;;;;-1:-1:-1;;;;;3908:5:169;;;3883:54;;;6570:74:183;3924:11:169;6660:18:183;;;6653:34;3883:11:169;;;-1:-1:-1;3883:16:169;;-1:-1:-1;6543:18:183;;3883:54:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136::o;6704:388::-;6864:5;;:17;;;;;;;;6844;;-1:-1:-1;;;;;6864:5:169;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6844:37;-1:-1:-1;250:64:1;6891:7:169;6899:27;6844:37;6899:15;:27;:::i;:::-;6891:36;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;6891:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6985:8:169;;:25;;;;;:8;:25;;;807:41:183;-1:-1:-1;;;;;6985:8:169;;;;-1:-1:-1;6985:18:169;;-1:-1:-1;780:18:183;;6985:25:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:5;;;;;;;;;-1:-1:-1;;;;;7073:5:169;-1:-1:-1;;;;;7073:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:335;6704:388::o;12595:668::-;12786:116;;;12870:22;12786:116;;;;1274:25:183;;;;12786:116:169;;;;;;;;;;1247:18:183;;;;12786:116:169;;;;;;;;;12822:34;12786:116;;;12913:20;;;;;250:64:1;;12913:15:169;;:20;;12786:116;;12913:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12943:5;;;;;;;;;-1:-1:-1;;;;;12943:5:169;-1:-1:-1;;;;;12943:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12971:20:169;;;;;250:64:1;;-1:-1:-1;12971:15:169;;-1:-1:-1;12971:20:169;;12987:3;;12971:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13001:5;;;;;;;;;-1:-1:-1;;;;;13001:5:169;-1:-1:-1;;;;;13001:16:169;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13030:20:169;;;;;250:64:1;;-1:-1:-1;13030:15:169;;-1:-1:-1;13030:20:169;;13046:3;;13030:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13060:5;;;;;;;;;-1:-1:-1;;;;;13060:5:169;-1:-1:-1;;;;;13060:14:169;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13087:20:169;;;;;250:64:1;;-1:-1:-1;13087:15:169;;-1:-1:-1;13087:20:169;;13103:3;;13087:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13117:5:169;;13147:11;;13117:57;;;;;-1:-1:-1;;;;;13147:11:169;;;13117:57;;;6570:74:183;13168:4:169;6660:18:183;;;6653:34;13117:5:169;;;-1:-1:-1;13117:29:169;;-1:-1:-1;6543:18:183;;13117:57:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13185:20:169;;;;;250:64:1;;-1:-1:-1;13185:15:169;;-1:-1:-1;13185:20:169;;13201:3;;13185:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13215:5:169;;13244:11;;13215:41;;;;;-1:-1:-1;;;;;13244:11:169;;;13215:41;;;171:74:183;13215:5:169;;;-1:-1:-1;13215:28:169;;-1:-1:-1;144:18:183;;13215:41:169;;;;;;;;;;;;;;;;;;;9600:1809;9754:5;;:17;;;;;;;;250:64:1;;9728:7:169;;-1:-1:-1;;;;;9754:5:169;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9736:35;;:15;:35;:::i;:::-;9728:44;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;9728:44:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9819:18;9873:2;9840:36;;;;;:::i;:::-;9190:2:183;9172:21;;;9229:1;9209:18;;;9202:29;9268:11;9262:3;9247:19;;9240:40;9318:3;9311:4;9296:20;;9289:33;;;9359:1;9338:19;;;9331:30;9398:4;9392:3;9377:19;;9370:33;9487:4;9475:17;;;-1:-1:-1;9455:18:183;;9448:45;9435:3;9420:19;9840:36:169;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10042:48:169;;;;;;;;;;;;;;;;;;;;;;;10100:20;;;;;9819:57;;-1:-1:-1;9914:4:169;;10042:48;;250:64:1;;10100:15:169;;:20;;10042:48;;10100:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10139:6:169;;10130:16;;;;;-1:-1:-1;;;;;10139:6:169;;;10130:16;;;171:74:183;250:64:1;;-1:-1:-1;10130:8:169;;-1:-1:-1;144:18:183;;10130:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10156:5:169;;:50;;;;;-1:-1:-1;;;;;6588:55:183;;;10156:50:169;;;6570:74:183;6660:18;;;6653:34;;;10156:5:169;;;;-1:-1:-1;10156:29:169;;-1:-1:-1;6543:18:183;;10156:50:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10244:5;;;;;;;;;-1:-1:-1;;;;;10244:5:169;-1:-1:-1;;;;;10244:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10338:6:169;;10329:16;;;;;-1:-1:-1;;;;;10338:6:169;;;10329:16;;;171:74:183;250:64:1;;-1:-1:-1;10329:8:169;;-1:-1:-1;144:18:183;;10329:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10355:5:169;;:50;;;;;-1:-1:-1;;;;;6588:55:183;;;10355:50:169;;;6570:74:183;6660:18;;;6653:34;;;10355:5:169;;;;-1:-1:-1;10355:29:169;;-1:-1:-1;6543:18:183;;10355:50:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:57;10502:5;;;;;;;;;-1:-1:-1;;;;;10502:5:169;-1:-1:-1;;;;;10502:17:169;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10532:8;10485;:57::i;:::-;10561:5;;:14;;;;;;;;10552:35;;-1:-1:-1;;;;;10561:5:169;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10577:9;10552:8;:35::i;:::-;10681:5;;10659:48;;;;;-1:-1:-1;;;;;10681:5:169;;;10659:48;;;6570:74:183;10697:8:169;6660:18:183;;;6653:34;10659:13:169;;;;;;6543:18:183;;10659:48:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10815:33:169;;;;;10842:4;10815:33;;;171:74:183;10792:20:169;;-1:-1:-1;;;;;;10815:18:169;;;-1:-1:-1;10815:18:169;;144::183;;10815:33:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10792:56;;10858:17;10878:5;;;;;;;;;-1:-1:-1;;;;;10878:5:169;-1:-1:-1;;;;;10878:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10858:37;-1:-1:-1;250:64:1;10905:7:169;10913:27;10858:37;10913:15;:27;:::i;:::-;10905:36;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;10905:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:5;;;;;;;;;-1:-1:-1;;;;;10951:5:169;-1:-1:-1;;;;;10951:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10995:33:169;;;;;11022:4;10995:33;;;171:74:183;10974:18:169;;-1:-1:-1;;;;;;10995:18:169;;;-1:-1:-1;10995:18:169;;144::183;;10995:33:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10974:54;;11038:51;11047:10;11074:5;;;;;;;;;-1:-1:-1;;;;;11074:5:169;-1:-1:-1;;;;;11074:12:169;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11059:29;;:12;:29;:::i;:::-;11038:8;:51::i;:::-;11193:33;;;;;11220:4;11193:33;;;171:74:183;-1:-1:-1;;;;;11193:18:169;;;;;144::183;;11193:33:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11178:48;-1:-1:-1;250:64:1;11236:7:169;11244:27;11262:9;11244:15;:27;:::i;:::-;11236:36;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;11236:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11282:5;;;;;;;;;-1:-1:-1;;;;;11282:5:169;-1:-1:-1;;;;;11282:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11318:33:169;;;;;11345:4;11318:33;;;171:74:183;-1:-1:-1;;;;;11318:18:169;;;-1:-1:-1;11318:18:169;;-1:-1:-1;144:18:183;;11318:33:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11305:46;-1:-1:-1;11361:41:169;11305:46;11382:19;:12;11397:4;11382:19;:::i;11361:41::-;9658:1751;;;;;;9600:1809::o;9289:305::-;9428:6;;9419:16;;;;;-1:-1:-1;;;;;9428:6:169;;;9419:16;;;171:74:183;250:64:1;;9419:8:169;;144:18:183;;9419:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9445:5:169;;:30;;;;;-1:-1:-1;;;;;189:55:183;;;9445:30:169;;;171:74:183;9445:5:169;;;;-1:-1:-1;9445:17:169;;-1:-1:-1;144:18:183;;9445:30:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9539:48;9556:5;;;;;;;;;-1:-1:-1;;;;;9556:5:169;-1:-1:-1;;;;;9556:14:169;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9575:11;9539:8;:48::i;:::-;9289:305;:::o;8531:752::-;8662:5;;:14;;;;;;;;8651:26;;-1:-1:-1;;;;;8662:5:169;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8651:10;:26::i;:::-;8707:5;;:16;;;;;;;;8688;;-1:-1:-1;;;;;8707:5:169;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8792:6;;8783:16;;;;;-1:-1:-1;;;;;8792:6:169;;;8783:16;;;171:74:183;8688:35:169;;-1:-1:-1;250:64:1;;8783:8:169;;144:18:183;;8783:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8809:5;;;;;;;;;-1:-1:-1;;;;;8809:5:169;-1:-1:-1;;;;;8809:16:169;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8914:27;8926:5;;;;;;;;;-1:-1:-1;;;;;8926:5:169;-1:-1:-1;;;;;8926:12:169;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8925:15;8914:10;:27::i;:::-;8960:5;;:16;;;;;;;;8951:36;;-1:-1:-1;;;;;8960:5:169;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8978:8;8951;:36::i;:::-;9060:6;;9051:16;;;;;-1:-1:-1;;;;;9060:6:169;;;9051:16;;;171:74:183;250:64:1;;9051:8:169;;144:18:183;;9051:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9077:5;;;;;;;;;-1:-1:-1;;;;;9077:5:169;-1:-1:-1;;;;;9077:14:169;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9188:5;;;;;;;;;-1:-1:-1;;;;;9188:5:169;-1:-1:-1;;;;;9188:12:169;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9222:5;;:16;;;;;;;;9213:63;;-1:-1:-1;;;;;9222:5:169;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9258:5;;;;;;;;;-1:-1:-1;;;;;9258:5:169;-1:-1:-1;;;;;9258:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9240:35;;:15;:35;:::i;5578:731::-;5716:5;;:17;;;;;;;;250:64:1;;5690:7:169;;-1:-1:-1;;;;;5716:5:169;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5736:1;5716:21;:::i;:::-;5698:39;;:15;:39;:::i;:::-;5690:48;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;5690:48:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5849:67;5858:5;;;;;;;;;-1:-1:-1;;;;;5858:5:169;-1:-1:-1;;;;;5858:14:169;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:5;;;;;;;;;-1:-1:-1;;;;;5894:5:169;-1:-1:-1;;;;;5894:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5914:1;5894:21;:::i;:::-;5876:39;;:15;:39;:::i;:::-;5849:8;:67::i;:::-;5953:5;;;;;;;;;-1:-1:-1;;;;;5953:5:169;-1:-1:-1;;;;;5953:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6059:63;6068:5;;;;;;;;;-1:-1:-1;;;;;6068:5:169;-1:-1:-1;;;;;6068:14:169;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6104:5;;;;;;;;;-1:-1:-1;;;;;6104:5:169;-1:-1:-1;;;;;6104:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6086:35;;:15;:35;:::i;:::-;6059:8;:63::i;:::-;6205:45;;;;;;;;;;;;;;;;;;;;;;;6260:20;;;;;6205:45;;250:64:1;;6260:15:169;;:20;;6205:45;;6260:20;;:::i;4914:334::-;5026:6;;5017:16;;;;;-1:-1:-1;;;;;5026:6:169;;;5017:16;;;171:74:183;250:64:1;;5017:8:169;;144:18:183;;5017:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5043:5;;;;;;;;;-1:-1:-1;;;;;5043:5:169;-1:-1:-1;;;;;5043:16:169;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5143:46:169;;;;;;;;;;;;;;;;;;;;;;;5199:20;;;;;5143:46;;-1:-1:-1;250:64:1;;-1:-1:-1;5199:15:169;;:20;;5143:46;;5199:20;;:::i;7167:246::-;7293:5;;:17;;;;;;;;7273;;-1:-1:-1;;;;;7293:5:169;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7273:37;;7369;7378:9;7397:7;7369:8;:37::i;4286:622::-;4432:5;;:17;;;;;;;;4412;;-1:-1:-1;;;;;4432:5:169;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4412:37;-1:-1:-1;250:64:1;4459:7:169;4467:27;4412:37;4467:15;:27;:::i;:::-;4459:36;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;4459:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4592:11:169;;:36;;;;;4622:4;4592:36;;;171:74:183;4569:20:169;;-1:-1:-1;;;;;;4592:11:169;;;;-1:-1:-1;4592:21:169;;144:18:183;;4592:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:59;;4666:5;;;;;;;;;-1:-1:-1;;;;;4666:5:169;-1:-1:-1;;;;;4666:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4804:11:169;;:36;;;;;4834:4;4804:36;;;171:74:183;4783:18:169;;-1:-1:-1;;;;;;4804:11:169;;;;-1:-1:-1;4804:21:169;;144:18:183;;4804:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:57;;4850:51;4859:10;4886:5;;;;;;;;;-1:-1:-1;;;;;4886:5:169;-1:-1:-1;;;;;4886:12:169;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4871:29;;:12;:29;:::i;4850:51::-;4325:583;;;4286:622::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6570:74:183;;;2221:17:0;6660:18:183;;;6653:34;2196:43:0;;;;;;;;;6543:18:183;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6315:383:169:-;6473:5;;:17;;;;;;;;6453;;-1:-1:-1;;;;;6473:5:169;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6453:37;-1:-1:-1;250:64:1;6500:7:169;6508:27;6453:37;6508:15;:27;:::i;:::-;6500:36;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;6500:36:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6594:5:169;;:22;;;;;:5;:22;;;807:41:183;-1:-1:-1;;;;;6594:5:169;;;;-1:-1:-1;6594:15:169;;-1:-1:-1;780:18:183;;6594:22:169;667:187:183;7693:832:169;7855:45;;;;;;;;;;;;;;;;;;;;;;;7910:20;;;;;7855:45;;250:64:1;;7910:15:169;;:20;;7855:45;;7910:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7940:5;;;;;;;;;-1:-1:-1;;;;;7940:5:169;-1:-1:-1;;;;;7940:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8056:6:169;;8047:16;;;;;-1:-1:-1;;;;;8056:6:169;;;8047:16;;;171:74:183;250:64:1;;-1:-1:-1;8047:8:169;;-1:-1:-1;144:18:183;;8047:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:5;;;;;;;;;-1:-1:-1;;;;;8073:5:169;-1:-1:-1;;;;;8073:15:169;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11415:1174;11568:5;;:17;;;;;;;;250:64:1;;11542:7:169;;-1:-1:-1;;;;;11568:5:169;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11550:35;;:15;:35;:::i;:::-;11542:44;;;;;;;;;;;;;1274:25:183;;1262:2;1247:18;;1111:194;11542:44:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11682:48:169;;;;;;;;;;;;;;;;;;;;;;;11740:20;;;;;11682:48;;-1:-1:-1;250:64:1;;-1:-1:-1;11740:15:169;;:20;;11682:48;;11740:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11779:6:169;;11770:16;;;;;-1:-1:-1;;;;;11779:6:169;;;11770:16;;;171:74:183;250:64:1;;-1:-1:-1;11770:8:169;;-1:-1:-1;144:18:183;;11770:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11796:5:169;;11825:11;;11796:41;;;;;-1:-1:-1;;;;;11825:11:169;;;11796:41;;;171:74:183;11796:5:169;;;-1:-1:-1;11796:28:169;;-1:-1:-1;144:18:183;;11796:41:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11875:5;;;;;;;;;-1:-1:-1;;;;;11875:5:169;-1:-1:-1;;;;;11875:10:169;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11985:11:169;;12015:6;;11985:38;;;;;-1:-1:-1;;;;;12015:6:169;;;11985:38;;;171:74:183;11962:20:169;;-1:-1:-1;11985:11:169;;;-1:-1:-1;11985:21:169;;144:18:183;;11985:38:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12056:11;;12086:5;;12056:37;;;;;-1:-1:-1;;;;;12086:5:169;;;12056:37;;;171:74:183;11962:61:169;;-1:-1:-1;12033:20:169;;12056:11;;;:21;;144:18:183;;12056:37:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12162:6;;12153:16;;;;;-1:-1:-1;;;;;12162:6:169;;;12153:16;;;171:74:183;12033:60:169;;-1:-1:-1;250:64:1;;12153:8:169;;144:18:183;;12153:16:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12179:5:169;;12208:11;;12179:41;;;;;-1:-1:-1;;;;;12208:11:169;;;12179:41;;;171:74:183;12179:5:169;;;-1:-1:-1;12179:28:169;;-1:-1:-1;144:18:183;;12179:41:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12251:11:169;;12281:6;;12251:38;;;;;-1:-1:-1;;;;;12281:6:169;;;12251:38;;;171:74:183;12230:18:169;;-1:-1:-1;12251:11:169;;;-1:-1:-1;12251:21:169;;144:18:183;;12251:38:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12369:11;;12399:5;;12369:37;;;;;-1:-1:-1;;;;;12399:5:169;;;12369:37;;;171:74:183;12230:59:169;;-1:-1:-1;12360:59:169;;12369:11;;;:21;;144:18:183;;12369:37:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12416:1;12360:8;:59::i;:::-;12533:49;12542:10;12554:27;12569:12;12554;:27;:::i;3622:277:0:-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;3712:44;;;;;12131:2:183;12113:21;;;12170:2;12150:18;;;12143:30;12209:34;12204:2;12189:18;;12182:62;12280:7;12275:2;12260:18;;12253:35;12320:3;12305:19;;11929:401;3712:44:0;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;:::-;;;;;;;;3876:6;:4;:6::i;:::-;3622:277;;:::o;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;13669:2:183;13651:21;;;13708:2;13688:18;;;13681:30;13747:34;13742:2;13727:18;;13720:62;13818:4;13813:2;13798:18;;13791:32;13855:3;13840:19;;13467:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;3262:157::-;3322:9;3317:96;;3352:30;;;;;14778:2:183;14760:21;;;14817:2;14797:18;;;14790:30;14856:25;14851:2;14836:18;;14829:53;14914:2;14899:18;;14576:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;15921:259::-;15982:1;15978;:5;15974:200;;;16004:41;;;;;15130:2:183;15112:21;;;15169:2;15149:18;;;15142:30;15208:34;15203:2;15188:18;;15181:62;15279:4;15274:2;15259:18;;15252:32;15316:3;15301:19;;14928:398;16004:41:0;;;;;;;;16064:30;;;15543:21:183;;;15600:1;15580:18;;;15573:29;15638:11;15633:2;15618:18;;15611:39;15717:4;15702:20;;15695:36;;;16064:30:0;;;;;;;15682:3:183;16064:30:0;;;16113;;;15954:21:183;;;16011:1;15991:18;;;15984:29;;;;16049:11;16044:2;16029:18;;16022:39;16128:4;16113:20;;16106:36;;;16113:30:0;;16093:3:183;16078:19;16113:30:0;15742:406:183;9970:259:0;10032:1;10027;:6;10023:200;;10054:40;;;;;16355:2:183;16337:21;;;16394:2;16374:18;;;16367:30;16433:34;16428:2;16413:18;;16406:62;16504:3;16499:2;16484:18;;16477:31;16540:3;16525:19;;16153:397;2409:432:0;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;16757:74:183;;;2677:17:0;16847:18:183;;;16840:34;;;;2712:4:0;16890:18:183;;;16883:34;2489:11:0;;1671:64;2586:43;;16730:18:183;;2652:67:0;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;256:154:183:-;-1:-1:-1;;;;;335:5:183;331:54;324:5;321:65;311:93;;400:1;397;390:12;415:247;474:6;527:2;515:9;506:7;502:23;498:32;495:52;;;543:1;540;533:12;495:52;582:9;569:23;601:31;626:5;601:31;:::i;:::-;651:5;415:247;-1:-1:-1;;;415:247:183:o;1500:184::-;1552:77;1549:1;1542:88;1649:4;1646:1;1639:15;1673:4;1670:1;1663:15;1689:138;1768:13;;1790:31;1768:13;1790:31;:::i;1832:1188::-;1927:6;1958:2;2001;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2050:9;2044:16;2079:18;2120:2;2112:6;2109:14;2106:34;;;2136:1;2133;2126:12;2106:34;2174:6;2163:9;2159:22;2149:32;;2219:7;2212:4;2208:2;2204:13;2200:27;2190:55;;2241:1;2238;2231:12;2190:55;2270:2;2264:9;2292:2;2288;2285:10;2282:36;;;2298:18;;:::i;:::-;2344:2;2341:1;2337:10;2376:2;2370:9;2435:66;2430:2;2426;2422:11;2418:84;2410:6;2406:97;2553:6;2541:10;2538:22;2533:2;2521:10;2518:18;2515:46;2512:72;;;2564:18;;:::i;:::-;2600:2;2593:22;2650:18;;;2684:15;;;;-1:-1:-1;2726:11:183;;;2722:20;;;2754:19;;;2751:39;;;2786:1;2783;2776:12;2751:39;2810:11;;;;2830:159;2846:6;2841:3;2838:15;2830:159;;;2912:34;2942:3;2912:34;:::i;:::-;2900:47;;2863:12;;;;2967;;;;2830:159;;;3008:6;1832:1188;-1:-1:-1;;;;;;;;1832:1188:183:o;3025:184::-;3077:77;3074:1;3067:88;3174:4;3171:1;3164:15;3198:4;3195:1;3188:15;5501:518;5674:2;5659:18;;5707:1;5696:13;;5686:201;;5743:77;5740:1;5733:88;5844:4;5841:1;5834:15;5872:4;5869:1;5862:15;5686:201;5896:25;;;-1:-1:-1;;;;;5957:55:183;;;;5952:2;5937:18;;;5930:83;5501:518;:::o;6698:184::-;6768:6;6821:2;6809:9;6800:7;6796:23;6792:32;6789:52;;;6837:1;6834;6827:12;6789:52;-1:-1:-1;6860:16:183;;6698:184;-1:-1:-1;6698:184:183:o;6887:::-;6939:77;6936:1;6929:88;7036:4;7033:1;7026:15;7060:4;7057:1;7050:15;7076:128;7116:3;7147:1;7143:6;7140:1;7137:13;7134:39;;;7153:18;;:::i;:::-;-1:-1:-1;7189:9:183;;7076:128::o;7573:258::-;7645:1;7655:113;7669:6;7666:1;7663:13;7655:113;;;7745:11;;;7739:18;7726:11;;;7719:39;7691:2;7684:10;7655:113;;;7786:6;7783:1;7780:13;7777:48;;;-1:-1:-1;;7821:1:183;7803:16;;7796:27;7573:258::o;7836:440::-;7983:2;7972:9;7965:21;7946:4;8015:6;8009:13;8058:6;8053:2;8042:9;8038:18;8031:34;8074:66;8133:6;8128:2;8117:9;8113:18;8108:2;8100:6;8096:15;8074:66;:::i;:::-;8192:2;8180:15;8197:66;8176:88;8161:104;;;;8267:2;8157:113;;7836:440;-1:-1:-1;;7836:440:183:o;9735:266::-;9820:6;9873:2;9861:9;9852:7;9848:23;9844:32;9841:52;;;9889:1;9886;9879:12;9841:52;9921:9;9915:16;9940:31;9965:5;9940:31;:::i;10281:277::-;10348:6;10401:2;10389:9;10380:7;10376:23;10372:32;10369:52;;;10417:1;10414;10407:12;10369:52;10449:9;10443:16;10502:5;10495:13;10488:21;10481:5;10478:32;10468:60;;10524:1;10521;10514:12;10563:125;10603:4;10631:1;10628;10625:8;10622:34;;;10636:18;;:::i;:::-;-1:-1:-1;10673:9:183;;10563:125::o;10693:228::-;10733:7;10859:1;10791:66;10787:74;10784:1;10781:81;10776:1;10769:9;10762:17;10758:105;10755:131;;;10866:18;;:::i;:::-;-1:-1:-1;10906:9:183;;10693:228::o;11228:417::-;11425:66;11417:6;11413:79;11408:3;11401:92;11383:3;11522:6;11516:13;11538:61;11592:6;11588:1;11583:3;11579:11;11572:4;11564:6;11560:17;11538:61;:::i;:::-;11619:16;;;;11637:1;11615:24;;11228:417;-1:-1:-1;;;11228:417:183:o;11650:274::-;11779:3;11817:6;11811:13;11833:53;11879:6;11874:3;11867:4;11859:6;11855:17;11833:53;:::i;:::-;11902:16;;;;;11650:274;-1:-1:-1;;11650:274:183:o;12499:397::-;12729:2;12718:9;12711:21;12692:4;12749:49;12794:2;12783:9;12779:18;12412:2;12400:15;;12447:12;12440:4;12431:14;;12424:36;12485:2;12476:12;;12335:159;12749:49;12741:57;;-1:-1:-1;;;;;12838:6:183;12834:55;12829:2;12818:9;12814:18;12807:83;12499:397;;;;:::o;13065:::-;13295:2;13284:9;13277:21;13258:4;13315:49;13360:2;13349:9;13345:18;12978:2;12966:15;;13013:12;13006:4;12997:14;;12990:36;13051:2;13042:12;;12901:159;13870:348;14100:2;14089:9;14082:21;14063:4;14120:49;14165:2;14154:9;14150:18;12412:2;12400:15;;12447:12;12440:4;12431:14;;12424:36;12485:2;12476:12;;12335:159;14120:49;14112:57;;14205:6;14200:2;14189:9;14185:18;14178:34;13870:348;;;;:::o;14223:::-;14453:2;14442:9;14435:21;14416:4;14473:49;14518:2;14507:9;14503:18;12978:2;12966:15;;13013:12;13006:4;12997:14;;12990:36;13051:2;13042:12;;12901:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectnes_setOperator(address)": "56735b57",
    "testCorrectness_activate_deactivate()": "5d948bbd",
    "testCorrectness_beat()": "a00f2709",
    "testCorrectness_cannotBeatIfInactive()": "7e9506de",
    "testCorrectness_cannotBeatIfTooEarly()": "8d0be1ef",
    "testCorrectness_cannotBeatRepeatedlyIfSkipped()": "7b47a7f3",
    "testCorrectness_cannotCallAdminFunctionsWithoutPermissions()": "1fdada07",
    "testCorrectness_resetBeat()": "e853d736",
    "testCorrectness_setRewardTokenAndAmount()": "2c639076",
    "testCorrectness_viewFrequency()": "882d3844",
    "testCorrectness_withdrawUnspentRewards()": "e9aaa0e8",
    "testFail_beatFailsIfOperateReverts()": "0bb8dc03",
    "testFail_beatFailsIfPriceReverts()": "e2627194",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"testCorrectnes_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_activate_deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfInactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfTooEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatRepeatedlyIfSkipped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotCallAdminFunctionsWithoutPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_viewFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfOperateReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfPriceReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_beat()\":{\"notice\":\"DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert\"},\"testCorrectness_resetBeat()\":{\"notice\":\"DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions\"},\"testCorrectness_viewFrequency()\":{\"notice\":\"[X] frequency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Heart.t.sol\":\"HeartTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/Heart.t.sol\":{\"keccak256\":\"0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9\",\"dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectnes_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_activate_deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_beat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfInactive"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfTooEarly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setRewardTokenAndAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_viewFrequency"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_withdrawUnspentRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfOperateReverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfPriceReverts"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_beat()": {
            "notice": "DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert"
          },
          "testCorrectness_resetBeat()": {
            "notice": "DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions"
          },
          "testCorrectness_viewFrequency()": {
            "notice": "[X] frequency"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Heart.t.sol": "HeartTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/Heart.t.sol": {
        "keccak256": "0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1",
        "urls": [
          "bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9",
          "dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Heart.t.sol",
    "id": 83946,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "ERC20": [
        25731
      ],
      "FullMath": [
        37546
      ],
      "GoerliDaoRoles": [
        40791
      ],
      "HeartTest": [
        83945
      ],
      "IOperator": [
        52282
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "MockERC20": [
        24679
      ],
      "MockOperator": [
        82843
      ],
      "MockPrice": [
        66805
      ],
      "Module": [
        28577
      ],
      "OlympusHeart": [
        47232
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "RolesAdmin": [
        51234
      ],
      "TargetNotAContract": [
        28366
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        54005
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:13228:169",
    "nodes": [
      {
        "id": 82759,
        "nodeType": "PragmaDirective",
        "src": "38:24:169",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 82761,
        "nodeType": "ImportDirective",
        "src": "64:40:169",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82760,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "72:4:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82763,
        "nodeType": "ImportDirective",
        "src": "105:53:169",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 54006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82762,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54005,
              "src": "113:11:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82765,
        "nodeType": "ImportDirective",
        "src": "159:48:169",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82764,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "167:8:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82768,
        "nodeType": "ImportDirective",
        "src": "209:72:169",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 24680,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82766,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24679,
              "src": "217:9:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82767,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25731,
              "src": "228:5:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82770,
        "nodeType": "ImportDirective",
        "src": "282:51:169",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 66806,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82769,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66805,
              "src": "290:9:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82772,
        "nodeType": "ImportDirective",
        "src": "334:64:169",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82771,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40791,
              "src": "342:14:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82774,
        "nodeType": "ImportDirective",
        "src": "399:51:169",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82773,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "407:7:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82776,
        "nodeType": "ImportDirective",
        "src": "451:51:169",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 51235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82775,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51234,
              "src": "459:10:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82778,
        "nodeType": "ImportDirective",
        "src": "504:48:169",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 37547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82777,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37546,
              "src": "512:8:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82779,
        "nodeType": "ImportDirective",
        "src": "554:24:169",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82781,
        "nodeType": "ImportDirective",
        "src": "580:48:169",
        "nodes": [],
        "absolutePath": "src/policies/Heart.sol",
        "file": "policies/Heart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 47233,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82780,
              "name": "OlympusHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47232,
              "src": "588:12:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82783,
        "nodeType": "ImportDirective",
        "src": "630:60:169",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83946,
        "sourceUnit": 52283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82782,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52282,
              "src": "638:9:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82843,
        "nodeType": "ContractDefinition",
        "src": "739:654:169",
        "nodes": [
          {
            "id": 82788,
            "nodeType": "VariableDeclaration",
            "src": "777:18:169",
            "nodes": [],
            "constant": false,
            "functionSelector": "65372147",
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "789:6:169",
            "scope": 82843,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 82787,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "777:4:169",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82790,
            "nodeType": "ErrorDefinition",
            "src": "801:29:169",
            "nodes": [],
            "errorSelector": "1117572b",
            "name": "Operator_CustomError",
            "nameLocation": "807:20:169",
            "parameters": {
              "id": 82789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:169"
            }
          },
          {
            "id": 82804,
            "nodeType": "FunctionDefinition",
            "src": "836:74:169",
            "nodes": [],
            "body": {
              "id": 82803,
              "nodeType": "Block",
              "src": "880:30:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82799,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82788,
                      "src": "890:6:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 82800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82802,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:169"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 82796,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82793,
                    "src": "871:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 82797,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82795,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28659,
                  "src": "864:6:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "864:15:169"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 82794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82793,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "855:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 82804,
                  "src": "848:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29497",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 82792,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82791,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29497,
                      "src": "848:6:169"
                    },
                    "referencedDeclaration": 29497,
                    "src": "848:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:16:169"
            },
            "returnParameters": {
              "id": 82798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:169"
            },
            "scope": 82843,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82813,
            "nodeType": "FunctionDefinition",
            "src": "971:93:169",
            "nodes": [],
            "body": {
              "id": 82812,
              "nodeType": "Block",
              "src": "1062:2:169",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              28649
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "980:21:169",
            "overrides": {
              "id": 82806,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1013:8:169"
            },
            "parameters": {
              "id": 82805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:169"
            },
            "returnParameters": {
              "id": 82811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82810,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "1048:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 82813,
                  "src": "1031:29:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82808,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 82807,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28362,
                        "src": "1031:7:169"
                      },
                      "referencedDeclaration": 28362,
                      "src": "1031:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 82809,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:9:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28362_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:31:169"
            },
            "scope": 82843,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82822,
            "nodeType": "FunctionDefinition",
            "src": "1070:95:169",
            "nodes": [],
            "body": {
              "id": 82821,
              "nodeType": "Block",
              "src": "1163:2:169",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              28658
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1079:18:169",
            "overrides": {
              "id": 82815,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1114:8:169"
            },
            "parameters": {
              "id": 82814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:169"
            },
            "returnParameters": {
              "id": 82820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82819,
                  "mutability": "mutable",
                  "name": "requests",
                  "nameLocation": "1153:8:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 82822,
                  "src": "1132:29:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82817,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 82816,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28360,
                        "src": "1132:11:169"
                      },
                      "referencedDeclaration": 28360,
                      "src": "1132:11:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28360_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 82818,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:13:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28360_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:31:169"
            },
            "scope": 82843,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82832,
            "nodeType": "FunctionDefinition",
            "src": "1218:92:169",
            "nodes": [],
            "body": {
              "id": 82831,
              "nodeType": "Block",
              "src": "1251:59:169",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 82826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1265:7:169",
                    "subExpression": {
                      "id": 82825,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82788,
                      "src": "1266:6:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82830,
                  "nodeType": "IfStatement",
                  "src": "1261:42:169",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82827,
                        "name": "Operator_CustomError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82790,
                        "src": "1281:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 82828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1281:22:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 82829,
                    "nodeType": "RevertStatement",
                    "src": "1274:29:169"
                  }
                }
              ]
            },
            "functionSelector": "7159a618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operate",
            "nameLocation": "1227:7:169",
            "parameters": {
              "id": 82823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:169"
            },
            "returnParameters": {
              "id": 82824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:169"
            },
            "scope": 82843,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82842,
            "nodeType": "FunctionDefinition",
            "src": "1316:75:169",
            "nodes": [],
            "body": {
              "id": 82841,
              "nodeType": "Block",
              "src": "1358:33:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82837,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82788,
                      "src": "1368:6:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82838,
                      "name": "result_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82834,
                      "src": "1377:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1368:16:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82840,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:16:169"
                }
              ]
            },
            "functionSelector": "f4b4dc2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setResult",
            "nameLocation": "1325:9:169",
            "parameters": {
              "id": 82835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82834,
                  "mutability": "mutable",
                  "name": "result_",
                  "nameLocation": "1340:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 82842,
                  "src": "1335:12:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82833,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:14:169"
            },
            "returnParameters": {
              "id": 82836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:169"
            },
            "scope": 82843,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82785,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28659,
              "src": "764:6:169"
            },
            "id": 82786,
            "nodeType": "InheritanceSpecifier",
            "src": "764:6:169"
          }
        ],
        "canonicalName": "MockOperator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 82784,
          "nodeType": "StructuredDocumentation",
          "src": "692:46:169",
          "text": " @notice Mock Operator to test Heart"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          82843,
          28659,
          28512
        ],
        "name": "MockOperator",
        "nameLocation": "748:12:169",
        "scope": 83946,
        "usedErrors": [
          28465,
          28585,
          82790
        ]
      },
      {
        "id": 83945,
        "nodeType": "ContractDefinition",
        "src": "1395:11870:169",
        "nodes": [
          {
            "id": 82848,
            "nodeType": "UsingForDirective",
            "src": "1428:27:169",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 82846,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37546,
              "src": "1434:8:169"
            },
            "typeName": {
              "id": 82847,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1447:7:169",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 82851,
            "nodeType": "VariableDeclaration",
            "src": "1461:30:169",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1480:11:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$54005",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 82850,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82849,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54005,
                "src": "1461:11:169"
              },
              "referencedDeclaration": 54005,
              "src": "1461:11:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$54005",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82853,
            "nodeType": "VariableDeclaration",
            "src": "1497:22:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1514:5:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82852,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:169",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82855,
            "nodeType": "VariableDeclaration",
            "src": "1525:20:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1542:3:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82854,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:169",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82857,
            "nodeType": "VariableDeclaration",
            "src": "1551:23:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "1568:6:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82856,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:169",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82860,
            "nodeType": "VariableDeclaration",
            "src": "1581:30:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1600:11:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82859,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82858,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1581:9:169"
              },
              "referencedDeclaration": 24679,
              "src": "1581:9:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82863,
            "nodeType": "VariableDeclaration",
            "src": "1618:22:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1634:6:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29497",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 82862,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82861,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29497,
                "src": "1618:6:169"
              },
              "referencedDeclaration": 29497,
              "src": "1618:6:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29497",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82866,
            "nodeType": "VariableDeclaration",
            "src": "1646:24:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "1665:5:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$66805",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 82865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82864,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66805,
                "src": "1646:9:169"
              },
              "referencedDeclaration": 66805,
              "src": "1646:9:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$66805",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82869,
            "nodeType": "VariableDeclaration",
            "src": "1676:29:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1700:5:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 82868,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82867,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40791,
                "src": "1676:14:169"
              },
              "referencedDeclaration": 40791,
              "src": "1676:14:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82872,
            "nodeType": "VariableDeclaration",
            "src": "1712:30:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1734:8:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOperator_$82843",
              "typeString": "contract MockOperator"
            },
            "typeName": {
              "id": 82871,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82870,
                "name": "MockOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82843,
                "src": "1712:12:169"
              },
              "referencedDeclaration": 82843,
              "src": "1712:12:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOperator_$82843",
                "typeString": "contract MockOperator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82875,
            "nodeType": "VariableDeclaration",
            "src": "1748:27:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "heart",
            "nameLocation": "1770:5:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
              "typeString": "contract OlympusHeart"
            },
            "typeName": {
              "id": 82874,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82873,
                "name": "OlympusHeart",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47232,
                "src": "1748:12:169"
              },
              "referencedDeclaration": 47232,
              "src": "1748:12:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                "typeString": "contract OlympusHeart"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82878,
            "nodeType": "VariableDeclaration",
            "src": "1781:30:169",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1801:10:169",
            "scope": 83945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 82877,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82876,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51234,
                "src": "1781:10:169"
              },
              "referencedDeclaration": 51234,
              "src": "1781:10:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 83119,
            "nodeType": "FunctionDefinition",
            "src": "1818:2136:169",
            "nodes": [],
            "body": {
              "id": 83118,
              "nodeType": "Block",
              "src": "1842:2112:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 82892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 82890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 82888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 82886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 82884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1860:2:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 82885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1865:3:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "1860:8:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 82887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1871:2:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "1860:13:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 82889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1876:2:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "1860:18:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 82891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1881:2:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "1860:23:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 82881,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "1852:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "1852:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 82893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:32:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82894,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:32:169"
                },
                {
                  "expression": {
                    "id": 82900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82895,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82851,
                      "src": "1962:11:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1976:15:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$54005_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 82897,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 82896,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54005,
                            "src": "1980:11:169"
                          },
                          "referencedDeclaration": 54005,
                          "src": "1980:11:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$54005",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 82899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1976:17:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$54005",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "1962:31:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$54005",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 82901,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:31:169"
                },
                {
                  "id": 82930,
                  "nodeType": "Block",
                  "src": "2003:160:169",
                  "statements": [
                    {
                      "assignments": [
                        82906
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 82906,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2034:5:169",
                          "nodeType": "VariableDeclaration",
                          "scope": 82930,
                          "src": "2017:22:169",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 82904,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2017:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 82905,
                            "nodeType": "ArrayTypeName",
                            "src": "2017:9:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 82911,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 82909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2061:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 82907,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82851,
                            "src": "2042:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$54005",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 82908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54004,
                          "src": "2042:18:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 82910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:21:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2017:46:169"
                    },
                    {
                      "expression": {
                        "id": 82916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82912,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82853,
                          "src": "2077:5:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82913,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82906,
                            "src": "2085:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82915,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 82914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2091:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2085:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2077:16:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82917,
                      "nodeType": "ExpressionStatement",
                      "src": "2077:16:169"
                    },
                    {
                      "expression": {
                        "id": 82922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82918,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82855,
                          "src": "2107:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82919,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82906,
                            "src": "2113:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82921,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 82920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2113:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2107:14:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82923,
                      "nodeType": "ExpressionStatement",
                      "src": "2107:14:169"
                    },
                    {
                      "expression": {
                        "id": 82928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82924,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82857,
                          "src": "2135:6:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82925,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82906,
                            "src": "2144:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82927,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 82926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2150:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2144:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:17:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82929,
                      "nodeType": "ExpressionStatement",
                      "src": "2135:17:169"
                    }
                  ]
                },
                {
                  "id": 82941,
                  "nodeType": "Block",
                  "src": "2172:114:169",
                  "statements": [
                    {
                      "documentation": "Deploy token mocks",
                      "expression": {
                        "id": 82939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82931,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82860,
                          "src": "2221:11:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657761726420546f6b656e",
                              "id": 82935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2249:14:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              "value": "Reward Token"
                            },
                            {
                              "hexValue": "525744",
                              "id": 82936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              "value": "RWD"
                            },
                            {
                              "hexValue": "3138",
                              "id": 82937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:2:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 82934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2235:13:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 82933,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82932,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "2239:9:169"
                              },
                              "referencedDeclaration": 24679,
                              "src": "2239:9:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 82938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2235:40:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "2221:54:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82940,
                      "nodeType": "ExpressionStatement",
                      "src": "2221:54:169"
                    }
                  ]
                },
                {
                  "id": 83002,
                  "nodeType": "Block",
                  "src": "2296:485:169",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 82947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82942,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82863,
                          "src": "2340:6:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 82945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2349:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29497_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 82944,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82943,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29497,
                                "src": "2353:6:169"
                              },
                              "referencedDeclaration": 29497,
                              "src": "2353:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 82946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2349:12:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "2340:21:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 82948,
                      "nodeType": "ExpressionStatement",
                      "src": "2340:21:169"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 82962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82949,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82866,
                          "src": "2458:5:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66805",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82953,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82863,
                              "src": "2480:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 82956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2495:7:169",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 82955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2488:6:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 82954,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2488:6:169",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 82957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2488:15:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 82960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 82958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2505:2:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 82959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2510:4:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "2505:9:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 82952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2466:13:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$66805_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 82951,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82950,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66805,
                                "src": "2470:9:169"
                              },
                              "referencedDeclaration": 66805,
                              "src": "2470:9:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$66805",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 82961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2466:49:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66805",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "2458:57:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66805",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 82963,
                      "nodeType": "ExpressionStatement",
                      "src": "2458:57:169"
                    },
                    {
                      "expression": {
                        "id": 82970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82964,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82869,
                          "src": "2529:5:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82968,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82863,
                              "src": "2556:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 82967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2537:18:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoRoles_$40791_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 82966,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82965,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40791,
                                "src": "2541:14:169"
                              },
                              "referencedDeclaration": 40791,
                              "src": "2541:14:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 82969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2537:26:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2529:34:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 82971,
                      "nodeType": "ExpressionStatement",
                      "src": "2529:34:169"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2639:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2633:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82972,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "2610:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66764,
                          "src": "2610:22:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:34:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82979,
                      "nodeType": "ExpressionStatement",
                      "src": "2610:34:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2677:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2683:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2677:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82980,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "2658:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66774,
                          "src": "2658:18:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:30:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82987,
                      "nodeType": "ExpressionStatement",
                      "src": "2658:30:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2724:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2730:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2724:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82988,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "2702:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCurrentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66784,
                          "src": "2702:21:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:33:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82995,
                      "nodeType": "ExpressionStatement",
                      "src": "2702:33:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 82999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:2:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 82996,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "2749:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66805",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66794,
                          "src": "2749:17:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 83000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83001,
                      "nodeType": "ExpressionStatement",
                      "src": "2749:21:169"
                    }
                  ]
                },
                {
                  "id": 83038,
                  "nodeType": "Block",
                  "src": "2791:378:169",
                  "statements": [
                    {
                      "documentation": "Deploy mock operator",
                      "expression": {
                        "id": 83009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 83003,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82872,
                          "src": "2842:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$82843",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 83007,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82863,
                              "src": "2870:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 83006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2853:16:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_MockOperator_$82843_$",
                              "typeString": "function (contract Kernel) returns (contract MockOperator)"
                            },
                            "typeName": {
                              "id": 83005,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 83004,
                                "name": "MockOperator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 82843,
                                "src": "2857:12:169"
                              },
                              "referencedDeclaration": 82843,
                              "src": "2857:12:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOperator_$82843",
                                "typeString": "contract MockOperator"
                              }
                            }
                          },
                          "id": 83008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:24:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$82843",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "src": "2842:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$82843",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 83010,
                      "nodeType": "ExpressionStatement",
                      "src": "2842:35:169"
                    },
                    {
                      "documentation": "Deploy heart",
                      "expression": {
                        "id": 83028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 83011,
                          "name": "heart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82875,
                          "src": "2921:5:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 83015,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82863,
                              "src": "2963:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 83019,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82872,
                                      "src": "3005:8:169",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOperator_$82843",
                                        "typeString": "contract MockOperator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOperator_$82843",
                                        "typeString": "contract MockOperator"
                                      }
                                    ],
                                    "id": 83018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2997:7:169",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 83017,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2997:7:169",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 83020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2997:17:169",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 83016,
                                "name": "IOperator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52282,
                                "src": "2987:9:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOperator_$52282_$",
                                  "typeString": "type(contract IOperator)"
                                }
                              },
                              "id": 83021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2987:28:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOperator_$52282",
                                "typeString": "contract IOperator"
                              }
                            },
                            {
                              "id": 83022,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82860,
                              "src": "3033:11:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32653138",
                                  "id": 83025,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3070:4:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  }
                                ],
                                "id": 83024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3062:7:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 83023,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3062:7:169",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:13:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IOperator_$52282",
                                "typeString": "contract IOperator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 83014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2929:16:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_contract$_IOperator_$52282_$_t_contract$_ERC20_$25731_$_t_uint256_$returns$_t_contract$_OlympusHeart_$47232_$",
                              "typeString": "function (contract Kernel,contract IOperator,contract ERC20,uint256) returns (contract OlympusHeart)"
                            },
                            "typeName": {
                              "id": 83013,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 83012,
                                "name": "OlympusHeart",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 47232,
                                "src": "2933:12:169"
                              },
                              "referencedDeclaration": 47232,
                              "src": "2933:12:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          },
                          "id": 83027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:179:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "src": "2921:187:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83029,
                      "nodeType": "ExpressionStatement",
                      "src": "2921:187:169"
                    },
                    {
                      "expression": {
                        "id": 83036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 83030,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82878,
                          "src": "3123:10:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 83034,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82863,
                              "src": "3151:6:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 83033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3136:14:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_RolesAdmin_$51234_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 83032,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 83031,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51234,
                                "src": "3140:10:169"
                              },
                              "referencedDeclaration": 51234,
                              "src": "3140:10:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 83035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3136:22:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "3123:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 83037,
                      "nodeType": "ExpressionStatement",
                      "src": "3123:35:169"
                    }
                  ]
                },
                {
                  "id": 83101,
                  "nodeType": "Block",
                  "src": "3179:627:169",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 83042,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3292:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 83043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "3292:21:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 83046,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82866,
                                "src": "3323:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$66805",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$66805",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 83045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3315:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83044,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3315:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3315:14:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83039,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82863,
                            "src": "3271:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 83041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3271:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 83048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3271:59:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83049,
                      "nodeType": "ExpressionStatement",
                      "src": "3271:59:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 83053,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3365:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 83054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "3365:21:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 83057,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82869,
                                "src": "3396:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 83056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3388:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83055,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3388:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3388:14:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83050,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82863,
                            "src": "3344:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 83052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3344:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 83059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:59:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83060,
                      "nodeType": "ExpressionStatement",
                      "src": "3344:59:169"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 83064,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3472:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 83065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3472:22:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 83068,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82872,
                                "src": "3504:8:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockOperator_$82843",
                                  "typeString": "contract MockOperator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockOperator_$82843",
                                  "typeString": "contract MockOperator"
                                }
                              ],
                              "id": 83067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3496:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83066,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3496:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3496:17:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83061,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82863,
                            "src": "3451:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 83063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3451:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 83070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:63:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83071,
                      "nodeType": "ExpressionStatement",
                      "src": "3451:63:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 83075,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3549:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 83076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3549:22:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 83079,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "3581:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 83078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3573:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83077,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3573:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3573:14:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83072,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82863,
                            "src": "3528:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 83074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3528:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 83081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3528:60:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83082,
                      "nodeType": "ExpressionStatement",
                      "src": "3528:60:169"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 83086,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3623:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 83087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3623:22:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 83090,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82878,
                                "src": "3655:10:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 83089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3647:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83088,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3647:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3647:19:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83083,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82863,
                            "src": "3602:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 83085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3602:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 83092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3602:65:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83093,
                      "nodeType": "ExpressionStatement",
                      "src": "3602:65:169"
                    },
                    {
                      "documentation": "Heart roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 83097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3773:13:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          },
                          {
                            "id": 83098,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82857,
                            "src": "3788:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83094,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82878,
                            "src": "3752:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 83096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "3752:20:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 83099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3752:43:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83100,
                      "nodeType": "ExpressionStatement",
                      "src": "3752:43:169"
                    }
                  ]
                },
                {
                  "id": 83117,
                  "nodeType": "Block",
                  "src": "3816:132:169",
                  "statements": [
                    {
                      "documentation": "Mint reward tokens to heart contract",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 83107,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "3908:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 83106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3900:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3900:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3900:14:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "id": 83113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31303030",
                                  "id": 83111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3924:4:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 83112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3931:4:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "3924:11:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 83110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3916:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 83109,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3916:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3916:20:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 83102,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82860,
                            "src": "3883:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 83104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24665,
                          "src": "3883:16:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 83115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:54:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83116,
                      "nodeType": "ExpressionStatement",
                      "src": "3883:54:169"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1827:5:169",
            "parameters": {
              "id": 82879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:169"
            },
            "returnParameters": {
              "id": 82880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83176,
            "nodeType": "FunctionDefinition",
            "src": "4286:622:169",
            "nodes": [],
            "body": {
              "id": 83175,
              "nodeType": "Block",
              "src": "4325:583:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83125,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "4420:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83175,
                      "src": "4412:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83129,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83126,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "4432:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47231,
                      "src": "4432:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:37:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83133,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4467:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4467:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83135,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83125,
                          "src": "4485:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4467:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83130,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4459:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "4459:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83138,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:36:169"
                },
                {
                  "assignments": [
                    83141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83141,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "4577:12:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83175,
                      "src": "4569:20:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 83149,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83146,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4622:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83142,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "4592:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "4592:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:59:169"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83150,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "4666:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "4666:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83154,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:12:169"
                },
                {
                  "assignments": [
                    83157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83157,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "4791:10:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83175,
                      "src": "4783:18:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4783:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 83165,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83162,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4834:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4826:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4826:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4826:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83158,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "4804:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "4804:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4783:57:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83167,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83157,
                        "src": "4859:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83168,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83141,
                          "src": "4871:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83169,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "4886:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46847,
                            "src": "4886:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:14:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4871:29:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83166,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4850:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:51:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83174,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:51:169"
                }
              ]
            },
            "documentation": {
              "id": 83120,
              "nodeType": "StructuredDocumentation",
              "src": "4057:224:169",
              "text": "DONE\n [X] beat\n     [X] active and frequency has passed\n     [X] cannot beat if not active\n     [X] cannot beat if not enough time has passed\n     [X] fails if price or operator revert"
            },
            "functionSelector": "a00f2709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_beat",
            "nameLocation": "4295:20:169",
            "parameters": {
              "id": 83121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:2:169"
            },
            "returnParameters": {
              "id": 83122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83210,
            "nodeType": "FunctionDefinition",
            "src": "4914:334:169",
            "nodes": [],
            "body": {
              "id": 83209,
              "nodeType": "Block",
              "src": "4969:279:169",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the heart to inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83182,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "5026:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83179,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5017:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5017:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83184,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:16:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83185,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "5043:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47131,
                      "src": "5043:16:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:18:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83189,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:18:169"
                },
                {
                  "assignments": [
                    83192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83192,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5137:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83209,
                      "src": "5124:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83191,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert",
                  "id": 83197,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4265617453746f707065642829",
                        "id": 83195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5167:21:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        },
                        "value": "Heart_BeatStopped()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        }
                      ],
                      "expression": {
                        "id": 83193,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5143:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5143:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:46:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:65:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83201,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83192,
                        "src": "5215:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83198,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5199:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5199:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83203,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83204,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "5229:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "5229:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83208,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:12:169"
                }
              ]
            },
            "functionSelector": "7e9506de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfInactive",
            "nameLocation": "4923:36:169",
            "parameters": {
              "id": 83177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:2:169"
            },
            "returnParameters": {
              "id": 83178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83233,
            "nodeType": "FunctionDefinition",
            "src": "5254:318:169",
            "nodes": [],
            "body": {
              "id": 83232,
              "nodeType": "Block",
              "src": "5309:263:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83215,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5462:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83232,
                      "src": "5449:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83214,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5449:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert since it hasn't been more than the frequency since the last beat (deployment)",
                  "id": 83220,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5492:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83216,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5468:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5468:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5468:45:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5449:64:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83224,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83215,
                        "src": "5539:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83221,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5523:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5523:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83226,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83227,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "5553:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "5553:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83231,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:12:169"
                }
              ]
            },
            "functionSelector": "8d0be1ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfTooEarly",
            "nameLocation": "5263:36:169",
            "parameters": {
              "id": 83211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:2:169"
            },
            "returnParameters": {
              "id": 83212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83299,
            "nodeType": "FunctionDefinition",
            "src": "5578:731:169",
            "nodes": [],
            "body": {
              "id": 83298,
              "nodeType": "Block",
              "src": "5642:667:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83239,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5698:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5698:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83241,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "5716:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47231,
                              "src": "5716:15:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 83243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5716:17:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 83244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5736:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5716:21:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5698:39:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5690:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "5690:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:48:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83248,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:48:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83250,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "5858:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46844,
                          "src": "5858:14:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5858:16:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83253,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5876:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5876:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83255,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "5894:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47231,
                              "src": "5894:15:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 83257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5894:17:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 83258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5914:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5894:21:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5876:39:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83249,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1768,
                        1793,
                        1823,
                        1848
                      ],
                      "referencedDeclaration": 1768,
                      "src": "5849:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:67:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83262,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:67:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83263,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "5953:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "5953:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5953:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83267,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:12:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83269,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "6068:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46844,
                          "src": "6068:14:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6068:16:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83272,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6086:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6086:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83274,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "6104:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47231,
                            "src": "6104:15:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6104:17:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6086:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83268,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "6059:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:63:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83279,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:63:169"
                },
                {
                  "assignments": [
                    83281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83281,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6199:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83298,
                      "src": "6186:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83280,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6186:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83286,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83282,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6205:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "6205:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:45:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:64:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83290,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83281,
                        "src": "6276:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83287,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6260:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6260:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6260:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83292,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83293,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "6290:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "6290:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83297,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:12:169"
                }
              ]
            },
            "functionSelector": "7b47a7f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
            "nameLocation": "5587:45:169",
            "parameters": {
              "id": 83234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:169"
            },
            "returnParameters": {
              "id": 83235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83330,
            "nodeType": "FunctionDefinition",
            "src": "6315:383:169",
            "nodes": [],
            "body": {
              "id": 83329,
              "nodeType": "Block",
              "src": "6366:332:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83304,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6461:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83329,
                      "src": "6453:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6453:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83308,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83305,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "6473:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47231,
                      "src": "6473:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6473:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6453:37:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83312,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6508:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6508:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83314,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83304,
                          "src": "6526:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83309,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6500:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6500:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83317,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:36:169"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 83321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6610:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 83318,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "6594:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66805",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 83320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66692,
                      "src": "6594:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 83322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:22:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83323,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:22:169"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83324,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "6679:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "6679:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83328,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:12:169"
                }
              ]
            },
            "functionSelector": "e2627194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfPriceReverts",
            "nameLocation": "6324:32:169",
            "parameters": {
              "id": 83300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6356:2:169"
            },
            "returnParameters": {
              "id": 83301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83361,
            "nodeType": "FunctionDefinition",
            "src": "6704:388:169",
            "nodes": [],
            "body": {
              "id": 83360,
              "nodeType": "Block",
              "src": "6757:335:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83335,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6852:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83360,
                      "src": "6844:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83339,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83336,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "6864:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47231,
                      "src": "6864:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6864:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:37:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83343,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6899:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6899:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83345,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83335,
                          "src": "6917:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6899:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83340,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6891:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6891:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83348,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:36:169"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 83352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7004:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 83349,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82872,
                        "src": "6985:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$82843",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 83351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82842,
                      "src": "6985:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 83353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6985:25:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83354,
                  "nodeType": "ExpressionStatement",
                  "src": "6985:25:169"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83355,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "7073:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "7073:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83359,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:12:169"
                }
              ]
            },
            "functionSelector": "0bb8dc03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfOperateReverts",
            "nameLocation": "6713:34:169",
            "parameters": {
              "id": 83331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6747:2:169"
            },
            "returnParameters": {
              "id": 83332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6757:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83381,
            "nodeType": "FunctionDefinition",
            "src": "7167:246:169",
            "nodes": [],
            "body": {
              "id": 83380,
              "nodeType": "Block",
              "src": "7215:198:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83367,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "7281:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83380,
                      "src": "7273:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83366,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7273:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart",
                  "id": 83371,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83368,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "7293:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47231,
                      "src": "7293:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:37:169"
                },
                {
                  "documentation": "Check that the frequency is correct",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83373,
                        "name": "frequency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83367,
                        "src": "7378:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "38",
                            "id": 83376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7397:7:169",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            },
                            "value": "8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            }
                          ],
                          "id": 83375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7389:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83374,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7389:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7389:16:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83372,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7369:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:37:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83379,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:37:169"
                }
              ]
            },
            "documentation": {
              "id": 83362,
              "nodeType": "StructuredDocumentation",
              "src": "7144:18:169",
              "text": "[X] frequency"
            },
            "functionSelector": "882d3844",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_viewFrequency",
            "nameLocation": "7176:29:169",
            "parameters": {
              "id": 83363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:2:169"
            },
            "returnParameters": {
              "id": 83364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83452,
            "nodeType": "FunctionDefinition",
            "src": "7693:832:169",
            "nodes": [],
            "body": {
              "id": 83451,
              "nodeType": "Block",
              "src": "7737:788:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83387,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7849:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83451,
                      "src": "7836:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83386,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7836:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect the revert since not enough time has passed",
                  "id": 83392,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7879:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83388,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7855:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7855:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:45:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7836:64:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83396,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83387,
                        "src": "7926:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83393,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7910:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7910:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83398,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83399,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "7940:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "7940:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7940:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83403,
                  "nodeType": "ExpressionStatement",
                  "src": "7940:12:169"
                },
                {
                  "documentation": "Reset the beat so that it can be called without moving the time forward",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83407,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "8056:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83404,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8047:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8047:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83409,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:16:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83410,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "8073:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47104,
                      "src": "8073:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83414,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:17:169"
                },
                {
                  "assignments": [
                    83417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83417,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "8172:12:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83451,
                      "src": "8164:20:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8164:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 83425,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83422,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8217:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8209:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83420,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8209:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8209:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83418,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "8187:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "8187:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8164:59:169"
                },
                {
                  "documentation": "Beat the heart and expect it to work",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83426,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "8283:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "8283:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8283:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83430,
                  "nodeType": "ExpressionStatement",
                  "src": "8283:12:169"
                },
                {
                  "assignments": [
                    83433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83433,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "8408:10:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83451,
                      "src": "8400:18:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 83441,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83438,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8451:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83434,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "8421:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "8421:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8421:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:57:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83443,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83433,
                        "src": "8476:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83444,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83417,
                          "src": "8488:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83445,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "8503:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46847,
                            "src": "8503:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8503:14:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:29:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83442,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8467:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:51:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83450,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:51:169"
                }
              ]
            },
            "documentation": {
              "id": 83382,
              "nodeType": "StructuredDocumentation",
              "src": "7466:222:169",
              "text": "DONE\n [X] resetBeat\n [X] activate and deactivate\n [X] setOperator\n [X] setRewardTokenAndAmount\n [X] withdrawUnspentRewards\n [X] cannot call admin functions without permissions"
            },
            "functionSelector": "e853d736",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_resetBeat",
            "nameLocation": "7702:25:169",
            "parameters": {
              "id": 83383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:169"
            },
            "returnParameters": {
              "id": 83384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7737:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83522,
            "nodeType": "FunctionDefinition",
            "src": "8531:752:169",
            "nodes": [],
            "body": {
              "id": 83521,
              "nodeType": "Block",
              "src": "8585:698:169",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Expect the heart to be active to begin with",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83456,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "8662:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46841,
                          "src": "8662:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 83458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8662:14:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83455,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8651:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:26:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83460,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:26:169"
                },
                {
                  "assignments": [
                    83462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83462,
                      "mutability": "mutable",
                      "name": "lastBeat",
                      "nameLocation": "8696:8:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83521,
                      "src": "8688:16:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83461,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8688:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83466,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83463,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "8707:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46844,
                      "src": "8707:14:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8707:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8688:35:169"
                },
                {
                  "documentation": "Toggle the heart to make it inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83470,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "8792:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83467,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8783:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8783:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8783:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83472,
                  "nodeType": "ExpressionStatement",
                  "src": "8783:16:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83473,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "8809:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47131,
                      "src": "8809:16:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8809:18:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83477,
                  "nodeType": "ExpressionStatement",
                  "src": "8809:18:169"
                },
                {
                  "documentation": "Expect the heart to be inactive and lastBeat to remain the same",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8925:15:169",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83479,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "8926:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46841,
                            "src": "8926:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 83481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8926:14:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83478,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8914:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:27:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83484,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:27:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83486,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "8960:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46844,
                          "src": "8960:14:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8960:16:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83489,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83462,
                        "src": "8978:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83485,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8951:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8951:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83491,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:36:169"
                },
                {
                  "documentation": "Toggle the heart to make it active again",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83495,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "9060:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83492,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9051:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9051:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9051:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83497,
                  "nodeType": "ExpressionStatement",
                  "src": "9051:16:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83498,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "9077:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47119,
                      "src": "9077:14:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9077:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83502,
                  "nodeType": "ExpressionStatement",
                  "src": "9077:16:169"
                },
                {
                  "documentation": "Expect the heart to be active again and lastBeat to be reset",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83504,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "9188:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46841,
                          "src": "9188:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 83506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9188:14:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83503,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9177:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9177:26:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83508,
                  "nodeType": "ExpressionStatement",
                  "src": "9177:26:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83510,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "9222:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46844,
                          "src": "9222:14:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9222:16:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83513,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9240:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9240:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83515,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "9258:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47231,
                            "src": "9258:15:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:17:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9240:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83509,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9213:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9213:63:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83520,
                  "nodeType": "ExpressionStatement",
                  "src": "9213:63:169"
                }
              ]
            },
            "functionSelector": "5d948bbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_activate_deactivate",
            "nameLocation": "8540:35:169",
            "parameters": {
              "id": 83453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8575:2:169"
            },
            "returnParameters": {
              "id": 83454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83550,
            "nodeType": "FunctionDefinition",
            "src": "9289:305:169",
            "nodes": [],
            "body": {
              "id": 83549,
              "nodeType": "Block",
              "src": "9353:241:169",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the operator using the provided address",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83530,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "9428:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83527,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9419:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9419:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9419:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83532,
                  "nodeType": "ExpressionStatement",
                  "src": "9419:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83536,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83524,
                        "src": "9463:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83533,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "9445:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47147,
                      "src": "9445:17:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9445:30:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83538,
                  "nodeType": "ExpressionStatement",
                  "src": "9445:30:169"
                },
                {
                  "documentation": "Check that the operator has been updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83542,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "9556:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46857,
                              "src": "9556:14:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IOperator_$52282_$",
                                "typeString": "function () view external returns (contract IOperator)"
                              }
                            },
                            "id": 83544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9556:16:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOperator_$52282",
                              "typeString": "contract IOperator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOperator_$52282",
                              "typeString": "contract IOperator"
                            }
                          ],
                          "id": 83541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9548:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83540,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9548:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:25:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83546,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83524,
                        "src": "9575:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83539,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9539:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 83547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9539:48:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83548,
                  "nodeType": "ExpressionStatement",
                  "src": "9539:48:169"
                }
              ]
            },
            "functionSelector": "56735b57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectnes_setOperator",
            "nameLocation": "9298:26:169",
            "parameters": {
              "id": 83525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83524,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "9333:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 83550,
                  "src": "9325:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9325:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9324:21:169"
            },
            "returnParameters": {
              "id": 83526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9353:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83755,
            "nodeType": "FunctionDefinition",
            "src": "9600:1809:169",
            "nodes": [],
            "body": {
              "id": 83754,
              "nodeType": "Block",
              "src": "9658:1751:169",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83556,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9736:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9736:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83558,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "9754:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47231,
                            "src": "9754:15:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9754:17:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9736:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83553,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9728:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "9728:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:44:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83563,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:44:169"
                },
                {
                  "assignments": [
                    83567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83567,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "9829:8:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "9819:18:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24679",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 83566,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83565,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24679,
                          "src": "9819:9:169"
                        },
                        "referencedDeclaration": 24679,
                        "src": "9819:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create new reward token",
                  "id": 83575,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4e657720546f6b656e",
                        "id": 83571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9854:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        "value": "New Token"
                      },
                      {
                        "hexValue": "4e54",
                        "id": 83572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9867:4:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        "value": "NT"
                      },
                      {
                        "hexValue": "3138",
                        "id": 83573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9873:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 83570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9840:13:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                      },
                      "typeName": {
                        "id": 83569,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83568,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24679,
                          "src": "9844:9:169"
                        },
                        "referencedDeclaration": 24679,
                        "src": "9844:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 83574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$24679",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9819:57:169"
                },
                {
                  "assignments": [
                    83577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83577,
                      "mutability": "mutable",
                      "name": "newReward",
                      "nameLocation": "9894:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "9886:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9886:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83582,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32653138",
                        "id": 83580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:4:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 83579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9906:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 83578,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9906:7:169",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 83581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9906:13:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9886:33:169"
                },
                {
                  "assignments": [
                    83585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83585,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10036:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "10023:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83584,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10023:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to set new reward token and amount while a beat is available, expect to fail",
                  "id": 83590,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 83588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10066:23:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 83586,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10042:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "10042:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10042:48:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10023:67:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83594,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83585,
                        "src": "10116:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83591,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10100:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10100:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83596,
                  "nodeType": "ExpressionStatement",
                  "src": "10100:20:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83600,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "10139:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83597,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10130:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10130:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10130:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83602,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83606,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83567,
                        "src": "10186:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 83607,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83577,
                        "src": "10196:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83603,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "10156:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47190,
                      "src": "10156:29:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10156:50:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83609,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:50:169"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83610,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "10244:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "10244:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10244:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83614,
                  "nodeType": "ExpressionStatement",
                  "src": "10244:12:169"
                },
                {
                  "documentation": "Set a new reward token and amount from the policy",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83618,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "10338:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83615,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10329:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10329:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83620,
                  "nodeType": "ExpressionStatement",
                  "src": "10329:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83624,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83567,
                        "src": "10385:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 83625,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83577,
                        "src": "10395:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83621,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "10355:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47190,
                      "src": "10355:29:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10355:50:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83627,
                  "nodeType": "ExpressionStatement",
                  "src": "10355:50:169"
                },
                {
                  "documentation": "Expect the heart's reward token and reward to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83631,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "10502:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46851,
                              "src": "10502:17:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$25731_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 83633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10502:19:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25731",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$25731",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 83630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10494:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10494:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10494:28:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 83637,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83567,
                            "src": "10532:8:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 83636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10524:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83635,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10524:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10524:17:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83628,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "10485:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 83639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10485:57:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83640,
                  "nodeType": "ExpressionStatement",
                  "src": "10485:57:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83642,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "10561:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46847,
                          "src": "10561:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:14:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83645,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83577,
                        "src": "10577:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83641,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10552:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:35:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83647,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:35:169"
                },
                {
                  "documentation": "Mint some new tokens to the heart to pay rewards",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83653,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "10681:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 83652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83651,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:14:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            },
                            "id": 83659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 83657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10697:1:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 83658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10701:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "10697:8:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          ],
                          "id": 83656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10689:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83655,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10689:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10689:17:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83648,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83567,
                        "src": "10659:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24665,
                      "src": "10659:13:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:48:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83662,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:48:169"
                },
                {
                  "assignments": [
                    83665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83665,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "10800:12:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "10792:20:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10792:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Expect the heart to reward the new token and amount on a beat",
                  "id": 83673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83670,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10842:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10834:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83668,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10834:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10834:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83666,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83567,
                        "src": "10815:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "10815:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10815:33:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10792:56:169"
                },
                {
                  "assignments": [
                    83675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83675,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "10866:9:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "10858:17:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10858:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83679,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83676,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "10878:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47231,
                      "src": "10878:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10878:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10858:37:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83683,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10913:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10913:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83685,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83675,
                          "src": "10931:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83680,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10905:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "10905:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10905:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83688,
                  "nodeType": "ExpressionStatement",
                  "src": "10905:36:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83689,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "10951:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "10951:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10951:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83693,
                  "nodeType": "ExpressionStatement",
                  "src": "10951:12:169"
                },
                {
                  "assignments": [
                    83695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83695,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "10982:10:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "10974:18:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83703,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83700,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11022:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83945",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11014:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11014:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11014:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83696,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83567,
                        "src": "10995:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "10995:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:33:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:54:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83705,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83695,
                        "src": "11047:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83706,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83665,
                          "src": "11059:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83707,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "11074:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46847,
                            "src": "11074:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11074:14:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11059:29:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83704,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11038:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11038:51:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83712,
                  "nodeType": "ExpressionStatement",
                  "src": "11038:51:169"
                },
                {
                  "documentation": "Balance is now less than the reward amount, test the min function",
                  "expression": {
                    "id": 83721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83713,
                      "name": "startBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83665,
                      "src": "11178:12:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 83718,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11220:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$83945",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$83945",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 83717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11212:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83716,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11212:7:169",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11212:13:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 83714,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83567,
                          "src": "11193:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 83715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "11193:18:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 83720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:33:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11178:48:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83722,
                  "nodeType": "ExpressionStatement",
                  "src": "11178:48:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83726,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11244:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11244:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83728,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83675,
                          "src": "11262:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11244:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83723,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11236:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11236:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11236:36:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83731,
                  "nodeType": "ExpressionStatement",
                  "src": "11236:36:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83732,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "11282:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "11282:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11282:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83736,
                  "nodeType": "ExpressionStatement",
                  "src": "11282:12:169"
                },
                {
                  "expression": {
                    "id": 83745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83737,
                      "name": "endBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83695,
                      "src": "11305:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 83742,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11345:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$83945",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$83945",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 83741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11337:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83740,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11337:7:169",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11337:13:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 83738,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83567,
                          "src": "11318:8:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 83739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25382,
                        "src": "11318:18:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 83744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11318:33:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11305:46:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83746,
                  "nodeType": "ExpressionStatement",
                  "src": "11305:46:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83748,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83695,
                        "src": "11370:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83749,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83665,
                          "src": "11382:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 83750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11397:4:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11382:19:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83747,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11361:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:41:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83753,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:41:169"
                }
              ]
            },
            "functionSelector": "2c639076",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setRewardTokenAndAmount",
            "nameLocation": "9609:39:169",
            "parameters": {
              "id": 83551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9648:2:169"
            },
            "returnParameters": {
              "id": 83552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9658:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83865,
            "nodeType": "FunctionDefinition",
            "src": "11415:1174:169",
            "nodes": [],
            "body": {
              "id": 83864,
              "nodeType": "Block",
              "src": "11472:1117:169",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83761,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11550:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11550:15:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83763,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82875,
                              "src": "11568:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47231,
                            "src": "11568:15:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11568:17:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11550:35:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83758,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11542:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11542:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:44:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83768,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:44:169"
                },
                {
                  "assignments": [
                    83771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83771,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11676:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83864,
                      "src": "11663:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83770,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11663:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call while a beat is available, expect to fail",
                  "id": 83776,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 83774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11706:23:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 83772,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11682:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "11682:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11682:48:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11663:67:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83780,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83771,
                        "src": "11756:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83777,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11740:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "11740:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83782,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:20:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83786,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "11779:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83783,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11770:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11770:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11770:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83788,
                  "nodeType": "ExpressionStatement",
                  "src": "11770:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83792,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "11825:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83789,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "11796:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47217,
                      "src": "11796:28:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11796:41:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83794,
                  "nodeType": "ExpressionStatement",
                  "src": "11796:41:169"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83795,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "11875:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "11875:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:12:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83799,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:12:169"
                },
                {
                  "assignments": [
                    83802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83802,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "11970:12:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83864,
                      "src": "11962:20:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11962:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the balance of the reward token on the contract",
                  "id": 83810,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83807,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82857,
                            "src": "12015:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 83806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12007:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83805,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12007:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12007:15:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83803,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "11985:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "11985:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:38:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11962:61:169"
                },
                {
                  "assignments": [
                    83812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83812,
                      "mutability": "mutable",
                      "name": "heartBalance",
                      "nameLocation": "12041:12:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83864,
                      "src": "12033:20:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83811,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12033:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83820,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83817,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "12086:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 83816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12078:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12078:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12078:14:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83813,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "12056:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12056:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:37:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12033:60:169"
                },
                {
                  "documentation": "Withdraw the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83824,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82857,
                        "src": "12162:6:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83821,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12153:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12153:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83826,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83830,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "12208:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83827,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "12179:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47217,
                      "src": "12179:28:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:41:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83832,
                  "nodeType": "ExpressionStatement",
                  "src": "12179:41:169"
                },
                {
                  "assignments": [
                    83834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83834,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "12238:10:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83864,
                      "src": "12230:18:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83833,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12230:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83842,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83839,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82857,
                            "src": "12281:6:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 83838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12273:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12273:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12273:15:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83835,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "12251:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12251:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12251:38:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12230:59:169"
                },
                {
                  "documentation": "Expect the heart's reward token balance to be 0",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 83848,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82875,
                                "src": "12399:5:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 83847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12391:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12391:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12391:14:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83844,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82860,
                            "src": "12369:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 83845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "12369:21:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 83850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12369:37:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 83853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12416:1:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 83852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12408:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83851,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12408:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12408:10:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12360:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:59:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83856,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:59:169"
                },
                {
                  "documentation": "Expect this contract's reward token balance to be increased by the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83858,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83834,
                        "src": "12542:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83859,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83802,
                          "src": "12554:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83860,
                          "name": "heartBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83812,
                          "src": "12569:12:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12554:27:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83857,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12533:8:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12533:49:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83863,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:49:169"
                }
              ]
            },
            "functionSelector": "e9aaa0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_withdrawUnspentRewards",
            "nameLocation": "11424:38:169",
            "parameters": {
              "id": 83756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11462:2:169"
            },
            "returnParameters": {
              "id": 83757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11472:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83944,
            "nodeType": "FunctionDefinition",
            "src": "12595:668:169",
            "nodes": [],
            "body": {
              "id": 83943,
              "nodeType": "Block",
              "src": "12672:591:169",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83870,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12780:3:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 83943,
                      "src": "12767:16:169",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83869,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12767:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call admin functions on the heart as non-policy and expect revert",
                  "id": 83881,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 83873,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "12822:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 83874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "12822:25:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 83875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12822:34:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 83878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12878:13:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            }
                          ],
                          "id": 83877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12870:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 83876,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12870:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12870:22:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 83871,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12786:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12786:22:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 83880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:116:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12767:135:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83885,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83870,
                        "src": "12929:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83882,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12913:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12913:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83887,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83888,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "12943:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47104,
                      "src": "12943:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12943:17:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83892,
                  "nodeType": "ExpressionStatement",
                  "src": "12943:17:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83896,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83870,
                        "src": "12987:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83893,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12971:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12971:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12971:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83898,
                  "nodeType": "ExpressionStatement",
                  "src": "12971:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83899,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "13001:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47131,
                      "src": "13001:16:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13001:18:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83903,
                  "nodeType": "ExpressionStatement",
                  "src": "13001:18:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83907,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83870,
                        "src": "13046:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83904,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13030:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13030:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83909,
                  "nodeType": "ExpressionStatement",
                  "src": "13030:20:169"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83910,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "13060:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47119,
                      "src": "13060:14:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13060:16:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83914,
                  "nodeType": "ExpressionStatement",
                  "src": "13060:16:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83918,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83870,
                        "src": "13103:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83915,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13087:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13087:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13087:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83920,
                  "nodeType": "ExpressionStatement",
                  "src": "13087:20:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83924,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "13147:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32653138",
                            "id": 83927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13168:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 83926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13160:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83925,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13160:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13160:13:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83921,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "13117:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47190,
                      "src": "13117:29:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13117:57:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83930,
                  "nodeType": "ExpressionStatement",
                  "src": "13117:57:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83934,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83870,
                        "src": "13201:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83931,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13185:2:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13185:15:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13185:20:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83936,
                  "nodeType": "ExpressionStatement",
                  "src": "13185:20:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83940,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82860,
                        "src": "13244:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83937,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82875,
                        "src": "13215:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47232",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47217,
                      "src": "13215:28:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25731_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13215:41:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83942,
                  "nodeType": "ExpressionStatement",
                  "src": "13215:41:169"
                }
              ]
            },
            "functionSelector": "1fdada07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
            "nameLocation": "12604:58:169",
            "parameters": {
              "id": 83866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:2:169"
            },
            "returnParameters": {
              "id": 83867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12672:0:169"
            },
            "scope": 83945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82844,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "1417:4:169"
            },
            "id": 82845,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:4:169"
          }
        ],
        "canonicalName": "HeartTest",
        "contractDependencies": [
          24679,
          29497,
          40791,
          47232,
          51234,
          54005,
          66805,
          82843
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          83945,
          5484,
          2554,
          2291
        ],
        "name": "HeartTest",
        "nameLocation": "1404:9:169",
        "scope": 83946,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 169
}