{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "testCorrectnes_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_activate_deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfInactive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfTooEarly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_viewFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfOperateReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfPriceReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1395:11870:170:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1395:11870:170;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001065760003560e01c80630a9254e4146200010b5780630bb8dc0314620001175780631fdada0714620001215780632c639076146200012b5780633a768463146200013557806356735b5714620001645780635d948bbd146200017b5780637b47a7f314620001855780637e9506de146200018f578063882d384414620001995780638d0be1ef14620001a3578063a00f270914620001ad578063ba414fa614620001b7578063c7d81eff14620001d2578063e262719414620001e6578063e853d73614620001f0578063e9aaa0e814620001fa578063f8ccbf471462000204578063fa7626d41462000218575b600080fd5b6200011562000226565b005b6200011562000b9c565b6200011562000d51565b62000115620011a4565b6200014c600080516020620095e183398151915281565b6040516200015b919062003933565b60405180910390f35b62000115620001753660046200395d565b62001bef565b6200011562001d50565b6200011562002249565b6200011562002624565b620001156200275d565b62000115620025c8565b62000115620027de565b620001c162002ab5565b60405190151581526020016200015b565b6008546200014c906001600160a01b031681565b6200011562002bdf565b6200011562002cf8565b6200011562002eb6565b600054620001c19062010000900460ff1681565b600054620001c19060ff1681565b6040516372eb5f8160e11b8152635fdd42806004820152600080516020620095e18339815191529063e5d6bf0290602401600060405180830381600087803b1580156200027257600080fd5b505af115801562000287573d6000803e3d6000fd5b505050506040516200029990620038c3565b604051809103906000f080158015620002b6573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051631e02403760e21b8152600360048201526000919063780900dc906024016000604051808303816000875af115801562000317573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003419190810190620039a7565b90508060008151811062000359576200035962003a79565b6020026020010151600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001815181106200039d576200039d62003a79565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600281518110620003e157620003e162003a79565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b031602179055505060126040516200042090620038d1565b6060808252600c908201526b2932bbb0b932102a37b5b2b760a11b608082015260a060208201819052600390820152621495d160ea1b60c082015260ff909116604082015260e001604051809103906000f08015801562000485573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620004b490620038df565b604051809103906000f080158015620004d1573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b0392909216918217905560405161708090678ac7230489e80000906200050d90620038ed565b6001600160a01b03909316835265ffffffffffff90911660208301526040820152606001604051809103906000f0801580156200054e573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03928316179055600d546040519116906200057f90620038fb565b6200058b919062003933565b604051809103906000f080158015620005a8573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316179055600e54604051631b2d5b6f60e21b815268056bc75e2d631000006004820152911690636cb56dbc90602401600060405180830381600087803b1580156200060b57600080fd5b505af115801562000620573d6000803e3d6000fd5b5050600e54604051632c19abb960e01b815268056bc75e2d6310000060048201526001600160a01b039091169250632c19abb99150602401600060405180830381600087803b1580156200067357600080fd5b505af115801562000688573d6000803e3d6000fd5b5050600e546040516318b2007160e01b815268056bc75e2d6310000060048201526001600160a01b0390911692506318b200719150602401600060405180830381600087803b158015620006db57600080fd5b505af1158015620006f0573d6000803e3d6000fd5b5050600e54604051633d09cad560e11b8152601260048201526001600160a01b039091169250637a1395aa9150602401600060405180830381600087803b1580156200073b57600080fd5b505af115801562000750573d6000803e3d6000fd5b5050600d546040516001600160a01b03909116925062000771915062003909565b6200077d919062003933565b604051809103906000f0801580156200079a573d6000803e3d6000fd5b50601080546001600160a01b0319166001600160a01b03928316908117909155600d54600c54604051918416931690671bc16d674ec8000090620007de9062003917565b6001600160a01b0394851681529284166020840152921660408201526060810191909152608001604051809103906000f08015801562000822573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b03928316179055600d54604051911690620008539062003925565b6200085f919062003933565b604051809103906000f0801580156200087c573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03928316179055600d54600e5460405163c4d1f8f160e01b81529183169263c4d1f8f192620008c992600092169060040162003a8f565b600060405180830381600087803b158015620008e457600080fd5b505af1158015620008f9573d6000803e3d6000fd5b5050600d54600f5460405163c4d1f8f160e01b81526001600160a01b03928316945063c4d1f8f193506200093592600092169060040162003a8f565b600060405180830381600087803b1580156200095057600080fd5b505af115801562000965573d6000803e3d6000fd5b5050600d5460105460405163c4d1f8f160e01b81526001600160a01b03928316945063c4d1f8f19350620009a192600292169060040162003a8f565b600060405180830381600087803b158015620009bc57600080fd5b505af1158015620009d1573d6000803e3d6000fd5b5050600d5460115460405163c4d1f8f160e01b81526001600160a01b03928316945063c4d1f8f1935062000a0d92600292169060040162003a8f565b600060405180830381600087803b15801562000a2857600080fd5b505af115801562000a3d573d6000803e3d6000fd5b5050600d5460125460405163c4d1f8f160e01b81526001600160a01b03928316945063c4d1f8f1935062000a7992600292169060040162003a8f565b600060405180830381600087803b15801562000a9457600080fd5b505af115801562000aa9573d6000803e3d6000fd5b5050601254600b54604051632f2ff15d60e01b81526a3432b0b93a2fb0b236b4b760a91b60048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b15801562000b0b57600080fd5b505af115801562000b20573d6000803e3d6000fd5b5050600c546011546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062000b669290911690683635c9adc5dea000009060040162003aca565b600060405180830381600087803b15801562000b8157600080fd5b505af115801562000b96573d6000803e3d6000fd5b50505050565b6011546040805163ead50da360e01b815290516000926001600160a01b03169163ead50da39160048083019260209291908290030181865afa15801562000be7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c0d919062003ae3565b9050600080516020620095e183398151915263e5d6bf0262000c30834262003b13565b6040518263ffffffff1660e01b815260040162000c4f91815260200190565b600060405180830381600087803b15801562000c6a57600080fd5b505af115801562000c7f573d6000803e3d6000fd5b5050601054604051637a5a6e1760e11b8152600060048201526001600160a01b03909116925063f4b4dc2e91506024015b600060405180830381600087803b15801562000ccb57600080fd5b505af115801562000ce0573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000d3557600080fd5b505af115801562000d4a573d6000803e3d6000fd5b5050505050565b604080516a3432b0b93a2fb0b236b4b760a91b60248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637de30f4160e01b179052905163f28dceb360e01b8152600080516020620095e18339815191529063f28dceb39062000dcb90849060040162003b5d565b600060405180830381600087803b15801562000de657600080fd5b505af115801562000dfb573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b031663ef68b87d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000e5057600080fd5b505af115801562000e65573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620095e1833981519152925063f28dceb3915062000e9d90849060040162003b5d565b600060405180830381600087803b15801562000eb857600080fd5b505af115801562000ecd573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f2257600080fd5b505af115801562000f37573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620095e1833981519152925063f28dceb3915062000f6f90849060040162003b5d565b600060405180830381600087803b15801562000f8a57600080fd5b505af115801562000f9f573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000ff457600080fd5b505af115801562001009573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620095e1833981519152925063f28dceb391506200104190849060040162003b5d565b600060405180830381600087803b1580156200105c57600080fd5b505af115801562001071573d6000803e3d6000fd5b5050601154600c54604051630633929960e41b81526001600160a01b03928316945063633929909350620010b69290911690671bc16d674ec800009060040162003aca565b600060405180830381600087803b158015620010d157600080fd5b505af1158015620010e6573d6000803e3d6000fd5b505060405163f28dceb360e01b8152600080516020620095e1833981519152925063f28dceb391506200111e90849060040162003b5d565b600060405180830381600087803b1580156200113957600080fd5b505af11580156200114e573d6000803e3d6000fd5b5050601154600c54604051639ab7d7e760e01b81526001600160a01b039283169450639ab7d7e7935062001189929091169060040162003933565b600060405180830381600087803b15801562000d3557600080fd5b6011546040805163ead50da360e01b81529051600080516020620095e18339815191529263e5d6bf02926001600160a01b039091169163ead50da3916004808201926020929091908290030181865afa15801562001206573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200122c919062003ae3565b62001238904262003b13565b6040518263ffffffff1660e01b81526004016200125791815260200190565b600060405180830381600087803b1580156200127257600080fd5b505af115801562001287573d6000803e3d6000fd5b50505050600060126040516200129d90620038d1565b6060808252600990820152682732bb902a37b5b2b760b91b608082015260a06020820181905260029082015261139560f21b60c082015260ff909116604082015260e001604051809103906000f080158015620012fe573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b0316630bcdbe2960e21b179052915163f28dceb360e01b8152929350671bc16d674ec80000929091600080516020620095e18339815191529163f28dceb391620013689185910162003b5d565b600060405180830381600087803b1580156200138357600080fd5b505af115801562001398573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620095e1833981519152935063ca669fa79250620013db916001600160a01b03169060040162003933565b600060405180830381600087803b158015620013f657600080fd5b505af11580156200140b573d6000803e3d6000fd5b5050601154604051630633929960e41b81526001600160a01b0390911692506363392990915062001443908690869060040162003aca565b600060405180830381600087803b1580156200145e57600080fd5b505af115801562001473573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620014c857600080fd5b505af1158015620014dd573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620095e1833981519152935063ca669fa7925062001520916001600160a01b03169060040162003933565b600060405180830381600087803b1580156200153b57600080fd5b505af115801562001550573d6000803e3d6000fd5b5050601154604051630633929960e41b81526001600160a01b0390911692506363392990915062001588908690869060040162003aca565b600060405180830381600087803b158015620015a357600080fd5b505af1158015620015b8573d6000803e3d6000fd5b5050505062001641601160009054906101000a90046001600160a01b03166001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200163a919062003b92565b846200346b565b6011546040805163228cb73360e01b81529051620016bb926001600160a01b03169163228cb7339160048083019260209291908290030181865afa1580156200168e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016b4919062003ae3565b8362003548565b6011546040516340c10f1960e01b81526001600160a01b03858116926340c10f1992620016f992909116906729a2241af62c00009060040162003aca565b600060405180830381600087803b1580156200171457600080fd5b505af115801562001729573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03861691506370a08231906200175e90309060040162003933565b602060405180830381865afa1580156200177c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017a2919062003ae3565b90506000601160009054906101000a90046001600160a01b03166001600160a01b031663ead50da36040518163ffffffff1660e01b8152600401602060405180830381865afa158015620017fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001820919062003ae3565b9050600080516020620095e183398151915263e5d6bf0262001843834262003b13565b6040518263ffffffff1660e01b81526004016200186291815260200190565b600060405180830381600087803b1580156200187d57600080fd5b505af115801562001892573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018e757600080fd5b505af1158015620018fc573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03881691506370a08231906200193190309060040162003933565b602060405180830381865afa1580156200194f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001975919062003ae3565b905062001a0881601160009054906101000a90046001600160a01b03166001600160a01b031663228cb7336040518163ffffffff1660e01b8152600401602060405180830381865afa158015620019d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019f6919062003ae3565b62001a02908662003b13565b62003548565b6040516370a0823160e01b81526001600160a01b038716906370a082319062001a3690309060040162003933565b602060405180830381865afa15801562001a54573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a7a919062003ae3565b9250600080516020620095e183398151915263e5d6bf0262001a9d844262003b13565b6040518263ffffffff1660e01b815260040162001abc91815260200190565b600060405180830381600087803b15801562001ad757600080fd5b505af115801562001aec573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001b4157600080fd5b505af115801562001b56573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b03891692506370a08231915062001b8890309060040162003933565b602060405180830381865afa15801562001ba6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bcc919062003ae3565b905062001be78162001a0285670de0b6b3a764000062003b13565b505050505050565b600b5460405163ca669fa760e01b8152600080516020620095e18339815191529163ca669fa79162001c2e916001600160a01b03169060040162003933565b600060405180830381600087803b15801562001c4957600080fd5b505af115801562001c5e573d6000803e3d6000fd5b505060115460405163b3ab15fb60e01b81526001600160a01b03909116925063b3ab15fb915062001c9490849060040162003933565b600060405180830381600087803b15801562001caf57600080fd5b505af115801562001cc4573d6000803e3d6000fd5b5050505062001d4d601160009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d46919062003b92565b826200346b565b50565b6011546040805163017d862f60e11b8152905162001dc9926001600160a01b0316916302fb0c5e9160048083019260209291908290030181865afa15801562001d9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dc3919062003bb2565b620035fa565b6011546040805163d3a7b7d360e01b815290516000926001600160a01b03169163d3a7b7d39160048083019260209291908290030181865afa15801562001e14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e3a919062003ae3565b600b5460405163ca669fa760e01b8152919250600080516020620095e18339815191529163ca669fa79162001e7e916001600160a01b039091169060040162003933565b600060405180830381600087803b15801562001e9957600080fd5b505af115801562001eae573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001f0357600080fd5b505af115801562001f18573d6000803e3d6000fd5b5050505062001fa1601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001f74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f9a919062003bb2565b15620035fa565b6011546040805163d3a7b7d360e01b815290516200201b926001600160a01b03169163d3a7b7d39160048083019260209291908290030181865afa15801562001fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002014919062003ae3565b8262003548565b600b5460405163ca669fa760e01b8152600080516020620095e18339815191529163ca669fa7916200205a916001600160a01b03169060040162003933565b600060405180830381600087803b1580156200207557600080fd5b505af11580156200208a573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620020df57600080fd5b505af1158015620020f4573d6000803e3d6000fd5b5050505062002150601160009054906101000a90046001600160a01b03166001600160a01b03166302fb0c5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d9d573d6000803e3d6000fd5b6011546040805163d3a7b7d360e01b8152905162001d4d926001600160a01b03169163d3a7b7d39160048083019260209291908290030181865afa1580156200219d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021c3919062003ae3565b601160009054906101000a90046001600160a01b03166001600160a01b031663ead50da36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002217573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200223d919062003ae3565b62001a02904262003bd6565b6011546040805163ead50da360e01b81529051600080516020620095e18339815191529263e5d6bf02926001600160a01b039091169163ead50da3916004808201926020929091908290030181865afa158015620022ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022d1919062003ae3565b620022de90600262003bf0565b620022ea904262003b13565b6040518263ffffffff1660e01b81526004016200230991815260200190565b600060405180830381600087803b1580156200232457600080fd5b505af115801562002339573d6000803e3d6000fd5b5050505062002454601160009054906101000a90046001600160a01b03166001600160a01b031663d3a7b7d36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002395573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023bb919062003ae3565b601160009054906101000a90046001600160a01b03166001600160a01b031663ead50da36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200240f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002435919062003ae3565b6200244290600262003bf0565b6200244e904262003bd6565b6200365b565b601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620024a557600080fd5b505af1158015620024ba573d6000803e3d6000fd5b50505050620025c8601160009054906101000a90046001600160a01b03166001600160a01b031663d3a7b7d36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002516573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200253c919062003ae3565b601160009054906101000a90046001600160a01b03166001600160a01b031663ead50da36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002590573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025b6919062003ae3565b620025c2904262003bd6565b6200374a565b6040805160048082526024820183526020820180516001600160e01b031663461bbb8360e11b179052915163f28dceb360e01b81529091600080516020620095e18339815191529163f28dceb39162000cb09185910162003b5d565b600b5460405163ca669fa760e01b8152600080516020620095e18339815191529163ca669fa79162002663916001600160a01b03169060040162003933565b600060405180830381600087803b1580156200267e57600080fd5b505af115801562002693573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b03166351b42b006040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620026e857600080fd5b505af1158015620026fd573d6000803e3d6000fd5b50506040805160048082526024820183526020820180516001600160e01b0316630137efe360e71b179052915163f28dceb360e01b8152909350600080516020620095e1833981519152925063f28dceb39162000cb09185910162003b5d565b6011546040805163ead50da360e01b815290516000926001600160a01b03169163ead50da39160048083019260209291908290030181865afa158015620027a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027ce919062003ae3565b905062001d4d8161708062003548565b6011546040805163ead50da360e01b815290516000926001600160a01b03169163ead50da39160048083019260209291908290030181865afa15801562002829573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200284f919062003ae3565b9050600080516020620095e183398151915263e5d6bf0262002872834262003b13565b6040518263ffffffff1660e01b81526004016200289191815260200190565b600060405180830381600087803b158015620028ac57600080fd5b505af1158015620028c1573d6000803e3d6000fd5b5050600c546040516370a0823160e01b8152600093506001600160a01b0390911691506370a0823190620028fa90309060040162003933565b602060405180830381865afa15801562002918573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200293e919062003ae3565b9050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200299157600080fd5b505af1158015620029a6573d6000803e3d6000fd5b5050600c546040516370a0823160e01b8152600093506001600160a01b0390911691506370a0823190620029df90309060040162003933565b602060405180830381865afa158015620029fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a23919062003ae3565b905062002ab081601160009054906101000a90046001600160a01b03166001600160a01b031663228cb7336040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002a7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aa4919062003ae3565b62001a02908562003b13565b505050565b60008054610100900460ff161562002ad65750600054610100900460ff1690565b600062002ae2620037ab565b1562002bda57604051600090600080516020620095e1833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062002b3c9083906519985a5b195960d21b9060200162003aca565b60408051601f198184030181529082905262002b5c929160200162003c12565b60408051601f198184030181529082905262002b789162003c45565b6000604051808303816000865af19150503d806000811462002bb7576040519150601f19603f3d011682016040523d82523d6000602084013e62002bbc565b606091505b509150508080602001905181019062002bd6919062003bb2565b9150505b919050565b6011546040805163ead50da360e01b815290516000926001600160a01b03169163ead50da39160048083019260209291908290030181865afa15801562002c2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c50919062003ae3565b9050600080516020620095e183398151915263e5d6bf0262002c73834262003b13565b6040518263ffffffff1660e01b815260040162002c9291815260200190565b600060405180830381600087803b15801562002cad57600080fd5b505af115801562002cc2573d6000803e3d6000fd5b5050600e54604051637a5a6e1760e11b8152600060048201526001600160a01b03909116925063f4b4dc2e915060240162000cb0565b6040805160048082526024820183526020820180516001600160e01b031663461bbb8360e11b179052915163f28dceb360e01b81529091600080516020620095e18339815191529163f28dceb39162002d549185910162003b5d565b600060405180830381600087803b15801562002d6f57600080fd5b505af115801562002d84573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002dd957600080fd5b505af115801562002dee573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620095e1833981519152935063ca669fa7925062002e31916001600160a01b03169060040162003933565b600060405180830381600087803b15801562002e4c57600080fd5b505af115801562002e61573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b031663ef68b87d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620028ac57600080fd5b6011546040805163ead50da360e01b81529051600080516020620095e18339815191529263e5d6bf02926001600160a01b039091169163ead50da3916004808201926020929091908290030181865afa15801562002f18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f3e919062003ae3565b62002f4a904262003b13565b6040518263ffffffff1660e01b815260040162002f6991815260200190565b600060405180830381600087803b15801562002f8457600080fd5b505af115801562002f99573d6000803e3d6000fd5b50506040805160048082526024820183526020820180516001600160e01b0316630bcdbe2960e21b179052915163f28dceb360e01b8152909350600080516020620095e1833981519152925063f28dceb39162002ff99185910162003b5d565b600060405180830381600087803b1580156200301457600080fd5b505af115801562003029573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b8152600080516020620095e1833981519152935063ca669fa792506200306c916001600160a01b03169060040162003933565b600060405180830381600087803b1580156200308757600080fd5b505af11580156200309c573d6000803e3d6000fd5b5050601154600c54604051639ab7d7e760e01b81526001600160a01b039283169450639ab7d7e79350620030d7929091169060040162003933565b600060405180830381600087803b158015620030f257600080fd5b505af115801562003107573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b0316637a259dba6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200315c57600080fd5b505af115801562003171573d6000803e3d6000fd5b5050600c54600b546040516370a0823160e01b8152600094506001600160a01b0392831693506370a0823192620031ad92169060040162003933565b602060405180830381865afa158015620031cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031f1919062003ae3565b600c546011546040516370a0823160e01b81529293506000926001600160a01b03928316926370a08231926200322d9291169060040162003933565b602060405180830381865afa1580156200324b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003271919062003ae3565b600b5460405163ca669fa760e01b8152919250600080516020620095e18339815191529163ca669fa791620032b5916001600160a01b039091169060040162003933565b600060405180830381600087803b158015620032d057600080fd5b505af1158015620032e5573d6000803e3d6000fd5b5050601154600c54604051639ab7d7e760e01b81526001600160a01b039283169450639ab7d7e7935062003320929091169060040162003933565b600060405180830381600087803b1580156200333b57600080fd5b505af115801562003350573d6000803e3d6000fd5b5050600c54600b546040516370a0823160e01b8152600094506001600160a01b0392831693506370a08231926200338c92169060040162003933565b602060405180830381865afa158015620033aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033d0919062003ae3565b600c546011546040516370a0823160e01b81529293506200345a926001600160a01b03928316926370a08231926200340e9291169060040162003933565b602060405180830381865afa1580156200342c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003452919062003ae3565b600062003548565b62000b968162001a02848662003b13565b806001600160a01b0316826001600160a01b0316146200354457600080516020620095c1833981519152604051620034e29060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160008051602062009601833981519152816040516200350a919062003c80565b60405180910390a1600080516020620096018339815191528260405162003532919062003ccb565b60405180910390a162003544620037c1565b5050565b8082146200354457600080516020620095c1833981519152604051620035aa9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206200962183398151915281604051620035d2919062003cdf565b60405180910390a1600080516020620096218339815191528260405162003532919062003d01565b8062001d4d57600080516020620095c18339815191526040516200364990602080825260179082015276115c9c9bdc8e88105cdcd95c9d1a5bdb8811985a5b1959604a1b604082015260600190565b60405180910390a162001d4d620037c1565b808211156200354457600080516020620095c1833981519152604051620036be9060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b6060820152602081018490529051600080516020620096218339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b606082015260208101829052600080516020620096218339815191529060800162003532565b8082116200354457600080516020620095c1833981519152604051620036be9060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b600080516020620095e18339815191523b151590565b620037cb620037ab565b15620038b25760408051600080516020620095e1833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200384d929160200162003c12565b60408051601f1981840301815290829052620038699162003c45565b6000604051808303816000865af19150503d8060008114620038a8576040519150601f19603f3d011682016040523d82523d6000602084013e620038ad565b606091505b505050505b6000805461ff001916610100179055565b6103438062003d1683390190565b610fbe806200405983390190565b611680806200501783390190565b61075d806200669783390190565b6107bf8062006df483390190565b61043e80620075b383390190565b6112d280620079f183390190565b6108fe8062008cc383390190565b6001600160a01b0391909116815260200190565b6001600160a01b038116811462001d4d57600080fd5b6000602082840312156200397057600080fd5b81356200397d8162003947565b9392505050565b634e487b7160e01b600052604160045260246000fd5b805162002bda8162003947565b60006020808385031215620039bb57600080fd5b82516001600160401b0380821115620039d357600080fd5b818501915085601f830112620039e857600080fd5b815181811115620039fd57620039fd62003984565b8060051b604051601f19603f8301168101818110858211171562003a255762003a2562003984565b60405291825284820192508381018501918883111562003a4457600080fd5b938501935b8285101562003a6d5762003a5d856200399a565b8452938501939285019262003a49565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b604081016006841062003ab257634e487b7160e01b600052602160045260246000fd5b9281526001600160a01b039190911660209091015290565b6001600160a01b03929092168252602082015260400190565b60006020828403121562003af657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562003b295762003b2962003afd565b500190565b60005b8381101562003b4b57818101518382015260200162003b31565b8381111562000b965750506000910152565b602081526000825180602084015262003b7e81604085016020870162003b2e565b601f01601f19169190910160400192915050565b60006020828403121562003ba557600080fd5b81516200397d8162003947565b60006020828403121562003bc557600080fd5b815180151581146200397d57600080fd5b60008282101562003beb5762003beb62003afd565b500390565b600081600019048311821515161562003c0d5762003c0d62003afd565b500290565b6001600160e01b031983168152815160009062003c3781600485016020870162003b2e565b919091016004019392505050565b6000825162003c5981846020870162003b2e565b9190910192915050565b600a8152690808115e1c1958dd195960b21b602082015260400190565b60408152600062003c946040830162003c63565b6001600160a01b0393909316602092909201919091525090565b600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062003c946040830162003cae565b60408152600062003cf36040830162003c63565b905082602083015292915050565b60408152600062003cf36040830162003cae56fe737109709ecfa91a80626ff3989d68f67f5b1dd12d60805264757365727360d81b60c052600560a05260c56040527f39b41f4ff9d03853a3e5e26ffad8712de4330b640064cfa05d0a29978dea11c660005534801561005d57600080fd5b506080516102ca610079600039600061013801526102ca6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c8fe5261461003b578063780900dc14610060575b600080fd5b610043610080565b6040516001600160a01b0390911681526020015b60405180910390f35b61007361006e3660046101db565b6100aa565b60405161005791906101f4565b60008054604080516020808201849052825180830382018152918301909252805191012090915590565b60606000826001600160401b038111156100c6576100c6610241565b6040519080825280602002602001820160405280156100ef578160200160208202803683370190505b50905060005b838110156101d4576000610107610080565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b50505050808383815181106101a9576101a9610257565b6001600160a01b039092166020928302919091019091015250806101cc8161026d565b9150506100f5565b5092915050565b6000602082840312156101ed57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156102355783516001600160a01b031683529284019291840191600101610210565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161028d57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204865765b1e90c789e74c8151ea7c935e1a3181d49b1842d3c1678955eb0c9e9e64736f6c634300080f003360e06040523480156200001157600080fd5b5060405162000fbe38038062000fbe8339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610b4d620004716000396000610402015260006103cd015260006101240152610b4d6000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100d257806318160ddd146100f557806323b872dd1461010c578063313ce5671461011f5780633644e5151461015857806340c10f191461016057806370a082311461017557806395d89b41146101955780639dc29fac1461019d578063a9059cbb146101b0578063d505accf146101c3578063dd62ed3e146101d6575b600080fd5b6100bc610201565b6040516100c9919061081a565b60405180910390f35b6100e56100e036600461088b565b61028f565b60405190151581526020016100c9565b6100fe60025481565b6040519081526020016100c9565b6100e561011a3660046108b5565b6102e9565b6101467f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c9565b6100fe6103c9565b61017361016e36600461088b565b610424565b005b6100fe6101833660046108f1565b60036020526000908152604090205481565b6100bc610432565b6101736101ab36600461088b565b61043f565b6100e56101be36600461088b565b610449565b6101736101d1366004610913565b6104af565b6100fe6101e4366004610986565b600460209081526000928352604080842090915290825290205481565b6000805461020e906109b9565b80601f016020809104026020016040519081016040528092919081815260200182805461023a906109b9565b80156102875780601f1061025c57610100808354040283529160200191610287565b820191906000526020600020905b81548152906001019060200180831161026a57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610af8833981519152906102d89086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610345576103208382610a09565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061036d908490610a09565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020610ad8833981519152906103b69087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146103ff576103fa6106c4565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61042e828261075e565b5050565b6001805461020e906109b9565b61042e82826107b8565b3360009081526003602052604081208054839190839061046a908490610a09565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020610ad8833981519152906102d89086815260200190565b428410156104fe5760405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b60448201526064015b60405180910390fd5b6000600161050a6103c9565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810188905260c0016040516020818303038152906040528051906020012060405160200161059c92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156105fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106305750876001600160a01b0316816001600160a01b0316145b61066d5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016104f5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a1691600080516020610af8833981519152910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516106f69190610a20565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107709190610abf565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610ad883398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906107e0908490610a09565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610ad8833981519152906020016107ac565b600060208083528351808285015260005b818110156108475785810183015185820160400152820161082b565b81811115610859576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461088657600080fd5b919050565b6000806040838503121561089e57600080fd5b6108a78361086f565b946020939093013593505050565b6000806000606084860312156108ca57600080fd5b6108d38461086f565b92506108e16020850161086f565b9150604084013590509250925092565b60006020828403121561090357600080fd5b61090c8261086f565b9392505050565b600080600080600080600060e0888a03121561092e57600080fd5b6109378861086f565b96506109456020890161086f565b95506040880135945060608801359350608088013560ff8116811461096957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561099957600080fd5b6109a28361086f565b91506109b06020840161086f565b90509250929050565b600181811c908216806109cd57607f821691505b6020821081036109ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a1b57610a1b6109f3565b500390565b600080835481600182811c915080831680610a3c57607f831692505b60208084108203610a5b57634e487b7160e01b86526022600452602486fd5b818015610a6f5760018114610a8457610ab1565b60ff1986168952841515850289019650610ab1565b60008a81526020902060005b86811015610aa95781548b820152908501908301610a90565b505084890196505b509498975050505050505050565b60008219821115610ad257610ad26109f3565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220eabe829eb9bedeca720649c8b6ccf8edf7989d4f0faa429b61fda0443933061d64736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561164e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100985760003560e01c80620dd95d1461009d57806303c02f42146100c65780635af099c9146100ff57806363a6e3b514610112578063ae5f76fa14610132578063b4dc00b414610162578063c34c08e51461018b578063c4d1f8f11461019e578063dbb61ee7146101b3578063e52223bb146101c6578063f166d9eb146101e9575b600080fd5b6100b06100ab366004611228565b61021d565b6040516100bd9190611254565b60405180910390f35b6100f16100d436600461127d565b600560209081526000928352604080842090915290825290205481565b6040519081526020016100bd565b6100b061010d3660046112b6565b610255565b6100f16101203660046112cf565b60086020526000908152604090205481565b6101556101403660046112cf565b60036020526000908152604090205460d81b81565b6040516100bd91906112f3565b6100b0610170366004611308565b6002602052600090815260409020546001600160a01b031681565b6000546100b0906001600160a01b031681565b6101b16101ac366004611325565b61027f565b005b6101556101c13660046112b6565b6104bd565b6101d96101d43660046112cf565b6104f4565b60405190151581526020016100bd565b6101d96101f736600461135d565b600660209081526000938452604080852082529284528284209052825290205460ff1681565b6004602052816000526040600020818154811061023957600080fd5b6000918252602090912001546001600160a01b03169150829050565b6007818154811061026557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102b457336040516237c7b360e01b81526004016102ab9190611254565b60405180910390fd5b60008260058111156102c8576102c86113a8565b0361034e576102d68161054e565b610340816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906113be565b61057e565b610349816105fc565b610474565b6001826005811115610362576103626113a8565b036103ba576103708161054e565b6103b1816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d6000803e3d6000fd5b610349816107a3565b60028260058111156103ce576103ce6113a8565b036103e5576103dc8161054e565b61034981610925565b60038260058111156103f9576103f96113a8565b03610410576104078161054e565b61034981610b5c565b6004826005811115610424576104246113a8565b0361044957600080546001600160a01b0319166001600160a01b038316179055610474565b600582600581111561045d5761045d6113a8565b036104745761046b8161054e565b61047481610cf5565b806001600160a01b0316826005811115610490576104906113a8565b6040517f6560dd86d70bf03c0005b3533cc115fa8b8a12b4ee11c7342ae7b32d82267c9090600090a35050565b600181815481106104cd57600080fd5b9060005260206000209060069182820401919006600502915054906101000a900460d81b81565b6007546000901580159061054857506001600160a01b038216600081815260086020526040902054600780549091908110610531576105316113db565b6000918252602090912001546001600160a01b0316145b92915050565b806001600160a01b03163b60000361057b5780604051631bd1ba9d60e21b81526004016102ab9190611254565b50565b8060005b60058110156105f757600082826005811061059f5761059f6113db565b1a60f81b9050604160f81b6001600160f81b0319821610806105ce5750602d60f91b6001600160f81b03198216115b156105ee578360405163075f770560e31b81526004016102ab91906112f3565b50600101610582565b505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b0316156106a65780604051634403633360e11b81526004016102ab91906112f3565b6001600160d81b03198116600090815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558084526003909252808320805464ffffffffff191660d886901c9081179091556001805480820182559085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600680830491909101805464ffffffffff929093066005026101000a9182021990921692029190911790558051633a990e4560e21b81529051919263ea6439149260048084019382900301818387803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050505050565b6000816001600160a01b0316631ae7ec2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080791906113be565b6001600160d81b031981166000908152600260205260409020549091506001600160a01b031680158061084b5750826001600160a01b0316816001600160a01b0316145b1561086b578160405163073e073160e01b81526004016102ab91906112f3565b6001600160a01b038181166000908152600360209081526040808320805464ffffffffff19908116909155938716808452818420805490951660d888901c179094556001600160d81b031986168352600290915280822080546001600160a01b031916841790558051633a990e4560e21b8152905163ea6439149260048084019391929182900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b505050506105f782610e64565b61092e816104f4565b1561094e578060405163224b187760e01b81526004016102ab9190611254565b600780546001808201835560008390527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180546001600160a01b0319166001600160a01b03851617905590546109a791906113f1565b6001600160a01b038216600081815260086020526040808220939093558251639459b87560e01b815292519092639459b8759160048083019286929190829003018183875af11580156109fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2691908101906114a7565b805190915060005b81811015610adf576000838281518110610a4a57610a4a6113db565b6020908102919091018101516001600160d81b03198116600081815260048452604081208054600180820183558284529583200180546001600160a01b0319166001600160a01b038c1617905591905254909250610aa891906113f1565b6001600160d81b031990911660009081526005602090815260408083206001600160a01b0389168452909152902055600101610a2e565b506000836001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b489190810190611545565b9050610b5684826001610f6f565b50505050565b610b65816104f4565b610b8457806040516322cd55c560e01b81526004016102ab9190611254565b6000816001600160a01b0316635924be706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bc4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bec9190810190611545565b9050610bfa82826000610f6f565b6001600160a01b03821660009081526008602052604081205460078054919291610c26906001906113f1565b81548110610c3657610c366113db565b600091825260209091200154600780546001600160a01b039092169250829184908110610c6557610c656113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610ca457610ca4611602565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038381168352600890915260408083208590559086168252812055610b5684611048565b60015460005b81811015610dc65760006002600060018481548110610d1c57610d1c6113db565b6000918252602080832060068084049091015492066005026101000a90910460d81b6001600160d81b03191683528201929092526040908101909120549051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610d88908790600401611254565b600060405180830381600087803b158015610da257600080fd5b505af1158015610db6573d6000803e3d6000fd5b5050505081600101915050610cfb565b5060075460005b81811015610b5657600060078281548110610dea57610dea6113db565b600091825260209091200154604051631195ecdb60e21b81526001600160a01b0390911691508190634657b36c90610e26908890600401611254565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b5050505081600101915050610dcd565b6001600160d81b03198116600090815260046020908152604080832080548251818502810185019093528083529192909190830182828015610ecf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610eb1575b505083519394506000925050505b81811015610b5657828181518110610ef757610ef76113db565b60200260200101516001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af1158015610f3e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f6691908101906114a7565b50600101610edd565b815160005b81811015611041576000848281518110610f9057610f906113db565b60209081029190910181015180516001600160d81b031990811660009081526006845260408082206001600160a01b038c1680845290865281832085870180516001600160e01b0319908116865291885293839020805460ff19168c1515908117909155865194518451921682529681019690965293955092939116917ff3cdd20c5574ce87c347ea71e37b8fa7a095894be4b7f2bb1533e8d2342965f1910160405180910390a350600101610f74565b5050505050565b6000816001600160a01b0316639459b8756040518163ffffffff1660e01b81526004016000604051808303816000875af115801561108a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b291908101906114a7565b805190915060005b81811015610b565760008382815181106110d6576110d66113db565b6020908102919091018101516001600160d81b031981166000908152600483526040808220600585528183206001600160a01b038b1684529094528120548354929450918390611128906001906113f1565b81548110611138576111386113db565b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061116b5761116b6113db565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828054806111a9576111a9611602565b60008281526020808220600019908401810180546001600160a01b03191690559092019092556001600160d81b03199590951681526005855260408082206001600160a01b039384168352909552848120929092558716815291822091909155506001016110ba565b6001600160d81b03198116811461057b57600080fd5b6000806040838503121561123b57600080fd5b823561124681611212565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461057b57600080fd5b6000806040838503121561129057600080fd5b823561129b81611212565b915060208301356112ab81611268565b809150509250929050565b6000602082840312156112c857600080fd5b5035919050565b6000602082840312156112e157600080fd5b81356112ec81611268565b9392505050565b6001600160d81b031991909116815260200190565b60006020828403121561131a57600080fd5b81356112ec81611212565b6000806040838503121561133857600080fd5b82356006811061129b57600080fd5b6001600160e01b03198116811461057b57600080fd5b60008060006060848603121561137257600080fd5b833561137d81611212565b9250602084013561138d81611268565b9150604084013561139d81611347565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156113d057600080fd5b81516112ec81611212565b634e487b7160e01b600052603260045260246000fd5b60008282101561141157634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561144e5761144e611416565b60405290565b604051601f8201601f191681016001600160401b038111828210171561147c5761147c611416565b604052919050565b60006001600160401b0382111561149d5761149d611416565b5060051b60200190565b600060208083850312156114ba57600080fd5b82516001600160401b038111156114d057600080fd5b8301601f810185136114e157600080fd5b80516114f46114ef82611484565b611454565b81815260059190911b8201830190838101908783111561151357600080fd5b928401925b8284101561153a57835161152b81611212565b82529284019290840190611518565b979650505050505050565b6000602080838503121561155857600080fd5b82516001600160401b0381111561156e57600080fd5b8301601f8101851361157f57600080fd5b805161158d6114ef82611484565b81815260069190911b820183019083810190878311156115ac57600080fd5b928401925b8284101561153a57604084890312156115ca5760008081fd5b6115d261142c565b84516115dd81611212565b8152848601516115ec81611347565b81870152825260409390930192908401906115b1565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205e3ea7f545dc8b7dac33cdb65cf158a835ea5c5fd5af6e1be2bf7d35f5a40ac164736f6c634300080f0033608060405234801561001057600080fd5b5060405161075d38038061075d83398101604081905261002f91610083565b600080546001600160a01b039094166001600160a01b0319909416939093179092556004805465ffffffffffff909216620100000267ffffffffffffff0019909216919091176101001790556005556100dd565b60008060006060848603121561009857600080fd5b83516001600160a01b03811681146100af57600080fd5b602085015190935065ffffffffffff811681146100cb57600080fd5b80925050604084015190509250925092565b610671806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063053f14da1461014e57806318b200711461016a5780631ae7ec2e1461017f5780632c19abb914610195578063313ce567146101a85780633ccec9c4146101c75780634657b36c146101d057806365372147146101e35780636cb56dbc146102055780636d2c2808146102185780637321f100146102215780637a1395aa146102505780637d4dce76146102745780637e20be3b146102aa57806386db7df0146102e25780638a157337146102ea578063902a35b9146102fb5780639d1b464a1461030d578063b5e7130514610316578063bd01bb321461031e578063d266f5d014610326578063d4aae0c41461033f578063d8cf24fd1461035f578063ea64391414610367578063eb91d37e1461036f578063f4b4dc2e14610377578063ffa1ad741461039f575b600080fd5b61015760025481565b6040519081526020015b60405180910390f35b61017d61017836600461047e565b600355565b005b60405164505249434560d81b8152602001610161565b61017d6101a336600461047e565b600255565b6004546101b59060ff1681565b60405160ff9091168152602001610161565b61015760015481565b61017d6101de366004610497565b6103b4565b6004546101f590610100900460ff1681565b6040519015158152602001610161565b61017d61021336600461047e565b600155565b61015760055481565b6004546102399062010000900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610161565b61017d61025e3660046104c7565b6004805460ff191660ff92909216919091179055565b61017d610282366004610505565b6004805465ffffffffffff909216620100000267ffffffffffff000019909216919091179055565b61017d6102b8366004610505565b6004805465ffffffffffff909216600160401b0265ffffffffffff60401b19909216919091179055565b61017d61040c565b61017d6102f8366004610505565b50565b61017d610309366004610536565b5050565b61015760035481565b600154610157565b610157610436565b60045461023990600160401b900465ffffffffffff1681565b600054610352906001600160a01b031681565b6040516101619190610605565b600254610157565b61017d610451565b600354610157565b61017d610385366004610619565b600480549115156101000261ff0019909216919091179055565b60408051600181526000602082015201610161565b6000546001600160a01b031633146103ea573360405163053e900f60e21b81526004016103e19190610605565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600454610100900460ff1661043457604051632cd2cbf760e01b815260040160405180910390fd5b565b60006005546001541161044a575060055490565b5060015490565b6000546001600160a01b03163314610434573360405163053e900f60e21b81526004016103e19190610605565b60006020828403121561049057600080fd5b5035919050565b6000602082840312156104a957600080fd5b81356001600160a01b03811681146104c057600080fd5b9392505050565b6000602082840312156104d957600080fd5b813560ff811681146104c057600080fd5b803565ffffffffffff8116811461050057600080fd5b919050565b60006020828403121561051757600080fd5b6104c0826104ea565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561054957600080fd5b82356001600160401b038082111561056057600080fd5b818501915085601f83011261057457600080fd5b813560208282111561058857610588610520565b8160051b604051601f19603f830116810181811086821117156105ad576105ad610520565b6040529283528183019350848101820192898411156105cb57600080fd5b948201945b838610156105e9578535855294820194938201936105d0565b96506105f890508782016104ea565b9450505050509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561062b57600080fd5b813580151581146104c057600080fdfea2646970667358221220201f1370839f9cb67a0535b9641e2f563bda2e07232dfb0d706abc66a742021b64736f6c634300080f0033608060405234801561001057600080fd5b506040516107bf3803806107bf83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61072c806100936000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80631ae7ec2e1461009357806340e312f8146100b95780634657b36c146100ce578063656361ff146100e1578063ac4ab3fb146100f4578063d09a20c514610132578063d4aae0c414610145578063ea64391414610165578063f6ba00071461016d578063ffa1ad7414610180575b600080fd5b61009b610195565b6040516001600160d81b031990911681526020015b60405180910390f35b6100cc6100c73660046105ab565b6101a1565b005b6100cc6100dc3660046105dc565b610252565b6100cc6100ef366004610600565b6102a1565b610122610102366004610630565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b0565b6100cc610140366004610600565b6103f2565b600054610158906001600160a01b031681565b6040516100b0919061065c565b6100cc610439565b6100cc61017b366004610600565b610468565b604080516001815260006020820152016100b0565b64524f4c455360d81b90565b60005b602081101561024e5760008282602081106101c1576101c1610670565b1a60f81b9050606160f81b6001600160f81b0319821610806101f05750603d60f91b6001600160f81b03198216115b801561020a5750605f60f81b6001600160f81b0319821614155b801561021f57506001600160f81b0319811615155b15610245576040516301dd79d160e31b8152600481018490526024015b60405180910390fd5b506001016101a4565b5050565b6000546001600160a01b0316331461027f573360405163053e900f60e21b815260040161023c919061065c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031663f166d9eb6102ba610195565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016102e693929190610686565b602060405180830381865afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032791906106bb565b61034657336040516311bf00c960e01b815260040161023c919061065c565b6001600160a01b038116600090815260016020908152604080832085845290915290205460ff161561038f578082604051632fe8304960e21b815260040161023c9291906106dd565b610398826101a1565b6001600160a01b0381166000818152600160208181526040808420878552909152808320805460ff19169092179091555184917f2ae6a113c0ed5b78a53413ffbb7679881f11145ccfba4fb92e863dfcd5a1d2f391a35050565b6001600160a01b038116600090815260016020908152604080832085845290915290205460ff1661024e57604051637de30f4160e01b81526004810183905260240161023c565b6000546001600160a01b03163314610466573360405163053e900f60e21b815260040161023c919061065c565b565b6000546001600160a01b031663f166d9eb610481610195565b336000356001600160e01b0319166040518463ffffffff1660e01b81526004016104ad93929190610686565b602060405180830381865afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee91906106bb565b61050d57336040516311bf00c960e01b815260040161023c919061065c565b6001600160a01b038116600090815260016020908152604080832085845290915290205460ff16610555578082604051632ca9c83360e21b815260040161023c9291906106dd565b6001600160a01b0381166000818152600160209081526040808320868452909152808220805460ff191690555184917f155aaafb6329a2098580462df33ec4b7441b19729b9601c5fc17ae1cf99a8a5291a35050565b6000602082840312156105bd57600080fd5b5035919050565b6001600160a01b03811681146105d957600080fd5b50565b6000602082840312156105ee57600080fd5b81356105f9816105c4565b9392505050565b6000806040838503121561061357600080fd5b823591506020830135610625816105c4565b809150509250929050565b6000806040838503121561064357600080fd5b823561064e816105c4565b946020939093013593505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052603260045260246000fd5b6001600160d81b03199390931683526001600160a01b039190911660208301526001600160e01b031916604082015260600190565b6000602082840312156106cd57600080fd5b815180151581146105f957600080fd5b6001600160a01b0392909216825260208201526040019056fea26469706673582212200d26dc88f74cc2986619e6a488d32b1338f5fdfb00cee22c3b0b52ee45735be764736f6c634300080f0033608060405234801561001057600080fd5b5060405161043e38038061043e83398101604081905261002f91610059565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b6103a6806100986000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806322f3e2d41461007d5780634657b36c1461009a5780635924be70146100af57806365372147146100be5780637159a618146100d25780639459b875146100da578063d4aae0c4146100e9578063f4b4dc2e14610109575b600080fd5b610085610135565b60405190151581526020015b60405180910390f35b6100ad6100a8366004610230565b6101ac565b005b60606040516100919190610260565b60005461008590600160a01b900460ff1681565b6100ad610204565b606060405161009191906102c3565b6000546100fc906001600160a01b031681565b6040516100919190610311565b6100ad610117366004610336565b60008054911515600160a01b0260ff60a01b19909216919091179055565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb90610166903090600401610311565b602060405180830381865afa158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610353565b905090565b6000546001600160a01b031633146101e2573360405163053e900f60e21b81526004016101d99190610311565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1661022e57604051631117572b60e01b815260040160405180910390fd5b565b60006020828403121561024257600080fd5b81356001600160a01b038116811461025957600080fd5b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156102b657815180516001600160d81b03191685528601516001600160e01b03191686850152928401929085019060010161027d565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156103055783516001600160d81b031916835292840192918401916001016102df565b50909695505050505050565b6001600160a01b0391909116815260200190565b801515811461033357600080fd5b50565b60006020828403121561034857600080fd5b813561025981610325565b60006020828403121561036557600080fd5b81516102598161032556fea2646970667358221220fe462743d1ddd886f3816d0d36f8cee1689c27518b3d2a1eed4dacdc5a157fe664736f6c634300080f00336080604052600160025534801561001557600080fd5b506040516112d23803806112d2833981016040819052610034916100a2565b600080546001600160a01b03199081166001600160a01b0396871617909155600880548216948616949094179093556003805460ff191660011790554260045560068054909316919093161790556005556100f5565b6001600160a01b038116811461009f57600080fd5b50565b600080600080608085870312156100b857600080fd5b84516100c38161008a565b60208601519094506100d48161008a565b60408601519093506100e58161008a565b6060959095015193969295505050565b6111ce806101046000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c806302fb0c5e146100f65780630f15f4c014610118578063228cb7331461012257806322f3e2d4146101395780634657b36c1461014157806351b42b0014610154578063570ca7351461015c5780635924be701461017c57806363392990146101915780637a259dba146101a4578063923cb952146101ac5780639459b875146101bf5780639ab7d7e7146101d4578063b3ab15fb146101e7578063d3a7b7d3146101fa578063d4aae0c414610203578063ead50da314610216578063ef68b87d1461021e578063f7c618c114610226575b600080fd5b6003546101039060ff1681565b60405190151581526020015b60405180910390f35b610120610239565b005b61012b60055481565b60405190815260200161010f565b6101036102c4565b61012061014f366004610edc565b61033b565b610120610393565b60085461016f906001600160a01b031681565b60405161010f9190610f00565b610184610412565b60405161010f9190610f14565b61012061019f366004610f77565b610500565b610120610605565b60015461016f906001600160a01b031681565b6101c76107df565b60405161010f9190610fa3565b6101206101e2366004610edc565b6108fa565b6101206101f5366004610edc565b610a26565b61012b60045481565b60005461016f906001600160a01b031681565b61012b610abc565b610120610b36565b60065461016f906001600160a01b031681565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c5906102799084903390600401610ff1565b600060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b50506003805460ff19166001179055506102c19050610bac565b50565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906102f5903090600401610f00565b602060405180830381865afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190611008565b905090565b6000546001600160a01b03163314610371573360405163053e900f60e21b81526004016103689190610f00565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c5906103d39084903390600401610ff1565b600060405180830381600087803b1580156103ed57600080fd5b505af1158015610401573d6000803e3d6000fd5b50506003805460ff19169055505050565b604080516001808252818301909252606091816020015b604080518082019091526000808252602082015281526020019060019003908161042957505060408051808201808352600754630d73f61760e11b90915291519293509182916001600160a01b031690631ae7ec2e906044808501916020918187030181865afa1580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c5919061102a565b6001600160d81b031916815263086db7df60e41b602090910152815182906000906104f2576104f2611054565b602002602001018190525090565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c5906105409084903390600401610ff1565b600060405180830381600087803b15801561055a57600080fd5b505af115801561056e573d6000803e3d6000fd5b5050505061057a610abc565b6004546105879190611080565b42106105a657604051630bcdbe2960e21b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b03851617905560058290556040517f401ccfec4c6c7ac3f3b71182750d0f8d73c0d29cc476732b0b21ab0d359da47f906105f89085908590611098565b60405180910390a1505050565b6002546001146106445760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610368565b6002805560035460ff1661066b57604051630137efe360e71b815260040160405180910390fd5b610673610abc565b6004546106809190611080565b4210156106a05760405163461bbb8360e11b815260040160405180910390fd5b600760009054906101000a90046001600160a01b03166001600160a01b03166386db7df06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316637159a6186040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075857600080fd5b505af115801561076c573d6000803e3d6000fd5b50505050610778610abc565b60045461078590426110b1565b61078f91906110c8565b61079990426110b1565b6004556107a533610bc3565b6040514281527fd5215e0661831421a9ebc79f9d2848dbfc61213cf6ae3c92b45e17ea50be19109060200160405180910390a16001600255565b604080516002808252606080830184529260208301908036833701905050905064505249434560d81b8160008151811061081b5761081b611054565b6001600160d81b03199092166020928302919091019091015261084364524f4c455360d81b90565b8160018151811061085657610856611054565b60200260200101906001600160d81b03191690816001600160d81b0319168152505061089b8160008151811061088e5761088e611054565b6020026020010151610d0d565b600760006101000a8154816001600160a01b0302191690836001600160a01b031602179055506108d78160018151811061088e5761088e611054565b600180546001600160a01b0319166001600160a01b039290921691909117905590565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c59061093a9084903390600401610ff1565b600060405180830381600087803b15801561095457600080fd5b505af1158015610968573d6000803e3d6000fd5b50505050610974610abc565b6004546109819190611080565b42106109a057604051630bcdbe2960e21b815260040160405180910390fd5b610a2233836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109d09190610f00565b602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906110ea565b6001600160a01b0385169190610db0565b5050565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c590610a669084903390600401610ff1565b600060405180830381600087803b158015610a8057600080fd5b505af1158015610a94573d6000803e3d6000fd5b5050600880546001600160a01b0319166001600160a01b039590951694909417909355505050565b60075460408051627321f160e81b815290516000926001600160a01b031691637321f1009160048083019260209291908290030181865afa158015610b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b299190611103565b65ffffffffffff16905090565b60015460405163d09a20c560e01b81526a3432b0b93a2fb0b236b4b760a91b916001600160a01b03169063d09a20c590610b769084903390600401610ff1565b600060405180830381600087803b158015610b9057600080fd5b505af1158015610ba4573d6000803e3d6000fd5b505050506102c15b610bb4610abc565b610bbe90426110b1565b600455565b6006546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610bf4903090600401610f00565b602060405180830381865afa158015610c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3591906110ea565b60055411610c4557600554610cb6565b6006546040516370a0823160e01b81526001600160a01b03909116906370a0823190610c75903090600401610f00565b602060405180830381865afa158015610c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb691906110ea565b600654909150610cd0906001600160a01b03168383610db0565b7ff9b6ec770c96c3a6f9225bf3a8463a8ad03e884448af07b4ecd4d19d628946ee8282604051610d01929190611098565b60405180910390a15050565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b490610d3e90869060040161112b565b602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611140565b90506001600160a01b038116610daa5782604051635c3fa9cd60e01b8152600401610368919061112b565b92915050565b600080846001600160a01b031663a9059cbb60e01b8585604051602401610dd8929190611098565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610e16919061115d565b6000604051808303816000865af19150503d8060008114610e53576040519150601f19603f3d011682016040523d82523d6000602084013e610e58565b606091505b5091509150818015610e82575080511580610e82575080806020019051810190610e829190611008565b610ec05760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610368565b5050505050565b6001600160a01b03811681146102c157600080fd5b600060208284031215610eee57600080fd5b8135610ef981610ec7565b9392505050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b82811015610f6a57815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610f31565b5091979650505050505050565b60008060408385031215610f8a57600080fd5b8235610f9581610ec7565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015610fe55783516001600160d81b03191683529284019291840191600101610fbf565b50909695505050505050565b9182526001600160a01b0316602082015260400190565b60006020828403121561101a57600080fd5b81518015158114610ef957600080fd5b60006020828403121561103c57600080fd5b81516001600160d81b031981168114610ef957600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156110935761109361106a565b500190565b6001600160a01b03929092168252602082015260400190565b6000828210156110c3576110c361106a565b500390565b6000826110e557634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156110fc57600080fd5b5051919050565b60006020828403121561111557600080fd5b815165ffffffffffff81168114610ef957600080fd5b6001600160d81b031991909116815260200190565b60006020828403121561115257600080fd5b8151610ef981610ec7565b6000825160005b8181101561117e5760208186018101518583015201611164565b8181111561118d576000828501525b50919091019291505056fea2646970667358221220cfeb30d6d1e33b4e307238a7d7a637e496ef72269befff6ba71ee4222252a1a764736f6c634300080f0033608060405234801561001057600080fd5b506040516108fe3803806108fe83398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b6108628061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303346696146100a957806322f3e2d4146100be5780632f2ff15d146100db5780633ea26384146100ee5780634657b36c1461010e5780635924be701461012157806372b0bb4914610136578063923cb9521461013e5780639459b87514610151578063d4aae0c414610166578063d547741f14610179578063f851a4401461018c575b600080fd5b6100bc6100b7366004610692565b61019f565b005b6100c6610214565b60405190151581526020015b60405180910390f35b6100bc6100e93660046106b6565b61028b565b600254610101906001600160a01b031681565b6040516100d291906106e6565b6100bc61011c366004610692565b61031e565b610129610376565b6040516100d291906106fa565b6100bc610455565b600354610101906001600160a01b031681565b6101596104d4565b6040516100d2919061075d565b600054610101906001600160a01b031681565b6100bc6101873660046106b6565b61057a565b600154610101906001600160a01b031681565b6001546001600160a01b031633146101ca57604051634755657960e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517fa2c5878324891aaeaaa631341c00e3c30a2b70c1b6a1e9411b903402d40df5c990600090a250565b6000805460405163e52223bb60e01b81526001600160a01b039091169063e52223bb906102459030906004016106e6565b602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028691906107ab565b905090565b6001546001600160a01b031633146102b657604051634755657960e01b815260040160405180910390fd5b60035460405163656361ff60e01b81526001600160a01b039091169063656361ff906102e890859085906004016107cd565b600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b505050505050565b6000546001600160a01b03163314610354573360405163053e900f60e21b815260040161034b91906106e6565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516002808252606082810190935264524f4c455360d81b9190602082015b6040805180820190915260008082526020820152815260200190600190039081610397575050604080518082019091526001600160d81b03198316815263656361ff60e01b602082015281519193509083906000906103f8576103f86107e4565b60200260200101819052506040518060400160405280826001600160d81b031916815260200163f6ba000760e01b6001600160e01b03191681525082600181518110610446576104466107e4565b60200260200101819052505090565b6002546001600160a01b031633146104805760405163c5c898b360e01b815260040160405180910390fd5b60028054600180546001600160a01b0383166001600160a01b031991821681179092559091169091556040517fecf24556cb4f08854c12350ad47cc1bf4bfe9ada0935ffb3d3de5f2f3f5a0ad690600090a2565b6040805160018082528183019092526060916020808301908036833701905050905064524f4c455360d81b81600081518110610512576105126107e4565b60200260200101906001600160d81b03191690816001600160d81b031916815250506105578160008151811061054a5761054a6107e4565b60200260200101516105d7565b600380546001600160a01b0319166001600160a01b039290921691909117905590565b6001546001600160a01b031633146105a557604051634755657960e01b815260040160405180910390fd5b60035460405163f6ba000760e01b81526001600160a01b039091169063f6ba0007906102e890859085906004016107cd565b60008054604051632d37002d60e21b815282916001600160a01b03169063b4dc00b4906106089086906004016107fa565b602060405180830381865afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610649919061080f565b90506001600160a01b0381166106745782604051635c3fa9cd60e01b815260040161034b91906107fa565b92915050565b6001600160a01b038116811461068f57600080fd5b50565b6000602082840312156106a457600080fd5b81356106af8161067a565b9392505050565b600080604083850312156106c957600080fd5b8235915060208301356106db8161067a565b809150509250929050565b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b8281101561075057815180516001600160d81b03191685528601516001600160e01b031916868501529284019290850190600101610717565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561079f5783516001600160d81b03191683529284019291840191600101610779565b50909695505050505050565b6000602082840312156107bd57600080fd5b815180151581146106af57600080fd5b9182526001600160a01b0316602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6001600160d81b031991909116815260200190565b60006020828403121561082157600080fd5b81516106af8161067a56fea264697066735822122033d57464cacce8d93ab82f0ed1e95752fb746d1bca4e8ee373d9e276c482934e64736f6c634300080f003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212203ccc0a2fc9f1b3c4ba8078e6c324b44cc661caa5e55ec8854f1b788a12fe193464736f6c634300080f0033",
    "sourceMap": "1395:11870:170:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136;;;:::i;:::-;;6704:388;;;:::i;12595:668::-;;;:::i;9600:1809::-;;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;;;;;;;;:::i;:::-;;;;;;;;9289:305:170;;;;;;:::i;:::-;;:::i;8531:752::-;;;:::i;5578:731::-;;;:::i;4914:334::-;;;:::i;7167:246::-;;;:::i;5254:318::-;;;:::i;4286:622::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;786:14:184;;779:22;761:41;;749:2;734:18;1819:584:0;621:187:184;1461:30:170;;;;;-1:-1:-1;;;;;1461:30:170;;;6315:383;;;:::i;7693:832::-;;;:::i;11415:1174::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;1818:2136:170;1852:32;;-1:-1:-1;;;1852:32:170;;1860:23;1852:32;;;1205:25:184;-1:-1:-1;;;;;;;;;;;250:64:1;1852:7:170;;1178:18:184;;1852:32:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1962:11:170;:31;;-1:-1:-1;;;;;;1962:31:170;-1:-1:-1;;;;;1962:31:170;;;;;;;;;2042:21;;-1:-1:-1;;;2042:21:170;;2061:1;2042:21;;;1205:25:184;-1:-1:-1;;1962:31:170;2042:18;;1178::184;;2042:21:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2042:21:170;;;;;;;;;;;;:::i;:::-;2017:46;;2085:5;2091:1;2085:8;;;;;;;;:::i;:::-;;;;;;;2077:5;;:16;;;;;-1:-1:-1;;;;;2077:16:170;;;;;-1:-1:-1;;;;;2077:16:170;;;;;;2113:5;2119:1;2113:8;;;;;;;;:::i;:::-;;;;;;;2107:3;;:14;;;;;-1:-1:-1;;;;;2107:14:170;;;;;-1:-1:-1;;;;;2107:14:170;;;;;;2144:5;2150:1;2144:8;;;;;;;;:::i;:::-;;;;;;;2135:6;;:17;;;;;-1:-1:-1;;;;;2135:17:170;;;;;-1:-1:-1;;;;;2135:17:170;;;;;;2003:160;2272:2;2235:40;;;;;:::i;:::-;3310:2:184;3292:21;;;3349:2;3329:18;;;3322:30;-1:-1:-1;;;3383:3:184;3368:19;;3361:43;3442:3;3435:4;3420:20;;3413:33;;;3483:1;3462:19;;;3455:30;-1:-1:-1;;;3516:3:184;3501:19;;3494:34;3612:4;3600:17;;;-1:-1:-1;3580:18:184;;3573:45;3560:3;3545:19;2235:40:170;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2221:11:170;:54;;-1:-1:-1;;;;;;2221:54:170;-1:-1:-1;;;;;2221:54:170;;;;;;;;;;2349:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2340:6:170;:21;;-1:-1:-1;;;;;;2340:21:170;-1:-1:-1;;;;;2340:21:170;;;;;;;;;2466:49;;2495:7;;2505:9;;2466:49;;;:::i;:::-;-1:-1:-1;;;;;3890:32:184;;;3872:51;;3971:14;3959:27;;;3954:2;3939:18;;3932:55;4018:2;4003:18;;3996:34;3860:2;3845:18;2466:49:170;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2458:5:170;:57;;-1:-1:-1;;;;;;2458:57:170;-1:-1:-1;;;;;2458:57:170;;;;;;2556:6;;2537:26;;2556:6;;;2537:26;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:5:170;:34;;-1:-1:-1;;;;;;2529:34:170;-1:-1:-1;;;;;2529:34:170;;;;;;2610:5;;:34;;-1:-1:-1;;;2610:34:170;;2633:10;2610:34;;;1205:25:184;2610:5:170;;;:22;;1178:18:184;;2610:34:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2658:5:170;;:30;;-1:-1:-1;;;2658:30:170;;2677:10;2658:30;;;1205:25:184;-1:-1:-1;;;;;2658:5:170;;;;-1:-1:-1;2658:18:170;;-1:-1:-1;1178:18:184;;2658:30:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2702:5:170;;:33;;-1:-1:-1;;;2702:33:170;;2724:10;2702:33;;;1205:25:184;-1:-1:-1;;;;;2702:5:170;;;;-1:-1:-1;2702:21:170;;-1:-1:-1;1178:18:184;;2702:33:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2749:5:170;;:21;;-1:-1:-1;;;2749:21:170;;2767:2;2749:21;;;4628:36:184;-1:-1:-1;;;;;2749:5:170;;;;-1:-1:-1;2749:17:170;;-1:-1:-1;4601:18:184;;2749:21:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2870:6:170;;2853:24;;-1:-1:-1;;;;;2870:6:170;;;;-1:-1:-1;2853:24:170;;-1:-1:-1;2853:24:170;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:8:170;:35;;-1:-1:-1;;;;;;2842:35:170;-1:-1:-1;;;;;2842:35:170;;;;;;;;;2963:6;;3033:11;;2929:179;;2963:6;;;;3033:11;;3070:4;;2929:179;;;:::i;:::-;-1:-1:-1;;;;;5016:15:184;;;4998:34;;5068:15;;;5063:2;5048:18;;5041:43;5120:15;;5115:2;5100:18;;5093:43;5167:2;5152:18;;5145:34;;;;4947:3;4932:19;2929:179:170;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2921:5:170;:187;;-1:-1:-1;;;;;;2921:187:170;-1:-1:-1;;;;;2921:187:170;;;;;;3151:6;;3136:22;;3151:6;;;3136:22;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3123:10:170;:35;;-1:-1:-1;;;;;;3123:35:170;-1:-1:-1;;;;;3123:35:170;;;;;;3271:6;;3323:5;;3271:59;;-1:-1:-1;;;3271:59:170;;:6;;;;:20;;:59;;-1:-1:-1;;3323:5:170;;3271:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3344:6:170;;3396:5;;3344:59;;-1:-1:-1;;;3344:59:170;;-1:-1:-1;;;;;3344:6:170;;;;-1:-1:-1;3344:20:170;;-1:-1:-1;3344:59:170;;:6;;3396:5;;3344:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3451:6:170;;3504:8;;3451:63;;-1:-1:-1;;;3451:63:170;;-1:-1:-1;;;;;3451:6:170;;;;-1:-1:-1;3451:20:170;;-1:-1:-1;3451:63:170;;3472:22;;3504:8;;3451:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3528:6:170;;3581:5;;3528:60;;-1:-1:-1;;;3528:60:170;;-1:-1:-1;;;;;3528:6:170;;;;-1:-1:-1;3528:20:170;;-1:-1:-1;3528:60:170;;3549:22;;3581:5;;3528:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3602:6:170;;3655:10;;3602:65;;-1:-1:-1;;;3602:65:170;;-1:-1:-1;;;;;3602:6:170;;;;-1:-1:-1;3602:20:170;;-1:-1:-1;3602:65:170;;3623:22;;3655:10;;3602:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3752:10:170;;3788:6;;3752:43;;-1:-1:-1;;;3752:43:170;;-1:-1:-1;;;3752:43:170;;;5870:32:184;-1:-1:-1;;;;;3788:6:170;;;5918:18:184;;;5911:60;3752:10:170;;;-1:-1:-1;3752:20:170;;-1:-1:-1;5843:18:184;;3752:43:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3883:11:170;;3908:5;;3883:54;;-1:-1:-1;;;3883:54:170;;-1:-1:-1;;;;;3883:11:170;;;;-1:-1:-1;3883:16:170;;-1:-1:-1;3883:54:170;;3908:5;;;;3924:11;;3883:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136::o;6704:388::-;6864:5;;:17;;;-1:-1:-1;;;6864:17:170;;;;6844;;-1:-1:-1;;;;;6864:5:170;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6844:37;-1:-1:-1;;;;;;;;;;;;6891:7:170;6899:27;6844:37;6899:15;:27;:::i;:::-;6891:36;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;6891:36:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6985:8:170;;:25;;-1:-1:-1;;;6985:25:170;;:8;:25;;;761:41:184;-1:-1:-1;;;;;6985:8:170;;;;-1:-1:-1;6985:18:170;;-1:-1:-1;734:18:184;;6985:25:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:5;;;;;;;;;-1:-1:-1;;;;;7073:5:170;-1:-1:-1;;;;;7073:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:335;6704:388::o;12595:668::-;12786:116;;;-1:-1:-1;;;12786:116:170;;;;1205:25:184;;;;12786:116:170;;;;;;;;;;1178:18:184;;;;12786:116:170;;;;;;;-1:-1:-1;;;;;12786:116:170;-1:-1:-1;;;12786:116:170;;;12913:20;;-1:-1:-1;;;12913:20:170;;-1:-1:-1;;;;;;;;;;;250:64:1;12913:15:170;;:20;;12786:116;;12913:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12943:5;;;;;;;;;-1:-1:-1;;;;;12943:5:170;-1:-1:-1;;;;;12943:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12971:20:170;;-1:-1:-1;;;12971:20:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;12971:15:170;;-1:-1:-1;12971:20:170;;12987:3;;12971:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13001:5;;;;;;;;;-1:-1:-1;;;;;13001:5:170;-1:-1:-1;;;;;13001:16:170;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13030:20:170;;-1:-1:-1;;;13030:20:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13030:15:170;;-1:-1:-1;13030:20:170;;13046:3;;13030:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13060:5;;;;;;;;;-1:-1:-1;;;;;13060:5:170;-1:-1:-1;;;;;13060:14:170;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13087:20:170;;-1:-1:-1;;;13087:20:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13087:15:170;;-1:-1:-1;13087:20:170;;13103:3;;13087:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13117:5:170;;13147:11;;13117:57;;-1:-1:-1;;;13117:57:170;;-1:-1:-1;;;;;13117:5:170;;;;-1:-1:-1;13117:29:170;;-1:-1:-1;13117:57:170;;13147:11;;;;13168:4;;13117:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13185:20:170;;-1:-1:-1;;;13185:20:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13185:15:170;;-1:-1:-1;13185:20:170;;13201:3;;13185:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13215:5:170;;13244:11;;13215:41;;-1:-1:-1;;;13215:41:170;;-1:-1:-1;;;;;13215:5:170;;;;-1:-1:-1;13215:28:170;;-1:-1:-1;13215:41:170;;13244:11;;;;13215:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;9600:1809;9754:5;;:17;;;-1:-1:-1;;;9754:17:170;;;;-1:-1:-1;;;;;;;;;;;250:64:1;9728:7:170;;-1:-1:-1;;;;;9754:5:170;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9736:35;;:15;:35;:::i;:::-;9728:44;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;9728:44:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9819:18;9873:2;9840:36;;;;;:::i;:::-;8591:2:184;8573:21;;;8630:1;8610:18;;;8603:29;-1:-1:-1;;;8663:3:184;8648:19;;8641:40;8719:3;8712:4;8697:20;;8690:33;;;8760:1;8739:19;;;8732:30;-1:-1:-1;;;8793:3:184;8778:19;;8771:33;8888:4;8876:17;;;-1:-1:-1;8856:18:184;;8849:45;8836:3;8821:19;9840:36:170;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10042:48:170;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10042:48:170;-1:-1:-1;;;10042:48:170;;;10100:20;;-1:-1:-1;;;10100:20:170;;9819:57;;-1:-1:-1;9914:4:170;;10042:48;;-1:-1:-1;;;;;;;;;;;250:64:1;10100:15:170;;:20;;10042:48;;10100:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10139:6:170;;10130:16;;-1:-1:-1;;;10130:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10130:8:170;;-1:-1:-1;10130:16:170;;-1:-1:-1;;;;;10139:6:170;;10130:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10156:5:170;;:50;;-1:-1:-1;;;10156:50:170;;-1:-1:-1;;;;;10156:5:170;;;;-1:-1:-1;10156:29:170;;-1:-1:-1;10156:50:170;;10186:8;;10196:9;;10156:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10244:5;;;;;;;;;-1:-1:-1;;;;;10244:5:170;-1:-1:-1;;;;;10244:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10338:6:170;;10329:16;;-1:-1:-1;;;10329:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10329:8:170;;-1:-1:-1;10329:16:170;;-1:-1:-1;;;;;10338:6:170;;10329:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10355:5:170;;:50;;-1:-1:-1;;;10355:50:170;;-1:-1:-1;;;;;10355:5:170;;;;-1:-1:-1;10355:29:170;;-1:-1:-1;10355:50:170;;10385:8;;10395:9;;10355:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:57;10502:5;;;;;;;;;-1:-1:-1;;;;;10502:5:170;-1:-1:-1;;;;;10502:17:170;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10532:8;10485;:57::i;:::-;10561:5;;:14;;;-1:-1:-1;;;10561:14:170;;;;10552:35;;-1:-1:-1;;;;;10561:5:170;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10577:9;10552:8;:35::i;:::-;10681:5;;10659:48;;-1:-1:-1;;;10659:48:170;;-1:-1:-1;;;;;10659:13:170;;;;;;:48;;10681:5;;;;10697:8;;10659:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10815:33:170;;-1:-1:-1;;;10815:33:170;;10792:20;;-1:-1:-1;;;;;;10815:18:170;;;-1:-1:-1;10815:18:170;;:33;;10842:4;;10815:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10792:56;;10858:17;10878:5;;;;;;;;;-1:-1:-1;;;;;10878:5:170;-1:-1:-1;;;;;10878:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10858:37;-1:-1:-1;;;;;;;;;;;;10905:7:170;10913:27;10858:37;10913:15;:27;:::i;:::-;10905:36;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;10905:36:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:5;;;;;;;;;-1:-1:-1;;;;;10951:5:170;-1:-1:-1;;;;;10951:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10995:33:170;;-1:-1:-1;;;10995:33:170;;10974:18;;-1:-1:-1;;;;;;10995:18:170;;;-1:-1:-1;10995:18:170;;:33;;11022:4;;10995:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10974:54;;11038:51;11047:10;11074:5;;;;;;;;;-1:-1:-1;;;;;11074:5:170;-1:-1:-1;;;;;11074:12:170;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11059:29;;:12;:29;:::i;:::-;11038:8;:51::i;:::-;11193:33;;-1:-1:-1;;;11193:33:170;;-1:-1:-1;;;;;11193:18:170;;;;;:33;;11220:4;;11193:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11178:48;-1:-1:-1;;;;;;;;;;;;11236:7:170;11244:27;11262:9;11244:15;:27;:::i;:::-;11236:36;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;11236:36:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11282:5;;;;;;;;;-1:-1:-1;;;;;11282:5:170;-1:-1:-1;;;;;11282:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11318:33:170;;-1:-1:-1;;;11318:33:170;;-1:-1:-1;;;;;11318:18:170;;;-1:-1:-1;11318:18:170;;-1:-1:-1;11318:33:170;;11345:4;;11318:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11305:46;-1:-1:-1;11361:41:170;11305:46;11382:19;:12;11397:4;11382:19;:::i;11361:41::-;9658:1751;;;;;;9600:1809::o;9289:305::-;9428:6;;9419:16;;-1:-1:-1;;;9419:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;9419:8:170;;:16;;-1:-1:-1;;;;;9428:6:170;;9419:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9445:5:170;;:30;;-1:-1:-1;;;9445:30:170;;-1:-1:-1;;;;;9445:5:170;;;;-1:-1:-1;9445:17:170;;-1:-1:-1;9445:30:170;;9463:11;;9445:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9539:48;9556:5;;;;;;;;;-1:-1:-1;;;;;9556:5:170;-1:-1:-1;;;;;9556:14:170;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9575:11;9539:8;:48::i;:::-;9289:305;:::o;8531:752::-;8662:5;;:14;;;-1:-1:-1;;;8662:14:170;;;;8651:26;;-1:-1:-1;;;;;8662:5:170;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8651:10;:26::i;:::-;8707:5;;:16;;;-1:-1:-1;;;8707:16:170;;;;8688;;-1:-1:-1;;;;;8707:5:170;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8792:6;;8783:16;;-1:-1:-1;;;8783:16:170;;8688:35;;-1:-1:-1;;;;;;;;;;;;250:64:1;8783:8:170;;:16;;-1:-1:-1;;;;;8792:6:170;;;;8783:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8809:5;;;;;;;;;-1:-1:-1;;;;;8809:5:170;-1:-1:-1;;;;;8809:16:170;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8914:27;8926:5;;;;;;;;;-1:-1:-1;;;;;8926:5:170;-1:-1:-1;;;;;8926:12:170;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8925:15;8914:10;:27::i;:::-;8960:5;;:16;;;-1:-1:-1;;;8960:16:170;;;;8951:36;;-1:-1:-1;;;;;8960:5:170;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8978:8;8951;:36::i;:::-;9060:6;;9051:16;;-1:-1:-1;;;9051:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;9051:8:170;;:16;;-1:-1:-1;;;;;9060:6:170;;9051:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9077:5;;;;;;;;;-1:-1:-1;;;;;9077:5:170;-1:-1:-1;;;;;9077:14:170;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9188:5;;;;;;;;;-1:-1:-1;;;;;9188:5:170;-1:-1:-1;;;;;9188:12:170;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9222:5;;:16;;;-1:-1:-1;;;9222:16:170;;;;9213:63;;-1:-1:-1;;;;;9222:5:170;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9258:5;;;;;;;;;-1:-1:-1;;;;;9258:5:170;-1:-1:-1;;;;;9258:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9240:35;;:15;:35;:::i;5578:731::-;5716:5;;:17;;;-1:-1:-1;;;5716:17:170;;;;-1:-1:-1;;;;;;;;;;;250:64:1;5690:7:170;;-1:-1:-1;;;;;5716:5:170;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5736:1;5716:21;:::i;:::-;5698:39;;:15;:39;:::i;:::-;5690:48;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;5690:48:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5849:67;5858:5;;;;;;;;;-1:-1:-1;;;;;5858:5:170;-1:-1:-1;;;;;5858:14:170;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:5;;;;;;;;;-1:-1:-1;;;;;5894:5:170;-1:-1:-1;;;;;5894:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5914:1;5894:21;:::i;:::-;5876:39;;:15;:39;:::i;:::-;5849:8;:67::i;:::-;5953:5;;;;;;;;;-1:-1:-1;;;;;5953:5:170;-1:-1:-1;;;;;5953:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6059:63;6068:5;;;;;;;;;-1:-1:-1;;;;;6068:5:170;-1:-1:-1;;;;;6068:14:170;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6104:5;;;;;;;;;-1:-1:-1;;;;;6104:5:170;-1:-1:-1;;;;;6104:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6086:35;;:15;:35;:::i;:::-;6059:8;:63::i;:::-;6205:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6205:45:170;-1:-1:-1;;;6205:45:170;;;6260:20;;-1:-1:-1;;;6260:20:170;;6205:45;;-1:-1:-1;;;;;;;;;;;250:64:1;6260:15:170;;:20;;6205:45;;6260:20;;:::i;4914:334::-;5026:6;;5017:16;;-1:-1:-1;;;5017:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;5017:8:170;;:16;;-1:-1:-1;;;;;5026:6:170;;5017:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5043:5;;;;;;;;;-1:-1:-1;;;;;5043:5:170;-1:-1:-1;;;;;5043:16:170;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5143:46:170;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5143:46:170;-1:-1:-1;;;5143:46:170;;;5199:20;;-1:-1:-1;;;5199:20:170;;5143:46;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;5199:15:170;;:20;;5143:46;;5199:20;;:::i;7167:246::-;7293:5;;:17;;;-1:-1:-1;;;7293:17:170;;;;7273;;-1:-1:-1;;;;;7293:5:170;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7273:37;;7369;7378:9;7397:7;7369:8;:37::i;4286:622::-;4432:5;;:17;;;-1:-1:-1;;;4432:17:170;;;;4412;;-1:-1:-1;;;;;4432:5:170;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4412:37;-1:-1:-1;;;;;;;;;;;;4459:7:170;4467:27;4412:37;4467:15;:27;:::i;:::-;4459:36;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;4459:36:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4592:11:170;;:36;;-1:-1:-1;;;4592:36:170;;4569:20;;-1:-1:-1;;;;;;4592:11:170;;;;-1:-1:-1;4592:21:170;;:36;;4622:4;;4592:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:59;;4666:5;;;;;;;;;-1:-1:-1;;;;;4666:5:170;-1:-1:-1;;;;;4666:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4804:11:170;;:36;;-1:-1:-1;;;4804:36:170;;4783:18;;-1:-1:-1;;;;;;4804:11:170;;;;-1:-1:-1;4804:21:170;;:36;;4834:4;;4804:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:57;;4850:51;4859:10;4886:5;;;;;;;;;-1:-1:-1;;;;;4886:5:170;-1:-1:-1;;;;;4886:12:170;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4871:29;;:12;:29;:::i;4850:51::-;4325:583;;;4286:622::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6315:383:170:-;6473:5;;:17;;;-1:-1:-1;;;6473:17:170;;;;6453;;-1:-1:-1;;;;;6473:5:170;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6453:37;-1:-1:-1;;;;;;;;;;;;6500:7:170;6508:27;6453:37;6508:15;:27;:::i;:::-;6500:36;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;6500:36:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6594:5:170;;:22;;-1:-1:-1;;;6594:22:170;;:5;:22;;;761:41:184;-1:-1:-1;;;;;6594:5:170;;;;-1:-1:-1;6594:15:170;;-1:-1:-1;734:18:184;;6594:22:170;621:187:184;7693:832:170;7855:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7855:45:170;-1:-1:-1;;;7855:45:170;;;7910:20;;-1:-1:-1;;;7910:20:170;;7855:45;;-1:-1:-1;;;;;;;;;;;250:64:1;7910:15:170;;:20;;7855:45;;7910:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7940:5;;;;;;;;;-1:-1:-1;;;;;7940:5:170;-1:-1:-1;;;;;7940:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8056:6:170;;8047:16;;-1:-1:-1;;;8047:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;8047:8:170;;-1:-1:-1;8047:16:170;;-1:-1:-1;;;;;8056:6:170;;8047:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:5;;;;;;;;;-1:-1:-1;;;;;8073:5:170;-1:-1:-1;;;;;8073:15:170;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11415:1174;11568:5;;:17;;;-1:-1:-1;;;11568:17:170;;;;-1:-1:-1;;;;;;;;;;;250:64:1;11542:7:170;;-1:-1:-1;;;;;11568:5:170;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11550:35;;:15;:35;:::i;:::-;11542:44;;;;;;;;;;;;;1205:25:184;;1193:2;1178:18;;1042:194;11542:44:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11682:48:170;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11682:48:170;-1:-1:-1;;;11682:48:170;;;11740:20;;-1:-1:-1;;;11740:20:170;;11682:48;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;11740:15:170;;:20;;11682:48;;11740:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11779:6:170;;11770:16;;-1:-1:-1;;;11770:16:170;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;11770:8:170;;-1:-1:-1;11770:16:170;;-1:-1:-1;;;;;11779:6:170;;11770:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11796:5:170;;11825:11;;11796:41;;-1:-1:-1;;;11796:41:170;;-1:-1:-1;;;;;11796:5:170;;;;-1:-1:-1;11796:28:170;;-1:-1:-1;11796:41:170;;11825:11;;;;11796:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11875:5;;;;;;;;;-1:-1:-1;;;;;11875:5:170;-1:-1:-1;;;;;11875:10:170;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11985:11:170;;12015:6;;11985:38;;-1:-1:-1;;;11985:38:170;;11962:20;;-1:-1:-1;;;;;;11985:11:170;;;;-1:-1:-1;11985:21:170;;:38;;12015:6;;11985:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12056:11;;12086:5;;12056:37;;-1:-1:-1;;;12056:37:170;;11962:61;;-1:-1:-1;12033:20:170;;-1:-1:-1;;;;;12056:11:170;;;;:21;;:37;;12086:5;;;12056:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12162:6;;12153:16;;-1:-1:-1;;;12153:16:170;;12033:60;;-1:-1:-1;;;;;;;;;;;;250:64:1;12153:8:170;;:16;;-1:-1:-1;;;;;12162:6:170;;;;12153:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12179:5:170;;12208:11;;12179:41;;-1:-1:-1;;;12179:41:170;;-1:-1:-1;;;;;12179:5:170;;;;-1:-1:-1;12179:28:170;;-1:-1:-1;12179:41:170;;12208:11;;;;12179:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12251:11:170;;12281:6;;12251:38;;-1:-1:-1;;;12251:38:170;;12230:18;;-1:-1:-1;;;;;;12251:11:170;;;;-1:-1:-1;12251:21:170;;:38;;12281:6;;12251:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12369:11;;12399:5;;12369:37;;-1:-1:-1;;;12369:37:170;;12230:59;;-1:-1:-1;12360:59:170;;-1:-1:-1;;;;;12369:11:170;;;;:21;;:37;;12399:5;;;12369:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12416:1;12360:8;:59::i;:::-;12533:49;12542:10;12554:27;12569:12;12554;:27;:::i;3615:277:0:-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;-1:-1:-1;;;;;;;;;;;3705:44:0;;;;11380:2:184;11362:21;;;11419:2;11399:18;;;11392:30;11458:34;11453:2;11438:18;;11431:62;-1:-1:-1;;;11524:2:184;11509:18;;11502:35;11569:3;11554:19;;11178:401;3705:44:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3800:1:0;3768:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;3853:1:0;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;:::-;3615:277;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:0;;;;12872:2:184;12854:21;;;12911:2;12891:18;;;12884:30;12950:34;12945:2;12930:18;;12923:62;-1:-1:-1;;;13016:2:184;13001:18;;12994:32;13058:3;13043:19;;12670:398;5286:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;5375:1:0;5346:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5425:1:0;5396:31;;;;;;:::i;3255:157::-;3315:9;3310:96;;-1:-1:-1;;;;;;;;;;;3345:30:0;;;;13981:2:184;13963:21;;;14020:2;14000:18;;;13993:30;-1:-1:-1;;;14054:2:184;14039:18;;14032:53;14117:2;14102:18;;13779:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;12707:259::-;12768:1;12764;:5;12760:200;;;-1:-1:-1;;;;;;;;;;;12790:41:0;;;;14333:2:184;14315:21;;;14372:2;14352:18;;;14345:30;14411:34;14406:2;14391:18;;14384:62;-1:-1:-1;;;14477:2:184;14462:18;;14455:32;14519:3;14504:19;;14131:398;12790:41:0;;;;;;;;12850:30;;;14746:21:184;;;14803:1;14783:18;;;14776:29;-1:-1:-1;;;14836:2:184;14821:18;;14814:39;14920:4;14905:20;;14898:36;;;12850:30:0;;-1:-1:-1;;;;;;;;;;;12850:30:0;;;;14885:3:184;12850:30:0;;;12899;;;15157:21:184;;;15214:1;15194:18;;;15187:29;;;;-1:-1:-1;;;15247:2:184;15232:18;;15225:39;15331:4;15316:20;;15309:36;;;-1:-1:-1;;;;;;;;;;;12899:30:0;15296:3:184;15281:19;12899:30:0;14945:406:184;6756:259:0;6818:1;6813;:6;6809:200;;-1:-1:-1;;;;;;;;;;;6840:40:0;;;;15558:2:184;15540:21;;;15597:2;15577:18;;;15570:30;15636:34;15631:2;15616:18;;15609:62;-1:-1:-1;;;15702:2:184;15687:18;;15680:31;15743:3;15728:19;;15356:397;2840:242:0;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;;;2840:242::o;2410:424::-;2449:16;:14;:16::i;:::-;2445:359;;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;15960:51:184;;;-1:-1:-1;;;16027:18:184;;;16020:34;;;;2705:4:0;16070:18:184;;;16063:34;2482:11:0;;1671:64;2579:43;;15933:18:184;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:214:184:-;-1:-1:-1;;;;;189:32:184;;;;171:51;;159:2;144:18;;14:214::o;233:131::-;-1:-1:-1;;;;;308:31:184;;298:42;;288:70;;354:1;351;344:12;369:247;428:6;481:2;469:9;460:7;456:23;452:32;449:52;;;497:1;494;487:12;449:52;536:9;523:23;555:31;580:5;555:31;:::i;:::-;605:5;369:247;-1:-1:-1;;;369:247:184:o;1431:127::-;1492:10;1487:3;1483:20;1480:1;1473:31;1523:4;1520:1;1513:15;1547:4;1544:1;1537:15;1563:138;1642:13;;1664:31;1642:13;1664:31;:::i;1706:1129::-;1801:6;1832:2;1875;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1918:16;;-1:-1:-1;;;;;1983:14:184;;;1980:34;;;2010:1;2007;2000:12;1980:34;2048:6;2037:9;2033:22;2023:32;;2093:7;2086:4;2082:2;2078:13;2074:27;2064:55;;2115:1;2112;2105:12;2064:55;2144:2;2138:9;2166:2;2162;2159:10;2156:36;;;2172:18;;:::i;:::-;2218:2;2215:1;2211:10;2250:2;2244:9;2313:2;2309:7;2304:2;2300;2296:11;2292:25;2284:6;2280:38;2368:6;2356:10;2353:22;2348:2;2336:10;2333:18;2330:46;2327:72;;;2379:18;;:::i;:::-;2415:2;2408:22;2465:18;;;2499:15;;;;-1:-1:-1;2541:11:184;;;2537:20;;;2569:19;;;2566:39;;;2601:1;2598;2591:12;2566:39;2625:11;;;;2645:159;2661:6;2656:3;2653:15;2645:159;;;2727:34;2757:3;2727:34;:::i;:::-;2715:47;;2678:12;;;;2782;;;;2645:159;;;2823:6;1706:1129;-1:-1:-1;;;;;;;;1706:1129:184:o;2840:127::-;2901:10;2896:3;2892:20;2889:1;2882:31;2932:4;2929:1;2922:15;2956:4;2953:1;2946:15;5190:438;5363:2;5348:18;;5396:1;5385:13;;5375:144;;5441:10;5436:3;5432:20;5429:1;5422:31;5476:4;5473:1;5466:15;5504:4;5501:1;5494:15;5375:144;5528:25;;;-1:-1:-1;;;;;5589:32:184;;;;5584:2;5569:18;;;5562:60;5190:438;:::o;5982:274::-;-1:-1:-1;;;;;6174:32:184;;;;6156:51;;6238:2;6223:18;;6216:34;6144:2;6129:18;;5982:274::o;6261:184::-;6331:6;6384:2;6372:9;6363:7;6359:23;6355:32;6352:52;;;6400:1;6397;6390:12;6352:52;-1:-1:-1;6423:16:184;;6261:184;-1:-1:-1;6261:184:184:o;6450:127::-;6511:10;6506:3;6502:20;6499:1;6492:31;6542:4;6539:1;6532:15;6566:4;6563:1;6556:15;6582:128;6622:3;6653:1;6649:6;6646:1;6643:13;6640:39;;;6659:18;;:::i;:::-;-1:-1:-1;6695:9:184;;6582:128::o;7079:258::-;7151:1;7161:113;7175:6;7172:1;7169:13;7161:113;;;7251:11;;;7245:18;7232:11;;;7225:39;7197:2;7190:10;7161:113;;;7292:6;7289:1;7286:13;7283:48;;;-1:-1:-1;;7327:1:184;7309:16;;7302:27;7079:258::o;7342:381::-;7489:2;7478:9;7471:21;7452:4;7521:6;7515:13;7564:6;7559:2;7548:9;7544:18;7537:34;7580:66;7639:6;7634:2;7623:9;7619:18;7614:2;7606:6;7602:15;7580:66;:::i;:::-;7707:2;7686:15;-1:-1:-1;;7682:29:184;7667:45;;;;7714:2;7663:54;;7342:381;-1:-1:-1;;7342:381:184:o;9113:266::-;9198:6;9251:2;9239:9;9230:7;9226:23;9222:32;9219:52;;;9267:1;9264;9257:12;9219:52;9299:9;9293:16;9318:31;9343:5;9318:31;:::i;9659:277::-;9726:6;9779:2;9767:9;9758:7;9754:23;9750:32;9747:52;;;9795:1;9792;9785:12;9747:52;9827:9;9821:16;9880:5;9873:13;9866:21;9859:5;9856:32;9846:60;;9902:1;9899;9892:12;9941:125;9981:4;10009:1;10006;10003:8;10000:34;;;10014:18;;:::i;:::-;-1:-1:-1;10051:9:184;;9941:125::o;10071:168::-;10111:7;10177:1;10173;10169:6;10165:14;10162:1;10159:21;10154:1;10147:9;10140:17;10136:45;10133:71;;;10184:18;;:::i;:::-;-1:-1:-1;10224:9:184;;10071:168::o;10523:371::-;-1:-1:-1;;;;;;10708:33:184;;10696:46;;10765:13;;10678:3;;10787:61;10765:13;10837:1;10828:11;;10821:4;10809:17;;10787:61;:::i;:::-;10868:16;;;;10886:1;10864:24;;10523:371;-1:-1:-1;;;10523:371:184:o;10899:274::-;11028:3;11066:6;11060:13;11082:53;11128:6;11123:3;11116:4;11108:6;11104:17;11082:53;:::i;:::-;11151:16;;;;;10899:274;-1:-1:-1;;10899:274:184:o;11584:159::-;11661:2;11649:15;;-1:-1:-1;;;11689:4:184;11680:14;;11673:36;11734:2;11725:12;;11584:159::o;11748:374::-;11978:2;11967:9;11960:21;11941:4;11998:49;12043:2;12032:9;12028:18;11998:49;:::i;:::-;-1:-1:-1;;;;;12083:32:184;;;;12078:2;12063:18;;;;12056:60;;;;-1:-1:-1;11990:57:184;11748:374::o;12127:159::-;12204:2;12192:15;;-1:-1:-1;;;12232:4:184;12223:14;;12216:36;12277:2;12268:12;;12127:159::o;12291:374::-;12521:2;12510:9;12503:21;12484:4;12541:49;12586:2;12575:9;12571:18;12541:49;:::i;13073:348::-;13303:2;13292:9;13285:21;13266:4;13323:49;13368:2;13357:9;13353:18;13323:49;:::i;:::-;13315:57;;13408:6;13403:2;13392:9;13388:18;13381:34;13073:348;;;;:::o;13426:::-;13656:2;13645:9;13638:21;13619:4;13676:49;13721:2;13710:9;13706:18;13676:49;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectnes_setOperator(address)": "56735b57",
    "testCorrectness_activate_deactivate()": "5d948bbd",
    "testCorrectness_beat()": "a00f2709",
    "testCorrectness_cannotBeatIfInactive()": "7e9506de",
    "testCorrectness_cannotBeatIfTooEarly()": "8d0be1ef",
    "testCorrectness_cannotBeatRepeatedlyIfSkipped()": "7b47a7f3",
    "testCorrectness_cannotCallAdminFunctionsWithoutPermissions()": "1fdada07",
    "testCorrectness_resetBeat()": "e853d736",
    "testCorrectness_setRewardTokenAndAmount()": "2c639076",
    "testCorrectness_viewFrequency()": "882d3844",
    "testCorrectness_withdrawUnspentRewards()": "e9aaa0e8",
    "testFail_beatFailsIfOperateReverts()": "0bb8dc03",
    "testFail_beatFailsIfPriceReverts()": "e2627194",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"testCorrectnes_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_activate_deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfInactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfTooEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatRepeatedlyIfSkipped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotCallAdminFunctionsWithoutPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_viewFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfOperateReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfPriceReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_beat()\":{\"notice\":\"DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert\"},\"testCorrectness_resetBeat()\":{\"notice\":\"DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions\"},\"testCorrectness_viewFrequency()\":{\"notice\":\"[X] frequency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Heart.t.sol\":\"HeartTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":balancer-v2/=lib/balancer-v2/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/Heart.t.sol\":{\"keccak256\":\"0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9\",\"dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectnes_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_activate_deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_beat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfInactive"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfTooEarly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setRewardTokenAndAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_viewFrequency"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_withdrawUnspentRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfOperateReverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfPriceReverts"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_beat()": {
            "notice": "DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert"
          },
          "testCorrectness_resetBeat()": {
            "notice": "DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions"
          },
          "testCorrectness_viewFrequency()": {
            "notice": "[X] frequency"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":balancer-v2/=lib/balancer-v2/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Heart.t.sol": "HeartTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/Heart.t.sol": {
        "keccak256": "0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1",
        "urls": [
          "bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9",
          "dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Heart.t.sol",
    "id": 83836,
    "exportedSymbols": {
      "Actions": [
        28076
      ],
      "ERC20": [
        25226
      ],
      "FullMath": [
        37436
      ],
      "GoerliDaoRoles": [
        40681
      ],
      "HeartTest": [
        83835
      ],
      "IOperator": [
        52172
      ],
      "Instruction": [
        28082
      ],
      "InvalidKeycode": [
        28099
      ],
      "Kernel": [
        29225
      ],
      "KernelAdapter": [
        28240
      ],
      "Keycode": [
        28090
      ],
      "MockERC20": [
        24174
      ],
      "MockOperator": [
        82733
      ],
      "MockPrice": [
        66695
      ],
      "Module": [
        28305
      ],
      "OlympusHeart": [
        47122
      ],
      "Permissions": [
        28088
      ],
      "Policy": [
        28387
      ],
      "ROLESv1": [
        40760
      ],
      "RolesAdmin": [
        51124
      ],
      "TargetNotAContract": [
        28094
      ],
      "Test": [
        4979
      ],
      "UserFactory": [
        53895
      ],
      "console2": [
        23158
      ],
      "ensureContract": [
        28143
      ],
      "ensureValidKeycode": [
        28188
      ],
      "fromKeycode": [
        28127
      ],
      "toKeycode": [
        28113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:13228:170",
    "nodes": [
      {
        "id": 82649,
        "nodeType": "PragmaDirective",
        "src": "38:24:170",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 82651,
        "nodeType": "ImportDirective",
        "src": "64:40:170",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 6319,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82650,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4979,
              "src": "72:4:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82653,
        "nodeType": "ImportDirective",
        "src": "105:53:170",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 53896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82652,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53895,
              "src": "113:11:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82655,
        "nodeType": "ImportDirective",
        "src": "159:48:170",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 23159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82654,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23158,
              "src": "167:8:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82658,
        "nodeType": "ImportDirective",
        "src": "209:72:170",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 24175,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82656,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24174,
              "src": "217:9:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82657,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25226,
              "src": "228:5:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82660,
        "nodeType": "ImportDirective",
        "src": "282:51:170",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 66696,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82659,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66695,
              "src": "290:9:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82662,
        "nodeType": "ImportDirective",
        "src": "334:64:170",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 40682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82661,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40681,
              "src": "342:14:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82664,
        "nodeType": "ImportDirective",
        "src": "399:51:170",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 40761,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82663,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40760,
              "src": "407:7:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82666,
        "nodeType": "ImportDirective",
        "src": "451:51:170",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 51125,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82665,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51124,
              "src": "459:10:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82668,
        "nodeType": "ImportDirective",
        "src": "504:48:170",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 37437,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82667,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37436,
              "src": "512:8:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82669,
        "nodeType": "ImportDirective",
        "src": "554:24:170",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 29226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82671,
        "nodeType": "ImportDirective",
        "src": "580:48:170",
        "nodes": [],
        "absolutePath": "src/policies/Heart.sol",
        "file": "policies/Heart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 47123,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82670,
              "name": "OlympusHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47122,
              "src": "588:12:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82673,
        "nodeType": "ImportDirective",
        "src": "630:60:170",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83836,
        "sourceUnit": 52173,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82672,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52172,
              "src": "638:9:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82733,
        "nodeType": "ContractDefinition",
        "src": "739:654:170",
        "nodes": [
          {
            "id": 82678,
            "nodeType": "VariableDeclaration",
            "src": "777:18:170",
            "nodes": [],
            "constant": false,
            "functionSelector": "65372147",
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "789:6:170",
            "scope": 82733,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 82677,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "777:4:170",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82680,
            "nodeType": "ErrorDefinition",
            "src": "801:29:170",
            "nodes": [],
            "errorSelector": "1117572b",
            "name": "Operator_CustomError",
            "nameLocation": "807:20:170",
            "parameters": {
              "id": 82679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:170"
            }
          },
          {
            "id": 82694,
            "nodeType": "FunctionDefinition",
            "src": "836:74:170",
            "nodes": [],
            "body": {
              "id": 82693,
              "nodeType": "Block",
              "src": "880:30:170",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82689,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82678,
                      "src": "890:6:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 82690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82692,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:170"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 82686,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82683,
                    "src": "871:7:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 82687,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82685,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28387,
                  "src": "864:6:170"
                },
                "nodeType": "ModifierInvocation",
                "src": "864:15:170"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 82684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82683,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "855:7:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 82694,
                  "src": "848:14:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29225",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 82682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82681,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29225,
                      "src": "848:6:170"
                    },
                    "referencedDeclaration": 29225,
                    "src": "848:6:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29225",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:16:170"
            },
            "returnParameters": {
              "id": 82688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:170"
            },
            "scope": 82733,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82703,
            "nodeType": "FunctionDefinition",
            "src": "971:93:170",
            "nodes": [],
            "body": {
              "id": 82702,
              "nodeType": "Block",
              "src": "1062:2:170",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              28377
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "980:21:170",
            "overrides": {
              "id": 82696,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1013:8:170"
            },
            "parameters": {
              "id": 82695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:170"
            },
            "returnParameters": {
              "id": 82701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82700,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "1048:12:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 82703,
                  "src": "1031:29:170",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82698,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 82697,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28090,
                        "src": "1031:7:170"
                      },
                      "referencedDeclaration": 28090,
                      "src": "1031:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$28090",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 82699,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:9:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$28090_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:31:170"
            },
            "scope": 82733,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82712,
            "nodeType": "FunctionDefinition",
            "src": "1070:95:170",
            "nodes": [],
            "body": {
              "id": 82711,
              "nodeType": "Block",
              "src": "1163:2:170",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              28386
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1079:18:170",
            "overrides": {
              "id": 82705,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1114:8:170"
            },
            "parameters": {
              "id": 82704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:170"
            },
            "returnParameters": {
              "id": 82710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82709,
                  "mutability": "mutable",
                  "name": "requests",
                  "nameLocation": "1153:8:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 82712,
                  "src": "1132:29:170",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82707,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 82706,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 28088,
                        "src": "1132:11:170"
                      },
                      "referencedDeclaration": 28088,
                      "src": "1132:11:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$28088_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 82708,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:13:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$28088_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:31:170"
            },
            "scope": 82733,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82722,
            "nodeType": "FunctionDefinition",
            "src": "1218:92:170",
            "nodes": [],
            "body": {
              "id": 82721,
              "nodeType": "Block",
              "src": "1251:59:170",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 82716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1265:7:170",
                    "subExpression": {
                      "id": 82715,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82678,
                      "src": "1266:6:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82720,
                  "nodeType": "IfStatement",
                  "src": "1261:42:170",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82717,
                        "name": "Operator_CustomError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82680,
                        "src": "1281:20:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 82718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1281:22:170",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 82719,
                    "nodeType": "RevertStatement",
                    "src": "1274:29:170"
                  }
                }
              ]
            },
            "functionSelector": "7159a618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operate",
            "nameLocation": "1227:7:170",
            "parameters": {
              "id": 82713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:170"
            },
            "returnParameters": {
              "id": 82714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:170"
            },
            "scope": 82733,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82732,
            "nodeType": "FunctionDefinition",
            "src": "1316:75:170",
            "nodes": [],
            "body": {
              "id": 82731,
              "nodeType": "Block",
              "src": "1358:33:170",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82727,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82678,
                      "src": "1368:6:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82728,
                      "name": "result_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82724,
                      "src": "1377:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1368:16:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82730,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:16:170"
                }
              ]
            },
            "functionSelector": "f4b4dc2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setResult",
            "nameLocation": "1325:9:170",
            "parameters": {
              "id": 82725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82724,
                  "mutability": "mutable",
                  "name": "result_",
                  "nameLocation": "1340:7:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 82732,
                  "src": "1335:12:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82723,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:14:170"
            },
            "returnParameters": {
              "id": 82726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:170"
            },
            "scope": 82733,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82675,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28387,
              "src": "764:6:170"
            },
            "id": 82676,
            "nodeType": "InheritanceSpecifier",
            "src": "764:6:170"
          }
        ],
        "canonicalName": "MockOperator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 82674,
          "nodeType": "StructuredDocumentation",
          "src": "692:46:170",
          "text": " @notice Mock Operator to test Heart"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          82733,
          28387,
          28240
        ],
        "name": "MockOperator",
        "nameLocation": "748:12:170",
        "scope": 83836,
        "usedErrors": [
          28193,
          28313,
          82680
        ]
      },
      {
        "id": 83835,
        "nodeType": "ContractDefinition",
        "src": "1395:11870:170",
        "nodes": [
          {
            "id": 82738,
            "nodeType": "UsingForDirective",
            "src": "1428:27:170",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 82736,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37436,
              "src": "1434:8:170"
            },
            "typeName": {
              "id": 82737,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1447:7:170",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 82741,
            "nodeType": "VariableDeclaration",
            "src": "1461:30:170",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1480:11:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$53895",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 82740,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82739,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53895,
                "src": "1461:11:170"
              },
              "referencedDeclaration": 53895,
              "src": "1461:11:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$53895",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82743,
            "nodeType": "VariableDeclaration",
            "src": "1497:22:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1514:5:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82742,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:170",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82745,
            "nodeType": "VariableDeclaration",
            "src": "1525:20:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1542:3:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82744,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:170",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82747,
            "nodeType": "VariableDeclaration",
            "src": "1551:23:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "1568:6:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82746,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:170",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82750,
            "nodeType": "VariableDeclaration",
            "src": "1581:30:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1600:11:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24174",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82748,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24174,
                "src": "1581:9:170"
              },
              "referencedDeclaration": 24174,
              "src": "1581:9:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24174",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82753,
            "nodeType": "VariableDeclaration",
            "src": "1618:22:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1634:6:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29225",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 82752,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82751,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29225,
                "src": "1618:6:170"
              },
              "referencedDeclaration": 29225,
              "src": "1618:6:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29225",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82756,
            "nodeType": "VariableDeclaration",
            "src": "1646:24:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "1665:5:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$66695",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 82755,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82754,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66695,
                "src": "1646:9:170"
              },
              "referencedDeclaration": 66695,
              "src": "1646:9:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$66695",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82759,
            "nodeType": "VariableDeclaration",
            "src": "1676:29:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1700:5:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 82758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82757,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40681,
                "src": "1676:14:170"
              },
              "referencedDeclaration": 40681,
              "src": "1676:14:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82762,
            "nodeType": "VariableDeclaration",
            "src": "1712:30:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1734:8:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOperator_$82733",
              "typeString": "contract MockOperator"
            },
            "typeName": {
              "id": 82761,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82760,
                "name": "MockOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82733,
                "src": "1712:12:170"
              },
              "referencedDeclaration": 82733,
              "src": "1712:12:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOperator_$82733",
                "typeString": "contract MockOperator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82765,
            "nodeType": "VariableDeclaration",
            "src": "1748:27:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "heart",
            "nameLocation": "1770:5:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
              "typeString": "contract OlympusHeart"
            },
            "typeName": {
              "id": 82764,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82763,
                "name": "OlympusHeart",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47122,
                "src": "1748:12:170"
              },
              "referencedDeclaration": 47122,
              "src": "1748:12:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                "typeString": "contract OlympusHeart"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82768,
            "nodeType": "VariableDeclaration",
            "src": "1781:30:170",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1801:10:170",
            "scope": 83835,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 82767,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82766,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51124,
                "src": "1781:10:170"
              },
              "referencedDeclaration": 51124,
              "src": "1781:10:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 83009,
            "nodeType": "FunctionDefinition",
            "src": "1818:2136:170",
            "nodes": [],
            "body": {
              "id": 83008,
              "nodeType": "Block",
              "src": "1842:2112:170",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 82782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 82780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 82778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 82776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 82774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1860:2:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 82775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1865:3:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "1860:8:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 82777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1871:2:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "1860:13:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 82779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1876:2:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "1860:18:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 82781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1881:2:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "1860:23:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 82771,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1852:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 82773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "1852:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 82783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:32:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82784,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:32:170"
                },
                {
                  "expression": {
                    "id": 82790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82785,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82741,
                      "src": "1962:11:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$53895",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1976:15:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$53895_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 82787,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 82786,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53895,
                            "src": "1980:11:170"
                          },
                          "referencedDeclaration": 53895,
                          "src": "1980:11:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$53895",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 82789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1976:17:170",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$53895",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "1962:31:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$53895",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 82791,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:31:170"
                },
                {
                  "id": 82820,
                  "nodeType": "Block",
                  "src": "2003:160:170",
                  "statements": [
                    {
                      "assignments": [
                        82796
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 82796,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2034:5:170",
                          "nodeType": "VariableDeclaration",
                          "scope": 82820,
                          "src": "2017:22:170",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 82794,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2017:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 82795,
                            "nodeType": "ArrayTypeName",
                            "src": "2017:9:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 82801,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 82799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2061:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 82797,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82741,
                            "src": "2042:11:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$53895",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 82798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53894,
                          "src": "2042:18:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 82800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:21:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2017:46:170"
                    },
                    {
                      "expression": {
                        "id": 82806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82802,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82743,
                          "src": "2077:5:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82803,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82796,
                            "src": "2085:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82805,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 82804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2091:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2085:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2077:16:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82807,
                      "nodeType": "ExpressionStatement",
                      "src": "2077:16:170"
                    },
                    {
                      "expression": {
                        "id": 82812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82808,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82745,
                          "src": "2107:3:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82809,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82796,
                            "src": "2113:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82811,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 82810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2113:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2107:14:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82813,
                      "nodeType": "ExpressionStatement",
                      "src": "2107:14:170"
                    },
                    {
                      "expression": {
                        "id": 82818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82814,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82747,
                          "src": "2135:6:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 82815,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82796,
                            "src": "2144:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 82817,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 82816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2150:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2144:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:17:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 82819,
                      "nodeType": "ExpressionStatement",
                      "src": "2135:17:170"
                    }
                  ]
                },
                {
                  "id": 82831,
                  "nodeType": "Block",
                  "src": "2172:114:170",
                  "statements": [
                    {
                      "documentation": "Deploy token mocks",
                      "expression": {
                        "id": 82829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82821,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82750,
                          "src": "2221:11:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657761726420546f6b656e",
                              "id": 82825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2249:14:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              "value": "Reward Token"
                            },
                            {
                              "hexValue": "525744",
                              "id": 82826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              "value": "RWD"
                            },
                            {
                              "hexValue": "3138",
                              "id": 82827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:2:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 82824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2235:13:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24174_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 82823,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82822,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24174,
                                "src": "2239:9:170"
                              },
                              "referencedDeclaration": 24174,
                              "src": "2239:9:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 82828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2235:40:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "2221:54:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82830,
                      "nodeType": "ExpressionStatement",
                      "src": "2221:54:170"
                    }
                  ]
                },
                {
                  "id": 82892,
                  "nodeType": "Block",
                  "src": "2296:485:170",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 82837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82832,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82753,
                          "src": "2340:6:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29225",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 82835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2349:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29225_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 82834,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82833,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29225,
                                "src": "2353:6:170"
                              },
                              "referencedDeclaration": 29225,
                              "src": "2353:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 82836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2349:12:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29225",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "2340:21:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29225",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 82838,
                      "nodeType": "ExpressionStatement",
                      "src": "2340:21:170"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 82852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82839,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82756,
                          "src": "2458:5:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66695",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82843,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82753,
                              "src": "2480:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 82846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2495:7:170",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 82845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2488:6:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 82844,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2488:6:170",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 82847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2488:15:170",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 82850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 82848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2505:2:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 82849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2510:4:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "2505:9:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 82842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2466:13:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$66695_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 82841,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82840,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66695,
                                "src": "2470:9:170"
                              },
                              "referencedDeclaration": 66695,
                              "src": "2470:9:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$66695",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 82851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2466:49:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$66695",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "2458:57:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66695",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 82853,
                      "nodeType": "ExpressionStatement",
                      "src": "2458:57:170"
                    },
                    {
                      "expression": {
                        "id": 82860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82854,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82759,
                          "src": "2529:5:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82858,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82753,
                              "src": "2556:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 82857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2537:18:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_GoerliDaoRoles_$40681_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 82856,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82855,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40681,
                                "src": "2541:14:170"
                              },
                              "referencedDeclaration": 40681,
                              "src": "2541:14:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 82859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2537:26:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2529:34:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 82861,
                      "nodeType": "ExpressionStatement",
                      "src": "2529:34:170"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:3:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2639:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2633:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82862,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82756,
                            "src": "2610:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66654,
                          "src": "2610:22:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:34:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82869,
                      "nodeType": "ExpressionStatement",
                      "src": "2610:34:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2677:3:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2683:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2677:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82870,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82756,
                            "src": "2658:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66664,
                          "src": "2658:18:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:30:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82877,
                      "nodeType": "ExpressionStatement",
                      "src": "2658:30:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 82883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 82881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2724:3:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 82882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2730:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2724:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 82878,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82756,
                            "src": "2702:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCurrentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66674,
                          "src": "2702:21:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 82884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:33:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82885,
                      "nodeType": "ExpressionStatement",
                      "src": "2702:33:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 82889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:2:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 82886,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82756,
                            "src": "2749:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$66695",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 82888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66684,
                          "src": "2749:17:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 82890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82891,
                      "nodeType": "ExpressionStatement",
                      "src": "2749:21:170"
                    }
                  ]
                },
                {
                  "id": 82928,
                  "nodeType": "Block",
                  "src": "2791:378:170",
                  "statements": [
                    {
                      "documentation": "Deploy mock operator",
                      "expression": {
                        "id": 82899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82893,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82762,
                          "src": "2842:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$82733",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82897,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82753,
                              "src": "2870:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 82896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2853:16:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_MockOperator_$82733_$",
                              "typeString": "function (contract Kernel) returns (contract MockOperator)"
                            },
                            "typeName": {
                              "id": 82895,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82894,
                                "name": "MockOperator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 82733,
                                "src": "2857:12:170"
                              },
                              "referencedDeclaration": 82733,
                              "src": "2857:12:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOperator_$82733",
                                "typeString": "contract MockOperator"
                              }
                            }
                          },
                          "id": 82898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:24:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$82733",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "src": "2842:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$82733",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 82900,
                      "nodeType": "ExpressionStatement",
                      "src": "2842:35:170"
                    },
                    {
                      "documentation": "Deploy heart",
                      "expression": {
                        "id": 82918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82901,
                          "name": "heart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82765,
                          "src": "2921:5:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82905,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82753,
                              "src": "2963:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 82909,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82762,
                                      "src": "3005:8:170",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOperator_$82733",
                                        "typeString": "contract MockOperator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOperator_$82733",
                                        "typeString": "contract MockOperator"
                                      }
                                    ],
                                    "id": 82908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2997:7:170",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 82907,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2997:7:170",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 82910,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2997:17:170",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 82906,
                                "name": "IOperator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52172,
                                "src": "2987:9:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOperator_$52172_$",
                                  "typeString": "type(contract IOperator)"
                                }
                              },
                              "id": 82911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2987:28:170",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOperator_$52172",
                                "typeString": "contract IOperator"
                              }
                            },
                            {
                              "id": 82912,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82750,
                              "src": "3033:11:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32653138",
                                  "id": 82915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3070:4:170",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  }
                                ],
                                "id": 82914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3062:7:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 82913,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3062:7:170",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 82916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:13:170",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IOperator_$52172",
                                "typeString": "contract IOperator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$24174",
                                "typeString": "contract MockERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 82904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2929:16:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$_t_contract$_IOperator_$52172_$_t_contract$_ERC20_$25226_$_t_uint256_$returns$_t_contract$_OlympusHeart_$47122_$",
                              "typeString": "function (contract Kernel,contract IOperator,contract ERC20,uint256) returns (contract OlympusHeart)"
                            },
                            "typeName": {
                              "id": 82903,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82902,
                                "name": "OlympusHeart",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 47122,
                                "src": "2933:12:170"
                              },
                              "referencedDeclaration": 47122,
                              "src": "2933:12:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          },
                          "id": 82917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:179:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "src": "2921:187:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 82919,
                      "nodeType": "ExpressionStatement",
                      "src": "2921:187:170"
                    },
                    {
                      "expression": {
                        "id": 82926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82920,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82768,
                          "src": "3123:10:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 82924,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82753,
                              "src": "3151:6:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29225",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 82923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3136:14:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29225_$returns$_t_contract$_RolesAdmin_$51124_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 82922,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 82921,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51124,
                                "src": "3140:10:170"
                              },
                              "referencedDeclaration": 51124,
                              "src": "3140:10:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 82925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3136:22:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "3123:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 82927,
                      "nodeType": "ExpressionStatement",
                      "src": "3123:35:170"
                    }
                  ]
                },
                {
                  "id": 82991,
                  "nodeType": "Block",
                  "src": "3179:627:170",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 82932,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "3292:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 82933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "3292:21:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 82936,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82756,
                                "src": "3323:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$66695",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$66695",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 82935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3315:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3315:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3315:14:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82929,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82753,
                            "src": "3271:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 82931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "3271:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 82938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3271:59:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82939,
                      "nodeType": "ExpressionStatement",
                      "src": "3271:59:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 82943,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "3365:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 82944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28070,
                            "src": "3365:21:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 82947,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82759,
                                "src": "3396:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40681",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 82946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3388:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82945,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3388:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3388:14:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82940,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82753,
                            "src": "3344:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 82942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "3344:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 82949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:59:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82950,
                      "nodeType": "ExpressionStatement",
                      "src": "3344:59:170"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 82954,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "3472:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 82955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "3472:22:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 82958,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82762,
                                "src": "3504:8:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockOperator_$82733",
                                  "typeString": "contract MockOperator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockOperator_$82733",
                                  "typeString": "contract MockOperator"
                                }
                              ],
                              "id": 82957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3496:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82956,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3496:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3496:17:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82951,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82753,
                            "src": "3451:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 82953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "3451:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 82960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:63:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82961,
                      "nodeType": "ExpressionStatement",
                      "src": "3451:63:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 82965,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "3549:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 82966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "3549:22:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 82969,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "3581:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 82968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3573:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82967,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3573:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3573:14:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82962,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82753,
                            "src": "3528:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 82964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "3528:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 82971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3528:60:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82972,
                      "nodeType": "ExpressionStatement",
                      "src": "3528:60:170"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 82976,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28076,
                              "src": "3623:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28076_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 82977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28072,
                            "src": "3623:22:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 82980,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82768,
                                "src": "3655:10:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 82979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3647:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82978,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3647:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3647:19:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28076",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82973,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82753,
                            "src": "3602:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29225",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 82975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28659,
                          "src": "3602:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28076_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 82982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3602:65:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82983,
                      "nodeType": "ExpressionStatement",
                      "src": "3602:65:170"
                    },
                    {
                      "documentation": "Heart roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 82987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3773:13:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          },
                          {
                            "id": 82988,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82747,
                            "src": "3788:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 82984,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82768,
                            "src": "3752:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51124",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 82986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51063,
                          "src": "3752:20:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 82989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3752:43:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 82990,
                      "nodeType": "ExpressionStatement",
                      "src": "3752:43:170"
                    }
                  ]
                },
                {
                  "id": 83007,
                  "nodeType": "Block",
                  "src": "3816:132:170",
                  "statements": [
                    {
                      "documentation": "Mint reward tokens to heart contract",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 82997,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "3908:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 82996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3900:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 82995,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3900:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 82998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3900:14:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "id": 83003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31303030",
                                  "id": 83001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3924:4:170",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 83002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3931:4:170",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "3924:11:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 83000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3916:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 82999,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3916:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3916:20:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 82992,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82750,
                            "src": "3883:11:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 82994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24160,
                          "src": "3883:16:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 83005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:54:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 83006,
                      "nodeType": "ExpressionStatement",
                      "src": "3883:54:170"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1827:5:170",
            "parameters": {
              "id": 82769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:170"
            },
            "returnParameters": {
              "id": 82770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83066,
            "nodeType": "FunctionDefinition",
            "src": "4286:622:170",
            "nodes": [],
            "body": {
              "id": 83065,
              "nodeType": "Block",
              "src": "4325:583:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83015,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "4420:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83065,
                      "src": "4412:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83019,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83016,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "4432:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "4432:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:37:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83023,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4467:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4467:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83025,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83015,
                          "src": "4485:9:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4467:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83020,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "4459:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "4459:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83028,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:36:170"
                },
                {
                  "assignments": [
                    83031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83031,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "4577:12:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83065,
                      "src": "4569:20:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 83039,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83036,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4622:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83032,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "4592:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "4592:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:59:170"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83040,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "4666:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "4666:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83044,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:12:170"
                },
                {
                  "assignments": [
                    83047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83047,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "4791:10:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83065,
                      "src": "4783:18:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4783:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 83055,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83052,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4834:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4826:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4826:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4826:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83048,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "4804:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "4804:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4783:57:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83057,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83047,
                        "src": "4859:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83058,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83031,
                          "src": "4871:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83059,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "4886:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46737,
                            "src": "4886:12:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:14:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4871:29:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83056,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4850:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:51:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83064,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:51:170"
                }
              ]
            },
            "documentation": {
              "id": 83010,
              "nodeType": "StructuredDocumentation",
              "src": "4057:224:170",
              "text": "DONE\n [X] beat\n     [X] active and frequency has passed\n     [X] cannot beat if not active\n     [X] cannot beat if not enough time has passed\n     [X] fails if price or operator revert"
            },
            "functionSelector": "a00f2709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_beat",
            "nameLocation": "4295:20:170",
            "parameters": {
              "id": 83011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:2:170"
            },
            "returnParameters": {
              "id": 83012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83100,
            "nodeType": "FunctionDefinition",
            "src": "4914:334:170",
            "nodes": [],
            "body": {
              "id": 83099,
              "nodeType": "Block",
              "src": "4969:279:170",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the heart to inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83072,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "5026:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5017:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "5017:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83074,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:16:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83075,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "5043:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47021,
                      "src": "5043:16:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:18:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83079,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:18:170"
                },
                {
                  "assignments": [
                    83082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83082,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5137:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83099,
                      "src": "5124:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83081,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert",
                  "id": 83087,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4265617453746f707065642829",
                        "id": 83085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5167:21:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        },
                        "value": "Heart_BeatStopped()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        }
                      ],
                      "expression": {
                        "id": 83083,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5143:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5143:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:46:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:65:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83091,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83082,
                        "src": "5215:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83088,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5199:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "5199:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83093,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83094,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "5229:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "5229:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83098,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:12:170"
                }
              ]
            },
            "functionSelector": "7e9506de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfInactive",
            "nameLocation": "4923:36:170",
            "parameters": {
              "id": 83067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:2:170"
            },
            "returnParameters": {
              "id": 83068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83123,
            "nodeType": "FunctionDefinition",
            "src": "5254:318:170",
            "nodes": [],
            "body": {
              "id": 83122,
              "nodeType": "Block",
              "src": "5309:263:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83105,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5462:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83122,
                      "src": "5449:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83104,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5449:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert since it hasn't been more than the frequency since the last beat (deployment)",
                  "id": 83110,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5492:20:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83106,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5468:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5468:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5468:45:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5449:64:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83114,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83105,
                        "src": "5539:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83111,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5523:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "5523:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83116,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83117,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "5553:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "5553:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83121,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:12:170"
                }
              ]
            },
            "functionSelector": "8d0be1ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfTooEarly",
            "nameLocation": "5263:36:170",
            "parameters": {
              "id": 83101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:2:170"
            },
            "returnParameters": {
              "id": 83102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83189,
            "nodeType": "FunctionDefinition",
            "src": "5578:731:170",
            "nodes": [],
            "body": {
              "id": 83188,
              "nodeType": "Block",
              "src": "5642:667:170",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83129,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5698:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5698:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83131,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "5716:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47121,
                              "src": "5716:15:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 83133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5716:17:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 83134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5736:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5716:21:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5698:39:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83126,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5690:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "5690:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:48:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83138,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:48:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83140,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "5858:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46734,
                          "src": "5858:14:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5858:16:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83143,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5876:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5876:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83145,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "5894:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47121,
                              "src": "5894:15:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 83147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5894:17:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 83148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5914:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5894:21:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5876:39:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83139,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1395,
                        1420,
                        1450,
                        1475
                      ],
                      "referencedDeclaration": 1395,
                      "src": "5849:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:67:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83152,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:67:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83153,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "5953:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "5953:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5953:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83157,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:12:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83159,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "6068:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46734,
                          "src": "6068:14:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6068:16:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83162,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6086:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6086:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83164,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "6104:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47121,
                            "src": "6104:15:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6104:17:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6086:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83158,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 693,
                      "src": "6059:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:63:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83169,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:63:170"
                },
                {
                  "assignments": [
                    83171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83171,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6199:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83188,
                      "src": "6186:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83170,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6186:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83176,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:20:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83172,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6205:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "6205:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:45:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:64:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83180,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83171,
                        "src": "6276:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83177,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6260:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "6260:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6260:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83182,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83183,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "6290:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "6290:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83187,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:12:170"
                }
              ]
            },
            "functionSelector": "7b47a7f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
            "nameLocation": "5587:45:170",
            "parameters": {
              "id": 83124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:170"
            },
            "returnParameters": {
              "id": 83125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83220,
            "nodeType": "FunctionDefinition",
            "src": "6315:383:170",
            "nodes": [],
            "body": {
              "id": 83219,
              "nodeType": "Block",
              "src": "6366:332:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83194,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6461:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83219,
                      "src": "6453:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6453:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83198,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83195,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "6473:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "6473:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6473:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6453:37:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83202,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6508:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6508:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83204,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83194,
                          "src": "6526:9:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83199,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6500:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "6500:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83207,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:36:170"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 83211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6610:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 83208,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82756,
                        "src": "6594:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$66695",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 83210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66582,
                      "src": "6594:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 83212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:22:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83213,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:22:170"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83214,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "6679:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "6679:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83218,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:12:170"
                }
              ]
            },
            "functionSelector": "e2627194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfPriceReverts",
            "nameLocation": "6324:32:170",
            "parameters": {
              "id": 83190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6356:2:170"
            },
            "returnParameters": {
              "id": 83191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83251,
            "nodeType": "FunctionDefinition",
            "src": "6704:388:170",
            "nodes": [],
            "body": {
              "id": 83250,
              "nodeType": "Block",
              "src": "6757:335:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83225,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6852:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83250,
                      "src": "6844:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 83229,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83226,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "6864:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "6864:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6864:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:37:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83233,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6899:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6899:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83235,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83225,
                          "src": "6917:9:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6899:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83230,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "6891:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "6891:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83238,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:36:170"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 83242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7004:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 83239,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82762,
                        "src": "6985:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$82733",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 83241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82732,
                      "src": "6985:18:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 83243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6985:25:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83244,
                  "nodeType": "ExpressionStatement",
                  "src": "6985:25:170"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83245,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "7073:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "7073:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83249,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:12:170"
                }
              ]
            },
            "functionSelector": "0bb8dc03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfOperateReverts",
            "nameLocation": "6713:34:170",
            "parameters": {
              "id": 83221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6747:2:170"
            },
            "returnParameters": {
              "id": 83222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6757:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83271,
            "nodeType": "FunctionDefinition",
            "src": "7167:246:170",
            "nodes": [],
            "body": {
              "id": 83270,
              "nodeType": "Block",
              "src": "7215:198:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83257,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "7281:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83270,
                      "src": "7273:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7273:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart",
                  "id": 83261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83258,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "7293:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "7293:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:37:170"
                },
                {
                  "documentation": "Check that the frequency is correct",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83263,
                        "name": "frequency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83257,
                        "src": "7378:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "38",
                            "id": 83266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7397:7:170",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            },
                            "value": "8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            }
                          ],
                          "id": 83265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7389:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83264,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7389:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7389:16:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83262,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7369:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:37:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83269,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:37:170"
                }
              ]
            },
            "documentation": {
              "id": 83252,
              "nodeType": "StructuredDocumentation",
              "src": "7144:18:170",
              "text": "[X] frequency"
            },
            "functionSelector": "882d3844",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_viewFrequency",
            "nameLocation": "7176:29:170",
            "parameters": {
              "id": 83253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:2:170"
            },
            "returnParameters": {
              "id": 83254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83342,
            "nodeType": "FunctionDefinition",
            "src": "7693:832:170",
            "nodes": [],
            "body": {
              "id": 83341,
              "nodeType": "Block",
              "src": "7737:788:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83277,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7849:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83341,
                      "src": "7836:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83276,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7836:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect the revert since not enough time has passed",
                  "id": 83282,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 83280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7879:20:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 83278,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7855:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7855:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:45:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7836:64:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83286,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83277,
                        "src": "7926:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83283,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7910:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "7910:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83288,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83289,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "7940:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "7940:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7940:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83293,
                  "nodeType": "ExpressionStatement",
                  "src": "7940:12:170"
                },
                {
                  "documentation": "Reset the beat so that it can be called without moving the time forward",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83297,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "8056:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83294,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8047:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8047:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83299,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:16:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83300,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "8073:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46994,
                      "src": "8073:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83304,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:17:170"
                },
                {
                  "assignments": [
                    83307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83307,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "8172:12:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83341,
                      "src": "8164:20:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8164:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 83315,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83312,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8217:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8209:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8209:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8209:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83308,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "8187:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "8187:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8164:59:170"
                },
                {
                  "documentation": "Beat the heart and expect it to work",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83316,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "8283:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "8283:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8283:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83320,
                  "nodeType": "ExpressionStatement",
                  "src": "8283:12:170"
                },
                {
                  "assignments": [
                    83323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83323,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "8408:10:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83341,
                      "src": "8400:18:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 83331,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83328,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8451:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83324,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "8421:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "8421:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8421:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:57:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83333,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83323,
                        "src": "8476:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83334,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83307,
                          "src": "8488:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83335,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "8503:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46737,
                            "src": "8503:12:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8503:14:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:29:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83332,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8467:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:51:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83340,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:51:170"
                }
              ]
            },
            "documentation": {
              "id": 83272,
              "nodeType": "StructuredDocumentation",
              "src": "7466:222:170",
              "text": "DONE\n [X] resetBeat\n [X] activate and deactivate\n [X] setOperator\n [X] setRewardTokenAndAmount\n [X] withdrawUnspentRewards\n [X] cannot call admin functions without permissions"
            },
            "functionSelector": "e853d736",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_resetBeat",
            "nameLocation": "7702:25:170",
            "parameters": {
              "id": 83273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:170"
            },
            "returnParameters": {
              "id": 83274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7737:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83412,
            "nodeType": "FunctionDefinition",
            "src": "8531:752:170",
            "nodes": [],
            "body": {
              "id": 83411,
              "nodeType": "Block",
              "src": "8585:698:170",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Expect the heart to be active to begin with",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83346,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "8662:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46731,
                          "src": "8662:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 83348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8662:14:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83345,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8651:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:26:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83350,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:26:170"
                },
                {
                  "assignments": [
                    83352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83352,
                      "mutability": "mutable",
                      "name": "lastBeat",
                      "nameLocation": "8696:8:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83411,
                      "src": "8688:16:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8688:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83356,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83353,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "8707:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46734,
                      "src": "8707:14:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8707:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8688:35:170"
                },
                {
                  "documentation": "Toggle the heart to make it inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83360,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "8792:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83357,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "8783:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "8783:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8783:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83362,
                  "nodeType": "ExpressionStatement",
                  "src": "8783:16:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83363,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "8809:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47021,
                      "src": "8809:16:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8809:18:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83367,
                  "nodeType": "ExpressionStatement",
                  "src": "8809:18:170"
                },
                {
                  "documentation": "Expect the heart to be inactive and lastBeat to remain the same",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8925:15:170",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83369,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "8926:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46731,
                            "src": "8926:12:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 83371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8926:14:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83368,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8914:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:27:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83374,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:27:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83376,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "8960:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46734,
                          "src": "8960:14:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8960:16:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83379,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83352,
                        "src": "8978:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8951:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8951:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83381,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:36:170"
                },
                {
                  "documentation": "Toggle the heart to make it active again",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83385,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "9060:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83382,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9051:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9051:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9051:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83387,
                  "nodeType": "ExpressionStatement",
                  "src": "9051:16:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83388,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "9077:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47009,
                      "src": "9077:14:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9077:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83392,
                  "nodeType": "ExpressionStatement",
                  "src": "9077:16:170"
                },
                {
                  "documentation": "Expect the heart to be active again and lastBeat to be reset",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83394,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "9188:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46731,
                          "src": "9188:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 83396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9188:14:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83393,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9177:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 83397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9177:26:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83398,
                  "nodeType": "ExpressionStatement",
                  "src": "9177:26:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83400,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "9222:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46734,
                          "src": "9222:14:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9222:16:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83403,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9240:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9240:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83405,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "9258:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47121,
                            "src": "9258:15:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:17:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9240:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83399,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "9213:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9213:63:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83410,
                  "nodeType": "ExpressionStatement",
                  "src": "9213:63:170"
                }
              ]
            },
            "functionSelector": "5d948bbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_activate_deactivate",
            "nameLocation": "8540:35:170",
            "parameters": {
              "id": 83343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8575:2:170"
            },
            "returnParameters": {
              "id": 83344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83440,
            "nodeType": "FunctionDefinition",
            "src": "9289:305:170",
            "nodes": [],
            "body": {
              "id": 83439,
              "nodeType": "Block",
              "src": "9353:241:170",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the operator using the provided address",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83420,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "9428:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83417,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9419:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "9419:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9419:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83422,
                  "nodeType": "ExpressionStatement",
                  "src": "9419:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83426,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83414,
                        "src": "9463:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83423,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "9445:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47037,
                      "src": "9445:17:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9445:30:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83428,
                  "nodeType": "ExpressionStatement",
                  "src": "9445:30:170"
                },
                {
                  "documentation": "Check that the operator has been updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83432,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "9556:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46747,
                              "src": "9556:14:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IOperator_$52172_$",
                                "typeString": "function () view external returns (contract IOperator)"
                              }
                            },
                            "id": 83434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9556:16:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOperator_$52172",
                              "typeString": "contract IOperator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOperator_$52172",
                              "typeString": "contract IOperator"
                            }
                          ],
                          "id": 83431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9548:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9548:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:25:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83436,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83414,
                        "src": "9575:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83429,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "9539:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 83437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9539:48:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83438,
                  "nodeType": "ExpressionStatement",
                  "src": "9539:48:170"
                }
              ]
            },
            "functionSelector": "56735b57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectnes_setOperator",
            "nameLocation": "9298:26:170",
            "parameters": {
              "id": 83415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83414,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "9333:11:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 83440,
                  "src": "9325:19:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9325:7:170",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9324:21:170"
            },
            "returnParameters": {
              "id": 83416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9353:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83645,
            "nodeType": "FunctionDefinition",
            "src": "9600:1809:170",
            "nodes": [],
            "body": {
              "id": 83644,
              "nodeType": "Block",
              "src": "9658:1751:170",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83446,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9736:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9736:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83448,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "9754:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47121,
                            "src": "9754:15:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9754:17:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9736:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83443,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "9728:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "9728:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:44:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83453,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:44:170"
                },
                {
                  "assignments": [
                    83457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83457,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "9829:8:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "9819:18:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$24174",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 83456,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83455,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24174,
                          "src": "9819:9:170"
                        },
                        "referencedDeclaration": 24174,
                        "src": "9819:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create new reward token",
                  "id": 83465,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4e657720546f6b656e",
                        "id": 83461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9854:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        "value": "New Token"
                      },
                      {
                        "hexValue": "4e54",
                        "id": 83462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9867:4:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        "value": "NT"
                      },
                      {
                        "hexValue": "3138",
                        "id": 83463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9873:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 83460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9840:13:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24174_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                      },
                      "typeName": {
                        "id": 83459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83458,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24174,
                          "src": "9844:9:170"
                        },
                        "referencedDeclaration": 24174,
                        "src": "9844:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 83464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$24174",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9819:57:170"
                },
                {
                  "assignments": [
                    83467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83467,
                      "mutability": "mutable",
                      "name": "newReward",
                      "nameLocation": "9894:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "9886:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9886:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83472,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32653138",
                        "id": 83470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:4:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 83469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9906:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 83468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9906:7:170",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 83471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9906:13:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9886:33:170"
                },
                {
                  "assignments": [
                    83475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83475,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10036:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "10023:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83474,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10023:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to set new reward token and amount while a beat is available, expect to fail",
                  "id": 83480,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 83478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10066:23:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 83476,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10042:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "10042:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10042:48:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10023:67:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83484,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83475,
                        "src": "10116:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83481,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10100:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "10100:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83486,
                  "nodeType": "ExpressionStatement",
                  "src": "10100:20:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83490,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "10139:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83487,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10130:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "10130:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10130:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83492,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83496,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83457,
                        "src": "10186:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 83497,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83467,
                        "src": "10196:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83493,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "10156:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47080,
                      "src": "10156:29:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10156:50:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83499,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:50:170"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83500,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "10244:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "10244:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10244:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83504,
                  "nodeType": "ExpressionStatement",
                  "src": "10244:12:170"
                },
                {
                  "documentation": "Set a new reward token and amount from the policy",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83508,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "10338:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83505,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10329:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "10329:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83510,
                  "nodeType": "ExpressionStatement",
                  "src": "10329:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83514,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83457,
                        "src": "10385:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 83515,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83467,
                        "src": "10395:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83511,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "10355:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47080,
                      "src": "10355:29:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10355:50:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83517,
                  "nodeType": "ExpressionStatement",
                  "src": "10355:50:170"
                },
                {
                  "documentation": "Expect the heart's reward token and reward to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 83521,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "10502:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 83522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46741,
                              "src": "10502:17:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$25226_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 83523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10502:19:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25226",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$25226",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 83520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10494:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10494:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10494:28:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 83527,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83457,
                            "src": "10532:8:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 83526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10524:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10524:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10524:17:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83518,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "10485:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 83529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10485:57:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83530,
                  "nodeType": "ExpressionStatement",
                  "src": "10485:57:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 83532,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "10561:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 83533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46737,
                          "src": "10561:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 83534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:14:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83535,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83467,
                        "src": "10577:9:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83531,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "10552:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:35:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83537,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:35:170"
                },
                {
                  "documentation": "Mint some new tokens to the heart to pay rewards",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83543,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "10681:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 83542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83541,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:14:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            },
                            "id": 83549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 83547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10697:1:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 83548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10701:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "10697:8:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          ],
                          "id": 83546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10689:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83545,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10689:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10689:17:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83538,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83457,
                        "src": "10659:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24160,
                      "src": "10659:13:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:48:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83552,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:48:170"
                },
                {
                  "assignments": [
                    83555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83555,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "10800:12:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "10792:20:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10792:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Expect the heart to reward the new token and amount on a beat",
                  "id": 83563,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83560,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10842:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10834:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83558,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10834:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10834:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83556,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83457,
                        "src": "10815:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "10815:18:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10815:33:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10792:56:170"
                },
                {
                  "assignments": [
                    83565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83565,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "10866:9:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "10858:17:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83564,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10858:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83569,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83566,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "10878:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "10878:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 83568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10878:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10858:37:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83573,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10913:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10913:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83575,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83565,
                          "src": "10931:9:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83570,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10905:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "10905:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10905:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83578,
                  "nodeType": "ExpressionStatement",
                  "src": "10905:36:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83579,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "10951:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "10951:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10951:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83583,
                  "nodeType": "ExpressionStatement",
                  "src": "10951:12:170"
                },
                {
                  "assignments": [
                    83585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83585,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "10982:10:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83644,
                      "src": "10974:18:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83584,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83593,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83590,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11022:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$83835",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 83589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11014:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11014:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11014:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83586,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83457,
                        "src": "10995:8:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "10995:18:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:33:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:54:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83595,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83585,
                        "src": "11047:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83596,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83555,
                          "src": "11059:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83597,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "11074:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46737,
                            "src": "11074:12:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11074:14:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11059:29:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83594,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11038:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11038:51:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83602,
                  "nodeType": "ExpressionStatement",
                  "src": "11038:51:170"
                },
                {
                  "documentation": "Balance is now less than the reward amount, test the min function",
                  "expression": {
                    "id": 83611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83603,
                      "name": "startBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83555,
                      "src": "11178:12:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 83608,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11220:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$83835",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$83835",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 83607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11212:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83606,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11212:7:170",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11212:13:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 83604,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83457,
                          "src": "11193:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 83605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "11193:18:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 83610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:33:170",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11178:48:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83612,
                  "nodeType": "ExpressionStatement",
                  "src": "11178:48:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83616,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11244:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11244:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83618,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83565,
                          "src": "11262:9:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11244:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83613,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11236:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "11236:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11236:36:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83621,
                  "nodeType": "ExpressionStatement",
                  "src": "11236:36:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83622,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "11282:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "11282:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11282:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83626,
                  "nodeType": "ExpressionStatement",
                  "src": "11282:12:170"
                },
                {
                  "expression": {
                    "id": 83635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83627,
                      "name": "endBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83585,
                      "src": "11305:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 83632,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11345:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$83835",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$83835",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 83631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11337:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83630,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11337:7:170",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11337:13:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 83628,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83457,
                          "src": "11318:8:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24174",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 83629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24877,
                        "src": "11318:18:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 83634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11318:33:170",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11305:46:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83636,
                  "nodeType": "ExpressionStatement",
                  "src": "11305:46:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83638,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83585,
                        "src": "11370:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83639,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83555,
                          "src": "11382:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 83640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11397:4:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11382:19:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83637,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11361:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:41:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83643,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:41:170"
                }
              ]
            },
            "functionSelector": "2c639076",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setRewardTokenAndAmount",
            "nameLocation": "9609:39:170",
            "parameters": {
              "id": 83441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9648:2:170"
            },
            "returnParameters": {
              "id": 83442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9658:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83755,
            "nodeType": "FunctionDefinition",
            "src": "11415:1174:170",
            "nodes": [],
            "body": {
              "id": 83754,
              "nodeType": "Block",
              "src": "11472:1117:170",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83651,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11550:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 83652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11550:15:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 83653,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82765,
                              "src": "11568:5:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 83654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47121,
                            "src": "11568:15:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 83655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11568:17:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11550:35:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83648,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11542:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6332,
                      "src": "11542:7:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 83657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:44:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83658,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:44:170"
                },
                {
                  "assignments": [
                    83661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83661,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11676:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "11663:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83660,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11663:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call while a beat is available, expect to fail",
                  "id": 83666,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 83664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11706:23:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 83662,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11682:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "11682:23:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 83665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11682:48:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11663:67:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83670,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83661,
                        "src": "11756:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83667,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11740:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "11740:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83672,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:20:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83676,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "11779:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83673,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "11770:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "11770:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11770:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83678,
                  "nodeType": "ExpressionStatement",
                  "src": "11770:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83682,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "11825:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83679,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "11796:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47107,
                      "src": "11796:28:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11796:41:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83684,
                  "nodeType": "ExpressionStatement",
                  "src": "11796:41:170"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83685,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "11875:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46932,
                      "src": "11875:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:12:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83689,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:12:170"
                },
                {
                  "assignments": [
                    83692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83692,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "11970:12:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "11962:20:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11962:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the balance of the reward token on the contract",
                  "id": 83700,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83697,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82747,
                            "src": "12015:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 83696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12007:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12007:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12007:15:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83693,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "11985:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "11985:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:38:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11962:61:170"
                },
                {
                  "assignments": [
                    83702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83702,
                      "mutability": "mutable",
                      "name": "heartBalance",
                      "nameLocation": "12041:12:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "12033:20:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12033:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83710,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83707,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "12086:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 83706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12078:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83705,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12078:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12078:14:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83703,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "12056:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "12056:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:37:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12033:60:170"
                },
                {
                  "documentation": "Withdraw the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83714,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82747,
                        "src": "12162:6:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83711,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12153:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "12153:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83716,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83720,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "12208:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83717,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "12179:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47107,
                      "src": "12179:28:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:41:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83722,
                  "nodeType": "ExpressionStatement",
                  "src": "12179:41:170"
                },
                {
                  "assignments": [
                    83724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83724,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "12238:10:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83754,
                      "src": "12230:18:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12230:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83732,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83729,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82747,
                            "src": "12281:6:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 83728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12273:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12273:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12273:15:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83725,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "12251:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24877,
                      "src": "12251:21:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 83731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12251:38:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12230:59:170"
                },
                {
                  "documentation": "Expect the heart's reward token balance to be 0",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 83738,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82765,
                                "src": "12399:5:170",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 83737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12391:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83736,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12391:7:170",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12391:14:170",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 83734,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82750,
                            "src": "12369:11:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24174",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 83735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24877,
                          "src": "12369:21:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 83740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12369:37:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 83743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12416:1:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 83742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12408:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83741,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12408:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12408:10:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83733,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12360:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:59:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83746,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:59:170"
                },
                {
                  "documentation": "Expect this contract's reward token balance to be increased by the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 83748,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83724,
                        "src": "12542:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83749,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83692,
                          "src": "12554:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 83750,
                          "name": "heartBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83702,
                          "src": "12569:12:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12554:27:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83747,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "12533:8:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 83752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12533:49:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83753,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:49:170"
                }
              ]
            },
            "functionSelector": "e9aaa0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_withdrawUnspentRewards",
            "nameLocation": "11424:38:170",
            "parameters": {
              "id": 83646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11462:2:170"
            },
            "returnParameters": {
              "id": 83647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11472:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83834,
            "nodeType": "FunctionDefinition",
            "src": "12595:668:170",
            "nodes": [],
            "body": {
              "id": 83833,
              "nodeType": "Block",
              "src": "12672:591:170",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83760,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12780:3:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 83833,
                      "src": "12767:16:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 83759,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12767:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call admin functions on the heart as non-policy and expect revert",
                  "id": 83771,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 83763,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40760,
                            "src": "12822:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40760_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 83764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40706,
                          "src": "12822:25:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 83765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12822:34:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 83768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12878:13:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            }
                          ],
                          "id": 83767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12870:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 83766,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12870:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12870:22:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 83761,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12786:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 83762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12786:22:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 83770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:116:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12767:135:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83775,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83760,
                        "src": "12929:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83772,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12913:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "12913:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83777,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83778,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "12943:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46994,
                      "src": "12943:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12943:17:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83782,
                  "nodeType": "ExpressionStatement",
                  "src": "12943:17:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83786,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83760,
                        "src": "12987:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83783,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "12971:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "12971:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12971:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83788,
                  "nodeType": "ExpressionStatement",
                  "src": "12971:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83789,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "13001:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47021,
                      "src": "13001:16:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13001:18:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83793,
                  "nodeType": "ExpressionStatement",
                  "src": "13001:18:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83797,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83760,
                        "src": "13046:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13030:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "13030:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83799,
                  "nodeType": "ExpressionStatement",
                  "src": "13030:20:170"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83800,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "13060:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47009,
                      "src": "13060:14:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13060:16:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83804,
                  "nodeType": "ExpressionStatement",
                  "src": "13060:16:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83808,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83760,
                        "src": "13103:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83805,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13087:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "13087:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13087:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83810,
                  "nodeType": "ExpressionStatement",
                  "src": "13087:20:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83814,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "13147:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32653138",
                            "id": 83817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13168:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 83816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13160:7:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 83815,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13160:7:170",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13160:13:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83811,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "13117:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47080,
                      "src": "13117:29:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 83819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13117:57:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83820,
                  "nodeType": "ExpressionStatement",
                  "src": "13117:57:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83824,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83760,
                        "src": "13201:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 83821,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13185:2:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7030",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 83823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "13185:15:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 83825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13185:20:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83826,
                  "nodeType": "ExpressionStatement",
                  "src": "13185:20:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83830,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82750,
                        "src": "13244:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$24174",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 83827,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82765,
                        "src": "13215:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$47122",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 83829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47107,
                      "src": "13215:28:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$25226_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 83831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13215:41:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83832,
                  "nodeType": "ExpressionStatement",
                  "src": "13215:41:170"
                }
              ]
            },
            "functionSelector": "1fdada07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
            "nameLocation": "12604:58:170",
            "parameters": {
              "id": 83756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:2:170"
            },
            "returnParameters": {
              "id": 83757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12672:0:170"
            },
            "scope": 83835,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82734,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "1417:4:170"
            },
            "id": 82735,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:4:170"
          }
        ],
        "canonicalName": "HeartTest",
        "contractDependencies": [
          24174,
          29225,
          40681,
          47122,
          51124,
          53895,
          66695,
          82733
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          83835,
          4979,
          2049,
          1786
        ],
        "name": "HeartTest",
        "nameLocation": "1404:9:170",
        "scope": 83836,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 170
}