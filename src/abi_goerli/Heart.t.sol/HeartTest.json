{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "testCorrectnes_setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_activate_deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_beat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfInactive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatIfTooEarly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_resetBeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setRewardTokenAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_viewFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_withdrawUnspentRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfOperateReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_beatFailsIfPriceReverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCreator",
      "outputs": [
        {
          "internalType": "contract UserFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1395:11870:148:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;1395:11870:148;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1395:11870:148:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136;;;:::i;:::-;;6704:388;;;:::i;12595:668::-;;;:::i;9600:1809::-;;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;;;;;;;;:::i;:::-;;;;;;;;9289:305:148;;;;;;:::i;:::-;;:::i;8531:752::-;;;:::i;5578:731::-;;;:::i;4914:334::-;;;:::i;7167:246::-;;;:::i;5254:318::-;;;:::i;4286:622::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;786:14:164;;779:22;761:41;;749:2;734:18;1819:584:0;621:187:164;1461:30:148;;;;;-1:-1:-1;;;;;1461:30:148;;;6315:383;;;:::i;7693:832::-;;;:::i;11415:1174::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;1818:2136:148;1852:32;;-1:-1:-1;;;1852:32:148;;1860:23;1852:32;;;1205:25:164;-1:-1:-1;;;;;;;;;;;250:64:1;1852:7:148;;1178:18:164;;1852:32:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1962:11:148;:31;;-1:-1:-1;;;;;;1962:31:148;-1:-1:-1;;;;;1962:31:148;;;;;;;;;2042:21;;-1:-1:-1;;;2042:21:148;;2061:1;2042:21;;;1205:25:164;-1:-1:-1;;1962:31:148;2042:18;;1178::164;;2042:21:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2042:21:148;;;;;;;;;;;;:::i;:::-;2017:46;;2085:5;2091:1;2085:8;;;;;;;;:::i;:::-;;;;;;;2077:5;;:16;;;;;-1:-1:-1;;;;;2077:16:148;;;;;-1:-1:-1;;;;;2077:16:148;;;;;;2113:5;2119:1;2113:8;;;;;;;;:::i;:::-;;;;;;;2107:3;;:14;;;;;-1:-1:-1;;;;;2107:14:148;;;;;-1:-1:-1;;;;;2107:14:148;;;;;;2144:5;2150:1;2144:8;;;;;;;;:::i;:::-;;;;;;;2135:6;;:17;;;;;-1:-1:-1;;;;;2135:17:148;;;;;-1:-1:-1;;;;;2135:17:148;;;;;;2003:160;2272:2;2235:40;;;;;:::i;:::-;3310:2:164;3292:21;;;3349:2;3329:18;;;3322:30;-1:-1:-1;;;3383:3:164;3368:19;;3361:43;3442:3;3435:4;3420:20;;3413:33;;;3483:1;3462:19;;;3455:30;-1:-1:-1;;;3516:3:164;3501:19;;3494:34;3612:4;3600:17;;;-1:-1:-1;3580:18:164;;3573:45;3560:3;3545:19;2235:40:148;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2221:11:148;:54;;-1:-1:-1;;;;;;2221:54:148;-1:-1:-1;;;;;2221:54:148;;;;;;;;;;2349:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2340:6:148;:21;;-1:-1:-1;;;;;;2340:21:148;-1:-1:-1;;;;;2340:21:148;;;;;;;;;2466:49;;2495:7;;2505:9;;2466:49;;;:::i;:::-;-1:-1:-1;;;;;3890:32:164;;;3872:51;;3971:14;3959:27;;;3954:2;3939:18;;3932:55;4018:2;4003:18;;3996:34;3860:2;3845:18;2466:49:148;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2458:5:148;:57;;-1:-1:-1;;;;;;2458:57:148;-1:-1:-1;;;;;2458:57:148;;;;;;2556:6;;2537:26;;2556:6;;;2537:26;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:5:148;:34;;-1:-1:-1;;;;;;2529:34:148;-1:-1:-1;;;;;2529:34:148;;;;;;2610:5;;:34;;-1:-1:-1;;;2610:34:148;;2633:10;2610:34;;;1205:25:164;2610:5:148;;;:22;;1178:18:164;;2610:34:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2658:5:148;;:30;;-1:-1:-1;;;2658:30:148;;2677:10;2658:30;;;1205:25:164;-1:-1:-1;;;;;2658:5:148;;;;-1:-1:-1;2658:18:148;;-1:-1:-1;1178:18:164;;2658:30:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2702:5:148;;:33;;-1:-1:-1;;;2702:33:148;;2724:10;2702:33;;;1205:25:164;-1:-1:-1;;;;;2702:5:148;;;;-1:-1:-1;2702:21:148;;-1:-1:-1;1178:18:164;;2702:33:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2749:5:148;;:21;;-1:-1:-1;;;2749:21:148;;2767:2;2749:21;;;4628:36:164;-1:-1:-1;;;;;2749:5:148;;;;-1:-1:-1;2749:17:148;;-1:-1:-1;4601:18:164;;2749:21:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2870:6:148;;2853:24;;-1:-1:-1;;;;;2870:6:148;;;;-1:-1:-1;2853:24:148;;-1:-1:-1;2853:24:148;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:8:148;:35;;-1:-1:-1;;;;;;2842:35:148;-1:-1:-1;;;;;2842:35:148;;;;;;;;;2963:6;;3033:11;;2929:179;;2963:6;;;;3033:11;;3070:4;;2929:179;;;:::i;:::-;-1:-1:-1;;;;;5016:15:164;;;4998:34;;5068:15;;;5063:2;5048:18;;5041:43;5120:15;;5115:2;5100:18;;5093:43;5167:2;5152:18;;5145:34;;;;4947:3;4932:19;2929:179:148;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2921:5:148;:187;;-1:-1:-1;;;;;;2921:187:148;-1:-1:-1;;;;;2921:187:148;;;;;;3151:6;;3136:22;;3151:6;;;3136:22;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3123:10:148;:35;;-1:-1:-1;;;;;;3123:35:148;-1:-1:-1;;;;;3123:35:148;;;;;;3271:6;;3323:5;;3271:59;;-1:-1:-1;;;3271:59:148;;:6;;;;:20;;:59;;-1:-1:-1;;3323:5:148;;3271:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3344:6:148;;3396:5;;3344:59;;-1:-1:-1;;;3344:59:148;;-1:-1:-1;;;;;3344:6:148;;;;-1:-1:-1;3344:20:148;;-1:-1:-1;3344:59:148;;:6;;3396:5;;3344:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3451:6:148;;3504:8;;3451:63;;-1:-1:-1;;;3451:63:148;;-1:-1:-1;;;;;3451:6:148;;;;-1:-1:-1;3451:20:148;;-1:-1:-1;3451:63:148;;3472:22;;3504:8;;3451:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3528:6:148;;3581:5;;3528:60;;-1:-1:-1;;;3528:60:148;;-1:-1:-1;;;;;3528:6:148;;;;-1:-1:-1;3528:20:148;;-1:-1:-1;3528:60:148;;3549:22;;3581:5;;3528:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3602:6:148;;3655:10;;3602:65;;-1:-1:-1;;;3602:65:148;;-1:-1:-1;;;;;3602:6:148;;;;-1:-1:-1;3602:20:148;;-1:-1:-1;3602:65:148;;3623:22;;3655:10;;3602:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3752:10:148;;3788:6;;3752:43;;-1:-1:-1;;;3752:43:148;;-1:-1:-1;;;3752:43:148;;;5870:32:164;-1:-1:-1;;;;;3788:6:148;;;5918:18:164;;;5911:60;3752:10:148;;;-1:-1:-1;3752:20:148;;-1:-1:-1;5843:18:164;;3752:43:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3883:11:148;;3908:5;;3883:54;;-1:-1:-1;;;3883:54:148;;-1:-1:-1;;;;;3883:11:148;;;;-1:-1:-1;3883:16:148;;-1:-1:-1;3883:54:148;;3908:5;;;;3924:11;;3883:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:2136::o;6704:388::-;6864:5;;:17;;;-1:-1:-1;;;6864:17:148;;;;6844;;-1:-1:-1;;;;;6864:5:148;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6844:37;-1:-1:-1;;;;;;;;;;;;6891:7:148;6899:27;6844:37;6899:15;:27;:::i;:::-;6891:36;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;6891:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6985:8:148;;:25;;-1:-1:-1;;;6985:25:148;;:8;:25;;;761:41:164;-1:-1:-1;;;;;6985:8:148;;;;-1:-1:-1;6985:18:148;;-1:-1:-1;734:18:164;;6985:25:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:5;;;;;;;;;-1:-1:-1;;;;;7073:5:148;-1:-1:-1;;;;;7073:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:335;6704:388::o;12595:668::-;12786:116;;;-1:-1:-1;;;12786:116:148;;;;1205:25:164;;;;12786:116:148;;;;;;;;;;1178:18:164;;;;12786:116:148;;;;;;;-1:-1:-1;;;;;12786:116:148;-1:-1:-1;;;12786:116:148;;;12913:20;;-1:-1:-1;;;12913:20:148;;-1:-1:-1;;;;;;;;;;;250:64:1;12913:15:148;;:20;;12786:116;;12913:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12943:5;;;;;;;;;-1:-1:-1;;;;;12943:5:148;-1:-1:-1;;;;;12943:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12971:20:148;;-1:-1:-1;;;12971:20:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;12971:15:148;;-1:-1:-1;12971:20:148;;12987:3;;12971:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13001:5;;;;;;;;;-1:-1:-1;;;;;13001:5:148;-1:-1:-1;;;;;13001:16:148;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13030:20:148;;-1:-1:-1;;;13030:20:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13030:15:148;;-1:-1:-1;13030:20:148;;13046:3;;13030:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13060:5;;;;;;;;;-1:-1:-1;;;;;13060:5:148;-1:-1:-1;;;;;13060:14:148;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13087:20:148;;-1:-1:-1;;;13087:20:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13087:15:148;;-1:-1:-1;13087:20:148;;13103:3;;13087:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13117:5:148;;13147:11;;13117:57;;-1:-1:-1;;;13117:57:148;;-1:-1:-1;;;;;13117:5:148;;;;-1:-1:-1;13117:29:148;;-1:-1:-1;13117:57:148;;13147:11;;;;13168:4;;13117:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13185:20:148;;-1:-1:-1;;;13185:20:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;13185:15:148;;-1:-1:-1;13185:20:148;;13201:3;;13185:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13215:5:148;;13244:11;;13215:41;;-1:-1:-1;;;13215:41:148;;-1:-1:-1;;;;;13215:5:148;;;;-1:-1:-1;13215:28:148;;-1:-1:-1;13215:41:148;;13244:11;;;;13215:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;9600:1809;9754:5;;:17;;;-1:-1:-1;;;9754:17:148;;;;-1:-1:-1;;;;;;;;;;;250:64:1;9728:7:148;;-1:-1:-1;;;;;9754:5:148;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9736:35;;:15;:35;:::i;:::-;9728:44;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;9728:44:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9819:18;9873:2;9840:36;;;;;:::i;:::-;8591:2:164;8573:21;;;8630:1;8610:18;;;8603:29;-1:-1:-1;;;8663:3:164;8648:19;;8641:40;8719:3;8712:4;8697:20;;8690:33;;;8760:1;8739:19;;;8732:30;-1:-1:-1;;;8793:3:164;8778:19;;8771:33;8888:4;8876:17;;;-1:-1:-1;8856:18:164;;8849:45;8836:3;8821:19;9840:36:148;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10042:48:148;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10042:48:148;-1:-1:-1;;;10042:48:148;;;10100:20;;-1:-1:-1;;;10100:20:148;;9819:57;;-1:-1:-1;9914:4:148;;10042:48;;-1:-1:-1;;;;;;;;;;;250:64:1;10100:15:148;;:20;;10042:48;;10100:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10139:6:148;;10130:16;;-1:-1:-1;;;10130:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10130:8:148;;-1:-1:-1;10130:16:148;;-1:-1:-1;;;;;10139:6:148;;10130:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10156:5:148;;:50;;-1:-1:-1;;;10156:50:148;;-1:-1:-1;;;;;10156:5:148;;;;-1:-1:-1;10156:29:148;;-1:-1:-1;10156:50:148;;10186:8;;10196:9;;10156:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10244:5;;;;;;;;;-1:-1:-1;;;;;10244:5:148;-1:-1:-1;;;;;10244:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10338:6:148;;10329:16;;-1:-1:-1;;;10329:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;10329:8:148;;-1:-1:-1;10329:16:148;;-1:-1:-1;;;;;10338:6:148;;10329:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10355:5:148;;:50;;-1:-1:-1;;;10355:50:148;;-1:-1:-1;;;;;10355:5:148;;;;-1:-1:-1;10355:29:148;;-1:-1:-1;10355:50:148;;10385:8;;10395:9;;10355:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:57;10502:5;;;;;;;;;-1:-1:-1;;;;;10502:5:148;-1:-1:-1;;;;;10502:17:148;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10532:8;10485;:57::i;:::-;10561:5;;:14;;;-1:-1:-1;;;10561:14:148;;;;10552:35;;-1:-1:-1;;;;;10561:5:148;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10577:9;10552:8;:35::i;:::-;10681:5;;10659:48;;-1:-1:-1;;;10659:48:148;;-1:-1:-1;;;;;10659:13:148;;;;;;:48;;10681:5;;;;10697:8;;10659:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10815:33:148;;-1:-1:-1;;;10815:33:148;;10792:20;;-1:-1:-1;;;;;;10815:18:148;;;-1:-1:-1;10815:18:148;;:33;;10842:4;;10815:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10792:56;;10858:17;10878:5;;;;;;;;;-1:-1:-1;;;;;10878:5:148;-1:-1:-1;;;;;10878:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10858:37;-1:-1:-1;;;;;;;;;;;;10905:7:148;10913:27;10858:37;10913:15;:27;:::i;:::-;10905:36;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;10905:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:5;;;;;;;;;-1:-1:-1;;;;;10951:5:148;-1:-1:-1;;;;;10951:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10995:33:148;;-1:-1:-1;;;10995:33:148;;10974:18;;-1:-1:-1;;;;;;10995:18:148;;;-1:-1:-1;10995:18:148;;:33;;11022:4;;10995:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10974:54;;11038:51;11047:10;11074:5;;;;;;;;;-1:-1:-1;;;;;11074:5:148;-1:-1:-1;;;;;11074:12:148;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11059:29;;:12;:29;:::i;:::-;11038:8;:51::i;:::-;11193:33;;-1:-1:-1;;;11193:33:148;;-1:-1:-1;;;;;11193:18:148;;;;;:33;;11220:4;;11193:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11178:48;-1:-1:-1;;;;;;;;;;;;11236:7:148;11244:27;11262:9;11244:15;:27;:::i;:::-;11236:36;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;11236:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11282:5;;;;;;;;;-1:-1:-1;;;;;11282:5:148;-1:-1:-1;;;;;11282:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11318:33:148;;-1:-1:-1;;;11318:33:148;;-1:-1:-1;;;;;11318:18:148;;;-1:-1:-1;11318:18:148;;-1:-1:-1;11318:33:148;;11345:4;;11318:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11305:46;-1:-1:-1;11361:41:148;11305:46;11382:19;:12;11397:4;11382:19;:::i;11361:41::-;9658:1751;;;;;;9600:1809::o;9289:305::-;9428:6;;9419:16;;-1:-1:-1;;;9419:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;9419:8:148;;:16;;-1:-1:-1;;;;;9428:6:148;;9419:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9445:5:148;;:30;;-1:-1:-1;;;9445:30:148;;-1:-1:-1;;;;;9445:5:148;;;;-1:-1:-1;9445:17:148;;-1:-1:-1;9445:30:148;;9463:11;;9445:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9539:48;9556:5;;;;;;;;;-1:-1:-1;;;;;9556:5:148;-1:-1:-1;;;;;9556:14:148;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9575:11;9539:8;:48::i;:::-;9289:305;:::o;8531:752::-;8662:5;;:14;;;-1:-1:-1;;;8662:14:148;;;;8651:26;;-1:-1:-1;;;;;8662:5:148;;:12;;:14;;;;;;;;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8651:10;:26::i;:::-;8707:5;;:16;;;-1:-1:-1;;;8707:16:148;;;;8688;;-1:-1:-1;;;;;8707:5:148;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8792:6;;8783:16;;-1:-1:-1;;;8783:16:148;;8688:35;;-1:-1:-1;;;;;;;;;;;;250:64:1;8783:8:148;;:16;;-1:-1:-1;;;;;8792:6:148;;;;8783:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8809:5;;;;;;;;;-1:-1:-1;;;;;8809:5:148;-1:-1:-1;;;;;8809:16:148;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8914:27;8926:5;;;;;;;;;-1:-1:-1;;;;;8926:5:148;-1:-1:-1;;;;;8926:12:148;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8925:15;8914:10;:27::i;:::-;8960:5;;:16;;;-1:-1:-1;;;8960:16:148;;;;8951:36;;-1:-1:-1;;;;;8960:5:148;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8978:8;8951;:36::i;:::-;9060:6;;9051:16;;-1:-1:-1;;;9051:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;9051:8:148;;:16;;-1:-1:-1;;;;;9060:6:148;;9051:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9077:5;;;;;;;;;-1:-1:-1;;;;;9077:5:148;-1:-1:-1;;;;;9077:14:148;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9188:5;;;;;;;;;-1:-1:-1;;;;;9188:5:148;-1:-1:-1;;;;;9188:12:148;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9177:26;9222:5;;:16;;;-1:-1:-1;;;9222:16:148;;;;9213:63;;-1:-1:-1;;;;;9222:5:148;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9258:5;;;;;;;;;-1:-1:-1;;;;;9258:5:148;-1:-1:-1;;;;;9258:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9240:35;;:15;:35;:::i;5578:731::-;5716:5;;:17;;;-1:-1:-1;;;5716:17:148;;;;-1:-1:-1;;;;;;;;;;;250:64:1;5690:7:148;;-1:-1:-1;;;;;5716:5:148;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5736:1;5716:21;:::i;:::-;5698:39;;:15;:39;:::i;:::-;5690:48;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;5690:48:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5849:67;5858:5;;;;;;;;;-1:-1:-1;;;;;5858:5:148;-1:-1:-1;;;;;5858:14:148;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:5;;;;;;;;;-1:-1:-1;;;;;5894:5:148;-1:-1:-1;;;;;5894:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:21;;5914:1;5894:21;:::i;:::-;5876:39;;:15;:39;:::i;:::-;5849:8;:67::i;:::-;5953:5;;;;;;;;;-1:-1:-1;;;;;5953:5:148;-1:-1:-1;;;;;5953:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6059:63;6068:5;;;;;;;;;-1:-1:-1;;;;;6068:5:148;-1:-1:-1;;;;;6068:14:148;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6104:5;;;;;;;;;-1:-1:-1;;;;;6104:5:148;-1:-1:-1;;;;;6104:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6086:35;;:15;:35;:::i;:::-;6059:8;:63::i;:::-;6205:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6205:45:148;-1:-1:-1;;;6205:45:148;;;6260:20;;-1:-1:-1;;;6260:20:148;;6205:45;;-1:-1:-1;;;;;;;;;;;250:64:1;6260:15:148;;:20;;6205:45;;6260:20;;:::i;4914:334::-;5026:6;;5017:16;;-1:-1:-1;;;5017:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;5017:8:148;;:16;;-1:-1:-1;;;;;5026:6:148;;5017:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5043:5;;;;;;;;;-1:-1:-1;;;;;5043:5:148;-1:-1:-1;;;;;5043:16:148;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5143:46:148;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5143:46:148;-1:-1:-1;;;5143:46:148;;;5199:20;;-1:-1:-1;;;5199:20:148;;5143:46;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;5199:15:148;;:20;;5143:46;;5199:20;;:::i;7167:246::-;7293:5;;:17;;;-1:-1:-1;;;7293:17:148;;;;7273;;-1:-1:-1;;;;;7293:5:148;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7273:37;;7369;7378:9;7397:7;7369:8;:37::i;4286:622::-;4432:5;;:17;;;-1:-1:-1;;;4432:17:148;;;;4412;;-1:-1:-1;;;;;4432:5:148;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4412:37;-1:-1:-1;;;;;;;;;;;;4459:7:148;4467:27;4412:37;4467:15;:27;:::i;:::-;4459:36;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;4459:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4592:11:148;;:36;;-1:-1:-1;;;4592:36:148;;4569:20;;-1:-1:-1;;;;;;4592:11:148;;;;-1:-1:-1;4592:21:148;;:36;;4622:4;;4592:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:59;;4666:5;;;;;;;;;-1:-1:-1;;;;;4666:5:148;-1:-1:-1;;;;;4666:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4804:11:148;;:36;;-1:-1:-1;;;4804:36:148;;4783:18;;-1:-1:-1;;;;;;4804:11:148;;;;-1:-1:-1;4804:21:148;;:36;;4834:4;;4804:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:57;;4850:51;4859:10;4886:5;;;;;;;;;-1:-1:-1;;;;;4886:5:148;-1:-1:-1;;;;;4886:12:148;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4871:29;;:12;:29;:::i;4850:51::-;4325:583;;;4286:622::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6315:383:148:-;6473:5;;:17;;;-1:-1:-1;;;6473:17:148;;;;6453;;-1:-1:-1;;;;;6473:5:148;;:15;;:17;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6453:37;-1:-1:-1;;;;;;;;;;;;6500:7:148;6508:27;6453:37;6508:15;:27;:::i;:::-;6500:36;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;6500:36:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6594:5:148;;:22;;-1:-1:-1;;;6594:22:148;;:5;:22;;;761:41:164;-1:-1:-1;;;;;6594:5:148;;;;-1:-1:-1;6594:15:148;;-1:-1:-1;734:18:164;;6594:22:148;621:187:164;7693:832:148;7855:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7855:45:148;-1:-1:-1;;;7855:45:148;;;7910:20;;-1:-1:-1;;;7910:20:148;;7855:45;;-1:-1:-1;;;;;;;;;;;250:64:1;7910:15:148;;:20;;7855:45;;7910:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7940:5;;;;;;;;;-1:-1:-1;;;;;7940:5:148;-1:-1:-1;;;;;7940:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8056:6:148;;8047:16;;-1:-1:-1;;;8047:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;8047:8:148;;-1:-1:-1;8047:16:148;;-1:-1:-1;;;;;8056:6:148;;8047:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:5;;;;;;;;;-1:-1:-1;;;;;8073:5:148;-1:-1:-1;;;;;8073:15:148;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11415:1174;11568:5;;:17;;;-1:-1:-1;;;11568:17:148;;;;-1:-1:-1;;;;;;;;;;;250:64:1;11542:7:148;;-1:-1:-1;;;;;11568:5:148;;;;:15;;:17;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11550:35;;:15;:35;:::i;:::-;11542:44;;;;;;;;;;;;;1205:25:164;;1193:2;1178:18;;1042:194;11542:44:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11682:48:148;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11682:48:148;-1:-1:-1;;;11682:48:148;;;11740:20;;-1:-1:-1;;;11740:20:148;;11682:48;;-1:-1:-1;;;;;;;;;;;;250:64:1;-1:-1:-1;11740:15:148;;:20;;11682:48;;11740:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11779:6:148;;11770:16;;-1:-1:-1;;;11770:16:148;;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;11770:8:148;;-1:-1:-1;11770:16:148;;-1:-1:-1;;;;;11779:6:148;;11770:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11796:5:148;;11825:11;;11796:41;;-1:-1:-1;;;11796:41:148;;-1:-1:-1;;;;;11796:5:148;;;;-1:-1:-1;11796:28:148;;-1:-1:-1;11796:41:148;;11825:11;;;;11796:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11875:5;;;;;;;;;-1:-1:-1;;;;;11875:5:148;-1:-1:-1;;;;;11875:10:148;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11985:11:148;;12015:6;;11985:38;;-1:-1:-1;;;11985:38:148;;11962:20;;-1:-1:-1;;;;;;11985:11:148;;;;-1:-1:-1;11985:21:148;;:38;;12015:6;;11985:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12056:11;;12086:5;;12056:37;;-1:-1:-1;;;12056:37:148;;11962:61;;-1:-1:-1;12033:20:148;;-1:-1:-1;;;;;12056:11:148;;;;:21;;:37;;12086:5;;;12056:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12162:6;;12153:16;;-1:-1:-1;;;12153:16:148;;12033:60;;-1:-1:-1;;;;;;;;;;;;250:64:1;12153:8:148;;:16;;-1:-1:-1;;;;;12162:6:148;;;;12153:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12179:5:148;;12208:11;;12179:41;;-1:-1:-1;;;12179:41:148;;-1:-1:-1;;;;;12179:5:148;;;;-1:-1:-1;12179:28:148;;-1:-1:-1;12179:41:148;;12208:11;;;;12179:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12251:11:148;;12281:6;;12251:38;;-1:-1:-1;;;12251:38:148;;12230:18;;-1:-1:-1;;;;;;12251:11:148;;;;-1:-1:-1;12251:21:148;;:38;;12281:6;;12251:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12369:11;;12399:5;;12369:37;;-1:-1:-1;;;12369:37:148;;12230:59;;-1:-1:-1;12360:59:148;;-1:-1:-1;;;;;12369:11:148;;;;:21;;:37;;12399:5;;;12369:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12416:1;12360:8;:59::i;:::-;12533:49;12542:10;12554:27;12569:12;12554;:27;:::i;3622:277:0:-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;-1:-1:-1;;;;;;;;;;;3712:44:0;;;;11380:2:164;11362:21;;;11419:2;11399:18;;;11392:30;11458:34;11453:2;11438:18;;11431:62;-1:-1:-1;;;11524:2:164;11509:18;;11502:35;11569:3;11554:19;;11178:401;3712:44:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3807:1:0;3775:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;3860:1:0;3828:34;;;;;;:::i;:::-;;;;;;;;3876:6;:4;:6::i;:::-;3622:277;;:::o;5209:262::-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:0;;;;12872:2:164;12854:21;;;12911:2;12891:18;;;12884:30;12950:34;12945:2;12930:18;;12923:62;-1:-1:-1;;;13016:2:164;13001:18;;12994:32;13058:3;13043:19;;12670:398;5293:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;5382:1:0;5353:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5432:1:0;5403:31;;;;;;:::i;3262:157::-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:0;;;;13981:2:164;13963:21;;;14020:2;14000:18;;;13993:30;-1:-1:-1;;;14054:2:164;14039:18;;14032:53;14117:2;14102:18;;13779:347;3352:30:0;;;;;;;;3396:6;:4;:6::i;15921:259::-;15982:1;15978;:5;15974:200;;;-1:-1:-1;;;;;;;;;;;16004:41:0;;;;14333:2:164;14315:21;;;14372:2;14352:18;;;14345:30;14411:34;14406:2;14391:18;;14384:62;-1:-1:-1;;;14477:2:164;14462:18;;14455:32;14519:3;14504:19;;14131:398;16004:41:0;;;;;;;;16064:30;;;14746:21:164;;;14803:1;14783:18;;;14776:29;-1:-1:-1;;;14836:2:164;14821:18;;14814:39;14920:4;14905:20;;14898:36;;;16064:30:0;;-1:-1:-1;;;;;;;;;;;16064:30:0;;;;14885:3:164;16064:30:0;;;16113;;;15157:21:164;;;15214:1;15194:18;;;15187:29;;;;-1:-1:-1;;;15247:2:164;15232:18;;15225:39;15331:4;15316:20;;15309:36;;;-1:-1:-1;;;;;;;;;;;16113:30:0;15296:3:164;15281:19;16113:30:0;14945:406:164;9970:259:0;10032:1;10027;:6;10023:200;;-1:-1:-1;;;;;;;;;;;10054:40:0;;;;15558:2:164;15540:21;;;15597:2;15577:18;;;15570:30;15636:34;15631:2;15616:18;;15609:62;-1:-1:-1;;;15702:2:164;15687:18;;15680:31;15743:3;15728:19;;15356:397;2847:242:0;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;;;2847:242::o;2409:432::-;2456:16;:14;:16::i;:::-;2452:359;;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:0;;;15960:51:164;;;-1:-1:-1;;;16027:18:164;;;16020:34;;;;2712:4:0;16070:18:164;;;16063:34;2489:11:0;;1671:64;2586:43;;15933:18:164;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:214:164:-;-1:-1:-1;;;;;189:32:164;;;;171:51;;159:2;144:18;;14:214::o;233:131::-;-1:-1:-1;;;;;308:31:164;;298:42;;288:70;;354:1;351;344:12;369:247;428:6;481:2;469:9;460:7;456:23;452:32;449:52;;;497:1;494;487:12;449:52;536:9;523:23;555:31;580:5;555:31;:::i;:::-;605:5;369:247;-1:-1:-1;;;369:247:164:o;1431:127::-;1492:10;1487:3;1483:20;1480:1;1473:31;1523:4;1520:1;1513:15;1547:4;1544:1;1537:15;1563:138;1642:13;;1664:31;1642:13;1664:31;:::i;1706:1129::-;1801:6;1832:2;1875;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1918:16;;-1:-1:-1;;;;;1983:14:164;;;1980:34;;;2010:1;2007;2000:12;1980:34;2048:6;2037:9;2033:22;2023:32;;2093:7;2086:4;2082:2;2078:13;2074:27;2064:55;;2115:1;2112;2105:12;2064:55;2144:2;2138:9;2166:2;2162;2159:10;2156:36;;;2172:18;;:::i;:::-;2218:2;2215:1;2211:10;2250:2;2244:9;2313:2;2309:7;2304:2;2300;2296:11;2292:25;2284:6;2280:38;2368:6;2356:10;2353:22;2348:2;2336:10;2333:18;2330:46;2327:72;;;2379:18;;:::i;:::-;2415:2;2408:22;2465:18;;;2499:15;;;;-1:-1:-1;2541:11:164;;;2537:20;;;2569:19;;;2566:39;;;2601:1;2598;2591:12;2566:39;2625:11;;;;2645:159;2661:6;2656:3;2653:15;2645:159;;;2727:34;2757:3;2727:34;:::i;:::-;2715:47;;2678:12;;;;2782;;;;2645:159;;;2823:6;1706:1129;-1:-1:-1;;;;;;;;1706:1129:164:o;2840:127::-;2901:10;2896:3;2892:20;2889:1;2882:31;2932:4;2929:1;2922:15;2956:4;2953:1;2946:15;5190:438;5363:2;5348:18;;5396:1;5385:13;;5375:144;;5441:10;5436:3;5432:20;5429:1;5422:31;5476:4;5473:1;5466:15;5504:4;5501:1;5494:15;5375:144;5528:25;;;-1:-1:-1;;;;;5589:32:164;;;;5584:2;5569:18;;;5562:60;5190:438;:::o;5982:274::-;-1:-1:-1;;;;;6174:32:164;;;;6156:51;;6238:2;6223:18;;6216:34;6144:2;6129:18;;5982:274::o;6261:184::-;6331:6;6384:2;6372:9;6363:7;6359:23;6355:32;6352:52;;;6400:1;6397;6390:12;6352:52;-1:-1:-1;6423:16:164;;6261:184;-1:-1:-1;6261:184:164:o;6450:127::-;6511:10;6506:3;6502:20;6499:1;6492:31;6542:4;6539:1;6532:15;6566:4;6563:1;6556:15;6582:128;6622:3;6653:1;6649:6;6646:1;6643:13;6640:39;;;6659:18;;:::i;:::-;-1:-1:-1;6695:9:164;;6582:128::o;7079:258::-;7151:1;7161:113;7175:6;7172:1;7169:13;7161:113;;;7251:11;;;7245:18;7232:11;;;7225:39;7197:2;7190:10;7161:113;;;7292:6;7289:1;7286:13;7283:48;;;-1:-1:-1;;7327:1:164;7309:16;;7302:27;7079:258::o;7342:381::-;7489:2;7478:9;7471:21;7452:4;7521:6;7515:13;7564:6;7559:2;7548:9;7544:18;7537:34;7580:66;7639:6;7634:2;7623:9;7619:18;7614:2;7606:6;7602:15;7580:66;:::i;:::-;7707:2;7686:15;-1:-1:-1;;7682:29:164;7667:45;;;;7714:2;7663:54;;7342:381;-1:-1:-1;;7342:381:164:o;9113:266::-;9198:6;9251:2;9239:9;9230:7;9226:23;9222:32;9219:52;;;9267:1;9264;9257:12;9219:52;9299:9;9293:16;9318:31;9343:5;9318:31;:::i;9659:277::-;9726:6;9779:2;9767:9;9758:7;9754:23;9750:32;9747:52;;;9795:1;9792;9785:12;9747:52;9827:9;9821:16;9880:5;9873:13;9866:21;9859:5;9856:32;9846:60;;9902:1;9899;9892:12;9941:125;9981:4;10009:1;10006;10003:8;10000:34;;;10014:18;;:::i;:::-;-1:-1:-1;10051:9:164;;9941:125::o;10071:168::-;10111:7;10177:1;10173;10169:6;10165:14;10162:1;10159:21;10154:1;10147:9;10140:17;10136:45;10133:71;;;10184:18;;:::i;:::-;-1:-1:-1;10224:9:164;;10071:168::o;10523:371::-;-1:-1:-1;;;;;;10708:33:164;;10696:46;;10765:13;;10678:3;;10787:61;10765:13;10837:1;10828:11;;10821:4;10809:17;;10787:61;:::i;:::-;10868:16;;;;10886:1;10864:24;;10523:371;-1:-1:-1;;;10523:371:164:o;10899:274::-;11028:3;11066:6;11060:13;11082:53;11128:6;11123:3;11116:4;11108:6;11104:17;11082:53;:::i;:::-;11151:16;;;;;10899:274;-1:-1:-1;;10899:274:164:o;11584:159::-;11661:2;11649:15;;-1:-1:-1;;;11689:4:164;11680:14;;11673:36;11734:2;11725:12;;11584:159::o;11748:374::-;11978:2;11967:9;11960:21;11941:4;11998:49;12043:2;12032:9;12028:18;11998:49;:::i;:::-;-1:-1:-1;;;;;12083:32:164;;;;12078:2;12063:18;;;;12056:60;;;;-1:-1:-1;11990:57:164;11748:374::o;12127:159::-;12204:2;12192:15;;-1:-1:-1;;;12232:4:164;12223:14;;12216:36;12277:2;12268:12;;12127:159::o;12291:374::-;12521:2;12510:9;12503:21;12484:4;12541:49;12586:2;12575:9;12571:18;12541:49;:::i;13073:348::-;13303:2;13292:9;13285:21;13266:4;13323:49;13368:2;13357:9;13353:18;13323:49;:::i;:::-;13315:57;;13408:6;13403:2;13392:9;13388:18;13381:34;13073:348;;;;:::o;13426:::-;13656:2;13645:9;13638:21;13619:4;13676:49;13721:2;13710:9;13706:18;13676:49;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectnes_setOperator(address)": "56735b57",
    "testCorrectness_activate_deactivate()": "5d948bbd",
    "testCorrectness_beat()": "a00f2709",
    "testCorrectness_cannotBeatIfInactive()": "7e9506de",
    "testCorrectness_cannotBeatIfTooEarly()": "8d0be1ef",
    "testCorrectness_cannotBeatRepeatedlyIfSkipped()": "7b47a7f3",
    "testCorrectness_cannotCallAdminFunctionsWithoutPermissions()": "1fdada07",
    "testCorrectness_resetBeat()": "e853d736",
    "testCorrectness_setRewardTokenAndAmount()": "2c639076",
    "testCorrectness_viewFrequency()": "882d3844",
    "testCorrectness_withdrawUnspentRewards()": "e9aaa0e8",
    "testFail_beatFailsIfOperateReverts()": "0bb8dc03",
    "testFail_beatFailsIfPriceReverts()": "e2627194",
    "userCreator()": "c7d81eff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"testCorrectnes_setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_activate_deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_beat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfInactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatIfTooEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotBeatRepeatedlyIfSkipped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_cannotCallAdminFunctionsWithoutPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_resetBeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setRewardTokenAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_viewFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_withdrawUnspentRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfOperateReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_beatFailsIfPriceReverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCreator\",\"outputs\":[{\"internalType\":\"contract UserFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_beat()\":{\"notice\":\"DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert\"},\"testCorrectness_resetBeat()\":{\"notice\":\"DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions\"},\"testCorrectness_viewFrequency()\":{\"notice\":\"[X] frequency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Heart.t.sol\":\"HeartTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977\",\"dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR\"]},\"src/interfaces/IBondAggregator.sol\":{\"keccak256\":\"0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb\",\"dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU\"]},\"src/interfaces/IBondAuctioneer.sol\":{\"keccak256\":\"0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f\",\"dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7\"]},\"src/interfaces/IBondCallback.sol\":{\"keccak256\":\"0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b\",\"dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC\"]},\"src/interfaces/IBondSDA.sol\":{\"keccak256\":\"0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97\",\"dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW\"]},\"src/interfaces/IBondTeller.sol\":{\"keccak256\":\"0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150\",\"dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323\",\"dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/PRICE/PRICE.v1.sol\":{\"keccak256\":\"0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e\",\"dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/policies/Heart.sol\":{\"keccak256\":\"0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a\",\"dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/policies/interfaces/IHeart.sol\":{\"keccak256\":\"0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab\",\"dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf\"]},\"src/policies/interfaces/IOperator.sol\":{\"keccak256\":\"0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27\",\"dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/mocks/MockPrice.sol\":{\"keccak256\":\"0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495\",\"dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd\"]},\"src/test/policies/Heart.t.sol\":{\"keccak256\":\"0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9\",\"dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectnes_setOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_activate_deactivate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_beat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfInactive"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatIfTooEarly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_resetBeat"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setRewardTokenAndAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_viewFrequency"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_withdrawUnspentRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfOperateReverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_beatFailsIfPriceReverts"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userCreator",
          "outputs": [
            {
              "internalType": "contract UserFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_beat()": {
            "notice": "DONE [X] beat     [X] active and frequency has passed     [X] cannot beat if not active     [X] cannot beat if not enough time has passed     [X] fails if price or operator revert"
          },
          "testCorrectness_resetBeat()": {
            "notice": "DONE [X] resetBeat [X] activate and deactivate [X] setOperator [X] setRewardTokenAndAmount [X] withdrawUnspentRewards [X] cannot call admin functions without permissions"
          },
          "testCorrectness_viewFrequency()": {
            "notice": "[X] frequency"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Heart.t.sol": "HeartTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x31853fa0dd35d4c425b3aa71253433f69698d5218affd69df335b7356ddd1e7d",
        "urls": [
          "bzz-raw://2e8aa259db1cf13cb717c0446b2df93f656c0b33abf1d02d55cef797610a1977",
          "dweb:/ipfs/QmNYGAnhmses4vGFCG81YPxoHpgrByjn1sySk7LENBV1DR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBondAggregator.sol": {
        "keccak256": "0xcbed51d7460ff8cf4d21f7ede6214af17b18dc4267c97b33989d657c84b732db",
        "urls": [
          "bzz-raw://983965755356b317371609b20859cd2ca4c6493fa607d9dffaabb1d0cfd9dffb",
          "dweb:/ipfs/QmZJGhmKLLgi8wvBN6RrZF8y7sT6MgCYXx6NAM1bLqu5SU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondAuctioneer.sol": {
        "keccak256": "0x72842370a860a167633d01b6806db55d6db1011985d8186bd7947ed35d397c38",
        "urls": [
          "bzz-raw://36c3eb05cd77617ce675871eb7b288ee6e9d75b60b82dbcf62667b08c37c2a8f",
          "dweb:/ipfs/QmcSddgbfTyfSZywcMDnWPsxs5nYgkBYBqzrEJWeEPzfT7"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondCallback.sol": {
        "keccak256": "0x8ccf5a971b9548ed415e90b1b66e44230b6f3934984fbe35e80d1bfa58b4b0f5",
        "urls": [
          "bzz-raw://5c5a6e92ef3e65f5dba9ee5a752f0f02cbdf956fe208640141ccfa054a388b6b",
          "dweb:/ipfs/QmUbKa6eh3TmCToTD4vusuzLMd8xkGpbfv89tLDe4VQLvC"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondSDA.sol": {
        "keccak256": "0xb0a61e34a41e7fc745d1380af61513f6766de4270a3577f14ddac61fd233c4cf",
        "urls": [
          "bzz-raw://7cbceb0696bfd499216ac5d75fbc3a50b0912a044b6f1915ddbd5ccd5ddf0a97",
          "dweb:/ipfs/QmTdjYhhCbF8G1JFMjgGBR6Vj5T2x5NKZh5xu7Z3kNxoFW"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IBondTeller.sol": {
        "keccak256": "0xb14fc9301858ec61abc52462699ced9f32478f1944b64c9398d811794d8769a1",
        "urls": [
          "bzz-raw://9a6fb18f623109e285ce99f8be07969d3e50a235543ceb28b5dc620d606ea150",
          "dweb:/ipfs/QmXAz2yXoZQ6XzkS9mwPc7Dkj7kD3RyhW9rix7daVvxkMf"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x7804d45f19197ea7fd05fbaf2a78ef415cc670f90c50a19c7c3de644645d6139",
        "urls": [
          "bzz-raw://2c87974ab119538463ac6c2aee7ef99bb63564f62bc21dd6317a355b627a8323",
          "dweb:/ipfs/QmU5ptUahKDuX9T39BWbPzqpJFaLAiaauXghHGjoLk6nEg"
        ],
        "license": "MIT"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/PRICE/PRICE.v1.sol": {
        "keccak256": "0x607b53d2a8f8bbd8045ae0ba465ac401a1a598b29bcea726f54ad6277eb26b9f",
        "urls": [
          "bzz-raw://47ad9631fe7477df87a72137cf961fc114646483401170b1fec9f3c69af5b50e",
          "dweb:/ipfs/QmNMrPf27eQ1GT12m6HRfN1hj8LckADQ3ezV4cLDwTiTyP"
        ],
        "license": "AGPL-3.0"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Heart.sol": {
        "keccak256": "0xe13626994be735979493bf6f6e667bba9185fc88e824e2dc89a0f40a7fc6e18f",
        "urls": [
          "bzz-raw://e228ac5f13d2160be439a7132edc732144d5da79f74e459cb7ae98350b313e2a",
          "dweb:/ipfs/QmQdJNQSA25zeuALUsak5MVLNjxprKCWMs4vwxgquBCGWF"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/interfaces/IHeart.sol": {
        "keccak256": "0xf10f6e638083033bb09889773730b159030659ab0a806200233fd29bda7bb18a",
        "urls": [
          "bzz-raw://e4ace80ceb1b271468c5a3e673cf8b5a989d5325ce8258b8cba7a9fd6d7a46ab",
          "dweb:/ipfs/QmTMo14ESwcD2iWUMbbC2dEVGprhsAZ42Yyy83srxLGSsf"
        ],
        "license": "AGPL-3.0"
      },
      "src/policies/interfaces/IOperator.sol": {
        "keccak256": "0x7faf3bf2dc670f3ba3b119d2bb6d517b054cee83f5188465d7ba252a990a3254",
        "urls": [
          "bzz-raw://0ba0f58d87aeb10df91ccfd24cb6f6aef8b45132a52e8bdac0ee03e1b3fccd27",
          "dweb:/ipfs/QmQePzASU52Br8TrVkAYzFQZmnBkAo4rpeuZ7YEG48G7zt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/mocks/MockPrice.sol": {
        "keccak256": "0xdc8a85918160f14d2f7b74e5ec6c67e8d1513a83954ac2e06bbb31a9a7472f7c",
        "urls": [
          "bzz-raw://6d6323d289f91174eda54078d19c69453c1567b784bccef4b27c381fadd69495",
          "dweb:/ipfs/QmYYCfGD9ZndmFmsd9CbN6vgXdmDofHqzQ4RXvw1AYtekd"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/policies/Heart.t.sol": {
        "keccak256": "0x056e21f1dd3e8765b52148bba430425f2f3a7c0e5a2afd236e044c146e07bee1",
        "urls": [
          "bzz-raw://142f08afe541d674069f2c09ee8fd8979151f777e54bf24a98891530995974f9",
          "dweb:/ipfs/QmbgLVhGBNeV16FNqmHxnupmu7qA7GV41GVvZQsGY1wcTd"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Heart.t.sol",
    "id": 89687,
    "exportedSymbols": {
      "Actions": [
        29387
      ],
      "ERC20": [
        29147
      ],
      "FullMath": [
        43648
      ],
      "GoerliDaoRoles": [
        46494
      ],
      "HeartTest": [
        89686
      ],
      "IOperator": [
        57985
      ],
      "Instruction": [
        29393
      ],
      "InvalidKeycode": [
        29410
      ],
      "Kernel": [
        30536
      ],
      "KernelAdapter": [
        29551
      ],
      "Keycode": [
        29401
      ],
      "MockERC20": [
        28095
      ],
      "MockOperator": [
        88584
      ],
      "MockPrice": [
        72546
      ],
      "Module": [
        29616
      ],
      "OlympusHeart": [
        52935
      ],
      "Permissions": [
        29399
      ],
      "Policy": [
        29698
      ],
      "ROLESv1": [
        46573
      ],
      "RolesAdmin": [
        56937
      ],
      "TargetNotAContract": [
        29405
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        59746
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        29454
      ],
      "ensureValidKeycode": [
        29499
      ],
      "fromKeycode": [
        29438
      ],
      "toKeycode": [
        29424
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:13228:148",
    "nodes": [
      {
        "id": 88500,
        "nodeType": "PragmaDirective",
        "src": "38:24:148",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 88502,
        "nodeType": "ImportDirective",
        "src": "64:40:148",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88501,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "72:4:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88504,
        "nodeType": "ImportDirective",
        "src": "105:53:148",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 59747,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88503,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59746,
              "src": "113:11:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88506,
        "nodeType": "ImportDirective",
        "src": "159:48:148",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88505,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "167:8:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88509,
        "nodeType": "ImportDirective",
        "src": "209:72:148",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 28096,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88507,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28095,
              "src": "217:9:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 88508,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29147,
              "src": "228:5:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88511,
        "nodeType": "ImportDirective",
        "src": "282:51:148",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockPrice.sol",
        "file": "test/mocks/MockPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 72547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88510,
              "name": "MockPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72546,
              "src": "290:9:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88513,
        "nodeType": "ImportDirective",
        "src": "334:64:148",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 46495,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88512,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46494,
              "src": "342:14:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88515,
        "nodeType": "ImportDirective",
        "src": "399:51:148",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 46574,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88514,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46573,
              "src": "407:7:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88517,
        "nodeType": "ImportDirective",
        "src": "451:51:148",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 56938,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88516,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56937,
              "src": "459:10:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88519,
        "nodeType": "ImportDirective",
        "src": "504:48:148",
        "nodes": [],
        "absolutePath": "src/libraries/FullMath.sol",
        "file": "libraries/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 43649,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88518,
              "name": "FullMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43648,
              "src": "512:8:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88520,
        "nodeType": "ImportDirective",
        "src": "554:24:148",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 30537,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88522,
        "nodeType": "ImportDirective",
        "src": "580:48:148",
        "nodes": [],
        "absolutePath": "src/policies/Heart.sol",
        "file": "policies/Heart.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 52936,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88521,
              "name": "OlympusHeart",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52935,
              "src": "588:12:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88524,
        "nodeType": "ImportDirective",
        "src": "630:60:148",
        "nodes": [],
        "absolutePath": "src/policies/interfaces/IOperator.sol",
        "file": "policies/interfaces/IOperator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89687,
        "sourceUnit": 57986,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88523,
              "name": "IOperator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57985,
              "src": "638:9:148",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88584,
        "nodeType": "ContractDefinition",
        "src": "739:654:148",
        "nodes": [
          {
            "id": 88529,
            "nodeType": "VariableDeclaration",
            "src": "777:18:148",
            "nodes": [],
            "constant": false,
            "functionSelector": "65372147",
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "789:6:148",
            "scope": 88584,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 88528,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "777:4:148",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88531,
            "nodeType": "ErrorDefinition",
            "src": "801:29:148",
            "nodes": [],
            "errorSelector": "1117572b",
            "name": "Operator_CustomError",
            "nameLocation": "807:20:148",
            "parameters": {
              "id": 88530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:148"
            }
          },
          {
            "id": 88545,
            "nodeType": "FunctionDefinition",
            "src": "836:74:148",
            "nodes": [],
            "body": {
              "id": 88544,
              "nodeType": "Block",
              "src": "880:30:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88540,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88529,
                      "src": "890:6:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 88541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88543,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:148"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 88537,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88534,
                    "src": "871:7:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$30536",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 88538,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 88536,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29698,
                  "src": "864:6:148"
                },
                "nodeType": "ModifierInvocation",
                "src": "864:15:148"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 88535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88534,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "855:7:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 88545,
                  "src": "848:14:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$30536",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 88533,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88532,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30536,
                      "src": "848:6:148"
                    },
                    "referencedDeclaration": 30536,
                    "src": "848:6:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$30536",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:16:148"
            },
            "returnParameters": {
              "id": 88539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:148"
            },
            "scope": 88584,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88554,
            "nodeType": "FunctionDefinition",
            "src": "971:93:148",
            "nodes": [],
            "body": {
              "id": 88553,
              "nodeType": "Block",
              "src": "1062:2:148",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              29688
            ],
            "functionSelector": "9459b875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configureDependencies",
            "nameLocation": "980:21:148",
            "overrides": {
              "id": 88547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1013:8:148"
            },
            "parameters": {
              "id": 88546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:148"
            },
            "returnParameters": {
              "id": 88552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88551,
                  "mutability": "mutable",
                  "name": "dependencies",
                  "nameLocation": "1048:12:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 88554,
                  "src": "1031:29:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$29401_$dyn_memory_ptr",
                    "typeString": "Keycode[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 88549,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 88548,
                        "name": "Keycode",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29401,
                        "src": "1031:7:148"
                      },
                      "referencedDeclaration": 29401,
                      "src": "1031:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Keycode_$29401",
                        "typeString": "Keycode"
                      }
                    },
                    "id": 88550,
                    "nodeType": "ArrayTypeName",
                    "src": "1031:9:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Keycode_$29401_$dyn_storage_ptr",
                      "typeString": "Keycode[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:31:148"
            },
            "scope": 88584,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88563,
            "nodeType": "FunctionDefinition",
            "src": "1070:95:148",
            "nodes": [],
            "body": {
              "id": 88562,
              "nodeType": "Block",
              "src": "1163:2:148",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              29697
            ],
            "functionSelector": "5924be70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestPermissions",
            "nameLocation": "1079:18:148",
            "overrides": {
              "id": 88556,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1114:8:148"
            },
            "parameters": {
              "id": 88555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:148"
            },
            "returnParameters": {
              "id": 88561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88560,
                  "mutability": "mutable",
                  "name": "requests",
                  "nameLocation": "1153:8:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 88563,
                  "src": "1132:29:148",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Permissions_$29399_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Permissions[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 88558,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 88557,
                        "name": "Permissions",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29399,
                        "src": "1132:11:148"
                      },
                      "referencedDeclaration": 29399,
                      "src": "1132:11:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permissions_$29399_storage_ptr",
                        "typeString": "struct Permissions"
                      }
                    },
                    "id": 88559,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:13:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Permissions_$29399_storage_$dyn_storage_ptr",
                      "typeString": "struct Permissions[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:31:148"
            },
            "scope": 88584,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88573,
            "nodeType": "FunctionDefinition",
            "src": "1218:92:148",
            "nodes": [],
            "body": {
              "id": 88572,
              "nodeType": "Block",
              "src": "1251:59:148",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 88567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1265:7:148",
                    "subExpression": {
                      "id": 88566,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88529,
                      "src": "1266:6:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88571,
                  "nodeType": "IfStatement",
                  "src": "1261:42:148",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 88568,
                        "name": "Operator_CustomError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88531,
                        "src": "1281:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 88569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1281:22:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 88570,
                    "nodeType": "RevertStatement",
                    "src": "1274:29:148"
                  }
                }
              ]
            },
            "functionSelector": "7159a618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operate",
            "nameLocation": "1227:7:148",
            "parameters": {
              "id": 88564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:148"
            },
            "returnParameters": {
              "id": 88565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:148"
            },
            "scope": 88584,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88583,
            "nodeType": "FunctionDefinition",
            "src": "1316:75:148",
            "nodes": [],
            "body": {
              "id": 88582,
              "nodeType": "Block",
              "src": "1358:33:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88578,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88529,
                      "src": "1368:6:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88579,
                      "name": "result_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88575,
                      "src": "1377:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1368:16:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88581,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:16:148"
                }
              ]
            },
            "functionSelector": "f4b4dc2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setResult",
            "nameLocation": "1325:9:148",
            "parameters": {
              "id": 88576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88575,
                  "mutability": "mutable",
                  "name": "result_",
                  "nameLocation": "1340:7:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 88583,
                  "src": "1335:12:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:14:148"
            },
            "returnParameters": {
              "id": 88577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:148"
            },
            "scope": 88584,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88526,
              "name": "Policy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29698,
              "src": "764:6:148"
            },
            "id": 88527,
            "nodeType": "InheritanceSpecifier",
            "src": "764:6:148"
          }
        ],
        "canonicalName": "MockOperator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88525,
          "nodeType": "StructuredDocumentation",
          "src": "692:46:148",
          "text": " @notice Mock Operator to test Heart"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88584,
          29698,
          29551
        ],
        "name": "MockOperator",
        "nameLocation": "748:12:148",
        "scope": 89687,
        "usedErrors": [
          29504,
          29624,
          88531
        ]
      },
      {
        "id": 89686,
        "nodeType": "ContractDefinition",
        "src": "1395:11870:148",
        "nodes": [
          {
            "id": 88589,
            "nodeType": "UsingForDirective",
            "src": "1428:27:148",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 88587,
              "name": "FullMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43648,
              "src": "1434:8:148"
            },
            "typeName": {
              "id": 88588,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1447:7:148",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 88592,
            "nodeType": "VariableDeclaration",
            "src": "1461:30:148",
            "nodes": [],
            "constant": false,
            "functionSelector": "c7d81eff",
            "mutability": "mutable",
            "name": "userCreator",
            "nameLocation": "1480:11:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserFactory_$59746",
              "typeString": "contract UserFactory"
            },
            "typeName": {
              "id": 88591,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88590,
                "name": "UserFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59746,
                "src": "1461:11:148"
              },
              "referencedDeclaration": 59746,
              "src": "1461:11:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserFactory_$59746",
                "typeString": "contract UserFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88594,
            "nodeType": "VariableDeclaration",
            "src": "1497:22:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1514:5:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88593,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:148",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88596,
            "nodeType": "VariableDeclaration",
            "src": "1525:20:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1542:3:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88595,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:148",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88598,
            "nodeType": "VariableDeclaration",
            "src": "1551:23:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "1568:6:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88597,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:148",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88601,
            "nodeType": "VariableDeclaration",
            "src": "1581:30:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1600:11:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28095",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 88600,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88599,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28095,
                "src": "1581:9:148"
              },
              "referencedDeclaration": 28095,
              "src": "1581:9:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28095",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88604,
            "nodeType": "VariableDeclaration",
            "src": "1618:22:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1634:6:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$30536",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 88603,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88602,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30536,
                "src": "1618:6:148"
              },
              "referencedDeclaration": 30536,
              "src": "1618:6:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$30536",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88607,
            "nodeType": "VariableDeclaration",
            "src": "1646:24:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "1665:5:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockPrice_$72546",
              "typeString": "contract MockPrice"
            },
            "typeName": {
              "id": 88606,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88605,
                "name": "MockPrice",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72546,
                "src": "1646:9:148"
              },
              "referencedDeclaration": 72546,
              "src": "1646:9:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockPrice_$72546",
                "typeString": "contract MockPrice"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88610,
            "nodeType": "VariableDeclaration",
            "src": "1676:29:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1700:5:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 88609,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88608,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46494,
                "src": "1676:14:148"
              },
              "referencedDeclaration": 46494,
              "src": "1676:14:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88613,
            "nodeType": "VariableDeclaration",
            "src": "1712:30:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1734:8:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOperator_$88584",
              "typeString": "contract MockOperator"
            },
            "typeName": {
              "id": 88612,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88611,
                "name": "MockOperator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88584,
                "src": "1712:12:148"
              },
              "referencedDeclaration": 88584,
              "src": "1712:12:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOperator_$88584",
                "typeString": "contract MockOperator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88616,
            "nodeType": "VariableDeclaration",
            "src": "1748:27:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "heart",
            "nameLocation": "1770:5:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
              "typeString": "contract OlympusHeart"
            },
            "typeName": {
              "id": 88615,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88614,
                "name": "OlympusHeart",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52935,
                "src": "1748:12:148"
              },
              "referencedDeclaration": 52935,
              "src": "1748:12:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                "typeString": "contract OlympusHeart"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88619,
            "nodeType": "VariableDeclaration",
            "src": "1781:30:148",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1801:10:148",
            "scope": 89686,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$56937",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 88618,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88617,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56937,
                "src": "1781:10:148"
              },
              "referencedDeclaration": 56937,
              "src": "1781:10:148",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88860,
            "nodeType": "FunctionDefinition",
            "src": "1818:2136:148",
            "nodes": [],
            "body": {
              "id": 88859,
              "nodeType": "Block",
              "src": "1842:2112:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        },
                        "id": 88633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          },
                          "id": 88631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            },
                            "id": 88629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              },
                              "id": 88627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3531",
                                "id": 88625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1860:2:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_51_by_1",
                                  "typeString": "int_const 51"
                                },
                                "value": "51"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 88626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1865:3:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365_by_1",
                                  "typeString": "int_const 365"
                                },
                                "value": "365"
                              },
                              "src": "1860:8:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18615_by_1",
                                "typeString": "int_const 18615"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 88628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1871:2:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "1860:13:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_446760_by_1",
                              "typeString": "int_const 446760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 88630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1876:2:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "1860:18:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_26805600_by_1",
                            "typeString": "int_const 26805600"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 88632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1881:2:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "1860:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1608336000_by_1",
                          "typeString": "int_const 1608336000"
                        }
                      ],
                      "expression": {
                        "id": 88622,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "1852:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "1852:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:32:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88635,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:32:148"
                },
                {
                  "expression": {
                    "id": 88641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88636,
                      "name": "userCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88592,
                      "src": "1962:11:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$59746",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 88639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1976:15:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserFactory_$59746_$",
                          "typeString": "function () returns (contract UserFactory)"
                        },
                        "typeName": {
                          "id": 88638,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 88637,
                            "name": "UserFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 59746,
                            "src": "1980:11:148"
                          },
                          "referencedDeclaration": 59746,
                          "src": "1980:11:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserFactory_$59746",
                            "typeString": "contract UserFactory"
                          }
                        }
                      },
                      "id": 88640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1976:17:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserFactory_$59746",
                        "typeString": "contract UserFactory"
                      }
                    },
                    "src": "1962:31:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserFactory_$59746",
                      "typeString": "contract UserFactory"
                    }
                  },
                  "id": 88642,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:31:148"
                },
                {
                  "id": 88671,
                  "nodeType": "Block",
                  "src": "2003:160:148",
                  "statements": [
                    {
                      "assignments": [
                        88647
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 88647,
                          "mutability": "mutable",
                          "name": "users",
                          "nameLocation": "2034:5:148",
                          "nodeType": "VariableDeclaration",
                          "scope": 88671,
                          "src": "2017:22:148",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 88645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2017:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 88646,
                            "nodeType": "ArrayTypeName",
                            "src": "2017:9:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 88652,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 88650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2061:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 88648,
                            "name": "userCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88592,
                            "src": "2042:11:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserFactory_$59746",
                              "typeString": "contract UserFactory"
                            }
                          },
                          "id": 88649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "create",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59745,
                          "src": "2042:18:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) external returns (address[] memory)"
                          }
                        },
                        "id": 88651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:21:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2017:46:148"
                    },
                    {
                      "expression": {
                        "id": 88657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88653,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88594,
                          "src": "2077:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 88654,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88647,
                            "src": "2085:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 88656,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 88655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2091:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2085:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2077:16:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 88658,
                      "nodeType": "ExpressionStatement",
                      "src": "2077:16:148"
                    },
                    {
                      "expression": {
                        "id": 88663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88659,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88596,
                          "src": "2107:3:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 88660,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88647,
                            "src": "2113:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 88662,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 88661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2113:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2107:14:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 88664,
                      "nodeType": "ExpressionStatement",
                      "src": "2107:14:148"
                    },
                    {
                      "expression": {
                        "id": 88669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88665,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88598,
                          "src": "2135:6:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "baseExpression": {
                            "id": 88666,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88647,
                            "src": "2144:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 88668,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 88667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2150:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2144:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2135:17:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 88670,
                      "nodeType": "ExpressionStatement",
                      "src": "2135:17:148"
                    }
                  ]
                },
                {
                  "id": 88682,
                  "nodeType": "Block",
                  "src": "2172:114:148",
                  "statements": [
                    {
                      "documentation": "Deploy token mocks",
                      "expression": {
                        "id": 88680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88672,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88601,
                          "src": "2221:11:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28095",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "52657761726420546f6b656e",
                              "id": 88676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2249:14:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              "value": "Reward Token"
                            },
                            {
                              "hexValue": "525744",
                              "id": 88677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              "value": "RWD"
                            },
                            {
                              "hexValue": "3138",
                              "id": 88678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:2:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
                                "typeString": "literal_string \"Reward Token\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
                                "typeString": "literal_string \"RWD\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 88675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2235:13:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28095_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 88674,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88673,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 28095,
                                "src": "2239:9:148"
                              },
                              "referencedDeclaration": 28095,
                              "src": "2239:9:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28095",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 88679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2235:40:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28095",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "2221:54:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88681,
                      "nodeType": "ExpressionStatement",
                      "src": "2221:54:148"
                    }
                  ]
                },
                {
                  "id": 88743,
                  "nodeType": "Block",
                  "src": "2296:485:148",
                  "statements": [
                    {
                      "documentation": "Deploy kernel",
                      "expression": {
                        "id": 88688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88683,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88604,
                          "src": "2340:6:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$30536",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 88686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2349:10:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$30536_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 88685,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88684,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 30536,
                                "src": "2353:6:148"
                              },
                              "referencedDeclaration": 30536,
                              "src": "2353:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 88687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2349:12:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$30536",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "2340:21:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$30536",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 88689,
                      "nodeType": "ExpressionStatement",
                      "src": "2340:21:148"
                    },
                    {
                      "documentation": "Deploy modules (some mocks)",
                      "expression": {
                        "id": 88703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88690,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88607,
                          "src": "2458:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$72546",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 88694,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88604,
                              "src": "2480:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "38",
                                  "id": 88697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2495:7:148",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  },
                                  "value": "8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28800_by_1",
                                    "typeString": "int_const 28800"
                                  }
                                ],
                                "id": 88696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2488:6:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 88695,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2488:6:148",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2488:15:148",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "id": 88701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 88699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2505:2:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 88700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2510:4:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "2505:9:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "id": 88693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2466:13:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$_t_uint48_$_t_uint256_$returns$_t_contract$_MockPrice_$72546_$",
                              "typeString": "function (contract Kernel,uint48,uint256) returns (contract MockPrice)"
                            },
                            "typeName": {
                              "id": 88692,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88691,
                                "name": "MockPrice",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 72546,
                                "src": "2470:9:148"
                              },
                              "referencedDeclaration": 72546,
                              "src": "2470:9:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockPrice_$72546",
                                "typeString": "contract MockPrice"
                              }
                            }
                          },
                          "id": 88702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2466:49:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockPrice_$72546",
                            "typeString": "contract MockPrice"
                          }
                        },
                        "src": "2458:57:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$72546",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 88704,
                      "nodeType": "ExpressionStatement",
                      "src": "2458:57:148"
                    },
                    {
                      "expression": {
                        "id": 88711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88705,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88610,
                          "src": "2529:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 88709,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88604,
                              "src": "2556:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 88708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2537:18:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$returns$_t_contract$_GoerliDaoRoles_$46494_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 88707,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88706,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46494,
                                "src": "2541:14:148"
                              },
                              "referencedDeclaration": 46494,
                              "src": "2541:14:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 88710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2537:26:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2529:34:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 88712,
                      "nodeType": "ExpressionStatement",
                      "src": "2529:34:148"
                    },
                    {
                      "documentation": "Configure mocks",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 88718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 88716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:3:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 88717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2639:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2633:10:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 88713,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88607,
                            "src": "2610:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$72546",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 88715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setMovingAverage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72505,
                          "src": "2610:22:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 88719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:34:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88720,
                      "nodeType": "ExpressionStatement",
                      "src": "2610:34:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 88726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 88724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2677:3:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 88725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2683:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2677:10:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 88721,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88607,
                            "src": "2658:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$72546",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 88723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setLastPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72515,
                          "src": "2658:18:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 88727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:30:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88728,
                      "nodeType": "ExpressionStatement",
                      "src": "2658:30:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 88734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 88732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2724:3:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 88733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2730:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "2724:10:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 88729,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88607,
                            "src": "2702:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$72546",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 88731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setCurrentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72525,
                          "src": "2702:21:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 88735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:33:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88736,
                      "nodeType": "ExpressionStatement",
                      "src": "2702:33:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3138",
                            "id": 88740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:2:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "expression": {
                            "id": 88737,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88607,
                            "src": "2749:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockPrice_$72546",
                              "typeString": "contract MockPrice"
                            }
                          },
                          "id": 88739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDecimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72535,
                          "src": "2749:17:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) external"
                          }
                        },
                        "id": 88741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88742,
                      "nodeType": "ExpressionStatement",
                      "src": "2749:21:148"
                    }
                  ]
                },
                {
                  "id": 88779,
                  "nodeType": "Block",
                  "src": "2791:378:148",
                  "statements": [
                    {
                      "documentation": "Deploy mock operator",
                      "expression": {
                        "id": 88750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88744,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88613,
                          "src": "2842:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$88584",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 88748,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88604,
                              "src": "2870:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 88747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2853:16:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$returns$_t_contract$_MockOperator_$88584_$",
                              "typeString": "function (contract Kernel) returns (contract MockOperator)"
                            },
                            "typeName": {
                              "id": 88746,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88745,
                                "name": "MockOperator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 88584,
                                "src": "2857:12:148"
                              },
                              "referencedDeclaration": 88584,
                              "src": "2857:12:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockOperator_$88584",
                                "typeString": "contract MockOperator"
                              }
                            }
                          },
                          "id": 88749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:24:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOperator_$88584",
                            "typeString": "contract MockOperator"
                          }
                        },
                        "src": "2842:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$88584",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 88751,
                      "nodeType": "ExpressionStatement",
                      "src": "2842:35:148"
                    },
                    {
                      "documentation": "Deploy heart",
                      "expression": {
                        "id": 88769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88752,
                          "name": "heart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88616,
                          "src": "2921:5:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 88756,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88604,
                              "src": "2963:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 88760,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88613,
                                      "src": "3005:8:148",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockOperator_$88584",
                                        "typeString": "contract MockOperator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockOperator_$88584",
                                        "typeString": "contract MockOperator"
                                      }
                                    ],
                                    "id": 88759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2997:7:148",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 88758,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2997:7:148",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 88761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2997:17:148",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 88757,
                                "name": "IOperator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57985,
                                "src": "2987:9:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOperator_$57985_$",
                                  "typeString": "type(contract IOperator)"
                                }
                              },
                              "id": 88762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2987:28:148",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOperator_$57985",
                                "typeString": "contract IOperator"
                              }
                            },
                            {
                              "id": 88763,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88601,
                              "src": "3033:11:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28095",
                                "typeString": "contract MockERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "32653138",
                                  "id": 88766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3070:4:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  },
                                  "value": "2e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                    "typeString": "int_const 2000000000000000000"
                                  }
                                ],
                                "id": 88765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3062:7:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 88764,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3062:7:148",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:13:148",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_contract$_IOperator_$57985",
                                "typeString": "contract IOperator"
                              },
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$28095",
                                "typeString": "contract MockERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 88755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2929:16:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$_t_contract$_IOperator_$57985_$_t_contract$_ERC20_$29147_$_t_uint256_$returns$_t_contract$_OlympusHeart_$52935_$",
                              "typeString": "function (contract Kernel,contract IOperator,contract ERC20,uint256) returns (contract OlympusHeart)"
                            },
                            "typeName": {
                              "id": 88754,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88753,
                                "name": "OlympusHeart",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 52935,
                                "src": "2933:12:148"
                              },
                              "referencedDeclaration": 52935,
                              "src": "2933:12:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            }
                          },
                          "id": 88768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:179:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                            "typeString": "contract OlympusHeart"
                          }
                        },
                        "src": "2921:187:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88770,
                      "nodeType": "ExpressionStatement",
                      "src": "2921:187:148"
                    },
                    {
                      "expression": {
                        "id": 88777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 88771,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88619,
                          "src": "3123:10:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 88775,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88604,
                              "src": "3151:6:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$30536",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 88774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3136:14:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$30536_$returns$_t_contract$_RolesAdmin_$56937_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 88773,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 88772,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 56937,
                                "src": "3140:10:148"
                              },
                              "referencedDeclaration": 56937,
                              "src": "3140:10:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 88776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3136:22:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "3123:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 88778,
                      "nodeType": "ExpressionStatement",
                      "src": "3123:35:148"
                    }
                  ]
                },
                {
                  "id": 88842,
                  "nodeType": "Block",
                  "src": "3179:627:148",
                  "statements": [
                    {
                      "documentation": "Install modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88783,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29387,
                              "src": "3292:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 88784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29381,
                            "src": "3292:21:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88787,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88607,
                                "src": "3323:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPrice_$72546",
                                  "typeString": "contract MockPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPrice_$72546",
                                  "typeString": "contract MockPrice"
                                }
                              ],
                              "id": 88786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3315:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88785,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3315:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3315:14:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88780,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88604,
                            "src": "3271:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$30536",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 88782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29970,
                          "src": "3271:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 88789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3271:59:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88790,
                      "nodeType": "ExpressionStatement",
                      "src": "3271:59:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88794,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29387,
                              "src": "3365:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 88795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29381,
                            "src": "3365:21:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88798,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88610,
                                "src": "3396:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$46494",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 88797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3388:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88796,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3388:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3388:14:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88791,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88604,
                            "src": "3344:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$30536",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 88793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29970,
                          "src": "3344:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 88800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:59:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88801,
                      "nodeType": "ExpressionStatement",
                      "src": "3344:59:148"
                    },
                    {
                      "documentation": "Approve policies",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88805,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29387,
                              "src": "3472:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 88806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29383,
                            "src": "3472:22:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88809,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88613,
                                "src": "3504:8:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockOperator_$88584",
                                  "typeString": "contract MockOperator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockOperator_$88584",
                                  "typeString": "contract MockOperator"
                                }
                              ],
                              "id": 88808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3496:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88807,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3496:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3496:17:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88802,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88604,
                            "src": "3451:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$30536",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 88804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29970,
                          "src": "3451:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 88811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:63:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88812,
                      "nodeType": "ExpressionStatement",
                      "src": "3451:63:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88816,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29387,
                              "src": "3549:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 88817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29383,
                            "src": "3549:22:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88820,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "3581:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 88819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3573:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88818,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3573:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3573:14:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88813,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88604,
                            "src": "3528:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$30536",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 88815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29970,
                          "src": "3528:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 88822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3528:60:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88823,
                      "nodeType": "ExpressionStatement",
                      "src": "3528:60:148"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88827,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29387,
                              "src": "3623:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$29387_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 88828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29383,
                            "src": "3623:22:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88831,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88619,
                                "src": "3655:10:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 88830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3647:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88829,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3647:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3647:19:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$29387",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88824,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88604,
                            "src": "3602:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$30536",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 88826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29970,
                          "src": "3602:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$29387_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 88833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3602:65:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88834,
                      "nodeType": "ExpressionStatement",
                      "src": "3602:65:148"
                    },
                    {
                      "documentation": "Heart roles",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 88838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3773:13:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          },
                          {
                            "id": 88839,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88598,
                            "src": "3788:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88835,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88619,
                            "src": "3752:10:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$56937",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 88837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "3752:20:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 88840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3752:43:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88841,
                      "nodeType": "ExpressionStatement",
                      "src": "3752:43:148"
                    }
                  ]
                },
                {
                  "id": 88858,
                  "nodeType": "Block",
                  "src": "3816:132:148",
                  "statements": [
                    {
                      "documentation": "Mint reward tokens to heart contract",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88848,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "3908:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 88847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3900:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3900:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3900:14:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "id": 88854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31303030",
                                  "id": 88852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3924:4:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 88853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3931:4:148",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "3924:11:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 88851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3916:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 88850,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3916:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3916:20:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88843,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88601,
                            "src": "3883:11:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 88845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28081,
                          "src": "3883:16:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 88856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:54:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88857,
                      "nodeType": "ExpressionStatement",
                      "src": "3883:54:148"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1827:5:148",
            "parameters": {
              "id": 88620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:148"
            },
            "returnParameters": {
              "id": 88621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88917,
            "nodeType": "FunctionDefinition",
            "src": "4286:622:148",
            "nodes": [],
            "body": {
              "id": 88916,
              "nodeType": "Block",
              "src": "4325:583:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88866,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "4420:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 88916,
                      "src": "4412:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88865,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 88870,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88867,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "4432:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52934,
                      "src": "4432:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 88869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:37:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88874,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4467:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4467:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88876,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88866,
                          "src": "4485:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4467:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88871,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4459:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "4459:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88879,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:36:148"
                },
                {
                  "assignments": [
                    88882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88882,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "4577:12:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 88916,
                      "src": "4569:20:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 88890,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88887,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4622:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 88886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88885,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88883,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "4592:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "4592:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:59:148"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88891,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "4666:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "4666:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88895,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:12:148"
                },
                {
                  "assignments": [
                    88898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88898,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "4791:10:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 88916,
                      "src": "4783:18:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4783:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 88906,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88903,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4834:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 88902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4826:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4826:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4826:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88899,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "4804:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 88900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "4804:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4783:57:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88908,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88898,
                        "src": "4859:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88909,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88882,
                          "src": "4871:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 88910,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "4886:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 88911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52550,
                            "src": "4886:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 88912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:14:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4871:29:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88907,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4850:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:51:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88915,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:51:148"
                }
              ]
            },
            "documentation": {
              "id": 88861,
              "nodeType": "StructuredDocumentation",
              "src": "4057:224:148",
              "text": "DONE\n [X] beat\n     [X] active and frequency has passed\n     [X] cannot beat if not active\n     [X] cannot beat if not enough time has passed\n     [X] fails if price or operator revert"
            },
            "functionSelector": "a00f2709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_beat",
            "nameLocation": "4295:20:148",
            "parameters": {
              "id": 88862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:2:148"
            },
            "returnParameters": {
              "id": 88863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88951,
            "nodeType": "FunctionDefinition",
            "src": "4914:334:148",
            "nodes": [],
            "body": {
              "id": 88950,
              "nodeType": "Block",
              "src": "4969:279:148",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the heart to inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 88923,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "5026:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88920,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5017:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5017:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88925,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:16:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88926,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "5043:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52834,
                      "src": "5043:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:18:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88930,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:18:148"
                },
                {
                  "assignments": [
                    88933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88933,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5137:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 88950,
                      "src": "5124:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88932,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert",
                  "id": 88938,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4265617453746f707065642829",
                        "id": 88936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5167:21:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        },
                        "value": "Heart_BeatStopped()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9bf7f18077a541a16b9cf6d92feb29a949736f4ff201de7910bb08ef7430a8b0",
                          "typeString": "literal_string \"Heart_BeatStopped()\""
                        }
                      ],
                      "expression": {
                        "id": 88934,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5143:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 88935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5143:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 88937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:46:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:65:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88942,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88933,
                        "src": "5215:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88939,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5199:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5199:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88944,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88945,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "5229:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "5229:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88949,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:12:148"
                }
              ]
            },
            "functionSelector": "7e9506de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfInactive",
            "nameLocation": "4923:36:148",
            "parameters": {
              "id": 88918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:2:148"
            },
            "returnParameters": {
              "id": 88919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88974,
            "nodeType": "FunctionDefinition",
            "src": "5254:318:148",
            "nodes": [],
            "body": {
              "id": 88973,
              "nodeType": "Block",
              "src": "5309:263:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88956,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5462:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 88973,
                      "src": "5449:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88955,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5449:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect revert since it hasn't been more than the frequency since the last beat (deployment)",
                  "id": 88961,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 88959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5492:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 88957,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5468:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 88958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5468:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 88960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5468:45:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5449:64:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88965,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88956,
                        "src": "5539:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88962,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5523:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5523:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88967,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88968,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "5553:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 88970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "5553:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 88971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88972,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:12:148"
                }
              ]
            },
            "functionSelector": "8d0be1ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatIfTooEarly",
            "nameLocation": "5263:36:148",
            "parameters": {
              "id": 88952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:2:148"
            },
            "returnParameters": {
              "id": 88953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89040,
            "nodeType": "FunctionDefinition",
            "src": "5578:731:148",
            "nodes": [],
            "body": {
              "id": 89039,
              "nodeType": "Block",
              "src": "5642:667:148",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88980,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5698:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5698:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 88982,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "5716:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 88983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52934,
                              "src": "5716:15:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 88984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5716:17:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 88985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5736:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5716:21:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5698:39:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88977,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5690:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "5690:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 88988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88989,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:48:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88991,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "5858:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 88992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52547,
                          "src": "5858:14:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 88993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5858:16:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88994,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5876:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 88995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5876:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 88996,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "5894:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 88997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "frequency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52934,
                              "src": "5894:15:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 88998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5894:17:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 88999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5914:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5894:21:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5876:39:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88990,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1768,
                        1793,
                        1823,
                        1848
                      ],
                      "referencedDeclaration": 1768,
                      "src": "5849:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:67:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89003,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:67:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89004,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "5953:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "5953:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5953:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89008,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:12:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89010,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "6068:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52547,
                          "src": "6068:14:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 89012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6068:16:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89013,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6086:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6086:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89015,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "6104:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52934,
                            "src": "6104:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6104:17:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6086:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89009,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "6059:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:63:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89020,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:63:148"
                },
                {
                  "assignments": [
                    89022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89022,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6199:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89039,
                      "src": "6186:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89021,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6186:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89027,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 89025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 89023,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6205:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "6205:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 89026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:45:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:64:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89031,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89022,
                        "src": "6276:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89028,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6260:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6260:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6260:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89033,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89034,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "6290:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "6290:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89038,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:12:148"
                }
              ]
            },
            "functionSelector": "7b47a7f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotBeatRepeatedlyIfSkipped",
            "nameLocation": "5587:45:148",
            "parameters": {
              "id": 88975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:148"
            },
            "returnParameters": {
              "id": 88976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89071,
            "nodeType": "FunctionDefinition",
            "src": "6315:383:148",
            "nodes": [],
            "body": {
              "id": 89070,
              "nodeType": "Block",
              "src": "6366:332:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89045,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6461:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89070,
                      "src": "6453:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6453:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 89049,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89046,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "6473:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52934,
                      "src": "6473:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 89048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6473:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6453:37:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89053,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6508:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6508:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 89055,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89045,
                          "src": "6526:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89050,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6500:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6500:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89058,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:36:148"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 89062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6610:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89059,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88607,
                        "src": "6594:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockPrice_$72546",
                          "typeString": "contract MockPrice"
                        }
                      },
                      "id": 89061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72433,
                      "src": "6594:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 89063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:22:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89064,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:22:148"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89065,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "6679:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "6679:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89069,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:12:148"
                }
              ]
            },
            "functionSelector": "e2627194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfPriceReverts",
            "nameLocation": "6324:32:148",
            "parameters": {
              "id": 89041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6356:2:148"
            },
            "returnParameters": {
              "id": 89042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89102,
            "nodeType": "FunctionDefinition",
            "src": "6704:388:148",
            "nodes": [],
            "body": {
              "id": 89101,
              "nodeType": "Block",
              "src": "6757:335:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89076,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "6852:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89101,
                      "src": "6844:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart and wait that amount of time",
                  "id": 89080,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89077,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "6864:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52934,
                      "src": "6864:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 89079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6864:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:37:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89084,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6899:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6899:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 89086,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89076,
                          "src": "6917:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6899:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89081,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6891:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "6891:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89089,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:36:148"
                },
                {
                  "documentation": "Set the price mock to return false",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 89093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7004:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89090,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88613,
                        "src": "6985:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOperator_$88584",
                          "typeString": "contract MockOperator"
                        }
                      },
                      "id": 89092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88583,
                      "src": "6985:18:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 89094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6985:25:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89095,
                  "nodeType": "ExpressionStatement",
                  "src": "6985:25:148"
                },
                {
                  "documentation": "Try to beat the heart and expect revert",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89096,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "7073:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "7073:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89100,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:12:148"
                }
              ]
            },
            "functionSelector": "0bb8dc03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_beatFailsIfOperateReverts",
            "nameLocation": "6713:34:148",
            "parameters": {
              "id": 89072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6747:2:148"
            },
            "returnParameters": {
              "id": 89073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6757:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89122,
            "nodeType": "FunctionDefinition",
            "src": "7167:246:148",
            "nodes": [],
            "body": {
              "id": 89121,
              "nodeType": "Block",
              "src": "7215:198:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89108,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "7281:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89121,
                      "src": "7273:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7273:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the beat frequency of the heart",
                  "id": 89112,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89109,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "7293:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52934,
                      "src": "7293:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 89111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:37:148"
                },
                {
                  "documentation": "Check that the frequency is correct",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89114,
                        "name": "frequency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89108,
                        "src": "7378:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "38",
                            "id": 89117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7397:7:148",
                            "subdenomination": "hours",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            },
                            "value": "8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_28800_by_1",
                              "typeString": "int_const 28800"
                            }
                          ],
                          "id": 89116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7389:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 89115,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7389:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7389:16:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89113,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7369:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:37:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89120,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:37:148"
                }
              ]
            },
            "documentation": {
              "id": 89103,
              "nodeType": "StructuredDocumentation",
              "src": "7144:18:148",
              "text": "[X] frequency"
            },
            "functionSelector": "882d3844",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_viewFrequency",
            "nameLocation": "7176:29:148",
            "parameters": {
              "id": 89104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7205:2:148"
            },
            "returnParameters": {
              "id": 89105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89193,
            "nodeType": "FunctionDefinition",
            "src": "7693:832:148",
            "nodes": [],
            "body": {
              "id": 89192,
              "nodeType": "Block",
              "src": "7737:788:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89128,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7849:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89192,
                      "src": "7836:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89127,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7836:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to beat the heart and expect the revert since not enough time has passed",
                  "id": 89133,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f4f75744f664379636c652829",
                        "id": 89131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7879:20:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        },
                        "value": "Heart_OutOfCycle()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c3777062d6a53b44588baad3686f03fe582c1d8128ec2f5257764d7a5705121",
                          "typeString": "literal_string \"Heart_OutOfCycle()\""
                        }
                      ],
                      "expression": {
                        "id": 89129,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7855:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7855:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 89132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:45:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7836:64:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89137,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89128,
                        "src": "7926:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89134,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7910:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7910:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89139,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89140,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "7940:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "7940:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7940:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89144,
                  "nodeType": "ExpressionStatement",
                  "src": "7940:12:148"
                },
                {
                  "documentation": "Reset the beat so that it can be called without moving the time forward",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89148,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "8056:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89145,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8047:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8047:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89150,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:16:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89151,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "8073:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52807,
                      "src": "8073:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89155,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:17:148"
                },
                {
                  "assignments": [
                    89158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89158,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "8172:12:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89192,
                      "src": "8164:20:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8164:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Store this contract's current reward token balance",
                  "id": 89166,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89163,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8217:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 89162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8209:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8209:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8209:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89159,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "8187:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "8187:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8164:59:148"
                },
                {
                  "documentation": "Beat the heart and expect it to work",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89167,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "8283:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "8283:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8283:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89171,
                  "nodeType": "ExpressionStatement",
                  "src": "8283:12:148"
                },
                {
                  "assignments": [
                    89174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89174,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "8408:10:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89192,
                      "src": "8400:18:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check that the contract's reward token balance has increased by the reward amount",
                  "id": 89182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89179,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8451:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 89178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8443:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89177,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8443:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8443:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89175,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "8421:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "8421:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8421:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:57:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89184,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89174,
                        "src": "8476:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89185,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89158,
                          "src": "8488:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89186,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "8503:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52550,
                            "src": "8503:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8503:14:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:29:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89183,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8467:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:51:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89191,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:51:148"
                }
              ]
            },
            "documentation": {
              "id": 89123,
              "nodeType": "StructuredDocumentation",
              "src": "7466:222:148",
              "text": "DONE\n [X] resetBeat\n [X] activate and deactivate\n [X] setOperator\n [X] setRewardTokenAndAmount\n [X] withdrawUnspentRewards\n [X] cannot call admin functions without permissions"
            },
            "functionSelector": "e853d736",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_resetBeat",
            "nameLocation": "7702:25:148",
            "parameters": {
              "id": 89124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:148"
            },
            "returnParameters": {
              "id": 89125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7737:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89263,
            "nodeType": "FunctionDefinition",
            "src": "8531:752:148",
            "nodes": [],
            "body": {
              "id": 89262,
              "nodeType": "Block",
              "src": "8585:698:148",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Expect the heart to be active to begin with",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89197,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "8662:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52544,
                          "src": "8662:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 89199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8662:14:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89196,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8651:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:26:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89201,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:26:148"
                },
                {
                  "assignments": [
                    89203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89203,
                      "mutability": "mutable",
                      "name": "lastBeat",
                      "nameLocation": "8696:8:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89262,
                      "src": "8688:16:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8688:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89207,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89204,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "8707:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52547,
                      "src": "8707:14:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 89206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8707:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8688:35:148"
                },
                {
                  "documentation": "Toggle the heart to make it inactive",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89211,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "8792:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89208,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8783:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8783:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8783:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89213,
                  "nodeType": "ExpressionStatement",
                  "src": "8783:16:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89214,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "8809:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52834,
                      "src": "8809:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8809:18:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89218,
                  "nodeType": "ExpressionStatement",
                  "src": "8809:18:148"
                },
                {
                  "documentation": "Expect the heart to be inactive and lastBeat to remain the same",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8925:15:148",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89220,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "8926:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52544,
                            "src": "8926:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 89222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8926:14:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89219,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "8914:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:27:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89225,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:27:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89227,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "8960:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52547,
                          "src": "8960:14:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 89229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8960:16:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89230,
                        "name": "lastBeat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89203,
                        "src": "8978:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89226,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "8951:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8951:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89232,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:36:148"
                },
                {
                  "documentation": "Toggle the heart to make it active again",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89236,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "9060:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89233,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9051:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9051:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9051:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89238,
                  "nodeType": "ExpressionStatement",
                  "src": "9051:16:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89239,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "9077:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52822,
                      "src": "9077:14:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9077:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89243,
                  "nodeType": "ExpressionStatement",
                  "src": "9077:16:148"
                },
                {
                  "documentation": "Expect the heart to be active again and lastBeat to be reset",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89245,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "9188:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52544,
                          "src": "9188:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 89247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9188:14:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89244,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "9177:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9177:26:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89249,
                  "nodeType": "ExpressionStatement",
                  "src": "9177:26:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89251,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "9222:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastBeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52547,
                          "src": "9222:14:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 89253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9222:16:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89254,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9240:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9240:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89256,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "9258:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52934,
                            "src": "9258:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:17:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9240:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89250,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "9213:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9213:63:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89261,
                  "nodeType": "ExpressionStatement",
                  "src": "9213:63:148"
                }
              ]
            },
            "functionSelector": "5d948bbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_activate_deactivate",
            "nameLocation": "8540:35:148",
            "parameters": {
              "id": 89194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8575:2:148"
            },
            "returnParameters": {
              "id": 89195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89291,
            "nodeType": "FunctionDefinition",
            "src": "9289:305:148",
            "nodes": [],
            "body": {
              "id": 89290,
              "nodeType": "Block",
              "src": "9353:241:148",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set the operator using the provided address",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89271,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "9428:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9419:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "9419:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9419:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89273,
                  "nodeType": "ExpressionStatement",
                  "src": "9419:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89277,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89265,
                        "src": "9463:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89274,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "9445:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52850,
                      "src": "9445:17:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9445:30:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89279,
                  "nodeType": "ExpressionStatement",
                  "src": "9445:30:148"
                },
                {
                  "documentation": "Check that the operator has been updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 89283,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "9556:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 89284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52560,
                              "src": "9556:14:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IOperator_$57985_$",
                                "typeString": "function () view external returns (contract IOperator)"
                              }
                            },
                            "id": 89285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9556:16:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOperator_$57985",
                              "typeString": "contract IOperator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOperator_$57985",
                              "typeString": "contract IOperator"
                            }
                          ],
                          "id": 89282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9548:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9548:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:25:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89287,
                        "name": "newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89265,
                        "src": "9575:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89280,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9539:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9539:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89289,
                  "nodeType": "ExpressionStatement",
                  "src": "9539:48:148"
                }
              ]
            },
            "functionSelector": "56735b57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectnes_setOperator",
            "nameLocation": "9298:26:148",
            "parameters": {
              "id": 89266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89265,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "9333:11:148",
                  "nodeType": "VariableDeclaration",
                  "scope": 89291,
                  "src": "9325:19:148",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9325:7:148",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9324:21:148"
            },
            "returnParameters": {
              "id": 89267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9353:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89496,
            "nodeType": "FunctionDefinition",
            "src": "9600:1809:148",
            "nodes": [],
            "body": {
              "id": 89495,
              "nodeType": "Block",
              "src": "9658:1751:148",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89297,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9736:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9736:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89299,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "9754:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52934,
                            "src": "9754:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9754:17:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9736:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89294,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9728:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "9728:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:44:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89304,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:44:148"
                },
                {
                  "assignments": [
                    89308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89308,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nameLocation": "9829:8:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "9819:18:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28095",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 89307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89306,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28095,
                          "src": "9819:9:148"
                        },
                        "referencedDeclaration": 28095,
                        "src": "9819:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Create new reward token",
                  "id": 89316,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4e657720546f6b656e",
                        "id": 89312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9854:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        "value": "New Token"
                      },
                      {
                        "hexValue": "4e54",
                        "id": 89313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9867:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        "value": "NT"
                      },
                      {
                        "hexValue": "3138",
                        "id": 89314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9873:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_327ce9cbf2eeffcc8ebecfaad5c61617f51f7cf94be3a9cb471eaeceef44c56d",
                          "typeString": "literal_string \"New Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a510c2adc683b3af1554c23604e852af8fa928662e8e4f519caa1dcf6bfa5e",
                          "typeString": "literal_string \"NT\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 89311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9840:13:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28095_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                      },
                      "typeName": {
                        "id": 89310,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89309,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28095,
                          "src": "9844:9:148"
                        },
                        "referencedDeclaration": 28095,
                        "src": "9844:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 89315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28095",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9819:57:148"
                },
                {
                  "assignments": [
                    89318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89318,
                      "mutability": "mutable",
                      "name": "newReward",
                      "nameLocation": "9894:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "9886:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9886:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89323,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32653138",
                        "id": 89321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:4:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 89320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9906:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 89319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9906:7:148",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 89322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9906:13:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9886:33:148"
                },
                {
                  "assignments": [
                    89326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89326,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10036:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "10023:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89325,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10023:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to set new reward token and amount while a beat is available, expect to fail",
                  "id": 89331,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 89329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10066:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 89327,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10042:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "10042:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 89330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10042:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10023:67:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89335,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89326,
                        "src": "10116:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89332,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10100:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10100:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89337,
                  "nodeType": "ExpressionStatement",
                  "src": "10100:20:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89341,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "10139:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89338,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10130:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10130:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10130:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89343,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89347,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89308,
                        "src": "10186:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 89348,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89318,
                        "src": "10196:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89344,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "10156:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52893,
                      "src": "10156:29:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 89349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10156:50:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89350,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:50:148"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89351,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "10244:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "10244:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10244:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89355,
                  "nodeType": "ExpressionStatement",
                  "src": "10244:12:148"
                },
                {
                  "documentation": "Set a new reward token and amount from the policy",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89359,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "10338:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89356,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10329:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10329:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89361,
                  "nodeType": "ExpressionStatement",
                  "src": "10329:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89365,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89308,
                        "src": "10385:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "id": 89366,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89318,
                        "src": "10395:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89362,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "10355:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52893,
                      "src": "10355:29:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 89367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10355:50:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89368,
                  "nodeType": "ExpressionStatement",
                  "src": "10355:50:148"
                },
                {
                  "documentation": "Expect the heart's reward token and reward to be updated",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 89372,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "10502:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              },
                              "id": 89373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52554,
                              "src": "10502:17:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$29147_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 89374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10502:19:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$29147",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$29147",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 89371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10494:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89370,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10494:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10494:28:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89378,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89308,
                            "src": "10532:8:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 89377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10524:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10524:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10524:17:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89369,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "10485:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10485:57:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89381,
                  "nodeType": "ExpressionStatement",
                  "src": "10485:57:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89383,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "10561:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          },
                          "id": 89384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52550,
                          "src": "10561:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 89385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10561:14:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89386,
                        "name": "newReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89318,
                        "src": "10577:9:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89382,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "10552:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:35:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89388,
                  "nodeType": "ExpressionStatement",
                  "src": "10552:35:148"
                },
                {
                  "documentation": "Mint some new tokens to the heart to pay rewards",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89394,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "10681:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 89393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:14:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            },
                            "id": 89400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 89398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10697:1:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 89399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10701:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "10697:8:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3000000000000000000_by_1",
                              "typeString": "int_const 3000000000000000000"
                            }
                          ],
                          "id": 89397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10689:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 89396,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10689:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10689:17:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89389,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89308,
                        "src": "10659:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28081,
                      "src": "10659:13:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 89402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89403,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:48:148"
                },
                {
                  "assignments": [
                    89406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89406,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "10800:12:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "10792:20:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10792:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Expect the heart to reward the new token and amount on a beat",
                  "id": 89414,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89411,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10842:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 89410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10834:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10834:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10834:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89407,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89308,
                        "src": "10815:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "10815:18:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10815:33:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10792:56:148"
                },
                {
                  "assignments": [
                    89416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89416,
                      "mutability": "mutable",
                      "name": "frequency",
                      "nameLocation": "10866:9:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "10858:17:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10858:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89420,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89417,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "10878:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "frequency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52934,
                      "src": "10878:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 89419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10878:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10858:37:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89424,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10913:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10913:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 89426,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89416,
                          "src": "10931:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89421,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10905:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "10905:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10905:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89429,
                  "nodeType": "ExpressionStatement",
                  "src": "10905:36:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89430,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "10951:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "10951:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10951:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89434,
                  "nodeType": "ExpressionStatement",
                  "src": "10951:12:148"
                },
                {
                  "assignments": [
                    89436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89436,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "10982:10:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89495,
                      "src": "10974:18:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89444,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89441,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11022:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HeartTest_$89686",
                              "typeString": "contract HeartTest"
                            }
                          ],
                          "id": 89440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11014:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11014:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11014:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89437,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89308,
                        "src": "10995:8:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "10995:18:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:33:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:54:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89446,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89436,
                        "src": "11047:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89447,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89406,
                          "src": "11059:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89448,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "11074:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52550,
                            "src": "11074:12:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11074:14:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11059:29:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89445,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11038:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11038:51:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89453,
                  "nodeType": "ExpressionStatement",
                  "src": "11038:51:148"
                },
                {
                  "documentation": "Balance is now less than the reward amount, test the min function",
                  "expression": {
                    "id": 89462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89454,
                      "name": "startBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89406,
                      "src": "11178:12:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 89459,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11220:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$89686",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$89686",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 89458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11212:7:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11212:7:148",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11212:13:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 89455,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89308,
                          "src": "11193:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28095",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 89456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28798,
                        "src": "11193:18:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 89461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:33:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11178:48:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89463,
                  "nodeType": "ExpressionStatement",
                  "src": "11178:48:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89467,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11244:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11244:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 89469,
                          "name": "frequency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89416,
                          "src": "11262:9:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11244:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89464,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11236:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11236:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11236:36:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89472,
                  "nodeType": "ExpressionStatement",
                  "src": "11236:36:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89473,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "11282:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "11282:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11282:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89477,
                  "nodeType": "ExpressionStatement",
                  "src": "11282:12:148"
                },
                {
                  "expression": {
                    "id": 89486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89478,
                      "name": "endBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89436,
                      "src": "11305:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 89483,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11345:4:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HeartTest_$89686",
                                "typeString": "contract HeartTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HeartTest_$89686",
                                "typeString": "contract HeartTest"
                              }
                            ],
                            "id": 89482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11337:7:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89481,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11337:7:148",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11337:13:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 89479,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89308,
                          "src": "11318:8:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28095",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "id": 89480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28798,
                        "src": "11318:18:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 89485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11318:33:148",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11305:46:148",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89487,
                  "nodeType": "ExpressionStatement",
                  "src": "11305:46:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89489,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89436,
                        "src": "11370:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89490,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89406,
                          "src": "11382:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 89491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11397:4:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11382:19:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89488,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "11361:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89494,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:41:148"
                }
              ]
            },
            "functionSelector": "2c639076",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setRewardTokenAndAmount",
            "nameLocation": "9609:39:148",
            "parameters": {
              "id": 89292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9648:2:148"
            },
            "returnParameters": {
              "id": 89293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9658:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89606,
            "nodeType": "FunctionDefinition",
            "src": "11415:1174:148",
            "nodes": [],
            "body": {
              "id": 89605,
              "nodeType": "Block",
              "src": "11472:1117:148",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set timestamp so that a heart beat is available",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 89502,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11550:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11550:15:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89504,
                              "name": "heart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88616,
                              "src": "11568:5:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                "typeString": "contract OlympusHeart"
                              }
                            },
                            "id": 89505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "frequency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52934,
                            "src": "11568:15:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11568:17:148",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11550:35:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89499,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11542:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "11542:7:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:44:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89509,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:44:148"
                },
                {
                  "assignments": [
                    89512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89512,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11676:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89605,
                      "src": "11663:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89511,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11663:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call while a beat is available, expect to fail",
                  "id": 89517,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "48656172745f42656174417661696c61626c652829",
                        "id": 89515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11706:23:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        },
                        "value": "Heart_BeatAvailable()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f36f8a4e0a65802dc24403e1ce65bded787efc719963684227380dde5a58684",
                          "typeString": "literal_string \"Heart_BeatAvailable()\""
                        }
                      ],
                      "expression": {
                        "id": 89513,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11682:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "11682:23:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 89516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11682:48:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11663:67:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89521,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89512,
                        "src": "11756:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89518,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11740:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "11740:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89523,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:20:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89527,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "11779:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89524,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11770:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "11770:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11770:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89529,
                  "nodeType": "ExpressionStatement",
                  "src": "11770:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89533,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "11825:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 89530,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "11796:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52920,
                      "src": "11796:28:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 89534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11796:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89535,
                  "nodeType": "ExpressionStatement",
                  "src": "11796:41:148"
                },
                {
                  "documentation": "Beat the heart",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89536,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "11875:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52745,
                      "src": "11875:10:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:12:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89540,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:12:148"
                },
                {
                  "assignments": [
                    89543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89543,
                      "mutability": "mutable",
                      "name": "startBalance",
                      "nameLocation": "11970:12:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89605,
                      "src": "11962:20:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89542,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11962:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the balance of the reward token on the contract",
                  "id": 89551,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89548,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88598,
                            "src": "12015:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 89547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12007:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89546,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12007:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12007:15:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89544,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "11985:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "11985:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:38:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11962:61:148"
                },
                {
                  "assignments": [
                    89553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89553,
                      "mutability": "mutable",
                      "name": "heartBalance",
                      "nameLocation": "12041:12:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89605,
                      "src": "12033:20:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12033:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89561,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89558,
                            "name": "heart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88616,
                            "src": "12086:5:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                              "typeString": "contract OlympusHeart"
                            }
                          ],
                          "id": 89557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12078:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12078:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12078:14:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89554,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "12056:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "12056:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:37:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12033:60:148"
                },
                {
                  "documentation": "Withdraw the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89565,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88598,
                        "src": "12162:6:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89562,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12153:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12153:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89567,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89571,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "12208:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 89568,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "12179:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52920,
                      "src": "12179:28:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 89572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89573,
                  "nodeType": "ExpressionStatement",
                  "src": "12179:41:148"
                },
                {
                  "assignments": [
                    89575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89575,
                      "mutability": "mutable",
                      "name": "endBalance",
                      "nameLocation": "12238:10:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89605,
                      "src": "12230:18:148",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89574,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12230:7:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89583,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89580,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88598,
                            "src": "12281:6:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 89579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12273:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12273:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12273:15:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89576,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "12251:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 89577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28798,
                      "src": "12251:21:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 89582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12251:38:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12230:59:148"
                },
                {
                  "documentation": "Expect the heart's reward token balance to be 0",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 89589,
                                "name": "heart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88616,
                                "src": "12399:5:148",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                                  "typeString": "contract OlympusHeart"
                                }
                              ],
                              "id": 89588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12391:7:148",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 89587,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12391:7:148",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12391:14:148",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89585,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88601,
                            "src": "12369:11:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28095",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 89586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28798,
                          "src": "12369:21:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12369:37:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12416:1:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12408:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 89592,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12408:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12408:10:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89584,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12360:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:59:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89597,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:59:148"
                },
                {
                  "documentation": "Expect this contract's reward token balance to be increased by the heart's unspent rewards",
                  "expression": {
                    "arguments": [
                      {
                        "id": 89599,
                        "name": "endBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89575,
                        "src": "12542:10:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89600,
                          "name": "startBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89543,
                          "src": "12554:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 89601,
                          "name": "heartBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89553,
                          "src": "12569:12:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12554:27:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89598,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12533:8:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 89603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12533:49:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89604,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:49:148"
                }
              ]
            },
            "functionSelector": "e9aaa0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_withdrawUnspentRewards",
            "nameLocation": "11424:38:148",
            "parameters": {
              "id": 89497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11462:2:148"
            },
            "returnParameters": {
              "id": 89498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11472:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89685,
            "nodeType": "FunctionDefinition",
            "src": "12595:668:148",
            "nodes": [],
            "body": {
              "id": 89684,
              "nodeType": "Block",
              "src": "12672:591:148",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89611,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12780:3:148",
                      "nodeType": "VariableDeclaration",
                      "scope": 89684,
                      "src": "12767:16:148",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89610,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12767:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Try to call admin functions on the heart as non-policy and expect revert",
                  "id": 89622,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 89614,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46573,
                            "src": "12822:7:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$46573_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 89615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46519,
                          "src": "12822:25:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 89616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12822:34:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "68656172745f61646d696e",
                            "id": 89619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12878:13:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            },
                            "value": "heart_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9852ca2a456c34ad43d115baf99e07eb0053af3992cae84eb0afa4e3f827e187",
                              "typeString": "literal_string \"heart_admin\""
                            }
                          ],
                          "id": 89618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12870:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 89617,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12870:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12870:22:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89612,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12786:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12786:22:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 89621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:116:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12767:135:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89626,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89611,
                        "src": "12929:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89623,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12913:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12913:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89628,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89629,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "12943:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetBeat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52807,
                      "src": "12943:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12943:17:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89633,
                  "nodeType": "ExpressionStatement",
                  "src": "12943:17:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89637,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89611,
                        "src": "12987:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89634,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12971:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12971:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12971:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89639,
                  "nodeType": "ExpressionStatement",
                  "src": "12971:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89640,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "13001:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52834,
                      "src": "13001:16:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13001:18:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89644,
                  "nodeType": "ExpressionStatement",
                  "src": "13001:18:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89648,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89611,
                        "src": "13046:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89645,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13030:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13030:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13030:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89650,
                  "nodeType": "ExpressionStatement",
                  "src": "13030:20:148"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89651,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "13060:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52822,
                      "src": "13060:14:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 89654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13060:16:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89655,
                  "nodeType": "ExpressionStatement",
                  "src": "13060:16:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89659,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89611,
                        "src": "13103:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89656,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13087:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13087:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13087:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89661,
                  "nodeType": "ExpressionStatement",
                  "src": "13087:20:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89665,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "13147:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32653138",
                            "id": 89668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13168:4:148",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 89667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13160:7:148",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 89666,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13160:7:148",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13160:13:148",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89662,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "13117:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardTokenAndAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52893,
                      "src": "13117:29:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,uint256) external"
                      }
                    },
                    "id": 89670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13117:57:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89671,
                  "nodeType": "ExpressionStatement",
                  "src": "13117:57:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89675,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89611,
                        "src": "13201:3:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89672,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13185:2:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13185:15:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 89676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13185:20:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89677,
                  "nodeType": "ExpressionStatement",
                  "src": "13185:20:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89681,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88601,
                        "src": "13244:11:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20_$28095",
                          "typeString": "contract MockERC20"
                        }
                      ],
                      "expression": {
                        "id": 89678,
                        "name": "heart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88616,
                        "src": "13215:5:148",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OlympusHeart_$52935",
                          "typeString": "contract OlympusHeart"
                        }
                      },
                      "id": 89680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawUnspentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52920,
                      "src": "13215:28:148",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$29147_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 89682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13215:41:148",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89683,
                  "nodeType": "ExpressionStatement",
                  "src": "13215:41:148"
                }
              ]
            },
            "functionSelector": "1fdada07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_cannotCallAdminFunctionsWithoutPermissions",
            "nameLocation": "12604:58:148",
            "parameters": {
              "id": 89607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:2:148"
            },
            "returnParameters": {
              "id": 89608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12672:0:148"
            },
            "scope": 89686,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88585,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "1417:4:148"
            },
            "id": 88586,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:4:148"
          }
        ],
        "canonicalName": "HeartTest",
        "contractDependencies": [
          28095,
          30536,
          46494,
          52935,
          56937,
          59746,
          72546,
          88584
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89686,
          5484,
          2554,
          2291
        ],
        "name": "HeartTest",
        "nameLocation": "1404:9:148",
        "scope": 89687,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 148
}