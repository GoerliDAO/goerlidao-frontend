{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "kernel_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "policy_",
          "type": "address"
        }
      ],
      "name": "Module_PolicyNotPermitted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INIT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEYCODE",
      "outputs": [
        {
          "internalType": "Keycode",
          "name": "",
          "type": "bytes5"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "major",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "minor",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516104fd3803806104fd83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61046a806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a7167caf1161005b578063a7167caf146100e1578063d4aae0c4146100e9578063ea6439141461012e578063ffa1ad741461013657600080fd5b80631ae7ec2e146100825780634657b36c146100b557806361bc221a146100ca575b600080fd5b6040517f4d4f434b5900000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6100c86100c3366004610376565b61014a565b005b6100d360015481565b6040519081526020016100ac565b6100c86101e9565b6000546101099073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ac565b6100c8610321565b6040805160018082526020820152016100ac565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101a2576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d4f434b590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906103b3565b61030c576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b60016000815461031b906103d5565b90915550565b60005473ffffffffffffffffffffffffffffffffffffffff163314610374576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b565b60006020828403121561038857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103ac57600080fd5b9392505050565b6000602082840312156103c557600080fd5b815180151581146103ac57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361042d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212205b4fafe4c60655a0e2f23c47fa82f58ecebffb0fade3bc9df90598b3f017ca4f64736f6c634300080f0033",
    "sourceMap": "88:492:158:-:0;;;231:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4341:6:55;:16;;-1:-1:-1;;;;;;4341:16:55;-1:-1:-1;;;;;4341:16:55;;;;;;;;;;88:492:158;;14:306:183;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:183;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:183:o;:::-;88:492:158;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a7167caf1161005b578063a7167caf146100e1578063d4aae0c4146100e9578063ea6439141461012e578063ffa1ad741461013657600080fd5b80631ae7ec2e146100825780634657b36c146100b557806361bc221a146100ca575b600080fd5b6040517f4d4f434b5900000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6100c86100c3366004610376565b61014a565b005b6100d360015481565b6040519081526020016100ac565b6100c86101e9565b6000546101099073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ac565b6100c8610321565b6040805160018082526020820152016100ac565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101a2576040517f14fa403c0000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1663f166d9eb7f4d4f434b590000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b811682527fffffffffff0000000000000000000000000000000000000000000000000000009290921660048201523360248201526000359091166044820152606401602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906103b3565b61030c576040517f11bf00c9000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b60016000815461031b906103d5565b90915550565b60005473ffffffffffffffffffffffffffffffffffffffff163314610374576040517f14fa403c000000000000000000000000000000000000000000000000000000008152336004820152602401610199565b565b60006020828403121561038857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103ac57600080fd5b9392505050565b6000602082840312156103c557600080fd5b815180151581146103ac57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361042d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212205b4fafe4c60655a0e2f23c47fa82f58ecebffb0fade3bc9df90598b3f017ca4f64736f6c634300080f0033",
    "sourceMap": "88:492:158:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:100;;;358:18;188:98:183;;176:2;161:18;283:100:158;;;;;;;;4652:97:55;;;;;;:::i;:::-;;:::i;:::-;;137:22:158;;;;;;;;;773:25:183;;;761:2;746:18;137:22:158;627:177:183;502:76:158;;;:::i;4276:20:55:-;;;;;;;;;;;;1001:42:183;989:55;;;971:74;;959:2;944:18;4276:20:55;809:242:183;6112:46:55;;;:::i;389:107:158:-;;;;484:1;1222:36:183;;;1289:2;1274:18;;1267:45;1195:18;389:107:158;1056:262:183;4652:97:55;4504:6;;;;4482:10;:29;4478:78;;4520:36;;;;;4545:10;4520:36;;;971:74:183;944:18;;4520:36:55;;;;;;;;4478:78;4723:6:::1;:19:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4652:97::o;502:76:158:-;5263:6:55;;;;:24;358:18:158;5263:64:55;;5319:7;5263:64;;;;;;;;1828:66:183;1816:79;;;;5263:64:55;;;1798:98:183;5306:10:55;1912:18:183;;;1905:83;-1:-1:-1;5319:7:55;;;;2004:18:183;;;1997:107;1771:18;;5263:64:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5258:127;;5348:37;;;;;5374:10;5348:37;;;971:74:183;944:18;;5348:37:55;809:242:183;5258:127:55;564:7:158::1;;562:9;;;;;:::i;:::-;::::0;;;-1:-1:-1;502:76:158:o;6112:46:55:-;4504:6;;;;4482:10;:29;4478:78;;4520:36;;;;;4545:10;4520:36;;;971:74:183;944:18;;4520:36:55;809:242:183;4478:78:55;6112:46::o;297:325:183:-;372:6;425:2;413:9;404:7;400:23;396:32;393:52;;;441:1;438;431:12;393:52;480:9;467:23;530:42;523:5;519:54;512:5;509:65;499:93;;588:1;585;578:12;499:93;611:5;297:325;-1:-1:-1;;;297:325:183:o;2115:277::-;2182:6;2235:2;2223:9;2214:7;2210:23;2206:32;2203:52;;;2251:1;2248;2241:12;2203:52;2283:9;2277:16;2336:5;2329:13;2322:21;2315:5;2312:32;2302:60;;2358:1;2355;2348:12;2397:349;2436:3;2467:66;2460:5;2457:77;2454:257;;2567:77;2564:1;2557:88;2668:4;2665:1;2658:15;2696:4;2693:1;2686:15;2454:257;-1:-1:-1;2738:1:183;2727:13;;2397:349::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "KEYCODE()": "1ae7ec2e",
    "VERSION()": "ffa1ad74",
    "changeKernel(address)": "4657b36c",
    "counter()": "61bc221a",
    "kernel()": "d4aae0c4",
    "permissionedCall()": "a7167caf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"kernel_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy_\",\"type\":\"address\"}],\"name\":\"Module_PolicyNotPermitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KEYCODE\",\"outputs\":[{\"internalType\":\"Keycode\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"major\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"minor\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic.\"},\"VERSION()\":{\"returns\":{\"major\":\"- Major version upgrade indicates breaking change to the interface.\",\"minor\":\"- Minor version change retains backward-compatible interface.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"KEYCODE()\":{\"notice\":\"5 byte identifier for a module.\"},\"VERSION()\":{\"notice\":\"Returns which semantic version of a module is being implemented.\"},\"changeKernel(address)\":{\"notice\":\"Function used by kernel when migrating to a new kernel.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/mocks/MockValidUpgradedModule.sol\":\"MockValidUpgradedModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/test/mocks/MockValidUpgradedModule.sol\":{\"keccak256\":\"0x1a8cbe2a43acba1185f112d094997df2e752af5ac17ecd1f73cff5823a250f12\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://068703e95290dcf9aa4891fa7957b8fed10add4bba3c6439683cc3d69861d0b4\",\"dweb:/ipfs/QmZP4Y8QuBFGARHM8BYVxy5KoVJ9hq5Wb2QLTRwxGN32Hy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "kernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "KernelAdapter_OnlyKernel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Module_PolicyNotPermitted"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "KEYCODE",
          "outputs": [
            {
              "internalType": "Keycode",
              "name": "",
              "type": "bytes5"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "major",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "minor",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Kernel",
              "name": "newKernel_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeKernel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "counter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract Kernel",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permissionedCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the kernel.MUST BE GATED BY onlyKernel. Used to encompass any initialization or upgrade logic."
          },
          "VERSION()": {
            "returns": {
              "major": "- Major version upgrade indicates breaking change to the interface.",
              "minor": "- Minor version change retains backward-compatible interface."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": {
            "notice": "Initialization function for the module"
          },
          "KEYCODE()": {
            "notice": "5 byte identifier for a module."
          },
          "VERSION()": {
            "notice": "Returns which semantic version of a module is being implemented."
          },
          "changeKernel(address)": {
            "notice": "Function used by kernel when migrating to a new kernel."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/mocks/MockValidUpgradedModule.sol": "MockValidUpgradedModule"
      },
      "libraries": {}
    },
    "sources": {
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/mocks/MockValidUpgradedModule.sol": {
        "keccak256": "0x1a8cbe2a43acba1185f112d094997df2e752af5ac17ecd1f73cff5823a250f12",
        "urls": [
          "bzz-raw://068703e95290dcf9aa4891fa7957b8fed10add4bba3c6439683cc3d69861d0b4",
          "dweb:/ipfs/QmZP4Y8QuBFGARHM8BYVxy5KoVJ9hq5Wb2QLTRwxGN32Hy"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/mocks/MockValidUpgradedModule.sol",
    "id": 67195,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "MockValidUpgradedModule": [
        67194
      ],
      "Module": [
        28577
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "TargetNotAContract": [
        28366
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:544:158",
    "nodes": [
      {
        "id": 67144,
        "nodeType": "PragmaDirective",
        "src": "37:23:158",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 67145,
        "nodeType": "ImportDirective",
        "src": "62:24:158",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67195,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 67194,
        "nodeType": "ContractDefinition",
        "src": "88:492:158",
        "nodes": [
          {
            "id": 67149,
            "nodeType": "VariableDeclaration",
            "src": "137:22:158",
            "nodes": [],
            "constant": false,
            "functionSelector": "61bc221a",
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "152:7:158",
            "scope": 67194,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "137:7:158",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 67159,
            "nodeType": "FunctionDefinition",
            "src": "231:46:158",
            "nodes": [],
            "body": {
              "id": 67158,
              "nodeType": "Block",
              "src": "275:2:158",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 67155,
                    "name": "kernel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67152,
                    "src": "266:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  }
                ],
                "id": 67156,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 67154,
                  "name": "Module",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28577,
                  "src": "259:6:158"
                },
                "nodeType": "ModifierInvocation",
                "src": "259:15:158"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67152,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "250:7:158",
                  "nodeType": "VariableDeclaration",
                  "scope": 67159,
                  "src": "243:14:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Kernel_$29497",
                    "typeString": "contract Kernel"
                  },
                  "typeName": {
                    "id": 67151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67150,
                      "name": "Kernel",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29497,
                      "src": "243:6:158"
                    },
                    "referencedDeclaration": 29497,
                    "src": "243:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kernel_$29497",
                      "typeString": "contract Kernel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:16:158"
            },
            "returnParameters": {
              "id": 67157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:158"
            },
            "scope": 67194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67171,
            "nodeType": "FunctionDefinition",
            "src": "283:100:158",
            "nodes": [],
            "body": {
              "id": 67170,
              "nodeType": "Block",
              "src": "341:42:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f434b59",
                        "id": 67167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "368:7:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_663edcf8ea78a6ac1240b837c337808e17f853b81ff9356c0a40747c28dfdd8a",
                          "typeString": "literal_string \"MOCKY\""
                        },
                        "value": "MOCKY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_663edcf8ea78a6ac1240b837c337808e17f853b81ff9356c0a40747c28dfdd8a",
                          "typeString": "literal_string \"MOCKY\""
                        }
                      ],
                      "id": 67166,
                      "name": "toKeycode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28385,
                      "src": "358:9:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes5_$returns$_t_userDefinedValueType$_Keycode_$28362_$",
                        "typeString": "function (bytes5) pure returns (Keycode)"
                      }
                    },
                    "id": 67168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "358:18:158",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "functionReturnParameters": 67165,
                  "id": 67169,
                  "nodeType": "Return",
                  "src": "351:25:158"
                }
              ]
            },
            "baseFunctions": [
              28560
            ],
            "functionSelector": "1ae7ec2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "KEYCODE",
            "nameLocation": "292:7:158",
            "overrides": {
              "id": 67161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "314:8:158"
            },
            "parameters": {
              "id": 67160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:158"
            },
            "returnParameters": {
              "id": 67165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67171,
                  "src": "332:7:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                    "typeString": "Keycode"
                  },
                  "typeName": {
                    "id": 67163,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67162,
                      "name": "Keycode",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28362,
                      "src": "332:7:158"
                    },
                    "referencedDeclaration": 28362,
                    "src": "332:7:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Keycode_$28362",
                      "typeString": "Keycode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "331:9:158"
            },
            "scope": 67194,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67184,
            "nodeType": "FunctionDefinition",
            "src": "389:107:158",
            "nodes": [],
            "body": {
              "id": 67183,
              "nodeType": "Block",
              "src": "466:30:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 67179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "484:1:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "487:1:158",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "id": 67181,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "483:6:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1)"
                    }
                  },
                  "functionReturnParameters": 67178,
                  "id": 67182,
                  "nodeType": "Return",
                  "src": "476:13:158"
                }
              ]
            },
            "baseFunctions": [
              28569
            ],
            "functionSelector": "ffa1ad74",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VERSION",
            "nameLocation": "398:7:158",
            "overrides": {
              "id": 67173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "422:8:158"
            },
            "parameters": {
              "id": 67172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:158"
            },
            "returnParameters": {
              "id": 67178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67175,
                  "mutability": "mutable",
                  "name": "major",
                  "nameLocation": "446:5:158",
                  "nodeType": "VariableDeclaration",
                  "scope": 67184,
                  "src": "440:11:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 67174,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:5:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67177,
                  "mutability": "mutable",
                  "name": "minor",
                  "nameLocation": "459:5:158",
                  "nodeType": "VariableDeclaration",
                  "scope": 67184,
                  "src": "453:11:158",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 67176,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:5:158",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:26:158"
            },
            "scope": 67194,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67193,
            "nodeType": "FunctionDefinition",
            "src": "502:76:158",
            "nodes": [],
            "body": {
              "id": 67192,
              "nodeType": "Block",
              "src": "552:26:158",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "562:9:158",
                    "subExpression": {
                      "id": 67189,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67149,
                      "src": "564:7:158",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67191,
                  "nodeType": "ExpressionStatement",
                  "src": "562:9:158"
                }
              ]
            },
            "functionSelector": "a7167caf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67186,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28552,
                  "src": "539:12:158"
                },
                "nodeType": "ModifierInvocation",
                "src": "539:12:158"
              }
            ],
            "name": "permissionedCall",
            "nameLocation": "511:16:158",
            "parameters": {
              "id": 67185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:2:158"
            },
            "returnParameters": {
              "id": 67188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:0:158"
            },
            "scope": 67194,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67146,
              "name": "Module",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28577,
              "src": "124:6:158"
            },
            "id": 67147,
            "nodeType": "InheritanceSpecifier",
            "src": "124:6:158"
          }
        ],
        "canonicalName": "MockValidUpgradedModule",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67194,
          28577,
          28512
        ],
        "name": "MockValidUpgradedModule",
        "nameLocation": "97:23:158",
        "scope": 67195,
        "usedErrors": [
          28465,
          28519
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 158
}