{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_addPoolEmptySlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_addPoolOccupiedSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "testCorrectness_addPoolRequiresRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_distributeNotUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_distributeOnlyStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_nextRewardFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_removePoolFailsOnSanityCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "testCorrectness_removePoolRequiresRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_removesPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newBounty_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_setBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "testCorrectness_setBountyRequiresRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectness_setPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "testCorrectness_setPoolsRequiresRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "testCorrectness_setRewardRateRequiresRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "testCorrectness_setsRewardRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_defaultState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retrieveBountyIsZero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retrieveBountyOnlyStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_triggerRebaseStory1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_triggerRebaseStory2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_triggerRebaseStory3",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_triggerRebaseStory4",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_triggerRebaseStory5",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "936:16156:167:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;936:16156:167;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "936:16156:167:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10267:375;;;;;;:::i;:::-;;:::i;:::-;;1533:2810;;;:::i;6038:337::-;;;:::i;11112:507::-;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;600:55:183;;;582:74;;570:2;555:18;321:38:1;;;;;;;;6582:361:167;;;;;;:::i;:::-;;:::i;5402:189::-;;;:::i;9314:705::-;;;:::i;14125:928::-;;;:::i;12154:168::-;;;;;;:::i;:::-;;:::i;10648:458::-;;;:::i;4774:224::-;;;:::i;5597:320::-;;;:::i;8212:611::-;;;;;;:::i;:::-;;:::i;8829:479::-;;;:::i;12463:508::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;1017:14:183;;1010:22;992:41;;980:2;965:18;1819:584:0;852:187:183;4395:205:167;;;:::i;6949:164::-;;;;;;:::i;:::-;;:::i;13634:383::-;;;:::i;15162:1928::-;;;:::i;11779:369::-;;;;;;:::i;:::-;;:::i;7262:499::-;;;;;;:::i;:::-;;:::i;7767:223::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;5004:261:167;;;:::i;13069:470::-;;;:::i;10267:375::-;10344:33;;;;;10371:4;-1:-1:-1;;;;;10354:22:167;;;;10344:33;;;992:41:183;250:64:1;;10344:9:167;;965:18:183;;10344:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10407:122:167;;;10491:28;10407:122;;;;1190:25:183;;;;10407:122:167;;;;;;;;;;1163:18:183;;;;10407:122:167;;;;;;;;;10443:34;10407:122;;;10539:20;;;;;10407:122;;-1:-1:-1;250:64:1;;-1:-1:-1;10539:15:167;;:20;;10407:122;;10539:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10570:15:167;;;;;-1:-1:-1;;;;;600:55:183;;10570:15:167;;;582:74:183;250:64:1;;-1:-1:-1;10570:8:167;;-1:-1:-1;555:18:183;;10570:15:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10595:11:167;;10626:7;;10595:40;;;;;:11;:40;;;2347:25:183;-1:-1:-1;;;;;10626:7:167;;;2388:18:183;;;2381:83;10595:11:167;;;-1:-1:-1;10595:19:167;;-1:-1:-1;2320:18:183;;10595:40:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10334:308;10267:375;:::o;1533:2810::-;1631:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1622:6:167;:21;;;;-1:-1:-1;;;;;1622:21:167;;;;;;;;;;1664:32;;1694:1;;1664:32;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:4:167;:39;;;;-1:-1:-1;;;;;1657:39:167;;;;;;;;;;1718:34;;1750:1;;1718:34;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:5:167;:42;;;;-1:-1:-1;;;;;1710:42:167;;;;;;;;;;1774:30;;1788:15;;1774:30;;;:::i;:::-;1190:25:183;;;1178:2;1163:18;1774:30:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:5:167;:38;;;;-1:-1:-1;;;;;1766:38:167;;;;;;;;;;1824:31;;1852:2;;1824:31;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1818:3:167;:37;;;;-1:-1:-1;;;;;1818:37:167;;;;;;;;;;1876:33;;1906:2;;1876:33;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1869:4:167;:40;;;;-1:-1:-1;;;;;1869:40:167;;;;;;2015:4;;2030:3;;1989:46;;2015:4;;;;2030:3;;1989:46;;;:::i;:::-;-1:-1:-1;;;;;5919:15:183;;;5901:34;;5971:15;;5966:2;5951:18;;5944:43;5828:2;5813:18;1989:46:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1979:7:167;:56;;;;-1:-1:-1;;;;;1979:56:167;;;;;;2086:4;;2101;;2060:47;;2086:4;;;;2101;;2060:47;;;:::i;:::-;-1:-1:-1;;;;;5919:15:183;;;5901:34;;5971:15;;5966:2;5951:18;;5944:43;5828:2;5813:18;2060:47:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2049:8:167;:58;;;;-1:-1:-1;;;;;2049:58:167;;;;;;2207:6;;2223:4;;2190:39;;2207:6;;;;2223:4;;2190:39;;;:::i;:::-;-1:-1:-1;;;;;5919:15:183;;;5901:34;;5971:15;;5966:2;5951:18;;5944:43;5828:2;5813:18;2190:39:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2182:5:167;:47;;;;-1:-1:-1;;;;;2182:47:167;;;;;;2273:6;;2251:29;;2273:6;;;2251:29;;;:::i;:::-;-1:-1:-1;;;;;600:55:183;;;582:74;;570:2;555:18;2251:29:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2243:5:167;:37;;;;-1:-1:-1;;;;;2243:37:167;;;;;;2321:6;;2302:26;;2321:6;;;2302:26;;;:::i;:::-;-1:-1:-1;;;;;600:55:183;;;582:74;;570:2;555:18;2302:26:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2294:5:167;:34;;;;-1:-1:-1;;;;;2294:34:167;;;;;;2398:6;;2450:5;;2398:59;;;;;:6;;;;:20;;:59;;-1:-1:-1;;2450:5:167;;2398:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2471:6:167;;2523:5;;2471:59;;;;;-1:-1:-1;;;;;2471:6:167;;;;-1:-1:-1;2471:20:167;;-1:-1:-1;2471:59:167;;:6;;2523:5;;2471:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2544:6:167;;2596:5;;2544:59;;;;;-1:-1:-1;;;;;2544:6:167;;;;-1:-1:-1;2544:20:167;;-1:-1:-1;2544:59:167;;:6;;2596:5;;2544:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2733:4:167;;2748:5;;2764;;2709:77;;-1:-1:-1;;;;;2733:4:167;;;;-1:-1:-1;2748:5:167;;;;-1:-1:-1;2764:5:167;;;;2772:4;;2733;;2772;;2709:77;;;:::i;:::-;-1:-1:-1;;;;;7512:15:183;;;7494:34;;7564:15;;;7559:2;7544:18;;7537:43;7616:15;;;;7611:2;7596:18;;7589:43;7663:2;7648:18;;7641:34;7706:3;7691:19;;7684:35;7750:3;7735:19;;7728:35;;;;7420:3;7405:19;2709:77:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2699:7:167;:87;;;;-1:-1:-1;;;;;2699:87:167;;;;;;;;;2830:6;;2846:4;;2814:65;;2830:6;;;;2846:4;;2699:87;2871:7;;2814:65;;;:::i;:::-;-1:-1:-1;;;;;8114:15:183;;;8096:34;;8166:15;;;8161:2;8146:18;;8139:43;8218:15;;8213:2;8198:18;;8191:43;8265:2;8250:18;;8243:34;;;;8022:3;8007:19;2814:65:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2800:11:167;:79;;;;-1:-1:-1;;;;;2800:79:167;;;;;;2929:6;;2914:22;;2929:6;;;2914:22;;;:::i;:::-;-1:-1:-1;;;;;600:55:183;;;582:74;;570:2;555:18;2914:22:167;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2901:10:167;:35;;;;-1:-1:-1;;;;;2901:35:167;;;;;;2951:7;;2982:11;;2951:44;;;;;2982:11;;;2951:44;;;582:74:183;2951:7:167;;;:22;;555:18:183;;2951:44:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3076:6:167;;3129:11;;3076:66;;;;;-1:-1:-1;;;;;3076:6:167;;;;-1:-1:-1;3076:20:167;;-1:-1:-1;3076:66:167;;3097:22;;3129:11;;3076:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3156:6:167;;3209:10;;3156:65;;;;;-1:-1:-1;;;;;3156:6:167;;;;-1:-1:-1;3156:20:167;;-1:-1:-1;3156:65:167;;3177:22;;3209:10;;3156:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3236:10:167;;:56;;;;;8543:19:183;3236:56:167;;;8525:38:183;3286:4:167;8579:18:183;;;8572:83;-1:-1:-1;;;;;3236:10:167;;;;-1:-1:-1;3236:20:167;;-1:-1:-1;8498:18:183;;3236:56:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3377:11:167;;3355:35;;;;;-1:-1:-1;;;;;3377:11:167;;;3355:35;;;582:74:183;250:64:1;;-1:-1:-1;3355:13:167;;-1:-1:-1;555:18:183;;3355:35:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3404:5:167;;3439:11;;3404:67;;;;;-1:-1:-1;;;;;3439:11:167;;;3404:67;;;8840:74:183;3453:17:167;8930:18:183;;;8923:34;3404:5:167;;;-1:-1:-1;3404:26:167;;-1:-1:-1;8813:18:183;;3404:67:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3545:5:167;;3568:7;;3545:45;;;;;-1:-1:-1;;;;;3568:7:167;;;3545:45;;;8840:74:183;3578:11:167;8930:18:183;;;8923:34;3545:5:167;;;-1:-1:-1;3545:14:167;;-1:-1:-1;8813:18:183;;3545:45:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3604:5:167;;:42;;;;;3627:4;3604:42;;;8840:74:183;3634:11:167;8930:18:183;;;8923:34;-1:-1:-1;;;;;3604:5:167;;;;-1:-1:-1;3604:14:167;;-1:-1:-1;8813:18:183;;3604:42:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3712:5:167;;3735:7;;3712:45;;;;;-1:-1:-1;;;;;3735:7:167;;;3712:45;;;8840:74:183;3745:11:167;8930:18:183;;;8923:34;3712:5:167;;;-1:-1:-1;3712:14:167;;-1:-1:-1;8813:18:183;;3712:45:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3771:3:167;;3788:7;;3771:43;;;;;-1:-1:-1;;;;;3788:7:167;;;3771:43;;;8840:74:183;3798:15:167;8930:18:183;;;8923:34;3771:3:167;;;-1:-1:-1;3771:8:167;;-1:-1:-1;8813:18:183;;3771:43:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3828:7;;;;;;;;;-1:-1:-1;;;;;3828:7:167;-1:-1:-1;;;;;3828:12:167;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3910:5:167;;3933:8;;3910:46;;;;;-1:-1:-1;;;;;3933:8:167;;;3910:46;;;8840:74:183;3944:11:167;8930:18:183;;;8923:34;3910:5:167;;;-1:-1:-1;3910:14:167;;-1:-1:-1;8813:18:183;;3910:46:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3970:4:167;;3988:8;;3970:45;;;;;-1:-1:-1;;;;;3988:8:167;;;3970:45;;;8840:74:183;3999:15:167;8930:18:183;;;8923:34;3970:4:167;;;-1:-1:-1;3970:9:167;;-1:-1:-1;8813:18:183;;3970:45:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4029:8;;;;;;;;;-1:-1:-1;;;;;4029:8:167;-1:-1:-1;;;;;4029:13:167;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4058:14:167;;;;;;;;250:64:1;;-1:-1:-1;4058:12:167;;-1:-1:-1;4058:14:167;;;;;274:37:1;;4058:14:167;;;;;;;274:37:1;250:64;4058:14:167;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4125:4:167;;4146:7;;4125:49;;;;;-1:-1:-1;;;;;4146:7:167;;;4125:49;;;8840:74:183;4156:17:167;8930:18:183;;;8923:34;4125:4:167;;;-1:-1:-1;4125:12:167;;-1:-1:-1;8813:18:183;;4125:49:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4188:7:167;;:50;;;;;4210:4;4188:50;;;10145:74:183;4217:8:167;10235:18:183;;;10228:34;4188:7:167;10278:18:183;;;10271:50;;;10337:18;;;10330:50;-1:-1:-1;;;;;4188:7:167;;;;:13;;10117:19:183;;4188:50:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4316:10:167;;;;;274:37:1;4316:10:167;;;1190:25:183;250:64:1;;4316:7:167;;1163:18:183;;4316:10:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:2810::o;6038:337::-;6163:11;;:24;;;;;;;;6121:11;;6096:22;;-1:-1:-1;;;;;6163:11:167;;;;:22;;:24;;;;;;;;;;;;;;;:11;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6142:45;-1:-1:-1;6219:3:167;6197:19;6219:3;6252:27;6142:45;6252:14;:27;:::i;:::-;6251:43;;;;:::i;:::-;6314:11;;6348:7;;6314:43;;;;;-1:-1:-1;;;;;6348:7:167;;;6314:43;;;582:74:183;6232:62:167;;-1:-1:-1;6305:63:167;;6314:11;;;:25;;555:18:183;;6314:43:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6359:8;6305;:63::i;11112:507::-;11223:16;;;11237:1;11223:16;;;;;;;;11195:25;;11223:16;;;;;;;;-1:-1:-1;;11271:5:167;;11249:11;;;;-1:-1:-1;;;;;;11271:5:167;;11249:11;;-1:-1:-1;11271:5:167;;11249:11;;;;:::i;:::-;-1:-1:-1;;;;;11249:28:167;;;:11;;;;;;;;;:28;11309:5;;11287:11;;11309:5;;;11287:8;;11309:5;;11287:11;;;;;;:::i;:::-;-1:-1:-1;;;;;11287:28:167;;;:11;;;;;;;;;:28;11325:11;;:30;;;;;:11;;;:20;;:30;;11346:8;;11325:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11365:11:167;;11399:5;;11365:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;11399:5:167;;;2388:18:183;;;2381:83;11365:11:167;;;-1:-1:-1;11365:22:167;;-1:-1:-1;2320:18:183;;11365:41:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11416:11:167;;11450:5;;11416:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;11450:5:167;;;2388:18:183;;;2381:83;11416:11:167;;;-1:-1:-1;11416:22:167;;-1:-1:-1;2320:18:183;;11416:41:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11467:11:167;;11498:7;;11467:40;;;;;:11;:40;;;2347:25:183;-1:-1:-1;;;;;11498:7:167;;;2388:18:183;;;2381:83;11467:11:167;;;-1:-1:-1;11467:19:167;;-1:-1:-1;2320:18:183;;11467:40:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11518:11:167;;11549:5;;11518:38;;;;;:11;:38;;;2347:25:183;-1:-1:-1;;;;;11549:5:167;;;2388:18:183;;;2381:83;11518:11:167;;;-1:-1:-1;11518:19:167;;-1:-1:-1;2320:18:183;;11518:38:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11575:11:167;;:20;;;;;11593:1;11575:20;;;1190:25:183;11566:46:167;;-1:-1:-1;;;;;;11575:11:167;;;;-1:-1:-1;11575:17:167;;1163:18:183;;11575:20:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11605:5;;-1:-1:-1;;;;;11605:5:167;11566:8;:46::i;:::-;11166:453;11112:507::o;6582:361::-;6661:33;;;;;6688:4;-1:-1:-1;;;;;6671:22:167;;;;6661:33;;;992:41:183;250:64:1;;6661:9:167;;965:18:183;;6661:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6724:122:167;;;6808:28;6724:122;;;;1190:25:183;;;;6724:122:167;;;;;;;;;;1163:18:183;;;;6724:122:167;;;;;;;;;6760:34;6724:122;;;6856:20;;;;;6724:122;;-1:-1:-1;250:64:1;;-1:-1:-1;6856:15:167;;:20;;6724:122;;6856:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6887:15:167;;;;;-1:-1:-1;;;;;600:55:183;;6887:15:167;;;582:74:183;250:64:1;;-1:-1:-1;6887:8:167;;-1:-1:-1;555:18:183;;6887:15:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6912:11:167;;:24;;;;;:11;:24;;;1190:25:183;-1:-1:-1;;;;;6912:11:167;;;;-1:-1:-1;6912:21:167;;-1:-1:-1;1163:18:183;;6912:24:167;1044:177:183;5402:189:167;5477:68;;;;;;;;;;;;;;;;;;;5500:44;5477:68;;;5461:85;;;;;250:64:1;;5461:15:167;;:85;;5477:68;;5461:85;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5556:11;;;;;;;;;-1:-1:-1;;;;;5556:11:167;-1:-1:-1;;;;;5556:26:167;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9314:705::-;9417:16;;;9431:1;9417:16;;;;;;;;9389:25;;9417:16;;;;;;;;-1:-1:-1;;9465:7:167;;9443:11;;;;-1:-1:-1;;;;;;9465:7:167;;9443:11;;-1:-1:-1;9465:7:167;;9443:11;;;;:::i;:::-;-1:-1:-1;;;;;9443:30:167;;;:11;;;;;;;;;:30;9505:5;;9483:11;;9505:5;;;9483:8;;9505:5;;9483:11;;;;;;:::i;:::-;-1:-1:-1;;;;;9483:28:167;;;:11;;;;;;;;;:28;9521:11;;:30;;;;;:11;;;:20;;:30;;9542:8;;9521:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9592:11:167;;9626:7;;9592:43;;;;;:11;:43;;;2347:25:183;-1:-1:-1;;;;;9626:7:167;;;2388:18:183;;;2381:83;9592:11:167;;;-1:-1:-1;9592:22:167;;-1:-1:-1;2320:18:183;;9592:43:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9700:11:167;;:20;;;;;:11;:20;;;1190:25:183;9691:44:167;;-1:-1:-1;;;;;;9700:11:167;;;;-1:-1:-1;9700:17:167;;1163:18:183;;9700:20:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9730:3;9691:8;:44::i;:::-;9754:11;;:20;;;;;:11;:20;;;1190:25:183;9745:46:167;;-1:-1:-1;;;;;9754:11:167;;:17;;1163:18:183;;9754:20:167;1044:177:183;9745:46:167;9833:11;;9867:5;;9833:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;9867:5:167;;;2388:18:183;;;2381:83;9833:11:167;;;:22;;2320:18:183;;9833:41:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9923:11:167;;:20;;;;;:11;:20;;;1190:25:183;9914:44:167;;-1:-1:-1;;;;;;9923:11:167;;;;-1:-1:-1;9923:17:167;;1163:18:183;;9923:20:167;1044:177:183;9914:44:167;9977:11;;:20;;;;;:11;:20;;;1190:25:183;9968:44:167;;-1:-1:-1;;;;;9977:11:167;;:17;;1163:18:183;;9977:20:167;1044:177:183;14125:928:167;14225:16;;;14239:1;14225:16;;;;;;;;;14197:25;;14225:16;;;;;;;;;-1:-1:-1;;14273:7:167;;14251:11;;;;-1:-1:-1;;;;;;14273:7:167;;14251:11;;-1:-1:-1;14273:7:167;;14251:11;;;;:::i;:::-;-1:-1:-1;;;;;14251:30:167;;;:11;;;;;;;;;:30;14291:11;;:30;;;;;:11;;;:20;;:30;;14312:8;;14291:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14331:13:167;;;;;14339:4;14331:13;;;1190:25:183;250:64:1;;-1:-1:-1;14331:7:167;;-1:-1:-1;1163:18:183;;14331:13:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14356:16;14374;14396:7;;;;;;;;;-1:-1:-1;;;;;14396:7:167;-1:-1:-1;;;;;14396:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14355:62:167;;;;;-1:-1:-1;14355:62:167;;-1:-1:-1;14427:19:167;14461:21;14355:62;14472:10;14461:21;:::i;:::-;14449:34;;:8;:34;:::i;:::-;14517:4;;14540:7;;14517:32;;;;;-1:-1:-1;;;;;14540:7:167;;;14517:32;;;582:74:183;14427:56:167;;-1:-1:-1;14493:21:167;;14517:4;;;:14;;555:18:183;;14517:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14493:56;-1:-1:-1;14559:28:167;14631:9;14607:20;14493:56;14623:4;14607:20;:::i;:::-;14606:34;;;;:::i;:::-;14590:50;;:13;:50;:::i;:::-;14559:81;;14651:11;;;;;;;;;-1:-1:-1;;;;;14651:11:167;-1:-1:-1;;;;;14651:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14690:21;14713;14740:7;;;;;;;;;-1:-1:-1;;;;;14740:7:167;-1:-1:-1;;;;;14740:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14689:72:167;;;;;-1:-1:-1;14689:72:167;;-1:-1:-1;14771:18:167;14809:26;14689:72;14825:10;14809:26;:::i;:::-;14792:44;;:13;:44;:::i;:::-;14869:4;;14892:7;;14869:32;;;;;-1:-1:-1;;;;;14892:7:167;;;14869:32;;;582:74:183;14771:65:167;;-1:-1:-1;14846:20:167;;14869:4;;;:14;;555:18:183;;14869:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14846:55;;14912:37;14921:12;14935:13;14912:8;:37::i;:::-;14959:44;14968:12;14982:20;14959:8;:44::i;:::-;15013:33;15022:11;15035:10;15013:8;:33::i;:::-;14168:885;;;;;;;;;;14125:928::o;12154:168::-;12228:11;;:34;;;;;;;;1190:25:183;;;-1:-1:-1;;;;;12228:11:167;;;;:25;;1163:18:183;;12228:34:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12272:43;12281:11;;;;;;;;;-1:-1:-1;;;;;12281:11:167;-1:-1:-1;;;;;12281:22:167;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10648:458;10756:16;;;10770:1;10756:16;;;;;;;;10728:25;;10756:16;;;;;;;;-1:-1:-1;;10804:5:167;;10782:11;;;;-1:-1:-1;;;;;;10804:5:167;;10782:11;;-1:-1:-1;10804:5:167;;10782:11;;;;:::i;:::-;-1:-1:-1;;;;;10782:28:167;;;:11;;;;;;;;;:28;10842:5;;10820:11;;10842:5;;;10820:8;;10842:5;;10820:11;;;;;;:::i;:::-;-1:-1:-1;;;;;10820:28:167;;;:11;;;;;;;;;:28;10858:11;;:30;;;;;:11;;;:20;;:30;;10879:8;;10858:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10898:11:167;;10932:5;;10898:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;10932:5:167;;;2388:18:183;;;2381:83;10898:11:167;;;-1:-1:-1;10898:22:167;;-1:-1:-1;2320:18:183;;10898:41:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10949:11:167;;10983:5;;10949:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;10983:5:167;;;2388:18:183;;;2381:83;10949:11:167;;;-1:-1:-1;10949:22:167;;-1:-1:-1;2320:18:183;;10949:41:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11001:11:167;;11032:7;;11001:40;;;;;:11;:40;;;2347:25:183;-1:-1:-1;;;;;11032:7:167;;;2388:18:183;;;2381:83;11001:11:167;;;-1:-1:-1;11001:19:167;;-1:-1:-1;2320:18:183;;11001:40:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11060:11:167;;:20;;;;;:11;:20;;;1190:25:183;11051:48:167;;-1:-1:-1;;;;;;11060:11:167;;;;-1:-1:-1;11060:17:167;;1163:18:183;;11060:20:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11090:7;;-1:-1:-1;;;;;11090:7:167;11051:8;:48::i;4774:224::-;4859:68;;;;;;;;;;;;;;;;;;;4882:44;4859:68;;;4937:20;;;;;4859:68;;250:64:1;;4937:15:167;;:20;;4859:68;;4937:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:11;;;;;;;;;-1:-1:-1;;;;;4967:11:167;-1:-1:-1;;;;;4967:22:167;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4830:168;4774:224::o;5597:320::-;5674:4;;:18;;;;;;;;5651:20;;-1:-1:-1;;;;;5674:4:167;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5720:7;;5703:26;;;;;-1:-1:-1;;;;;5720:7:167;;;5703:26;;;582:74:183;5651:41:167;;-1:-1:-1;250:64:1;;5703:8:167;;555:18:183;;5703:26:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5739:14;5756:11;;;;;;;;;-1:-1:-1;;;;;5756:11:167;-1:-1:-1;;;;;5756:26:167;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5739:45;;5795:19;5817:4;;;;;;;;;-1:-1:-1;;;;;5817:4:167;-1:-1:-1;;;;;5817:16:167;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5795:40;;5846:19;5855:6;5863:1;5846:8;:19::i;:::-;5875:35;5884:11;5897:12;5875:8;:35::i;:::-;5641:276;;;5597:320::o;8212:611::-;8292:33;;;;;8319:4;-1:-1:-1;;;;;8302:22:167;;;;8292:33;;;992:41:183;250:64:1;;8292:9:167;;965:18:183;;8292:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8355:25:167;;-1:-1:-1;8397:1:167;;-1:-1:-1;8383:16:167;;-1:-1:-1;8383:16:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8383:16:167;-1:-1:-1;8431:7:167;;8409:11;;8355:44;;-1:-1:-1;;;;;;8431:7:167;;8355:44;;8431:7;;8409:11;;;;:::i;:::-;-1:-1:-1;;;;;8409:30:167;;;:11;;;;;;;;;:30;8471:5;;8449:11;;8471:5;;;8449:8;;8471:5;;8449:11;;;;;;:::i;:::-;-1:-1:-1;;;;;8449:28:167;;;:11;;;;;;;;;:28;8487:11;;:30;;;;;:11;;;:20;;:30;;8508:8;;8487:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8547:122:167;;;8631:28;8547:122;;;;1190:25:183;;;;8547:122:167;;;;;;;;;;1163:18:183;;;;8547:122:167;;;;;;;;;8583:34;8547:122;;;8679:20;;;;;8547:122;;-1:-1:-1;250:64:1;;-1:-1:-1;8679:15:167;;:20;;8547:122;;8679:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8748:15:167;;;;;-1:-1:-1;;;;;600:55:183;;8748:15:167;;;582:74:183;250:64:1;;-1:-1:-1;8748:8:167;;-1:-1:-1;555:18:183;;8748:15:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8773:11:167;;8807:7;;8773:43;;;;;:11;:43;;;2347:25:183;-1:-1:-1;;;;;8807:7:167;;;2388:18:183;;;2381:83;8773:11:167;;;-1:-1:-1;8773:22:167;;-1:-1:-1;2320:18:183;;8773:43:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8282:541;;8212:611;:::o;8829:479::-;8949:16;;;8963:1;8949:16;;;;;;;;8921:25;;8949:16;;;;;;;;-1:-1:-1;;8997:7:167;;8975:11;;;;-1:-1:-1;;;;;;8997:7:167;;8975:11;;-1:-1:-1;8997:7:167;;8975:11;;;;:::i;:::-;-1:-1:-1;;;;;8975:30:167;;;:11;;;;;;;;;:30;9037:5;;9015:11;;9037:5;;;9015:8;;9037:5;;9015:11;;;;;;:::i;:::-;-1:-1:-1;;;;;9015:28:167;;;:11;;;;;;;;;:28;9053:11;;:30;;;;;:11;;;:20;;:30;;9074:8;;9053:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9151:68:167;;;;;;;;;;;;;;;;;;;9174:44;9151:68;;;9229:20;;;;;9151:68;;-1:-1:-1;250:64:1;;-1:-1:-1;9229:15:167;;:20;;9151:68;;9229:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9260:11:167;;9294:5;;9260:41;;;;;:11;:41;;;2347:25:183;-1:-1:-1;;;;;9294:5:167;;;2388:18:183;;;2381:83;9260:11:167;;;-1:-1:-1;9260:22:167;;-1:-1:-1;2320:18:183;;9260:41:167;2165:305:183;12463:508:167;12538:7;;:15;;;;;;;;12521:11;;-1:-1:-1;;;;;12538:7:167;;:13;;:15;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12516:37;;;;;12563:30;12572:3;12577:15;12563:8;:30::i;:::-;12628:4;;12651:7;;12628:32;;;;;-1:-1:-1;;;;;12651:7:167;;;12628:32;;;582:74:183;12604:21:167;;12628:4;;;;;:14;;555:18:183;;12628:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12689:95;;;;;;;;;;;;;;;;;;;12725:49;12689:95;;;12794:20;;;;;12604:56;;-1:-1:-1;12689:95:167;250:64:1;;12794:15:167;;:20;;12689:95;;12794:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12825:11;;;;;;;;;-1:-1:-1;;;;;12825:11:167;-1:-1:-1;;;;;12825:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12885:4:167;;12908:7;;12885:32;;;;;-1:-1:-1;;;;;12908:7:167;;;12885:32;;;582:74:183;12862:20:167;;-1:-1:-1;12885:4:167;;;-1:-1:-1;12885:14:167;;555:18:183;;12885:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12862:55;;12927:37;12936:13;12951:12;12927:8;:37::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;8840:74:183;;;2221:17:0;8930:18:183;;;8923:34;2196:43:0;;;;;;;;;8813:18:183;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4395:205:167:-;4450:11;;:24;;;;;;;;4441:43;;-1:-1:-1;;;;;4450:11:167;;:22;;:24;;;;;;;;;;;;;;:11;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4476:7;4441:8;:43::i;:::-;4503:11;;:20;;;;;;;;4494:33;;-1:-1:-1;;;;;4503:11:167;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4525:1;4494:8;:33::i;:::-;4547:4;;4570:7;;4547:32;;;;;-1:-1:-1;;;;;4570:7:167;;;4547:32;;;582:74:183;4538:55:167;;4547:4;;;;;:14;;555:18:183;;4547:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4581:11;4538:8;:55::i;:::-;4395:205::o;6949:164::-;7021:11;;:33;;;;;;;;1190:25:183;;;-1:-1:-1;;;;;7021:11:167;;;;:21;;1163:18:183;;7021:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:42;7073:11;;;;;;;;;-1:-1:-1;;;;;7073:11:167;-1:-1:-1;;;;;7073:18:167;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13634:383;13706:13;;;;;13714:4;13706:13;;;1190:25:183;250:64:1;;13706:7:167;;1163:18:183;;13706:13:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13729:11;;;;;;;;;-1:-1:-1;;;;;13729:11:167;-1:-1:-1;;;;;13729:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13805:13:167;;;;;13813:4;13805:13;;;1190:25:183;250:64:1;;-1:-1:-1;13805:7:167;;-1:-1:-1;1163:18:183;;13805:13:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13847:95:167;;;;;;;;;;;;;;;;;;;13883:49;13847:95;;;13952:20;;;;;13847:95;;-1:-1:-1;250:64:1;;-1:-1:-1;13952:15:167;;:20;;13847:95;;13952:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13983:11;;;;;;;;;-1:-1:-1;;;;;13983:11:167;-1:-1:-1;;;;;13983:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15162:1928;15262:16;;;15276:1;15262:16;;;;;;;;;15234:25;;15262:16;;;;;;;;-1:-1:-1;;15310:7:167;;15288:11;;;;-1:-1:-1;;;;;;15310:7:167;;15288:11;;-1:-1:-1;15310:7:167;;15288:11;;;;:::i;:::-;-1:-1:-1;;;;;15288:30:167;;;:11;;;;;;;;;:30;15350:8;;15328:11;;15350:8;;;15328;;15350;;15328:11;;;;;;:::i;:::-;-1:-1:-1;;;;;15328:31:167;;;:11;;;;;;;;;:31;15369:11;;:30;;;;;:11;;;:20;;:30;;15390:8;;15369:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15409:13:167;;;;;15417:4;15409:13;;;1190:25:183;250:64:1;;-1:-1:-1;15409:7:167;;-1:-1:-1;1163:18:183;;15409:13:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15434:23;15459;15488:7;;;;;;;;;-1:-1:-1;;;;;15488:7:167;-1:-1:-1;;;;;15488:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15433:76:167;;;;;-1:-1:-1;15433:76:167;;-1:-1:-1;15519:26:167;15567:28;15433:76;15585:10;15567:28;:::i;:::-;15548:48;;:15;:48;:::i;:::-;15637:4;;15660:7;;15637:32;;;;;-1:-1:-1;;;;;15660:7:167;;;15637:32;;;582:74:183;15519:77:167;;-1:-1:-1;15606:28:167;;15637:4;;;:14;;555:18:183;;15637:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15606:63;-1:-1:-1;15679:35:167;15796:9;15753:27;15606:63;15776:4;15753:27;:::i;:::-;15752:53;;;;:::i;:::-;15717:88;;:20;:88;:::i;:::-;15679:126;;15817:24;15843;15873:8;;;;;;;;;-1:-1:-1;;;;;15873:8:167;-1:-1:-1;;;;;15873:20:167;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15816:79:167;;;;;-1:-1:-1;15816:79:167;;-1:-1:-1;15905:27:167;15955:29;15816:79;15974:10;15955:29;:::i;:::-;15935:50;;:16;:50;:::i;:::-;16027:4;;16050:8;;16027:33;;;;;-1:-1:-1;;;;;16050:8:167;;;16027:33;;;582:74:183;15905:80:167;;-1:-1:-1;15995:29:167;;16027:4;;;:14;;555:18:183;;16027:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15995:65;-1:-1:-1;16070:36:167;16190:9;16146:28;15995:65;16170:4;16146:28;:::i;:::-;16145:54;;;;:::i;:::-;16109:90;;:21;:90;:::i;:::-;16070:129;;16210:11;;;;;;;;;-1:-1:-1;;;;;16210:11:167;-1:-1:-1;;;;;16210:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16287:7;;;;;;;;;-1:-1:-1;;;;;16287:7:167;-1:-1:-1;;;;;16287:19:167;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16248:60:167;;;;;-1:-1:-1;16248:60:167;;-1:-1:-1;16318:25:167;16365:28;16248:60;16383:10;16365:28;:::i;:::-;16346:48;;:15;:48;:::i;:::-;16434:4;;16457:7;;16434:32;;;;;-1:-1:-1;;;;;16457:7:167;;;16434:32;;;582:74:183;16318:76:167;;-1:-1:-1;16404:27:167;;16434:4;;;:14;;555:18:183;;16434:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16404:62;;16518:8;;;;;;;;;-1:-1:-1;;;;;16518:8:167;-1:-1:-1;;;;;16518:20:167;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16477:63:167;;;;;-1:-1:-1;16477:63:167;;-1:-1:-1;16550:26:167;16599:29;16477:63;16618:10;16599:29;:::i;:::-;16579:50;;:16;:50;:::i;:::-;16670:4;;16693:8;;16670:33;;;;;-1:-1:-1;;;;;16693:8:167;;;16670:33;;;582:74:183;16550:79:167;;-1:-1:-1;16639:28:167;;16670:4;;;:14;;555:18:183;;16670:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16639:64;;16714:51;16723:19;16744:20;16714:8;:51::i;:::-;16775:58;16784:19;16805:27;16775:8;:58::i;:::-;16843:47;16852:18;16872:17;16843:8;:47::i;:::-;16901:53;16910:20;16932:21;16901:8;:53::i;:::-;16964:60;16973:20;16995:28;16964:8;:60::i;:::-;17034:49;17043:19;17064:18;17034:8;:49::i;:::-;15205:1885;;;;;;;;;;;;;;;15162:1928::o;11779:369::-;11862:33;;;;;11889:4;-1:-1:-1;;;;;11872:22:167;;;;11862:33;;;992:41:183;250:64:1;;11862:9:167;;965:18:183;;11862:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11925:122:167;;;12009:28;11925:122;;;;1190:25:183;;;;11925:122:167;;;;;;;;;;1163:18:183;;;;11925:122:167;;;;;;;;;11961:34;11925:122;;;12057:20;;;;;11925:122;;-1:-1:-1;250:64:1;;-1:-1:-1;12057:15:167;;:20;;11925:122;;12057:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12088:15:167;;;;;-1:-1:-1;;;;;600:55:183;;12088:15:167;;;582:74:183;250:64:1;;-1:-1:-1;12088:8:167;;-1:-1:-1;555:18:183;;12088:15:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12113:11:167;;:28;;;;;:11;:28;;;1190:25:183;-1:-1:-1;;;;;12113:11:167;;;;-1:-1:-1;12113:25:167;;-1:-1:-1;1163:18:183;;12113:28:167;1044:177:183;7262:499:167;7340:33;;;;;7367:4;-1:-1:-1;;;;;7350:22:167;;;;7340:33;;;992:41:183;250:64:1;;7340:9:167;;965:18:183;;7340:33:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7403:122:167;;;7487:28;7403:122;;;;1190:25:183;;;;7403:122:167;;;;;;;;;;1163:18:183;;;;7403:122:167;;;;;;;;;7439:34;7403:122;;;7535:20;;;;;7403:122;;-1:-1:-1;250:64:1;;-1:-1:-1;7535:15:167;;:20;;7403:122;;7535:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7566:25:167;;-1:-1:-1;7608:1:167;;-1:-1:-1;7594:16:167;;-1:-1:-1;7594:16:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7594:16:167;-1:-1:-1;7642:7:167;;7620:11;;7566:44;;-1:-1:-1;;;;;;7642:7:167;;7566:44;;7642:7;;7620:11;;;;:::i;:::-;-1:-1:-1;;;;;7620:30:167;;;:11;;;;;;;;;:30;7682:5;;7660:11;;7682:5;;;7660:8;;7682:5;;7660:11;;;;;;:::i;:::-;-1:-1:-1;;;;;7660:28:167;;;:11;;;;;;;;;:28;7699:15;;;;;600:55:183;;;7699:15:167;;;582:74:183;250:64:1;;7699:8:167;;555:18:183;;7699:15:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7724:11:167;;:30;;;;;-1:-1:-1;;;;;7724:11:167;;;;-1:-1:-1;7724:20:167;;-1:-1:-1;7724:30:167;;7745:8;;7724:30;;;:::i;7767:223::-;7848:16;;;7862:1;7848:16;;;;;;;;7820:25;;7848:16;;;;;;;;-1:-1:-1;;7896:7:167;;7874:11;;;;-1:-1:-1;;;;;;7896:7:167;;7874:11;;-1:-1:-1;7896:7:167;;7874:11;;;;:::i;:::-;-1:-1:-1;;;;;7874:30:167;;;:11;;;;;;;;;:30;7936:5;;7914:11;;7936:5;;;7914:8;;7936:5;;7914:11;;;;;;:::i;:::-;-1:-1:-1;;;;;7914:28:167;;;:11;;;;;;;;;:28;7953:11;;:30;;;;;:11;;;:20;;:30;;7974:8;;7953:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5004:261;5089:68;;;;;;;;;;;;;;;;;;;5112:44;5089:68;;;5167:20;;;;;5089:68;;250:64:1;;5167:15:167;;:20;;5089:68;;5167:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5215:7:167;;5198:26;;;;;-1:-1:-1;;;;;5215:7:167;;;5198:26;;;582:74:183;250:64:1;;-1:-1:-1;5198:8:167;;-1:-1:-1;555:18:183;;5198:26:167;425:237:183;13069:470:167;13141:13;;;;;13149:4;13141:13;;;1190:25:183;250:64:1;;13141:7:167;;1163:18:183;;13141:13:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13169:11;13186:7;;;;;;;;;-1:-1:-1;;;;;13186:7:167;-1:-1:-1;;;;;13186:13:167;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13164:37;;;;;13211:30;13220:3;13225:15;13211:8;:30::i;:::-;13276:4;;13299:7;;13276:32;;;;;-1:-1:-1;;;;;13299:7:167;;;13276:32;;;582:74:183;13252:21:167;;13276:4;;;;;:14;;555:18:183;;13276:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13252:56;;13318:11;;;;;;;;;-1:-1:-1;;;;;13318:11:167;-1:-1:-1;;;;;13318:25:167;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13378:4:167;;13401:7;;13378:32;;;;;-1:-1:-1;;;;;13401:7:167;;;13378:32;;;582:74:183;13355:20:167;;-1:-1:-1;13378:4:167;;;-1:-1:-1;13378:14:167;;555:18:183;;13378:32:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13355:55;-1:-1:-1;13421:16:167;13465:9;13441:20;:13;13457:4;13441:20;:::i;:::-;13440:34;;;;:::i;:::-;13421:53;-1:-1:-1;13484:48:167;13493:28;13508:13;13493:12;:28;:::i;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;16538:2:183;16520:21;;;16577:2;16557:18;;;16550:30;16616:34;16611:2;16596:18;;16589:62;16687:4;16682:2;16667:18;;16660:32;16724:3;16709:19;;16336:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;3712:44;;;;;17975:2:183;17957:21;;;18014:2;17994:18;;;17987:30;18053:34;18048:2;18033:18;;18026:62;18124:7;18119:2;18104:18;;18097:35;18164:3;18149:19;;17773:401;3712:44:0;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;9970:259::-;10032:1;10027;:6;10023:200;;10054:40;;;;;19185:2:183;19167:21;;;19224:2;19204:18;;;19197:30;19263:34;19258:2;19243:18;;19236:62;19334:3;19329:2;19314:18;;19307:31;19370:3;19355:19;;18983:397;10054:40:0;;;;;;;;10113:30;;;19597:21:183;;;19654:1;19634:18;;;19627:29;19692:11;19687:2;19672:18;;19665:39;19771:4;19756:20;;19749:36;;;10113:30:0;;;;;;;19736:3:183;10113:30:0;;;10162;;;20008:21:183;;;20065:1;20045:18;;;20038:29;;;;20103:11;20098:2;20083:18;;20076:39;20182:4;20167:20;;20160:36;;;10162:30:0;;20147:3:183;20132:19;10162:30:0;19796:406:183;15921:259:0;15982:1;15978;:5;15974:200;;;16004:41;;;;;20409:2:183;20391:21;;;20448:2;20428:18;;;20421:30;20487:34;20482:2;20467:18;;20460:62;20558:4;20553:2;20538:18;;20531:32;20595:3;20580:19;;20207:398;2409:432:0;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;20812:74:183;;;2677:17:0;20902:18:183;;;20895:34;;;;2712:4:0;20945:18:183;;;20938:34;2489:11:0;;1671:64;2586:43;;20785:18:183;;2652:67:0;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:154:183:-;-1:-1:-1;;;;;93:5:183;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:183:o;667:180::-;726:6;779:2;767:9;758:7;754:23;750:32;747:52;;;795:1;792;785:12;747:52;-1:-1:-1;818:23:183;;667:180;-1:-1:-1;667:180:183:o;1226:258::-;1298:1;1308:113;1322:6;1319:1;1316:13;1308:113;;;1398:11;;;1392:18;1379:11;;;1372:39;1344:2;1337:10;1308:113;;;1439:6;1436:1;1433:13;1430:48;;;-1:-1:-1;;1474:1:183;1456:16;;1449:27;1226:258::o;1489:440::-;1636:2;1625:9;1618:21;1599:4;1668:6;1662:13;1711:6;1706:2;1695:9;1691:18;1684:34;1727:66;1786:6;1781:2;1770:9;1766:18;1761:2;1753:6;1749:15;1727:66;:::i;:::-;1845:2;1833:15;1850:66;1829:88;1814:104;;;;1920:2;1810:113;;1489:440;-1:-1:-1;;1489:440:183:o;2632:585::-;2969:2;2958:9;2951:21;2932:4;2995:49;3040:2;3029:9;3025:18;2552:1;2540:14;;2586:6;2579:4;2570:14;;2563:30;2618:2;2609:12;;2475:152;2995:49;3092:9;3084:6;3080:22;3075:2;3064:9;3060:18;3053:50;3120:37;3150:6;2552:1;2540:14;;2586:6;2579:4;2570:14;;2563:30;2618:2;2609:12;;2475:152;3120:37;3112:45;;;3205:4;3197:6;3193:17;3188:2;3177:9;3173:18;3166:45;2632:585;;;;:::o;3380:::-;3717:2;3706:9;3699:21;3680:4;3743:49;3788:2;3777:9;3773:18;3299:1;3287:14;;3333:7;3326:4;3317:14;;3310:31;3366:2;3357:12;;3222:153;3743:49;3840:9;3832:6;3828:22;3823:2;3812:9;3808:18;3801:50;3868:37;3898:6;3299:1;3287:14;;3333:7;3326:4;3317:14;;3310:31;3366:2;3357:12;;3222:153;4327:586;4665:2;4654:9;4647:21;4628:4;4691:49;4736:2;4725:9;4721:18;4248:1;4236:14;;4282:5;4275:4;4266:14;;4259:29;4313:2;4304:12;;4171:151;4691:49;4788:9;4780:6;4776:22;4771:2;4760:9;4756:18;4749:50;4816:37;4846:6;4248:1;4236:14;;4282:5;4275:4;4266:14;;4259:29;4313:2;4304:12;;4171:151;5075:586;5413:2;5402:9;5395:21;5376:4;5439:49;5484:2;5473:9;5469:18;4995:1;4983:14;;5029:6;5022:4;5013:14;;5006:30;5061:2;5052:12;;4918:152;5439:49;5536:9;5528:6;5524:22;5519:2;5508:9;5504:18;5497:50;5564:37;5594:6;4995:1;4983:14;;5029:6;5022:4;5013:14;;5006:30;5061:2;5052:12;;4918:152;6593:518;6766:2;6751:18;;6799:1;6788:13;;6778:201;;6835:77;6832:1;6825:88;6936:4;6933:1;6926:15;6964:4;6961:1;6954:15;6778:201;6988:25;;;-1:-1:-1;;;;;7049:55:183;;;;7044:2;7029:18;;;7022:83;6593:518;:::o;9625:277::-;9692:6;9745:2;9733:9;9724:7;9720:23;9716:32;9713:52;;;9761:1;9758;9751:12;9713:52;9793:9;9787:16;9846:5;9839:13;9832:21;9825:5;9822:32;9812:60;;9868:1;9865;9858:12;10391:184;10461:6;10514:2;10502:9;10493:7;10489:23;10485:32;10482:52;;;10530:1;10527;10520:12;10482:52;-1:-1:-1;10553:16:183;;10391:184;-1:-1:-1;10391:184:183:o;10770:::-;10822:77;10819:1;10812:88;10919:4;10916:1;10909:15;10943:4;10940:1;10933:15;10959:228;10999:7;11125:1;11057:66;11053:74;11050:1;11047:81;11042:1;11035:9;11028:17;11024:105;11021:131;;;11132:18;;:::i;:::-;-1:-1:-1;11172:9:183;;10959:228::o;11192:274::-;11232:1;11258;11248:189;;11293:77;11290:1;11283:88;11394:4;11391:1;11384:15;11422:4;11419:1;11412:15;11248:189;-1:-1:-1;11451:9:183;;11192:274::o;11660:184::-;11712:77;11709:1;11702:88;11809:4;11806:1;11799:15;11833:4;11830:1;11823:15;11849:681;12020:2;12072:21;;;12142:13;;12045:18;;;12164:22;;;11991:4;;12020:2;12243:15;;;;12217:2;12202:18;;;11991:4;12286:218;12300:6;12297:1;12294:13;12286:218;;;12365:13;;-1:-1:-1;;;;;12361:62:183;12349:75;;12479:15;;;;12444:12;;;;12322:1;12315:9;12286:218;;;-1:-1:-1;12521:3:183;;11849:681;-1:-1:-1;;;;;;11849:681:183:o;13035:251::-;13105:6;13158:2;13146:9;13137:7;13133:23;13129:32;13126:52;;;13174:1;13171;13164:12;13126:52;13206:9;13200:16;13225:31;13250:5;13225:31;:::i;13674:188::-;13753:13;;13806:30;13795:42;;13785:53;;13775:81;;13852:1;13849;13842:12;13867:450;13954:6;13962;13970;14023:2;14011:9;14002:7;13998:23;13994:32;13991:52;;;14039:1;14036;14029:12;13991:52;14062:40;14092:9;14062:40;:::i;:::-;14052:50;;14121:49;14166:2;14155:9;14151:18;14121:49;:::i;:::-;14111:59;;14213:2;14202:9;14198:18;14192:25;14257:10;14250:5;14246:22;14239:5;14236:33;14226:61;;14283:1;14280;14273:12;14226:61;14306:5;14296:15;;;13867:450;;;;;:::o;14322:128::-;14362:3;14393:1;14389:6;14386:1;14383:13;14380:39;;;14399:18;;:::i;:::-;-1:-1:-1;14435:9:183;;14322:128::o;14637:368::-;14734:6;14742;14750;14758;14811:3;14799:9;14790:7;14786:23;14782:33;14779:53;;;14828:1;14825;14818:12;14779:53;-1:-1:-1;;14851:16:183;;14907:2;14892:18;;14886:25;14951:2;14936:18;;14930:25;14995:2;14980:18;;;14974:25;14851:16;;14886:25;;-1:-1:-1;14974:25:183;;-1:-1:-1;14637:368:183;-1:-1:-1;14637:368:183:o;15312:417::-;15509:66;15501:6;15497:79;15492:3;15485:92;15467:3;15606:6;15600:13;15622:61;15676:6;15672:1;15667:3;15663:11;15656:4;15648:6;15644:17;15622:61;:::i;:::-;15703:16;;;;15721:1;15699:24;;15312:417;-1:-1:-1;;;15312:417:183:o;15734:274::-;15863:3;15901:6;15895:13;15917:53;15963:6;15958:3;15951:4;15943:6;15939:17;15917:53;:::i;:::-;15986:16;;;;;15734:274;-1:-1:-1;;15734:274:183:o;16206:125::-;16246:4;16274:1;16271;16268:8;16265:34;;;16279:18;;:::i;:::-;-1:-1:-1;16316:9:183;;16206:125::o;16903:348::-;17133:2;17122:9;17115:21;17096:4;17153:49;17198:2;17187:9;17183:18;16816:2;16804:15;;16851:12;16844:4;16835:14;;16828:36;16889:2;16880:12;;16739:159;17153:49;17145:57;;17238:6;17233:2;17222:9;17218:18;17211:34;16903:348;;;;:::o;17420:::-;17650:2;17639:9;17632:21;17613:4;17670:49;17715:2;17704:9;17700:18;17333:2;17321:15;;17368:12;17361:4;17352:14;;17345:36;17406:2;17397:12;;17256:159;18179:397;18409:2;18398:9;18391:21;18372:4;18429:49;18474:2;18463:9;18459:18;16816:2;16804:15;;16851:12;16844:4;16835:14;;16828:36;16889:2;16880:12;;16739:159;18429:49;18421:57;;-1:-1:-1;;;;;18518:6:183;18514:55;18509:2;18498:9;18494:18;18487:83;18179:397;;;;:::o;18581:::-;18811:2;18800:9;18793:21;18774:4;18831:49;18876:2;18865:9;18861:18;17333:2;17321:15;;17368:12;17361:4;17352:14;;17345:36;17406:2;17397:12;;17256:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCorrectness_addPoolEmptySlot()": "7a97d1fd",
    "testCorrectness_addPoolOccupiedSlot()": "350b4b27",
    "testCorrectness_addPoolRequiresRole(address)": "06355020",
    "testCorrectness_distributeNotUnlocked()": "fd01673f",
    "testCorrectness_distributeOnlyStaking()": "7bc6b0e1",
    "testCorrectness_nextRewardFor()": "32301b8d",
    "testCorrectness_removePoolFailsOnSanityCheck()": "a857b39b",
    "testCorrectness_removePoolRequiresRole(address)": "930c2620",
    "testCorrectness_removesPool()": "45311db7",
    "testCorrectness_setBounty(uint256)": "cbc6619a",
    "testCorrectness_setBountyRequiresRole(address)": "3a7e4dcf",
    "testCorrectness_setPools()": "f072678e",
    "testCorrectness_setPoolsRequiresRole(address)": "ebd0e4a8",
    "testCorrectness_setRewardRateRequiresRole(address)": "ea751d99",
    "testCorrectness_setsRewardRate(uint256)": "63a8a78e",
    "test_defaultState()": "c2f1b74d",
    "test_retrieveBountyIsZero()": "81265253",
    "test_retrieveBountyOnlyStaking()": "3e94ec70",
    "test_triggerRebaseStory1()": "b826e29f",
    "test_triggerRebaseStory2()": "fd24774e",
    "test_triggerRebaseStory3()": "d961b1ec",
    "test_triggerRebaseStory4()": "4f454fd1",
    "test_triggerRebaseStory5()": "e3456aad",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_addPoolEmptySlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_addPoolOccupiedSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCorrectness_addPoolRequiresRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_distributeNotUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_distributeOnlyStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_nextRewardFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_removePoolFailsOnSanityCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCorrectness_removePoolRequiresRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_removesPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBounty_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_setBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCorrectness_setBountyRequiresRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectness_setPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCorrectness_setPoolsRequiresRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"testCorrectness_setRewardRateRequiresRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"testCorrectness_setsRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_defaultState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_retrieveBountyIsZero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_retrieveBountyOnlyStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_triggerRebaseStory1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_triggerRebaseStory2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_triggerRebaseStory3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_triggerRebaseStory4\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_triggerRebaseStory5\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testCorrectness_addPoolRequiresRole(address)\":{\"notice\":\"[X]  addPool()     [X]  Can only be called by an address with the distributor_admin role     [X]  Correctly adds pool to an empty slot     [X]  Pushes pool to end of list when trying to add to an occupied slot\"},\"testCorrectness_distributeOnlyStaking()\":{\"notice\":\"[X]  distribute()     [X]  Can only be called by staking     [X]  Cannot be called if not unlocked\"},\"testCorrectness_nextRewardFor()\":{\"notice\":\"[X] nextRewardFor()     [X]  Next reward for the staking contract matches the expected calculation\"},\"testCorrectness_removePoolRequiresRole(address)\":{\"notice\":\"[X]  removePool()     [X]  Can only be called by an address with the distributor_admin role     [X]  Fails on sanity check when parameters are invalid     [X]  Correctly removes pool\"},\"testCorrectness_setBountyRequiresRole(address)\":{\"notice\":\"[X]  setBounty()     [X]  Can only be called by an address with the distributor_admin role     [X]  Sets bounty correctly\"},\"testCorrectness_setPoolsRequiresRole(address)\":{\"notice\":\"[X] setPools()     [X]  Can only be called by an address with the distributor_admin role     [X]  Sets pools correctly\"},\"testCorrectness_setRewardRateRequiresRole(address)\":{\"notice\":\"[X]  setRewardRate     [X]  Can only be called by an address with the distributor_admin role     [X]  Correctly sets reward rate\"},\"test_defaultState()\":{\"notice\":\"Basic post-setup functionality tests\"},\"test_retrieveBountyOnlyStaking()\":{\"notice\":\"[X]  retrieveBounty()     [X]  Can only be called by staking     [X]  Bounty is zero and no GDAO is minted\"},\"test_triggerRebaseStory1()\":{\"notice\":\"User Story 1: triggerRebase() fails when block timestamp is before epoch end\"},\"test_triggerRebaseStory2()\":{\"notice\":\"User Story 2: triggerRebase() mints GDAO to the staking contract when epoch is over\"},\"test_triggerRebaseStory3()\":{\"notice\":\"User Story 3: triggerRebase() reverts when attempted to call twice in same epoch\"},\"test_triggerRebaseStory4()\":{\"notice\":\"User Story 4: triggerRebase() mints GDAO to the staking contract and a single Uniswap V2 pool\"},\"test_triggerRebaseStory5()\":{\"notice\":\"User Story 5: triggerRebase() mints GDAO to the staking contract and multiple Uniswap V2 pools\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/policies/Distributor.t.sol\":\"DistributorTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":balancer-v2/=lib/balancer-v2/\",\":bonds/=lib/bonds/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":interfaces/=src/interfaces/\",\":libraries/=src/libraries/\",\":modules/=src/modules/\",\":policies/=src/policies/\",\":solmate/=lib/solmate/src/\",\":test/=src/test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed\",\"dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622\",\"dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe\"]},\"src/Kernel.sol\":{\"keccak256\":\"0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5\",\"dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab\"]},\"src/external/GDAO.sol\":{\"keccak256\":\"0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230\",\"dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18\",\"dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU\"]},\"src/interfaces/IGDAO.sol\":{\"keccak256\":\"0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58\",\"dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj\"]},\"src/interfaces/IOlympusAuthority.sol\":{\"keccak256\":\"0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737\",\"dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ\"]},\"src/interfaces/Uniswap/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x4194fa728fbb39d615de1e4bfbf9b78472a917edb641bcb1ddc99b82393d0dab\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b354fee47b6885fd47d512fd606909f83e9017567297eb996bb68d88de5a6ee6\",\"dweb:/ipfs/QmcF3MmAmsvyC6ueoaMpDh7tcrZGkp28s3BipJCNGyeCEs\"]},\"src/interfaces/Uniswap/IUniswapV2Pair.sol\":{\"keccak256\":\"0x76ee76c0be6c0c2a86b7a817a28ef21e186d82e07bbfbcaf31423eced81374c9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://473318743ec8e74f0a13f8c2e12dd174c8debdc2e7663514aecd757b0260e3d7\",\"dweb:/ipfs/QmcjxMki9gPoVB5gQpPq4FtR8t1ZVCKFA5B8xLMSj9cAQz\"]},\"src/libraries/Counters.sol\":{\"keccak256\":\"0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0\",\"dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC\"]},\"src/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05\",\"dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1\"]},\"src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392\",\"dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG\"]},\"src/modules/MINTR/GoerliMinter.sol\":{\"keccak256\":\"0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b\",\"dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN\"]},\"src/modules/MINTR/MINTR.v1.sol\":{\"keccak256\":\"0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71\",\"dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5\"]},\"src/modules/ROLES/GoerliDaoRoles.sol\":{\"keccak256\":\"0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d\",\"dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH\"]},\"src/modules/ROLES/ROLES.v1.sol\":{\"keccak256\":\"0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300\",\"dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd\"]},\"src/modules/TRSRY/GoerliDaoTreasury.sol\":{\"keccak256\":\"0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471\",\"dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c\"]},\"src/modules/TRSRY/TRSRY.v1.sol\":{\"keccak256\":\"0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2\",\"dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC\"]},\"src/policies/Distributor.sol\":{\"keccak256\":\"0x0f52ea6f1c09495e0116c64bc20751fba0ec899098981fb6c98cbeaca3c59d7c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f16e870a7bee5689e6a78ea8b774c78e4b9ae99dd0b164bd79f84502524ffc55\",\"dweb:/ipfs/QmcL4NG5zBoR32UnHsrfANe11U5unMmHYFPWqyqSbHnkJX\"]},\"src/policies/RolesAdmin.sol\":{\"keccak256\":\"0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f\",\"dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7\"]},\"src/test/lib/ModuleTestFixtureGenerator.sol\":{\"keccak256\":\"0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619\",\"dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB\"]},\"src/test/lib/UserFactory.sol\":{\"keccak256\":\"0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb\",\"dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF\"]},\"src/test/lib/larping.sol\":{\"keccak256\":\"0x16659a58493fa24ef4c3c7b3a3850c3e92c8bcf01e1918582b5c08a9768389ac\",\"urls\":[\"bzz-raw://75a1df7e07f95c1c53ec9e1ef3aff8b89e98ecfe28cf05f65f176e4a1002d330\",\"dweb:/ipfs/QmVptVAuhZzrXTqU3jJmYcTzBJxqJgV375impE11mHCnbU\"]},\"src/test/lib/quabi/Quabi.sol\":{\"keccak256\":\"0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751\",\"dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm\"]},\"src/test/mocks/GoerliMocks.sol\":{\"keccak256\":\"0xd7872ba5b47b0eca92efa4ab48ba56bd702ee5ead9beba63d4cd83d48d9d3e83\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d931783144796bbb44bdfa10f0eedad55e86be03ccdff8c70a975b82914cf3d7\",\"dweb:/ipfs/QmdKdhammjawvop3JDf2BFNiYfJt2k3enJyJG17iDhyNzf\"]},\"src/test/mocks/MockLegacyAuthority.sol\":{\"keccak256\":\"0x21b64304f32f864c47a36daeaa2817a3902d7e64ac5173ec3393509e01ac5bcd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0668594feef94133fc6830d2dcf0c43ca87b3d61b1b6d51b920a1ccd91239efa\",\"dweb:/ipfs/QmT7U8KHAiriv3YQZqBpifb4755r1kUUBAfLLp2q3Bmdyt\"]},\"src/test/mocks/MockUniV2Pair.sol\":{\"keccak256\":\"0x932390e751c06e1d5301638f0c330aa7acf6235b265b86b8e72a14492510954d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4cf598d963d608070284a4a5f2a79b11c94703a009a414b59509d59607c42436\",\"dweb:/ipfs/QmUHw1M3nn998tFmXMtuJ4GKErqXyp7RiGLyGygvyQtoGL\"]},\"src/test/modules/MINTR.t.sol\":{\"keccak256\":\"0x6442d71cea56e1c406a5f29487fb817923dc6f21557c1b190e47d9a81d790e1e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c664c3fda4cfe91e7c02fb430ad19a7e9845106b33c6bd495975913d169fff37\",\"dweb:/ipfs/QmUreySNDbS3cgtLCp3SuGxbzHKCdxRertsf8fu6qYY2cr\"]},\"src/test/policies/Distributor.t.sol\":{\"keccak256\":\"0x21c544f6f54c11005e2f517d2498677badf52d6d37d4fe254914ef8044794b95\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a36ab69e1c8491078dd9b9fd762ae11c58be59d934d01f19e3a5dc498fad4a20\",\"dweb:/ipfs/QmUusvRxsnU8FS1SDHSWCJgwauiaJbfX6kQM7SJZNgJasS\"]},\"src/types/OlympusAccessControlled.sol\":{\"keccak256\":\"0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1\",\"dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_addPoolEmptySlot"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_addPoolOccupiedSlot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_addPoolRequiresRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_distributeNotUnlocked"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_distributeOnlyStaking"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_nextRewardFor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_removePoolFailsOnSanityCheck"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_removePoolRequiresRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_removesPool"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newBounty_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setBounty"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setBountyRequiresRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setPools"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setPoolsRequiresRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setRewardRateRequiresRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectness_setsRewardRate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_defaultState"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_retrieveBountyIsZero"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_retrieveBountyOnlyStaking"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_triggerRebaseStory1"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_triggerRebaseStory2"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_triggerRebaseStory3"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_triggerRebaseStory4"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_triggerRebaseStory5"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testCorrectness_addPoolRequiresRole(address)": {
            "notice": "[X]  addPool()     [X]  Can only be called by an address with the distributor_admin role     [X]  Correctly adds pool to an empty slot     [X]  Pushes pool to end of list when trying to add to an occupied slot"
          },
          "testCorrectness_distributeOnlyStaking()": {
            "notice": "[X]  distribute()     [X]  Can only be called by staking     [X]  Cannot be called if not unlocked"
          },
          "testCorrectness_nextRewardFor()": {
            "notice": "[X] nextRewardFor()     [X]  Next reward for the staking contract matches the expected calculation"
          },
          "testCorrectness_removePoolRequiresRole(address)": {
            "notice": "[X]  removePool()     [X]  Can only be called by an address with the distributor_admin role     [X]  Fails on sanity check when parameters are invalid     [X]  Correctly removes pool"
          },
          "testCorrectness_setBountyRequiresRole(address)": {
            "notice": "[X]  setBounty()     [X]  Can only be called by an address with the distributor_admin role     [X]  Sets bounty correctly"
          },
          "testCorrectness_setPoolsRequiresRole(address)": {
            "notice": "[X] setPools()     [X]  Can only be called by an address with the distributor_admin role     [X]  Sets pools correctly"
          },
          "testCorrectness_setRewardRateRequiresRole(address)": {
            "notice": "[X]  setRewardRate     [X]  Can only be called by an address with the distributor_admin role     [X]  Correctly sets reward rate"
          },
          "test_defaultState()": {
            "notice": "Basic post-setup functionality tests"
          },
          "test_retrieveBountyOnlyStaking()": {
            "notice": "[X]  retrieveBounty()     [X]  Can only be called by staking     [X]  Bounty is zero and no GDAO is minted"
          },
          "test_triggerRebaseStory1()": {
            "notice": "User Story 1: triggerRebase() fails when block timestamp is before epoch end"
          },
          "test_triggerRebaseStory2()": {
            "notice": "User Story 2: triggerRebase() mints GDAO to the staking contract when epoch is over"
          },
          "test_triggerRebaseStory3()": {
            "notice": "User Story 3: triggerRebase() reverts when attempted to call twice in same epoch"
          },
          "test_triggerRebaseStory4()": {
            "notice": "User Story 4: triggerRebase() mints GDAO to the staking contract and a single Uniswap V2 pool"
          },
          "test_triggerRebaseStory5()": {
            "notice": "User Story 5: triggerRebase() mints GDAO to the staking contract and multiple Uniswap V2 pools"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":balancer-v2/=lib/balancer-v2/",
        ":bonds/=lib/bonds/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":interfaces/=src/interfaces/",
        ":libraries/=src/libraries/",
        ":modules/=src/modules/",
        ":policies/=src/policies/",
        ":solmate/=lib/solmate/src/",
        ":test/=src/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/policies/Distributor.t.sol": "DistributorTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xb14869b3d931ceb1b8f8fcd00dc59e0901198ae271a6cb3e8d0c7b8ac1999d18",
        "urls": [
          "bzz-raw://3c533078cfb24dc68c0138437f1a2a946f74ab70d01a9fbe24f3e35905a25aed",
          "dweb:/ipfs/QmRDGa933AjqmDpJSL2CRNDJmJu6U9bKpU5RuiGTgxRFsC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x312849f6bf6e11d8cd25a229e78eadc9313f76b02c21c6030018af765112f0ba",
        "urls": [
          "bzz-raw://132fef1c66f4c857309d95e3013b268725b8556e12095f97b2b968670a29f622",
          "dweb:/ipfs/QmfQL5PDbhZ9BmcFrz169doy8EJS2pYazE3Uiw8X8vDNHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Kernel.sol": {
        "keccak256": "0xda08377f05abc6953fa8abdc4c1f3e3cb720e0dc1af3ada355ef1e016badd1b0",
        "urls": [
          "bzz-raw://9a8476cf62abf0800ef5ec78e766e73c1b9a58703a98fe2599c4f1b9f444add5",
          "dweb:/ipfs/QmWz4yYL3KzHGsRtNd1Kp2Vyhy7yh5a92pMSmQok6B3cab"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/GDAO.sol": {
        "keccak256": "0xdb3a71e45f843820b062b2164a72f160f6ca15ee6dadd14016e35beac7a6e6cd",
        "urls": [
          "bzz-raw://2ee3bab2df55568ba06ff7626445d368c6317424569d0a8992124bd43097a230",
          "dweb:/ipfs/QmUTvvMTexq3BvPdPKfd26zoi4UAMkL2Yb44ubR6wWuzJu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x08f1b2e2a227e43ae55199e82318ed82db7a651c50dc9282966ed7d2d7306f9c",
        "urls": [
          "bzz-raw://3d55a799e5c91b4e36185752fc01ad4db92ab7de582a7ea0b658634e38868a18",
          "dweb:/ipfs/QmZpyqYgeMNRcJQ96d1YXNcR3wCzYEpf417PRB2TQWRvGU"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/IGDAO.sol": {
        "keccak256": "0x2fcf3f58956ffd836c17dd3965b925c72ee9d8d788bf1f464d34423200cb4bc2",
        "urls": [
          "bzz-raw://526bc4988efae945c790e6bfac2007dd2c99c5e2166f24d3d0ee9d92d1593c58",
          "dweb:/ipfs/QmUxkUdogTc6puCQmY2tgz8j8KRRXKKsbbxqQT1U7D3TTj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOlympusAuthority.sol": {
        "keccak256": "0x9f7316ecbdd915692cee2fd47406c5f5bd6c162a9badb6605c0058ed23f9ee25",
        "urls": [
          "bzz-raw://c2ef3fe6e4e8415faa42131c0065908877f6df0630c5e765eca60bfb6e37e737",
          "dweb:/ipfs/QmNRCM1ei6PxdJdbJmBvAaqpd14BPUCV38K3XyDN7iyNAZ"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/Uniswap/IUniswapV2ERC20.sol": {
        "keccak256": "0x4194fa728fbb39d615de1e4bfbf9b78472a917edb641bcb1ddc99b82393d0dab",
        "urls": [
          "bzz-raw://b354fee47b6885fd47d512fd606909f83e9017567297eb996bb68d88de5a6ee6",
          "dweb:/ipfs/QmcF3MmAmsvyC6ueoaMpDh7tcrZGkp28s3BipJCNGyeCEs"
        ],
        "license": "AGPL-3.0"
      },
      "src/interfaces/Uniswap/IUniswapV2Pair.sol": {
        "keccak256": "0x76ee76c0be6c0c2a86b7a817a28ef21e186d82e07bbfbcaf31423eced81374c9",
        "urls": [
          "bzz-raw://473318743ec8e74f0a13f8c2e12dd174c8debdc2e7663514aecd757b0260e3d7",
          "dweb:/ipfs/QmcjxMki9gPoVB5gQpPq4FtR8t1ZVCKFA5B8xLMSj9cAQz"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/Counters.sol": {
        "keccak256": "0xea58f990322bd48fdc365052c14d90de2f46cdf9e78130f681818a4a3cd7cc1c",
        "urls": [
          "bzz-raw://6a744d44cd32921b0103abd8c6230a439316e8b745c48893f8e49d44ac91e3a0",
          "dweb:/ipfs/QmRw3iqXU8rx7NsgEXy4ZEb7yiVkDfz7S9rz7Xnxp7UhJC"
        ],
        "license": "AGPL-3.0"
      },
      "src/libraries/SafeMath.sol": {
        "keccak256": "0x6b2eb272970b9933f5fab524e5e4ab62d35130972842800c5b51e14ae0b0e2ed",
        "urls": [
          "bzz-raw://7a4d1e39936168a24bad219ef731a56693a3bb3f871a0d20a058335e1ae62c05",
          "dweb:/ipfs/QmYLLc5J4GurJmh88PP8VWrmfp9HuWd1R8x2Ki3qyRm3f1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/TransferHelper.sol": {
        "keccak256": "0x7655a32edafbf0ee93a6ff387404ce1236c651fadf3fa3971461938ee83ad714",
        "urls": [
          "bzz-raw://ff179b6e47682686e3864789fd1a879db065711242c099f4645d374285ce2392",
          "dweb:/ipfs/QmawzEBDAPEVy1dXJhKCzGz7N2axhdRkiPVMK9WKCEjHzG"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/GoerliMinter.sol": {
        "keccak256": "0x57869acd0bc273e8e737773813a3940118e1b91d75575f989866a5f4c45c2aa1",
        "urls": [
          "bzz-raw://549a3a9f4c31a15854d9b5368372ce7eaada69fb30ee8c222f4bf2b08c2d968b",
          "dweb:/ipfs/QmbwjdcHj6XJny8QD3azBWkDaHE2YPWEtWNUckvB5DJMyN"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/MINTR/MINTR.v1.sol": {
        "keccak256": "0xca31ddda510155aed6c6810cb9b5af017166ffd0dbe58b5c1519873c7f9c024c",
        "urls": [
          "bzz-raw://0c345588772f1288be5e9a1e73e56f376679d0a16f7eb070678e239700d6eb71",
          "dweb:/ipfs/QmW9PqE7CvJUNQAuKY8Fd9McSrdiMFtfE872FpqWY5Z4y5"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/GoerliDaoRoles.sol": {
        "keccak256": "0xc4799ee14eee67b84955c6c2caef59b78337a216883ca7e09ffe118efd5b4e58",
        "urls": [
          "bzz-raw://8c74fe43e5b0d207bf85108363abda27fd66be4e830aa284258aeb48926abe4d",
          "dweb:/ipfs/QmdmXGdtMCFB5w18xnwZJTixESGLyJY2qvMafZGGMFTWfH"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/ROLES/ROLES.v1.sol": {
        "keccak256": "0x9adeb15569648e1dc977b5ae44d48ce79a63790625510a616b37df9d9e093985",
        "urls": [
          "bzz-raw://d16866adf6987025ea2f89c1e20613a5df351eaeb46d6b0fc5caf88d41734300",
          "dweb:/ipfs/QmZbRoJcUhe4eUzYriPpGFx5NEbmh7Q2DZzrgYLanvqYKd"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/GoerliDaoTreasury.sol": {
        "keccak256": "0xf70dbad26586b3bde53174b6316e67566fc9c9cd0af0ff0e14b10dacccf31abc",
        "urls": [
          "bzz-raw://5d0d9855479e33b1c04628805a059d69e546c3d01d01d3ea75fcccae3c98c471",
          "dweb:/ipfs/QmfQ6H8MYzcEmnbLtPyg63ndt5aq4Jqua4TeNdn18fLV8c"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/TRSRY/TRSRY.v1.sol": {
        "keccak256": "0xd9a4593375bded6d7adf5034e0b07b8a315a144dcfe182370d8832cb03908ef1",
        "urls": [
          "bzz-raw://867d7f9633a34bf7204755de2b7004e495a5fb7bc2b04e7223adb0e6c1e012d2",
          "dweb:/ipfs/QmZkhGbDbMfygWiGSrCXNNPca3oZreQY8ZWBBN6uvYUkDC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/Distributor.sol": {
        "keccak256": "0x0f52ea6f1c09495e0116c64bc20751fba0ec899098981fb6c98cbeaca3c59d7c",
        "urls": [
          "bzz-raw://f16e870a7bee5689e6a78ea8b774c78e4b9ae99dd0b164bd79f84502524ffc55",
          "dweb:/ipfs/QmcL4NG5zBoR32UnHsrfANe11U5unMmHYFPWqyqSbHnkJX"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/policies/RolesAdmin.sol": {
        "keccak256": "0x1bb809b8d560aeef6fe0cda23a3bd95033c29ccc74017585f788c6a2c84e22d5",
        "urls": [
          "bzz-raw://5398a97b451e3f971160ccb696e8e53603055087a8354c581e8b63457481f17f",
          "dweb:/ipfs/Qme5Nhv7v4CqwgCtqSeNYVoUsnor4BNx7g39R7qXzsW2M7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/lib/ModuleTestFixtureGenerator.sol": {
        "keccak256": "0x9afab673539a883029daa839fcc79d4e9f0d4f2c4d08ba8aa24a129048b0896a",
        "urls": [
          "bzz-raw://0584a09203cf667cdfc7f288619c733c8ed3e4616cee857d3a6927102652b619",
          "dweb:/ipfs/QmQ1XcG6xo3Nz8PdnKbTas2cXu5bV6c7aVybqrBEhf4HtB"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/lib/UserFactory.sol": {
        "keccak256": "0xf9a86d8d14b6a53f66d11f04259c6799f3872b6e948dc7fb6e75769d258843d7",
        "urls": [
          "bzz-raw://62cf3be6d3f5ac42abc6cc4ed01139aed49be813e0bdc108688200a36aa401fb",
          "dweb:/ipfs/QmWCxbHLBb3JGW8djvYcLb2jVrZG8iy5XuAPKjRuLzb8AF"
        ],
        "license": "Unlicense"
      },
      "src/test/lib/larping.sol": {
        "keccak256": "0x16659a58493fa24ef4c3c7b3a3850c3e92c8bcf01e1918582b5c08a9768389ac",
        "urls": [
          "bzz-raw://75a1df7e07f95c1c53ec9e1ef3aff8b89e98ecfe28cf05f65f176e4a1002d330",
          "dweb:/ipfs/QmVptVAuhZzrXTqU3jJmYcTzBJxqJgV375impE11mHCnbU"
        ],
        "license": null
      },
      "src/test/lib/quabi/Quabi.sol": {
        "keccak256": "0x628156f563996ff61f7c8bc87a821cbab78aa013bb30c9f592653e4fe1c748a9",
        "urls": [
          "bzz-raw://54a8a080471951e094230bf2afad3e8f2f3e56c2d42edf283adaeb41b922b751",
          "dweb:/ipfs/QmZgvfeHWWGwEMEkXfNrZGowoR3UGJk5b4BaDyqRp4EMxm"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/test/mocks/GoerliMocks.sol": {
        "keccak256": "0xd7872ba5b47b0eca92efa4ab48ba56bd702ee5ead9beba63d4cd83d48d9d3e83",
        "urls": [
          "bzz-raw://d931783144796bbb44bdfa10f0eedad55e86be03ccdff8c70a975b82914cf3d7",
          "dweb:/ipfs/QmdKdhammjawvop3JDf2BFNiYfJt2k3enJyJG17iDhyNzf"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/mocks/MockLegacyAuthority.sol": {
        "keccak256": "0x21b64304f32f864c47a36daeaa2817a3902d7e64ac5173ec3393509e01ac5bcd",
        "urls": [
          "bzz-raw://0668594feef94133fc6830d2dcf0c43ca87b3d61b1b6d51b920a1ccd91239efa",
          "dweb:/ipfs/QmT7U8KHAiriv3YQZqBpifb4755r1kUUBAfLLp2q3Bmdyt"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/mocks/MockUniV2Pair.sol": {
        "keccak256": "0x932390e751c06e1d5301638f0c330aa7acf6235b265b86b8e72a14492510954d",
        "urls": [
          "bzz-raw://4cf598d963d608070284a4a5f2a79b11c94703a009a414b59509d59607c42436",
          "dweb:/ipfs/QmUHw1M3nn998tFmXMtuJ4GKErqXyp7RiGLyGygvyQtoGL"
        ],
        "license": "AGPL-3.0"
      },
      "src/test/modules/MINTR.t.sol": {
        "keccak256": "0x6442d71cea56e1c406a5f29487fb817923dc6f21557c1b190e47d9a81d790e1e",
        "urls": [
          "bzz-raw://c664c3fda4cfe91e7c02fb430ad19a7e9845106b33c6bd495975913d169fff37",
          "dweb:/ipfs/QmUreySNDbS3cgtLCp3SuGxbzHKCdxRertsf8fu6qYY2cr"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/policies/Distributor.t.sol": {
        "keccak256": "0x21c544f6f54c11005e2f517d2498677badf52d6d37d4fe254914ef8044794b95",
        "urls": [
          "bzz-raw://a36ab69e1c8491078dd9b9fd762ae11c58be59d934d01f19e3a5dc498fad4a20",
          "dweb:/ipfs/QmUusvRxsnU8FS1SDHSWCJgwauiaJbfX6kQM7SJZNgJasS"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/types/OlympusAccessControlled.sol": {
        "keccak256": "0xd429171e3afaeb91960e2d3f4e596d64c12f292cc264efa0a5b95bf60ded20cf",
        "urls": [
          "bzz-raw://a5091df0f41b5a1b563255d5d4e3633fecb2020afcabf37b29e398243e5d41a1",
          "dweb:/ipfs/QmWB7xbCzTbUqJWndB9J5rU5fmgTP6wjuJVoagG59hnQsk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/policies/Distributor.t.sol",
    "id": 80590,
    "exportedSymbols": {
      "Actions": [
        28348
      ],
      "Distributor": [
        46496
      ],
      "DistributorTest": [
        80589
      ],
      "GoerliDaoRoles": [
        40791
      ],
      "GoerliDaoTreasury": [
        41409
      ],
      "GoerliMinter": [
        38611
      ],
      "Instruction": [
        28354
      ],
      "InvalidKeycode": [
        28371
      ],
      "Kernel": [
        29497
      ],
      "KernelAdapter": [
        28512
      ],
      "Keycode": [
        28362
      ],
      "MockERC20": [
        24679
      ],
      "MockLegacyAuthority": [
        66449
      ],
      "MockStaking": [
        66053
      ],
      "MockUniV2Pair": [
        67090
      ],
      "MockXgdao": [
        65778
      ],
      "Module": [
        28577
      ],
      "Permissions": [
        28360
      ],
      "Policy": [
        28659
      ],
      "ROLESv1": [
        40870
      ],
      "RolesAdmin": [
        51234
      ],
      "TargetNotAContract": [
        28366
      ],
      "Test": [
        5484
      ],
      "UserFactory": [
        54005
      ],
      "console2": [
        23663
      ],
      "ensureContract": [
        28415
      ],
      "ensureValidKeycode": [
        28460
      ],
      "fromKeycode": [
        28399
      ],
      "toKeycode": [
        28385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:17051:167",
    "nodes": [
      {
        "id": 78706,
        "nodeType": "PragmaDirective",
        "src": "42:23:167",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 78708,
        "nodeType": "ImportDirective",
        "src": "93:40:167",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 6824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78707,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5484,
              "src": "101:4:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78710,
        "nodeType": "ImportDirective",
        "src": "134:48:167",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 23664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78709,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23663,
              "src": "142:8:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78712,
        "nodeType": "ImportDirective",
        "src": "183:53:167",
        "nodes": [],
        "absolutePath": "src/test/lib/UserFactory.sol",
        "file": "test/lib/UserFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 54006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78711,
              "name": "UserFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54005,
              "src": "191:11:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78714,
        "nodeType": "ImportDirective",
        "src": "261:53:167",
        "nodes": [],
        "absolutePath": "src/policies/Distributor.sol",
        "file": "policies/Distributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 46497,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78713,
              "name": "Distributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46496,
              "src": "269:11:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78715,
        "nodeType": "ImportDirective",
        "src": "315:24:167",
        "nodes": [],
        "absolutePath": "src/Kernel.sol",
        "file": "src/Kernel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 29498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78717,
        "nodeType": "ImportDirective",
        "src": "340:60:167",
        "nodes": [],
        "absolutePath": "src/modules/MINTR/GoerliMinter.sol",
        "file": "modules/MINTR/GoerliMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 38612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78716,
              "name": "GoerliMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38611,
              "src": "348:12:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78719,
        "nodeType": "ImportDirective",
        "src": "401:70:167",
        "nodes": [],
        "absolutePath": "src/modules/TRSRY/GoerliDaoTreasury.sol",
        "file": "modules/TRSRY/GoerliDaoTreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 41410,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78718,
              "name": "GoerliDaoTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41409,
              "src": "409:17:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78721,
        "nodeType": "ImportDirective",
        "src": "472:64:167",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/GoerliDaoRoles.sol",
        "file": "modules/ROLES/GoerliDaoRoles.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 40792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78720,
              "name": "GoerliDaoRoles",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40791,
              "src": "480:14:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78723,
        "nodeType": "ImportDirective",
        "src": "537:51:167",
        "nodes": [],
        "absolutePath": "src/modules/ROLES/ROLES.v1.sol",
        "file": "modules/ROLES/ROLES.v1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 40871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78722,
              "name": "ROLESv1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40870,
              "src": "545:7:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78725,
        "nodeType": "ImportDirective",
        "src": "589:51:167",
        "nodes": [],
        "absolutePath": "src/policies/RolesAdmin.sol",
        "file": "policies/RolesAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 51235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78724,
              "name": "RolesAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51234,
              "src": "597:10:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78727,
        "nodeType": "ImportDirective",
        "src": "686:65:167",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 24680,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78726,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24679,
              "src": "694:9:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78730,
        "nodeType": "ImportDirective",
        "src": "752:64:167",
        "nodes": [],
        "absolutePath": "src/test/mocks/GoerliMocks.sol",
        "file": "../mocks/GoerliMocks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 66054,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78728,
              "name": "MockXgdao",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65778,
              "src": "760:9:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 78729,
              "name": "MockStaking",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66053,
              "src": "771:11:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78732,
        "nodeType": "ImportDirective",
        "src": "817:57:167",
        "nodes": [],
        "absolutePath": "src/test/mocks/MockUniV2Pair.sol",
        "file": "../mocks/MockUniV2Pair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 67091,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78731,
              "name": "MockUniV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67090,
              "src": "825:13:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78734,
        "nodeType": "ImportDirective",
        "src": "875:59:167",
        "nodes": [],
        "absolutePath": "src/test/modules/MINTR.t.sol",
        "file": "../modules/MINTR.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80590,
        "sourceUnit": 69597,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78733,
              "name": "MockLegacyAuthority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66449,
              "src": "883:19:167",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80589,
        "nodeType": "ContractDefinition",
        "src": "936:16156:167",
        "nodes": [
          {
            "id": 78740,
            "nodeType": "VariableDeclaration",
            "src": "1000:22:167",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78737,
              "nodeType": "StructuredDocumentation",
              "src": "975:20:167",
              "text": "Bophades Systems"
            },
            "mutability": "mutable",
            "name": "kernel",
            "nameLocation": "1016:6:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Kernel_$29497",
              "typeString": "contract Kernel"
            },
            "typeName": {
              "id": 78739,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78738,
                "name": "Kernel",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29497,
                "src": "1000:6:167"
              },
              "referencedDeclaration": 29497,
              "src": "1000:6:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Kernel_$29497",
                "typeString": "contract Kernel"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78743,
            "nodeType": "VariableDeclaration",
            "src": "1028:27:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mintr",
            "nameLocation": "1050:5:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
              "typeString": "contract GoerliMinter"
            },
            "typeName": {
              "id": 78742,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78741,
                "name": "GoerliMinter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38611,
                "src": "1028:12:167"
              },
              "referencedDeclaration": 38611,
              "src": "1028:12:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                "typeString": "contract GoerliMinter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78746,
            "nodeType": "VariableDeclaration",
            "src": "1061:32:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "trsry",
            "nameLocation": "1088:5:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
              "typeString": "contract GoerliDaoTreasury"
            },
            "typeName": {
              "id": 78745,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78744,
                "name": "GoerliDaoTreasury",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41409,
                "src": "1061:17:167"
              },
              "referencedDeclaration": 41409,
              "src": "1061:17:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                "typeString": "contract GoerliDaoTreasury"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78749,
            "nodeType": "VariableDeclaration",
            "src": "1099:29:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roles",
            "nameLocation": "1123:5:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
              "typeString": "contract GoerliDaoRoles"
            },
            "typeName": {
              "id": 78748,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78747,
                "name": "GoerliDaoRoles",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40791,
                "src": "1099:14:167"
              },
              "referencedDeclaration": 40791,
              "src": "1099:14:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                "typeString": "contract GoerliDaoRoles"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78752,
            "nodeType": "VariableDeclaration",
            "src": "1135:32:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1156:11:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Distributor_$46496",
              "typeString": "contract Distributor"
            },
            "typeName": {
              "id": 78751,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78750,
                "name": "Distributor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46496,
                "src": "1135:11:167"
              },
              "referencedDeclaration": 46496,
              "src": "1135:11:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Distributor_$46496",
                "typeString": "contract Distributor"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78755,
            "nodeType": "VariableDeclaration",
            "src": "1173:30:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rolesAdmin",
            "nameLocation": "1193:10:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
              "typeString": "contract RolesAdmin"
            },
            "typeName": {
              "id": 78754,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78753,
                "name": "RolesAdmin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51234,
                "src": "1173:10:167"
              },
              "referencedDeclaration": 51234,
              "src": "1173:10:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                "typeString": "contract RolesAdmin"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78759,
            "nodeType": "VariableDeclaration",
            "src": "1225:23:167",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78756,
              "nodeType": "StructuredDocumentation",
              "src": "1210:10:167",
              "text": "Tokens"
            },
            "mutability": "mutable",
            "name": "gdao",
            "nameLocation": "1244:4:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 78758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78757,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1225:9:167"
              },
              "referencedDeclaration": 24679,
              "src": "1225:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78762,
            "nodeType": "VariableDeclaration",
            "src": "1254:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sgdao",
            "nameLocation": "1273:5:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 78761,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78760,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1254:9:167"
              },
              "referencedDeclaration": 24679,
              "src": "1254:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78765,
            "nodeType": "VariableDeclaration",
            "src": "1284:24:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "xgdao",
            "nameLocation": "1303:5:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockXgdao_$65778",
              "typeString": "contract MockXgdao"
            },
            "typeName": {
              "id": 78764,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78763,
                "name": "MockXgdao",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65778,
                "src": "1284:9:167"
              },
              "referencedDeclaration": 65778,
              "src": "1284:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockXgdao_$65778",
                "typeString": "contract MockXgdao"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78768,
            "nodeType": "VariableDeclaration",
            "src": "1314:22:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "1333:3:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 78767,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78766,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1314:9:167"
              },
              "referencedDeclaration": 24679,
              "src": "1314:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78771,
            "nodeType": "VariableDeclaration",
            "src": "1342:23:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1361:4:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$24679",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 78770,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78769,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24679,
                "src": "1342:9:167"
              },
              "referencedDeclaration": 24679,
              "src": "1342:9:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$24679",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78775,
            "nodeType": "VariableDeclaration",
            "src": "1397:28:167",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78772,
              "nodeType": "StructuredDocumentation",
              "src": "1372:20:167",
              "text": "Legacy Contracts"
            },
            "mutability": "mutable",
            "name": "staking",
            "nameLocation": "1418:7:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockStaking_$66053",
              "typeString": "contract MockStaking"
            },
            "typeName": {
              "id": 78774,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78773,
                "name": "MockStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66053,
                "src": "1397:11:167"
              },
              "referencedDeclaration": 66053,
              "src": "1397:11:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockStaking_$66053",
                "typeString": "contract MockStaking"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78779,
            "nodeType": "VariableDeclaration",
            "src": "1459:30:167",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78776,
              "nodeType": "StructuredDocumentation",
              "src": "1432:22:167",
              "text": "External Contracts"
            },
            "mutability": "mutable",
            "name": "gdaoDai",
            "nameLocation": "1482:7:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
              "typeString": "contract MockUniV2Pair"
            },
            "typeName": {
              "id": 78778,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78777,
                "name": "MockUniV2Pair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67090,
                "src": "1459:13:167"
              },
              "referencedDeclaration": 67090,
              "src": "1459:13:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                "typeString": "contract MockUniV2Pair"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78782,
            "nodeType": "VariableDeclaration",
            "src": "1495:31:167",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "gdaoWeth",
            "nameLocation": "1518:8:167",
            "scope": 80589,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
              "typeString": "contract MockUniV2Pair"
            },
            "typeName": {
              "id": 78781,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78780,
                "name": "MockUniV2Pair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67090,
                "src": "1495:13:167"
              },
              "referencedDeclaration": 67090,
              "src": "1495:13:167",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                "typeString": "contract MockUniV2Pair"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 79166,
            "nodeType": "FunctionDefinition",
            "src": "1533:2810:167",
            "nodes": [],
            "body": {
              "id": 79165,
              "nodeType": "Block",
              "src": "1557:2786:167",
              "nodes": [],
              "statements": [
                {
                  "id": 78840,
                  "nodeType": "Block",
                  "src": "1567:353:167",
                  "statements": [
                    {
                      "documentation": "Deploy Kernal and tokens",
                      "expression": {
                        "id": 78790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78785,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78740,
                          "src": "1622:6:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 78788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1631:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Kernel_$29497_$",
                              "typeString": "function () returns (contract Kernel)"
                            },
                            "typeName": {
                              "id": 78787,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78786,
                                "name": "Kernel",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29497,
                                "src": "1635:6:167"
                              },
                              "referencedDeclaration": 29497,
                              "src": "1635:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          },
                          "id": 78789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1631:12:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Kernel_$29497",
                            "typeString": "contract Kernel"
                          }
                        },
                        "src": "1622:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Kernel_$29497",
                          "typeString": "contract Kernel"
                        }
                      },
                      "id": 78791,
                      "nodeType": "ExpressionStatement",
                      "src": "1622:21:167"
                    },
                    {
                      "expression": {
                        "id": 78800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78792,
                          "name": "gdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78759,
                          "src": "1657:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "4744414f",
                              "id": 78796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1678:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              "value": "GDAO"
                            },
                            {
                              "hexValue": "4744414f",
                              "id": 78797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1686:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              "value": "GDAO"
                            },
                            {
                              "hexValue": "39",
                              "id": 78798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1694:1:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a0416019da0710024c3aedf1618c3207d30c07f8cba7227789e197ad9d43d743",
                                "typeString": "literal_string \"GDAO\""
                              },
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "id": 78795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1664:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 78794,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78793,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "1668:9:167"
                              },
                              "referencedDeclaration": 24679,
                              "src": "1668:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 78799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1664:32:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "1657:39:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78801,
                      "nodeType": "ExpressionStatement",
                      "src": "1657:39:167"
                    },
                    {
                      "expression": {
                        "id": 78810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78802,
                          "name": "sgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78762,
                          "src": "1710:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "734744414f",
                              "id": 78806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1732:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a34b77567d68ed91ed52eeb8cc8f18de72ce9262266d35fc4dfd70745b6321cb",
                                "typeString": "literal_string \"sGDAO\""
                              },
                              "value": "sGDAO"
                            },
                            {
                              "hexValue": "734744414f",
                              "id": 78807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1741:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a34b77567d68ed91ed52eeb8cc8f18de72ce9262266d35fc4dfd70745b6321cb",
                                "typeString": "literal_string \"sGDAO\""
                              },
                              "value": "sGDAO"
                            },
                            {
                              "hexValue": "39",
                              "id": 78808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1750:1:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a34b77567d68ed91ed52eeb8cc8f18de72ce9262266d35fc4dfd70745b6321cb",
                                "typeString": "literal_string \"sGDAO\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a34b77567d68ed91ed52eeb8cc8f18de72ce9262266d35fc4dfd70745b6321cb",
                                "typeString": "literal_string \"sGDAO\""
                              },
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "id": 78805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1718:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 78804,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78803,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "1722:9:167"
                              },
                              "referencedDeclaration": 24679,
                              "src": "1722:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 78809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:34:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "1710:42:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78811,
                      "nodeType": "ExpressionStatement",
                      "src": "1710:42:167"
                    },
                    {
                      "expression": {
                        "id": 78818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78812,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "1766:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "3130305f3030305f3030305f303030",
                              "id": 78816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1788:15:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000_by_1",
                                "typeString": "int_const 100000000000"
                              },
                              "value": "100_000_000_000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000_by_1",
                                "typeString": "int_const 100000000000"
                              }
                            ],
                            "id": 78815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1774:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_MockXgdao_$65778_$",
                              "typeString": "function (uint256) returns (contract MockXgdao)"
                            },
                            "typeName": {
                              "id": 78814,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78813,
                                "name": "MockXgdao",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 65778,
                                "src": "1778:9:167"
                              },
                              "referencedDeclaration": 65778,
                              "src": "1778:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockXgdao_$65778",
                                "typeString": "contract MockXgdao"
                              }
                            }
                          },
                          "id": 78817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:30:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        },
                        "src": "1766:38:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockXgdao_$65778",
                          "typeString": "contract MockXgdao"
                        }
                      },
                      "id": 78819,
                      "nodeType": "ExpressionStatement",
                      "src": "1766:38:167"
                    },
                    {
                      "expression": {
                        "id": 78828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78820,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78768,
                          "src": "1818:3:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "444149",
                              "id": 78824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1838:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                                "typeString": "literal_string \"DAI\""
                              },
                              "value": "DAI"
                            },
                            {
                              "hexValue": "444149",
                              "id": 78825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1845:5:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                                "typeString": "literal_string \"DAI\""
                              },
                              "value": "DAI"
                            },
                            {
                              "hexValue": "3138",
                              "id": 78826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1852:2:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                                "typeString": "literal_string \"DAI\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                                "typeString": "literal_string \"DAI\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 78823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1824:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 78822,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78821,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "1828:9:167"
                              },
                              "referencedDeclaration": 24679,
                              "src": "1828:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 78827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1824:31:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "1818:37:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78829,
                      "nodeType": "ExpressionStatement",
                      "src": "1818:37:167"
                    },
                    {
                      "expression": {
                        "id": 78838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78830,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78771,
                          "src": "1869:4:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "57455448",
                              "id": 78834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1890:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                                "typeString": "literal_string \"WETH\""
                              },
                              "value": "WETH"
                            },
                            {
                              "hexValue": "57455448",
                              "id": 78835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1898:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                                "typeString": "literal_string \"WETH\""
                              },
                              "value": "WETH"
                            },
                            {
                              "hexValue": "3138",
                              "id": 78836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1906:2:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                                "typeString": "literal_string \"WETH\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                                "typeString": "literal_string \"WETH\""
                              },
                              {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              }
                            ],
                            "id": 78833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1876:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$24679_$",
                              "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                            },
                            "typeName": {
                              "id": 78832,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78831,
                                "name": "MockERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24679,
                                "src": "1880:9:167"
                              },
                              "referencedDeclaration": 24679,
                              "src": "1880:9:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$24679",
                                "typeString": "contract MockERC20"
                              }
                            }
                          },
                          "id": 78837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1876:33:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$24679",
                            "typeString": "contract MockERC20"
                          }
                        },
                        "src": "1869:40:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 78839,
                      "nodeType": "ExpressionStatement",
                      "src": "1869:40:167"
                    }
                  ]
                },
                {
                  "id": 78871,
                  "nodeType": "Block",
                  "src": "1930:188:167",
                  "statements": [
                    {
                      "documentation": "Deploy UniV2 Pools",
                      "expression": {
                        "id": 78854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78841,
                          "name": "gdaoDai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78779,
                          "src": "1979:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78847,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78759,
                                  "src": "2015:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2007:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78845,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2007:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2007:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78851,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78768,
                                  "src": "2030:3:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2022:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78849,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2022:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2022:12:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1989:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockUniV2Pair_$67090_$",
                              "typeString": "function (address,address) returns (contract MockUniV2Pair)"
                            },
                            "typeName": {
                              "id": 78843,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78842,
                                "name": "MockUniV2Pair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 67090,
                                "src": "1993:13:167"
                              },
                              "referencedDeclaration": 67090,
                              "src": "1993:13:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                "typeString": "contract MockUniV2Pair"
                              }
                            }
                          },
                          "id": 78853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1989:46:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "src": "1979:56:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 78855,
                      "nodeType": "ExpressionStatement",
                      "src": "1979:56:167"
                    },
                    {
                      "expression": {
                        "id": 78869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78856,
                          "name": "gdaoWeth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78782,
                          "src": "2049:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78862,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78759,
                                  "src": "2086:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2078:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78860,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2078:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2078:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78866,
                                  "name": "weth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78771,
                                  "src": "2101:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2093:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78864,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2093:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2093:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2060:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockUniV2Pair_$67090_$",
                              "typeString": "function (address,address) returns (contract MockUniV2Pair)"
                            },
                            "typeName": {
                              "id": 78858,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78857,
                                "name": "MockUniV2Pair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 67090,
                                "src": "2064:13:167"
                              },
                              "referencedDeclaration": 67090,
                              "src": "2064:13:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                "typeString": "contract MockUniV2Pair"
                              }
                            }
                          },
                          "id": 78868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:47:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "src": "2049:58:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 78870,
                      "nodeType": "ExpressionStatement",
                      "src": "2049:58:167"
                    }
                  ]
                },
                {
                  "id": 78900,
                  "nodeType": "Block",
                  "src": "2128:211:167",
                  "statements": [
                    {
                      "documentation": "Deploy Bophades Modules",
                      "expression": {
                        "id": 78882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78872,
                          "name": "mintr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78743,
                          "src": "2182:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 78876,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78740,
                              "src": "2207:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78879,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78759,
                                  "src": "2223:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2215:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78877,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2215:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2215:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2190:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_address_$returns$_t_contract$_GoerliMinter_$38611_$",
                              "typeString": "function (contract Kernel,address) returns (contract GoerliMinter)"
                            },
                            "typeName": {
                              "id": 78874,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78873,
                                "name": "GoerliMinter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38611,
                                "src": "2194:12:167"
                              },
                              "referencedDeclaration": 38611,
                              "src": "2194:12:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                "typeString": "contract GoerliMinter"
                              }
                            }
                          },
                          "id": 78881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2190:39:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        },
                        "src": "2182:47:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                          "typeString": "contract GoerliMinter"
                        }
                      },
                      "id": 78883,
                      "nodeType": "ExpressionStatement",
                      "src": "2182:47:167"
                    },
                    {
                      "expression": {
                        "id": 78890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78884,
                          "name": "trsry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78746,
                          "src": "2243:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 78888,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78740,
                              "src": "2273:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 78887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2251:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoTreasury_$41409_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoTreasury)"
                            },
                            "typeName": {
                              "id": 78886,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78885,
                                "name": "GoerliDaoTreasury",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 41409,
                                "src": "2255:17:167"
                              },
                              "referencedDeclaration": 41409,
                              "src": "2255:17:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                "typeString": "contract GoerliDaoTreasury"
                              }
                            }
                          },
                          "id": 78889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2251:29:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        },
                        "src": "2243:37:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                          "typeString": "contract GoerliDaoTreasury"
                        }
                      },
                      "id": 78891,
                      "nodeType": "ExpressionStatement",
                      "src": "2243:37:167"
                    },
                    {
                      "expression": {
                        "id": 78898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78892,
                          "name": "roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78749,
                          "src": "2294:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 78896,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78740,
                              "src": "2321:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 78895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2302:18:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_GoerliDaoRoles_$40791_$",
                              "typeString": "function (contract Kernel) returns (contract GoerliDaoRoles)"
                            },
                            "typeName": {
                              "id": 78894,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78893,
                                "name": "GoerliDaoRoles",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40791,
                                "src": "2306:14:167"
                              },
                              "referencedDeclaration": 40791,
                              "src": "2306:14:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                "typeString": "contract GoerliDaoRoles"
                              }
                            }
                          },
                          "id": 78897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:26:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                            "typeString": "contract GoerliDaoRoles"
                          }
                        },
                        "src": "2294:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                          "typeString": "contract GoerliDaoRoles"
                        }
                      },
                      "id": 78899,
                      "nodeType": "ExpressionStatement",
                      "src": "2294:34:167"
                    }
                  ]
                },
                {
                  "id": 78934,
                  "nodeType": "Block",
                  "src": "2349:265:167",
                  "statements": [
                    {
                      "documentation": "Initialize Modules",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78904,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "2419:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 78905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "2419:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78908,
                                "name": "mintr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78743,
                                "src": "2450:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                                  "typeString": "contract GoerliMinter"
                                }
                              ],
                              "id": 78907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2442:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78906,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2442:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2442:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78901,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78740,
                            "src": "2398:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 78903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "2398:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 78910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2398:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78911,
                      "nodeType": "ExpressionStatement",
                      "src": "2398:59:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78915,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "2492:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 78916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "2492:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78919,
                                "name": "trsry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78746,
                                "src": "2523:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                                  "typeString": "contract GoerliDaoTreasury"
                                }
                              ],
                              "id": 78918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2515:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78917,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2515:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2515:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78912,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78740,
                            "src": "2471:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 78914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "2471:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 78921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2471:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78922,
                      "nodeType": "ExpressionStatement",
                      "src": "2471:59:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78926,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "2565:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 78927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28342,
                            "src": "2565:21:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78930,
                                "name": "roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78749,
                                "src": "2596:5:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GoerliDaoRoles_$40791",
                                  "typeString": "contract GoerliDaoRoles"
                                }
                              ],
                              "id": 78929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2588:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78928,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2588:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2588:14:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78923,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78740,
                            "src": "2544:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 78925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "2544:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 78932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2544:59:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78933,
                      "nodeType": "ExpressionStatement",
                      "src": "2544:59:167"
                    }
                  ]
                },
                {
                  "id": 78991,
                  "nodeType": "Block",
                  "src": "2624:382:167",
                  "statements": [
                    {
                      "documentation": "Deploy Staking, Distributor, and Roles Admin",
                      "expression": {
                        "id": 78955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78935,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "2699:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 78941,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78759,
                                  "src": "2733:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2725:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78939,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2725:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2725:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78945,
                                  "name": "sgdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78762,
                                  "src": "2748:5:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2740:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78943,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2740:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2740:14:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78949,
                                  "name": "xgdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78765,
                                  "src": "2764:5:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockXgdao_$65778",
                                    "typeString": "contract MockXgdao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockXgdao_$65778",
                                    "typeString": "contract MockXgdao"
                                  }
                                ],
                                "id": 78948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2756:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78947,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2756:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2756:14:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "32323030",
                              "id": 78951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2772:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2200_by_1",
                                "typeString": "int_const 2200"
                              },
                              "value": "2200"
                            },
                            {
                              "hexValue": "30",
                              "id": 78952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2778:1:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "32323030",
                              "id": 78953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2781:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2200_by_1",
                                "typeString": "int_const 2200"
                              },
                              "value": "2200"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2200_by_1",
                                "typeString": "int_const 2200"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_2200_by_1",
                                "typeString": "int_const 2200"
                              }
                            ],
                            "id": 78938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2709:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_MockStaking_$66053_$",
                              "typeString": "function (address,address,address,uint256,uint256,uint256) returns (contract MockStaking)"
                            },
                            "typeName": {
                              "id": 78937,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78936,
                                "name": "MockStaking",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66053,
                                "src": "2713:11:167"
                              },
                              "referencedDeclaration": 66053,
                              "src": "2713:11:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockStaking_$66053",
                                "typeString": "contract MockStaking"
                              }
                            }
                          },
                          "id": 78954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2709:77:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        },
                        "src": "2699:87:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStaking_$66053",
                          "typeString": "contract MockStaking"
                        }
                      },
                      "id": 78956,
                      "nodeType": "ExpressionStatement",
                      "src": "2699:87:167"
                    },
                    {
                      "expression": {
                        "id": 78972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78957,
                          "name": "distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78752,
                          "src": "2800:11:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Distributor_$46496",
                            "typeString": "contract Distributor"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 78961,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78740,
                              "src": "2830:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78964,
                                  "name": "gdao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78759,
                                  "src": "2846:4:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$24679",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 78963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2838:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78962,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2838:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2838:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78968,
                                  "name": "staking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78775,
                                  "src": "2861:7:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockStaking_$66053",
                                    "typeString": "contract MockStaking"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockStaking_$66053",
                                    "typeString": "contract MockStaking"
                                  }
                                ],
                                "id": 78967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2853:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2853:7:167",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2853:16:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "31303030303030",
                              "id": 78970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2871:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "id": 78960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2814:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_Distributor_$46496_$",
                              "typeString": "function (contract Kernel,address,address,uint256) returns (contract Distributor)"
                            },
                            "typeName": {
                              "id": 78959,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78958,
                                "name": "Distributor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46496,
                                "src": "2818:11:167"
                              },
                              "referencedDeclaration": 46496,
                              "src": "2818:11:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Distributor_$46496",
                                "typeString": "contract Distributor"
                              }
                            }
                          },
                          "id": 78971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2814:65:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Distributor_$46496",
                            "typeString": "contract Distributor"
                          }
                        },
                        "src": "2800:79:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 78973,
                      "nodeType": "ExpressionStatement",
                      "src": "2800:79:167"
                    },
                    {
                      "expression": {
                        "id": 78980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78974,
                          "name": "rolesAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78755,
                          "src": "2901:10:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 78978,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78740,
                              "src": "2929:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Kernel_$29497",
                                "typeString": "contract Kernel"
                              }
                            ],
                            "id": 78977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2914:14:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Kernel_$29497_$returns$_t_contract$_RolesAdmin_$51234_$",
                              "typeString": "function (contract Kernel) returns (contract RolesAdmin)"
                            },
                            "typeName": {
                              "id": 78976,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78975,
                                "name": "RolesAdmin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51234,
                                "src": "2918:10:167"
                              },
                              "referencedDeclaration": 51234,
                              "src": "2918:10:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                "typeString": "contract RolesAdmin"
                              }
                            }
                          },
                          "id": 78979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2914:22:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                            "typeString": "contract RolesAdmin"
                          }
                        },
                        "src": "2901:35:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                          "typeString": "contract RolesAdmin"
                        }
                      },
                      "id": 78981,
                      "nodeType": "ExpressionStatement",
                      "src": "2901:35:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78987,
                                "name": "distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78752,
                                "src": "2982:11:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              ],
                              "id": 78986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2974:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78985,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2974:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2974:20:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78982,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "2951:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          },
                          "id": 78984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setDistributor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65860,
                          "src": "2951:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 78989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2951:44:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78990,
                      "nodeType": "ExpressionStatement",
                      "src": "2951:44:167"
                    }
                  ]
                },
                {
                  "id": 79024,
                  "nodeType": "Block",
                  "src": "3016:287:167",
                  "statements": [
                    {
                      "documentation": "Initialize Distributor Policy",
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78995,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3097:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 78996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3097:22:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78999,
                                "name": "distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78752,
                                "src": "3129:11:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              ],
                              "id": 78998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3121:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 78997,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3121:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3121:20:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 78992,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78740,
                            "src": "3076:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 78994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3076:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 79001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3076:66:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79002,
                      "nodeType": "ExpressionStatement",
                      "src": "3076:66:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 79006,
                              "name": "Actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28348,
                              "src": "3177:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Actions_$28348_$",
                                "typeString": "type(enum Actions)"
                              }
                            },
                            "id": 79007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ActivatePolicy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28344,
                            "src": "3177:22:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 79010,
                                "name": "rolesAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78755,
                                "src": "3209:10:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                                  "typeString": "contract RolesAdmin"
                                }
                              ],
                              "id": 79009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3201:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3201:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3201:19:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Actions_$28348",
                              "typeString": "enum Actions"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79003,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78740,
                            "src": "3156:6:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Kernel_$29497",
                              "typeString": "contract Kernel"
                            }
                          },
                          "id": 79005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executeAction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28931,
                          "src": "3156:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_enum$_Actions_$28348_$_t_address_$returns$__$",
                            "typeString": "function (enum Actions,address) external"
                          }
                        },
                        "id": 79012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3156:65:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79013,
                      "nodeType": "ExpressionStatement",
                      "src": "3156:65:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 79017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3257:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          },
                          {
                            "arguments": [
                              {
                                "id": 79020,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3286:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              ],
                              "id": 79019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3278:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79018,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3278:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3278:13:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79014,
                            "name": "rolesAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78755,
                            "src": "3236:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RolesAdmin_$51234",
                              "typeString": "contract RolesAdmin"
                            }
                          },
                          "id": 79016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grantRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51173,
                          "src": "3236:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 79022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3236:56:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79023,
                      "nodeType": "ExpressionStatement",
                      "src": "3236:56:167"
                    }
                  ]
                },
                {
                  "id": 79157,
                  "nodeType": "Block",
                  "src": "3313:936:167",
                  "statements": [
                    {
                      "documentation": "Mint Tokens",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79030,
                                "name": "distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78752,
                                "src": "3377:11:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              ],
                              "id": 79029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3369:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79028,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3369:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3369:20:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79025,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "3355:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 79027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startPrank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7053,
                          "src": "3355:13:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 79032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3355:35:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79033,
                      "nodeType": "ExpressionStatement",
                      "src": "3355:35:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79039,
                                "name": "distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78752,
                                "src": "3439:11:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Distributor_$46496",
                                  "typeString": "contract Distributor"
                                }
                              ],
                              "id": 79038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3431:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79037,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3431:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3431:20:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 79043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3458:7:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 79042,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3458:7:167",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 79041,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3453:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 79044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3453:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 79045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "3453:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 79034,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "3404:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 79036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "increaseMintApproval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38546,
                          "src": "3404:26:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3404:67:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79047,
                      "nodeType": "ExpressionStatement",
                      "src": "3404:67:167"
                    },
                    {
                      "documentation": "Mint GDAO to deployer and staking contract",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79053,
                                "name": "staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78775,
                                "src": "3568:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              ],
                              "id": 79052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3560:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79051,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3560:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3560:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 79055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3578:11:167",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79048,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "3545:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 79050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintGdao",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38461,
                          "src": "3545:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3545:45:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79057,
                      "nodeType": "ExpressionStatement",
                      "src": "3545:45:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79063,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3627:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              ],
                              "id": 79062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3619:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79061,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3619:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3619:13:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 79065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3634:11:167",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79058,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "3604:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 79060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintGdao",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38461,
                          "src": "3604:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3604:42:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79067,
                      "nodeType": "ExpressionStatement",
                      "src": "3604:42:167"
                    },
                    {
                      "documentation": "Mint DAI and GDAO to GDAO-DAI pool",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79073,
                                "name": "gdaoDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78779,
                                "src": "3735:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              ],
                              "id": 79072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3727:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79071,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3727:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3727:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 79075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3745:11:167",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79068,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "3712:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 79070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintGdao",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38461,
                          "src": "3712:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3712:45:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79077,
                      "nodeType": "ExpressionStatement",
                      "src": "3712:45:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79083,
                                "name": "gdaoDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78779,
                                "src": "3788:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              ],
                              "id": 79082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3780:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79081,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3780:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3780:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            },
                            "id": 79089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030303030",
                              "id": 79085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3798:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 79088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 79086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3807:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 79087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3811:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "3807:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "3798:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79078,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78768,
                            "src": "3771:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 79080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24665,
                          "src": "3771:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3771:43:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79091,
                      "nodeType": "ExpressionStatement",
                      "src": "3771:43:167"
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79092,
                            "name": "gdaoDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78779,
                            "src": "3828:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          },
                          "id": 79094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sync",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67089,
                          "src": "3828:12:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        "id": 79095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3828:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79096,
                      "nodeType": "ExpressionStatement",
                      "src": "3828:14:167"
                    },
                    {
                      "documentation": "Mint WETH and GDAO to GDAO-WETH pool",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79102,
                                "name": "gdaoWeth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78782,
                                "src": "3933:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              ],
                              "id": 79101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3925:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79100,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3925:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3925:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 79104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3944:11:167",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79097,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "3910:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          },
                          "id": 79099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintGdao",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38461,
                          "src": "3910:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3910:46:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79106,
                      "nodeType": "ExpressionStatement",
                      "src": "3910:46:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79112,
                                "name": "gdaoWeth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78782,
                                "src": "3988:8:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                                  "typeString": "contract MockUniV2Pair"
                                }
                              ],
                              "id": 79111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3980:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79110,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3980:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3980:17:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            },
                            "id": 79118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030303030",
                              "id": 79114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3999:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 79117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 79115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4008:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 79116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4012:2:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "4008:6:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "3999:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 79107,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78771,
                            "src": "3970:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 79109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24665,
                          "src": "3970:9:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 79119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3970:45:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79120,
                      "nodeType": "ExpressionStatement",
                      "src": "3970:45:167"
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79121,
                            "name": "gdaoWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78782,
                            "src": "4029:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          },
                          "id": 79123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sync",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67089,
                          "src": "4029:13:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        "id": 79124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4029:15:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79125,
                      "nodeType": "ExpressionStatement",
                      "src": "4029:15:167"
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79126,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "4058:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 79128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stopPrank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7070,
                          "src": "4058:12:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        "id": 79129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4058:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79130,
                      "nodeType": "ExpressionStatement",
                      "src": "4058:14:167"
                    },
                    {
                      "documentation": "Stake deployer's GDAO",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79136,
                                "name": "staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78775,
                                "src": "4146:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              ],
                              "id": 79135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4138:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79134,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4138:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4138:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 79140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4161:7:167",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 79139,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4161:7:167",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 79138,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "4156:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 79141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4156:13:167",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 79142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "4156:17:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 79131,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78759,
                            "src": "4125:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 79133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25452,
                          "src": "4125:12:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 79143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4125:49:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 79144,
                      "nodeType": "ExpressionStatement",
                      "src": "4125:49:167"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79150,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4210:4:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                  "typeString": "contract DistributorTest"
                                }
                              ],
                              "id": 79149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4202:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79148,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4202:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4202:13:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030",
                            "id": 79152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4217:8:167",
                            "subdenomination": "gwei",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000_by_1",
                              "typeString": "int_const 100000000000"
                            },
                            "value": "100"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 79153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4227:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 79154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4233:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000_by_1",
                              "typeString": "int_const 100000000000"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 79145,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "4188:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          },
                          "id": 79147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65903,
                          "src": "4188:13:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256,bool,bool) external returns (uint256)"
                          }
                        },
                        "id": 79155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4188:50:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 79156,
                      "nodeType": "ExpressionStatement",
                      "src": "4188:50:167"
                    }
                  ]
                },
                {
                  "id": 79164,
                  "nodeType": "Block",
                  "src": "4259:78:167",
                  "statements": [
                    {
                      "documentation": "Initialize block.timestamp",
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 79161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4324:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 79158,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "4316:2:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$7535",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 79160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "warp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6837,
                          "src": "4316:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 79162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4316:10:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 79163,
                      "nodeType": "ExpressionStatement",
                      "src": "4316:10:167"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1542:5:167",
            "parameters": {
              "id": 78783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:2:167"
            },
            "returnParameters": {
              "id": 78784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79196,
            "nodeType": "FunctionDefinition",
            "src": "4395:205:167",
            "nodes": [],
            "body": {
              "id": 79195,
              "nodeType": "Block",
              "src": "4431:169:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79171,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "4450:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46001,
                          "src": "4450:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 79173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4450:24:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 79174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4476:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 79170,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4441:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:43:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79176,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:43:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79178,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "4503:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46003,
                          "src": "4503:18:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 79180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4503:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4525:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 79177,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4494:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4494:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79183,
                  "nodeType": "ExpressionStatement",
                  "src": "4494:33:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79189,
                                "name": "staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78775,
                                "src": "4570:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              ],
                              "id": 79188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4562:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79187,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4562:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4562:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79185,
                            "name": "gdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78759,
                            "src": "4547:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$24679",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 79186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25382,
                          "src": "4547:14:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 79191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4547:32:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030313030",
                        "id": 79192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:11:167",
                        "subdenomination": "gwei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100100000000000_by_1",
                          "typeString": "int_const 100100000000000"
                        },
                        "value": "100100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100100000000000_by_1",
                          "typeString": "int_const 100100000000000"
                        }
                      ],
                      "id": 79184,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "4538:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4538:55:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79194,
                  "nodeType": "ExpressionStatement",
                  "src": "4538:55:167"
                }
              ]
            },
            "documentation": {
              "id": 79167,
              "nodeType": "StructuredDocumentation",
              "src": "4349:41:167",
              "text": "Basic post-setup functionality tests"
            },
            "functionSelector": "c2f1b74d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_defaultState",
            "nameLocation": "4404:17:167",
            "parameters": {
              "id": 79168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4421:2:167"
            },
            "returnParameters": {
              "id": 79169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4431:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79221,
            "nodeType": "FunctionDefinition",
            "src": "4774:224:167",
            "nodes": [],
            "body": {
              "id": 79220,
              "nodeType": "Block",
              "src": "4830:168:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79201,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "4853:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79220,
                      "src": "4840:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79200,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4840:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79208,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79204,
                            "name": "Distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46496,
                            "src": "4882:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                              "typeString": "type(contract Distributor)"
                            }
                          },
                          "id": 79205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Distributor_OnlyStaking",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45972,
                          "src": "4882:35:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 79206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4882:44:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 79202,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4859:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "4859:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:68:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4840:87:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79212,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79201,
                        "src": "4953:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "4937:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "4937:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79214,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:20:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79215,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "4967:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46340,
                      "src": "4967:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 79218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4967:24:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79219,
                  "nodeType": "ExpressionStatement",
                  "src": "4967:24:167"
                }
              ]
            },
            "documentation": {
              "id": 79197,
              "nodeType": "StructuredDocumentation",
              "src": "4651:118:167",
              "text": "[X]  distribute()\n     [X]  Can only be called by staking\n     [X]  Cannot be called if not unlocked"
            },
            "functionSelector": "7bc6b0e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_distributeOnlyStaking",
            "nameLocation": "4783:37:167",
            "parameters": {
              "id": 79198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4820:2:167"
            },
            "returnParameters": {
              "id": 79199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79254,
            "nodeType": "FunctionDefinition",
            "src": "5004:261:167",
            "nodes": [],
            "body": {
              "id": 79253,
              "nodeType": "Block",
              "src": "5060:205:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79225,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "5083:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79253,
                      "src": "5070:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79224,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5070:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79232,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79228,
                            "name": "Distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46496,
                            "src": "5112:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                              "typeString": "type(contract Distributor)"
                            }
                          },
                          "id": 79229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Distributor_NotUnlocked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45974,
                          "src": "5112:35:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 79230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5112:44:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 79226,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5089:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "5089:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5089:68:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5070:87:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79236,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79225,
                        "src": "5183:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79233,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5167:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5167:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5167:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79238,
                  "nodeType": "ExpressionStatement",
                  "src": "5167:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79244,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "5215:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5207:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79242,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5207:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5207:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79239,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5198:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5198:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5198:26:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79247,
                  "nodeType": "ExpressionStatement",
                  "src": "5198:26:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79248,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "5234:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46340,
                      "src": "5234:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 79251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:24:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79252,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:24:167"
                }
              ]
            },
            "functionSelector": "fd01673f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_distributeNotUnlocked",
            "nameLocation": "5013:37:167",
            "parameters": {
              "id": 79222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5050:2:167"
            },
            "returnParameters": {
              "id": 79223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5060:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79275,
            "nodeType": "FunctionDefinition",
            "src": "5402:189:167",
            "nodes": [],
            "body": {
              "id": 79274,
              "nodeType": "Block",
              "src": "5451:140:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 79263,
                                "name": "Distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46496,
                                "src": "5500:11:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                                  "typeString": "type(contract Distributor)"
                                }
                              },
                              "id": 79264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Distributor_OnlyStaking",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45972,
                              "src": "5500:35:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 79265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5500:44:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 79261,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5477:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 79262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5477:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 79266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5477:68:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79258,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5461:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "5461:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:85:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79268,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:85:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79269,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "5556:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieveBounty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46368,
                      "src": "5556:26:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 79272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:28:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79273,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:28:167"
                }
              ]
            },
            "documentation": {
              "id": 79255,
              "nodeType": "StructuredDocumentation",
              "src": "5271:126:167",
              "text": "[X]  retrieveBounty()\n     [X]  Can only be called by staking\n     [X]  Bounty is zero and no GDAO is minted"
            },
            "functionSelector": "3e94ec70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retrieveBountyOnlyStaking",
            "nameLocation": "5411:30:167",
            "parameters": {
              "id": 79256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5441:2:167"
            },
            "returnParameters": {
              "id": 79257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5451:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79316,
            "nodeType": "FunctionDefinition",
            "src": "5597:320:167",
            "nodes": [],
            "body": {
              "id": 79315,
              "nodeType": "Block",
              "src": "5641:276:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79279,
                      "mutability": "mutable",
                      "name": "supplyBefore",
                      "nameLocation": "5659:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79315,
                      "src": "5651:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5651:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79283,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79280,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "5674:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 79281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25378,
                      "src": "5674:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 79282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5674:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5651:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79289,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "5720:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5712:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5712:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5712:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79284,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "5703:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "5703:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5703:26:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79292,
                  "nodeType": "ExpressionStatement",
                  "src": "5703:26:167"
                },
                {
                  "assignments": [
                    79294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79294,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "5747:6:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79315,
                      "src": "5739:14:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5739:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79298,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79295,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "5756:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieveBounty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46368,
                      "src": "5756:26:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 79297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5756:28:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5739:45:167"
                },
                {
                  "assignments": [
                    79300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79300,
                      "mutability": "mutable",
                      "name": "supplyAfter",
                      "nameLocation": "5803:11:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79315,
                      "src": "5795:19:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5795:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79304,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79301,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "5817:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 79302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25378,
                      "src": "5817:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 79303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5817:18:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5795:40:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79306,
                        "name": "bounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79294,
                        "src": "5855:6:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 79307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5863:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 79305,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5846:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5846:19:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79309,
                  "nodeType": "ExpressionStatement",
                  "src": "5846:19:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79311,
                        "name": "supplyAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79300,
                        "src": "5884:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79312,
                        "name": "supplyBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79279,
                        "src": "5897:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79310,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "5875:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:35:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79314,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:35:167"
                }
              ]
            },
            "functionSelector": "81265253",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retrieveBountyIsZero",
            "nameLocation": "5606:25:167",
            "parameters": {
              "id": 79276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5631:2:167"
            },
            "returnParameters": {
              "id": 79277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5641:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79355,
            "nodeType": "FunctionDefinition",
            "src": "6038:337:167",
            "nodes": [],
            "body": {
              "id": 79354,
              "nodeType": "Block",
              "src": "6086:289:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79321,
                      "mutability": "mutable",
                      "name": "stakingBalance",
                      "nameLocation": "6104:14:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79354,
                      "src": "6096:22:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6096:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79323,
                  "initialValue": {
                    "hexValue": "313030313030",
                    "id": 79322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6121:11:167",
                    "subdenomination": "gwei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100100000000000_by_1",
                      "typeString": "int_const 100100000000000"
                    },
                    "value": "100100"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6096:36:167"
                },
                {
                  "assignments": [
                    79325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79325,
                      "mutability": "mutable",
                      "name": "rewardRate",
                      "nameLocation": "6150:10:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79354,
                      "src": "6142:18:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6142:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79329,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79326,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "6163:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46001,
                      "src": "6163:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 79328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6163:24:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6142:45:167"
                },
                {
                  "assignments": [
                    79331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79331,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nameLocation": "6205:11:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79354,
                      "src": "6197:19:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6197:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79333,
                  "initialValue": {
                    "hexValue": "316539",
                    "id": 79332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6219:3:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "value": "1e9"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6197:25:167"
                },
                {
                  "assignments": [
                    79335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79335,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "6240:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79354,
                      "src": "6232:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6232:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79342,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 79338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 79336,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79321,
                            "src": "6252:14:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 79337,
                            "name": "rewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79325,
                            "src": "6269:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6252:27:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 79339,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6251:29:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 79340,
                      "name": "denominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79331,
                      "src": "6283:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6251:43:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6232:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 79348,
                                "name": "staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78775,
                                "src": "6348:7:167",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockStaking_$66053",
                                  "typeString": "contract MockStaking"
                                }
                              ],
                              "id": 79347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6340:7:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79346,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6340:7:167",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6340:16:167",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79344,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "6314:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nextRewardFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46387,
                          "src": "6314:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 79350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6314:43:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79351,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79335,
                        "src": "6359:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79343,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "6305:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6305:63:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79353,
                  "nodeType": "ExpressionStatement",
                  "src": "6305:63:167"
                }
              ]
            },
            "documentation": {
              "id": 79317,
              "nodeType": "StructuredDocumentation",
              "src": "5923:110:167",
              "text": "[X] nextRewardFor()\n     [X]  Next reward for the staking contract matches the expected calculation"
            },
            "functionSelector": "32301b8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_nextRewardFor",
            "nameLocation": "6047:29:167",
            "parameters": {
              "id": 79318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6076:2:167"
            },
            "returnParameters": {
              "id": 79319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6086:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79404,
            "nodeType": "FunctionDefinition",
            "src": "6582:361:167",
            "nodes": [],
            "body": {
              "id": 79403,
              "nodeType": "Block",
              "src": "6651:292:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79364,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79358,
                          "src": "6671:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 79367,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6688:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            ],
                            "id": 79366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6680:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 79365,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6680:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6680:13:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6671:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79361,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6661:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "6661:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6661:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79371,
                  "nodeType": "ExpressionStatement",
                  "src": "6661:33:167"
                },
                {
                  "assignments": [
                    79373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79373,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "6718:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79403,
                      "src": "6705:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79372,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6705:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79384,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79376,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "6760:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 79377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "6760:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 79378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "6760:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 79381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6816:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            }
                          ],
                          "id": 79380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6808:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 79379,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6808:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6808:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 79374,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6724:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "6724:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6724:122:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6705:141:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79388,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79373,
                        "src": "6872:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6856:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "6856:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6856:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79390,
                  "nodeType": "ExpressionStatement",
                  "src": "6856:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79394,
                        "name": "user_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79358,
                        "src": "6896:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79391,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "6887:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "6887:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6887:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79396,
                  "nodeType": "ExpressionStatement",
                  "src": "6887:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6934:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 79397,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "6912:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setBounty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46401,
                      "src": "6912:21:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 79401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6912:24:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79402,
                  "nodeType": "ExpressionStatement",
                  "src": "6912:24:167"
                }
              ]
            },
            "documentation": {
              "id": 79356,
              "nodeType": "StructuredDocumentation",
              "src": "6436:141:167",
              "text": "[X]  setBounty()\n     [X]  Can only be called by an address with the distributor_admin role\n     [X]  Sets bounty correctly"
            },
            "functionSelector": "3a7e4dcf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setBountyRequiresRole",
            "nameLocation": "6591:37:167",
            "parameters": {
              "id": 79359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79358,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "6637:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 79404,
                  "src": "6629:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:15:167"
            },
            "returnParameters": {
              "id": 79360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6651:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79423,
            "nodeType": "FunctionDefinition",
            "src": "6949:164:167",
            "nodes": [],
            "body": {
              "id": 79422,
              "nodeType": "Block",
              "src": "7011:102:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79412,
                        "name": "newBounty_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79406,
                        "src": "7043:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 79409,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "7021:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setBounty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46401,
                      "src": "7021:21:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 79413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7021:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79414,
                  "nodeType": "ExpressionStatement",
                  "src": "7021:33:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79416,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "7073:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46003,
                          "src": "7073:18:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 79418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7073:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79419,
                        "name": "newBounty_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79406,
                        "src": "7095:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79415,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "7064:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 79420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7064:42:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79421,
                  "nodeType": "ExpressionStatement",
                  "src": "7064:42:167"
                }
              ]
            },
            "functionSelector": "cbc6619a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setBounty",
            "nameLocation": "6958:25:167",
            "parameters": {
              "id": 79407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79406,
                  "mutability": "mutable",
                  "name": "newBounty_",
                  "nameLocation": "6992:10:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 79423,
                  "src": "6984:18:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6984:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6983:20:167"
            },
            "returnParameters": {
              "id": 79408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7011:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79501,
            "nodeType": "FunctionDefinition",
            "src": "7262:499:167",
            "nodes": [],
            "body": {
              "id": 79500,
              "nodeType": "Block",
              "src": "7330:431:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79432,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79426,
                          "src": "7350:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 79435,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7367:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            ],
                            "id": 79434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7359:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 79433,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7359:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7359:13:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7350:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79429,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7340:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "7340:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7340:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79439,
                  "nodeType": "ExpressionStatement",
                  "src": "7340:33:167"
                },
                {
                  "assignments": [
                    79441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79441,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "7397:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79500,
                      "src": "7384:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79440,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7384:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79452,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79444,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "7439:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 79445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "7439:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 79446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "7439:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 79449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7495:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            }
                          ],
                          "id": 79448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7487:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 79447,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7487:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7487:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 79442,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7403:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "7403:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7403:122:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7384:141:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79456,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79441,
                        "src": "7551:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79453,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7535:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "7535:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7535:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79458,
                  "nodeType": "ExpressionStatement",
                  "src": "7535:20:167"
                },
                {
                  "assignments": [
                    79463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79463,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "7583:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79500,
                      "src": "7566:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7566:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79462,
                        "nodeType": "ArrayTypeName",
                        "src": "7566:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79469,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7608:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7594:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7598:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79465,
                        "nodeType": "ArrayTypeName",
                        "src": "7598:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7594:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7566:44:167"
                },
                {
                  "expression": {
                    "id": 79477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79470,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79463,
                        "src": "7620:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79472,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7629:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7620:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79475,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "7642:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        ],
                        "id": 79474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7634:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7634:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7634:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7620:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79478,
                  "nodeType": "ExpressionStatement",
                  "src": "7620:30:167"
                },
                {
                  "expression": {
                    "id": 79486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79479,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79463,
                        "src": "7660:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79481,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7669:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7660:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79484,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "7682:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        ],
                        "id": 79483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7674:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7674:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7674:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7660:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79487,
                  "nodeType": "ExpressionStatement",
                  "src": "7660:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79491,
                        "name": "user_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79426,
                        "src": "7708:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79488,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "7699:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "7699:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7699:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79493,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79497,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79463,
                        "src": "7745:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79494,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "7724:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "7724:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7724:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79499,
                  "nodeType": "ExpressionStatement",
                  "src": "7724:30:167"
                }
              ]
            },
            "documentation": {
              "id": 79424,
              "nodeType": "StructuredDocumentation",
              "src": "7119:138:167",
              "text": "[X] setPools()\n     [X]  Can only be called by an address with the distributor_admin role\n     [X]  Sets pools correctly"
            },
            "functionSelector": "ebd0e4a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setPoolsRequiresRole",
            "nameLocation": "7271:36:167",
            "parameters": {
              "id": 79427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79426,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "7316:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 79501,
                  "src": "7308:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7308:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7307:15:167"
            },
            "returnParameters": {
              "id": 79428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7330:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79540,
            "nodeType": "FunctionDefinition",
            "src": "7767:223:167",
            "nodes": [],
            "body": {
              "id": 79539,
              "nodeType": "Block",
              "src": "7810:180:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79508,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "7837:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79539,
                      "src": "7820:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79506,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7820:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79507,
                        "nodeType": "ArrayTypeName",
                        "src": "7820:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79514,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7862:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7848:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7852:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79510,
                        "nodeType": "ArrayTypeName",
                        "src": "7852:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7848:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7820:44:167"
                },
                {
                  "expression": {
                    "id": 79522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79515,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79508,
                        "src": "7874:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79517,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7883:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7874:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79520,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "7896:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        ],
                        "id": 79519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7888:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7888:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7888:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7874:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79523,
                  "nodeType": "ExpressionStatement",
                  "src": "7874:30:167"
                },
                {
                  "expression": {
                    "id": 79531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79524,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79508,
                        "src": "7914:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79526,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7923:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7914:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79529,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "7936:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        ],
                        "id": 79528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7928:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7928:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7928:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7914:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79532,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79536,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79508,
                        "src": "7974:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79533,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "7953:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "7953:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7953:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79538,
                  "nodeType": "ExpressionStatement",
                  "src": "7953:30:167"
                }
              ]
            },
            "functionSelector": "f072678e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setPools",
            "nameLocation": "7776:24:167",
            "parameters": {
              "id": 79502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7800:2:167"
            },
            "returnParameters": {
              "id": 79503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7810:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79628,
            "nodeType": "FunctionDefinition",
            "src": "8212:611:167",
            "nodes": [],
            "body": {
              "id": 79627,
              "nodeType": "Block",
              "src": "8282:541:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79549,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79543,
                          "src": "8302:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 79552,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "8319:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            ],
                            "id": 79551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8311:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 79550,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8311:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8311:13:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8302:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79546,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8292:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "8292:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79556,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:33:167"
                },
                {
                  "assignments": [
                    79561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79561,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "8372:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79627,
                      "src": "8355:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8355:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79560,
                        "nodeType": "ArrayTypeName",
                        "src": "8355:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 79567,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8397:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8383:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79562,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8387:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79563,
                        "nodeType": "ArrayTypeName",
                        "src": "8387:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8383:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8355:44:167"
                },
                {
                  "expression": {
                    "id": 79575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79568,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79561,
                        "src": "8409:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79570,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8418:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8409:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79573,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "8431:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        ],
                        "id": 79572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8423:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8423:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8423:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8409:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79576,
                  "nodeType": "ExpressionStatement",
                  "src": "8409:30:167"
                },
                {
                  "expression": {
                    "id": 79584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79577,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79561,
                        "src": "8449:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79579,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8458:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8449:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79582,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "8471:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        ],
                        "id": 79581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8463:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8463:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8463:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8449:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79585,
                  "nodeType": "ExpressionStatement",
                  "src": "8449:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79589,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79561,
                        "src": "8508:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79586,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "8487:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "8487:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8487:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79591,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:30:167"
                },
                {
                  "assignments": [
                    79593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79593,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "8541:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79627,
                      "src": "8528:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79592,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8528:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79604,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79596,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "8583:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 79597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "8583:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 79598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "8583:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 79601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8639:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            }
                          ],
                          "id": 79600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8631:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 79599,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8631:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8631:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 79594,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8547:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "8547:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8547:122:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8528:141:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79608,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79593,
                        "src": "8695:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79605,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8679:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "8679:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8679:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79610,
                  "nodeType": "ExpressionStatement",
                  "src": "8679:20:167"
                },
                {
                  "documentation": "Remove Pool (should fail)",
                  "expression": {
                    "arguments": [
                      {
                        "id": 79614,
                        "name": "user_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79543,
                        "src": "8757:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79611,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "8748:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "8748:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8748:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79616,
                  "nodeType": "ExpressionStatement",
                  "src": "8748:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8796:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79623,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "8807:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8799:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8799:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8799:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79617,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "8773:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "8773:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8773:43:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79626,
                  "nodeType": "ExpressionStatement",
                  "src": "8773:43:167"
                }
              ]
            },
            "documentation": {
              "id": 79541,
              "nodeType": "StructuredDocumentation",
              "src": "7996:211:167",
              "text": "[X]  removePool()\n     [X]  Can only be called by an address with the distributor_admin role\n     [X]  Fails on sanity check when parameters are invalid\n     [X]  Correctly removes pool"
            },
            "functionSelector": "930c2620",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_removePoolRequiresRole",
            "nameLocation": "8221:38:167",
            "parameters": {
              "id": 79544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79543,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "8268:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 79628,
                  "src": "8260:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8260:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8259:15:167"
            },
            "returnParameters": {
              "id": 79545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8282:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79693,
            "nodeType": "FunctionDefinition",
            "src": "8829:479:167",
            "nodes": [],
            "body": {
              "id": 79692,
              "nodeType": "Block",
              "src": "8892:416:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79635,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "8938:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79692,
                      "src": "8921:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8921:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79634,
                        "nodeType": "ArrayTypeName",
                        "src": "8921:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 79641,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8963:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8949:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8953:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79637,
                        "nodeType": "ArrayTypeName",
                        "src": "8953:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8949:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8921:44:167"
                },
                {
                  "expression": {
                    "id": 79649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79642,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79635,
                        "src": "8975:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79644,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8984:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8975:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79647,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "8997:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        ],
                        "id": 79646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8989:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8989:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8989:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8975:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79650,
                  "nodeType": "ExpressionStatement",
                  "src": "8975:30:167"
                },
                {
                  "expression": {
                    "id": 79658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79651,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79635,
                        "src": "9015:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79653,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9024:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9015:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79656,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "9037:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        ],
                        "id": 79655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9029:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9029:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9029:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9015:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79659,
                  "nodeType": "ExpressionStatement",
                  "src": "9015:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79663,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79635,
                        "src": "9074:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79660,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "9053:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "9053:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9053:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79665,
                  "nodeType": "ExpressionStatement",
                  "src": "9053:30:167"
                },
                {
                  "assignments": [
                    79668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79668,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "9145:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79692,
                      "src": "9132:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79667,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9132:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Remove Pool (should fail)",
                  "id": 79675,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79671,
                            "name": "Distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46496,
                            "src": "9174:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                              "typeString": "type(contract Distributor)"
                            }
                          },
                          "id": 79672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Distributor_SanityCheck",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45976,
                          "src": "9174:35:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 79673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "9174:44:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 79669,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9151:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "9151:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9151:68:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9132:87:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79679,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79668,
                        "src": "9245:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79676,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "9229:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "9229:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79681,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9283:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79688,
                            "name": "xgdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78765,
                            "src": "9294:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          ],
                          "id": 79687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9286:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9286:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9286:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79682,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "9260:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "9260:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79691,
                  "nodeType": "ExpressionStatement",
                  "src": "9260:41:167"
                }
              ]
            },
            "functionSelector": "a857b39b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_removePoolFailsOnSanityCheck",
            "nameLocation": "8838:44:167",
            "parameters": {
              "id": 79629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8882:2:167"
            },
            "returnParameters": {
              "id": 79630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8892:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79796,
            "nodeType": "FunctionDefinition",
            "src": "9314:705:167",
            "nodes": [],
            "body": {
              "id": 79795,
              "nodeType": "Block",
              "src": "9360:659:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79700,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "9406:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79795,
                      "src": "9389:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9389:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79699,
                        "nodeType": "ArrayTypeName",
                        "src": "9389:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 79706,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9431:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9417:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79701,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9421:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79702,
                        "nodeType": "ArrayTypeName",
                        "src": "9421:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9417:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9389:44:167"
                },
                {
                  "expression": {
                    "id": 79714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79707,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79700,
                        "src": "9443:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79709,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9452:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9443:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79712,
                          "name": "staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78775,
                          "src": "9465:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockStaking_$66053",
                            "typeString": "contract MockStaking"
                          }
                        ],
                        "id": 79711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9457:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9457:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9457:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9443:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79715,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:30:167"
                },
                {
                  "expression": {
                    "id": 79723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79716,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79700,
                        "src": "9483:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79718,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9492:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9483:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79721,
                          "name": "xgdao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78765,
                          "src": "9505:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockXgdao_$65778",
                            "typeString": "contract MockXgdao"
                          }
                        ],
                        "id": 79720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9497:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9497:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9497:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9483:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79724,
                  "nodeType": "ExpressionStatement",
                  "src": "9483:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79728,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79700,
                        "src": "9542:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79725,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "9521:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "9521:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9521:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79730,
                  "nodeType": "ExpressionStatement",
                  "src": "9521:30:167"
                },
                {
                  "documentation": "Remove first pool",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9615:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79737,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "9626:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9618:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9618:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9618:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79731,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "9592:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "9592:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9592:43:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79740,
                  "nodeType": "ExpressionStatement",
                  "src": "9592:43:167"
                },
                {
                  "documentation": "Verify state after first removal",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 79744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9718:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 79742,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "9700:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "9700:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 79745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9700:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 79748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9730:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 79747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9722:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79746,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9722:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9722:12:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79741,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9691:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 79750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9691:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79751,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 79755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9772:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 79753,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "9754:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "9754:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 79756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9754:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 79759,
                            "name": "xgdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78765,
                            "src": "9784:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          ],
                          "id": 79758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9776:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9776:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9776:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79752,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9745:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 79761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9745:46:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79762,
                  "nodeType": "ExpressionStatement",
                  "src": "9745:46:167"
                },
                {
                  "documentation": "Remove second pool",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 79766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9856:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79769,
                            "name": "xgdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78765,
                            "src": "9867:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          ],
                          "id": 79768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9859:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9859:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9859:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79763,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "9833:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "9833:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9833:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79772,
                  "nodeType": "ExpressionStatement",
                  "src": "9833:41:167"
                },
                {
                  "documentation": "Verify end state",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 79776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9941:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 79774,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "9923:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "9923:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 79777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9923:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 79780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9953:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 79779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9945:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79778,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9945:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9945:12:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79773,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9914:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 79782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9914:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79783,
                  "nodeType": "ExpressionStatement",
                  "src": "9914:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 79787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9995:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 79785,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "9977:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "9977:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 79788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9977:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 79791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10007:3:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 79790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9999:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9999:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9999:12:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79784,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "9968:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 79793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9968:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79794,
                  "nodeType": "ExpressionStatement",
                  "src": "9968:44:167"
                }
              ]
            },
            "functionSelector": "45311db7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_removesPool",
            "nameLocation": "9323:27:167",
            "parameters": {
              "id": 79694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9350:2:167"
            },
            "returnParameters": {
              "id": 79695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9360:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79849,
            "nodeType": "FunctionDefinition",
            "src": "10267:375:167",
            "nodes": [],
            "body": {
              "id": 79848,
              "nodeType": "Block",
              "src": "10334:308:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79805,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79799,
                          "src": "10354:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 79808,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10371:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            ],
                            "id": 79807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10363:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 79806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10363:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10363:13:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10354:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 79802,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10344:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "10344:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 79811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79812,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:33:167"
                },
                {
                  "assignments": [
                    79814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79814,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "10401:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79848,
                      "src": "10388:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79813,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10388:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79825,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 79817,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "10443:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 79818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "10443:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 79819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "10443:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 79822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10499:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            }
                          ],
                          "id": 79821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10491:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 79820,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10491:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10491:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 79815,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10407:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "10407:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 79824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10407:122:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10388:141:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79829,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79814,
                        "src": "10555:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 79826,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10539:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "10539:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 79830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79831,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79835,
                        "name": "user_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79799,
                        "src": "10579:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79832,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "10570:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 79834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "10570:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 79836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10570:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79837,
                  "nodeType": "ExpressionStatement",
                  "src": "10570:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10615:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79844,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "10626:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10618:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79842,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10618:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10618:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79838,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "10595:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46481,
                      "src": "10595:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10595:40:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79847,
                  "nodeType": "ExpressionStatement",
                  "src": "10595:40:167"
                }
              ]
            },
            "documentation": {
              "id": 79797,
              "nodeType": "StructuredDocumentation",
              "src": "10025:237:167",
              "text": "[X]  addPool()\n     [X]  Can only be called by an address with the distributor_admin role\n     [X]  Correctly adds pool to an empty slot\n     [X]  Pushes pool to end of list when trying to add to an occupied slot"
            },
            "functionSelector": "06355020",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_addPoolRequiresRole",
            "nameLocation": "10276:35:167",
            "parameters": {
              "id": 79800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79799,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "10320:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 79849,
                  "src": "10312:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10312:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10311:15:167"
            },
            "returnParameters": {
              "id": 79801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79929,
            "nodeType": "FunctionDefinition",
            "src": "10648:458:167",
            "nodes": [],
            "body": {
              "id": 79928,
              "nodeType": "Block",
              "src": "10699:407:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79856,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "10745:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 79928,
                      "src": "10728:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79854,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10728:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79855,
                        "nodeType": "ArrayTypeName",
                        "src": "10728:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 79862,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10770:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10756:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10760:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79858,
                        "nodeType": "ArrayTypeName",
                        "src": "10760:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10756:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10728:44:167"
                },
                {
                  "expression": {
                    "id": 79870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79863,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79856,
                        "src": "10782:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79865,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10791:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10782:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79868,
                          "name": "mintr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78743,
                          "src": "10804:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        ],
                        "id": 79867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10796:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10796:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10796:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10782:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79871,
                  "nodeType": "ExpressionStatement",
                  "src": "10782:28:167"
                },
                {
                  "expression": {
                    "id": 79879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79872,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79856,
                        "src": "10820:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79874,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10829:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10820:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79877,
                          "name": "trsry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78746,
                          "src": "10842:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        ],
                        "id": 79876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10834:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10834:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10834:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10820:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79880,
                  "nodeType": "ExpressionStatement",
                  "src": "10820:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79884,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79856,
                        "src": "10879:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79881,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "10858:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "10858:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10858:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79886,
                  "nodeType": "ExpressionStatement",
                  "src": "10858:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10921:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79893,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "10932:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 79892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10924:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10924:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10924:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79887,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "10898:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "10898:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79896,
                  "nodeType": "ExpressionStatement",
                  "src": "10898:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 79900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10972:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79903,
                            "name": "trsry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78746,
                            "src": "10983:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 79902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10975:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10975:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10975:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79897,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "10949:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "10949:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10949:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79906,
                  "nodeType": "ExpressionStatement",
                  "src": "10949:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11021:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79913,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "11032:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11024:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79911,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11024:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11024:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79907,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11001:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46481,
                      "src": "11001:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11001:40:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79916,
                  "nodeType": "ExpressionStatement",
                  "src": "11001:40:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 79920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11078:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 79918,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "11060:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 79919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "11060:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 79921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11060:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 79924,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "11090:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11082:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11082:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11082:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79917,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "11051:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 79926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11051:48:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79927,
                  "nodeType": "ExpressionStatement",
                  "src": "11051:48:167"
                }
              ]
            },
            "functionSelector": "7a97d1fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_addPoolEmptySlot",
            "nameLocation": "10657:32:167",
            "parameters": {
              "id": 79850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10689:2:167"
            },
            "returnParameters": {
              "id": 79851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10699:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80019,
            "nodeType": "FunctionDefinition",
            "src": "11112:507:167",
            "nodes": [],
            "body": {
              "id": 80018,
              "nodeType": "Block",
              "src": "11166:453:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79936,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "11212:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80018,
                      "src": "11195:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11195:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79935,
                        "nodeType": "ArrayTypeName",
                        "src": "11195:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 79942,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 79940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11237:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 79939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11223:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79937,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11227:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 79938,
                        "nodeType": "ArrayTypeName",
                        "src": "11227:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 79941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11223:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11195:44:167"
                },
                {
                  "expression": {
                    "id": 79950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79943,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79936,
                        "src": "11249:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79945,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 79944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11258:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11249:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79948,
                          "name": "mintr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78743,
                          "src": "11271:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                            "typeString": "contract GoerliMinter"
                          }
                        ],
                        "id": 79947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11263:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11263:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11263:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11249:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79951,
                  "nodeType": "ExpressionStatement",
                  "src": "11249:28:167"
                },
                {
                  "expression": {
                    "id": 79959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79952,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79936,
                        "src": "11287:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 79954,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 79953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11296:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11287:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79957,
                          "name": "trsry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78746,
                          "src": "11309:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                            "typeString": "contract GoerliDaoTreasury"
                          }
                        ],
                        "id": 79956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11301:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11301:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11301:14:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11287:28:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79960,
                  "nodeType": "ExpressionStatement",
                  "src": "11287:28:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79964,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79936,
                        "src": "11346:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 79961,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11325:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "11325:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 79965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11325:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79966,
                  "nodeType": "ExpressionStatement",
                  "src": "11325:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11388:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79973,
                            "name": "mintr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78743,
                            "src": "11399:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliMinter_$38611",
                              "typeString": "contract GoerliMinter"
                            }
                          ],
                          "id": 79972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11391:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79971,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11391:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11391:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79967,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11365:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "11365:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11365:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79976,
                  "nodeType": "ExpressionStatement",
                  "src": "11365:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 79980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11439:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79983,
                            "name": "trsry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78746,
                            "src": "11450:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GoerliDaoTreasury_$41409",
                              "typeString": "contract GoerliDaoTreasury"
                            }
                          ],
                          "id": 79982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11442:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11442:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11442:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79977,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11416:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46446,
                      "src": "11416:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11416:41:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79986,
                  "nodeType": "ExpressionStatement",
                  "src": "11416:41:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 79990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11487:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 79993,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "11498:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 79992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11490:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11490:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11490:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79987,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11467:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46481,
                      "src": "11467:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 79995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11467:40:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79996,
                  "nodeType": "ExpressionStatement",
                  "src": "11467:40:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 80000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11538:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 80003,
                            "name": "xgdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78765,
                            "src": "11549:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          ],
                          "id": 80002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11541:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80001,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11541:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11541:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79997,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "11518:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 79999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46481,
                      "src": "11518:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 80005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11518:38:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80006,
                  "nodeType": "ExpressionStatement",
                  "src": "11518:38:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 80010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11593:1:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 80008,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "11575:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 80009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pools",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45999,
                          "src": "11575:17:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 80011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11575:20:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 80014,
                            "name": "xgdao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78765,
                            "src": "11605:5:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockXgdao_$65778",
                              "typeString": "contract MockXgdao"
                            }
                          ],
                          "id": 80013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11597:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11597:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11597:14:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80007,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "11566:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 80016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11566:46:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80017,
                  "nodeType": "ExpressionStatement",
                  "src": "11566:46:167"
                }
              ]
            },
            "functionSelector": "350b4b27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_addPoolOccupiedSlot",
            "nameLocation": "11121:35:167",
            "parameters": {
              "id": 79930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11156:2:167"
            },
            "returnParameters": {
              "id": 79931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11166:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80068,
            "nodeType": "FunctionDefinition",
            "src": "11779:369:167",
            "nodes": [],
            "body": {
              "id": 80067,
              "nodeType": "Block",
              "src": "11852:296:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80028,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80022,
                          "src": "11872:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 80031,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11889:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DistributorTest_$80589",
                                "typeString": "contract DistributorTest"
                              }
                            ],
                            "id": 80030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11881:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80029,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11881:7:167",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11881:13:167",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11872:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 80025,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "11862:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7193,
                      "src": "11862:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 80034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11862:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80035,
                  "nodeType": "ExpressionStatement",
                  "src": "11862:33:167"
                },
                {
                  "assignments": [
                    80037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80037,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "11919:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80067,
                      "src": "11906:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80036,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11906:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80048,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80040,
                            "name": "ROLESv1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40870,
                            "src": "11961:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ROLESv1_$40870_$",
                              "typeString": "type(contract ROLESv1)"
                            }
                          },
                          "id": 80041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ROLES_RequireRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40816,
                          "src": "11961:25:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32) pure"
                          }
                        },
                        "id": 80042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "11961:34:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6469737472696275746f725f61646d696e",
                            "id": 80045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12017:19:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            },
                            "value": "distributor_admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01fa02fca59ecbf24ddab38ee0f02e926b955e31ecd4a298251a54d889e1de74",
                              "typeString": "literal_string \"distributor_admin\""
                            }
                          ],
                          "id": 80044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12009:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 80043,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12009:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12009:28:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 80038,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11925:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "11925:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11925:122:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11906:141:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80052,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80037,
                        "src": "12073:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80049,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12057:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12057:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12057:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80054,
                  "nodeType": "ExpressionStatement",
                  "src": "12057:20:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80058,
                        "name": "user_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80022,
                        "src": "12097:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80055,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12088:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7048,
                      "src": "12088:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 80059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12088:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80060,
                  "nodeType": "ExpressionStatement",
                  "src": "12088:15:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 80064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12139:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 80061,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "12113:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46495,
                      "src": "12113:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12113:28:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80066,
                  "nodeType": "ExpressionStatement",
                  "src": "12113:28:167"
                }
              ]
            },
            "documentation": {
              "id": 80020,
              "nodeType": "StructuredDocumentation",
              "src": "11625:149:167",
              "text": "[X]  setRewardRate\n     [X]  Can only be called by an address with the distributor_admin role\n     [X]  Correctly sets reward rate"
            },
            "functionSelector": "ea751d99",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setRewardRateRequiresRole",
            "nameLocation": "11788:41:167",
            "parameters": {
              "id": 80023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80022,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "11838:5:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 80068,
                  "src": "11830:13:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11830:7:167",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11829:15:167"
            },
            "returnParameters": {
              "id": 80024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11852:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80087,
            "nodeType": "FunctionDefinition",
            "src": "12154:168:167",
            "nodes": [],
            "body": {
              "id": 80086,
              "nodeType": "Block",
              "src": "12218:104:167",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80076,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80070,
                        "src": "12254:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80073,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "12228:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setRewardRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46495,
                      "src": "12228:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12228:34:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80078,
                  "nodeType": "ExpressionStatement",
                  "src": "12228:34:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80080,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78752,
                            "src": "12281:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Distributor_$46496",
                              "typeString": "contract Distributor"
                            }
                          },
                          "id": 80081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46001,
                          "src": "12281:22:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 80082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12281:24:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80083,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80070,
                        "src": "12307:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80079,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12272:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12272:43:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80085,
                  "nodeType": "ExpressionStatement",
                  "src": "12272:43:167"
                }
              ]
            },
            "functionSelector": "63a8a78e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectness_setsRewardRate",
            "nameLocation": "12163:30:167",
            "parameters": {
              "id": 80071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80070,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "12202:7:167",
                  "nodeType": "VariableDeclaration",
                  "scope": 80087,
                  "src": "12194:15:167",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12194:7:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12193:17:167"
            },
            "returnParameters": {
              "id": 80072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12218:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80149,
            "nodeType": "FunctionDefinition",
            "src": "12463:508:167",
            "nodes": [],
            "body": {
              "id": 80148,
              "nodeType": "Block",
              "src": "12506:465:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    80092,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 80092,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "12529:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80148,
                      "src": "12521:11:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12521:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80096,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80093,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78775,
                        "src": "12538:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStaking_$66053",
                          "typeString": "contract MockStaking"
                        }
                      },
                      "id": 80094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "epoch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65800,
                      "src": "12538:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 80095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12538:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12516:37:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80098,
                        "name": "end",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80092,
                        "src": "12572:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 80099,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12577:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 80100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12577:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80097,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "12563:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12563:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80102,
                  "nodeType": "ExpressionStatement",
                  "src": "12563:30:167"
                },
                {
                  "assignments": [
                    80104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80104,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "12612:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80148,
                      "src": "12604:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12604:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80112,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80109,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "12651:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 80108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12643:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12643:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12643:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80105,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "12628:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12628:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12628:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12604:56:167"
                },
                {
                  "assignments": [
                    80114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80114,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "12683:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80148,
                      "src": "12670:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80113,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12670:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80121,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80117,
                            "name": "Distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46496,
                            "src": "12725:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                              "typeString": "type(contract Distributor)"
                            }
                          },
                          "id": 80118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Distributor_NoRebaseOccurred",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45970,
                          "src": "12725:40:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 80119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12725:49:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 80115,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12689:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "12689:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12689:95:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12670:114:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80125,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80114,
                        "src": "12810:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80122,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "12794:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "12794:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12794:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80127,
                  "nodeType": "ExpressionStatement",
                  "src": "12794:20:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80128,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "12825:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "12825:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12825:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80132,
                  "nodeType": "ExpressionStatement",
                  "src": "12825:27:167"
                },
                {
                  "assignments": [
                    80134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80134,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "12870:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80148,
                      "src": "12862:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12862:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80142,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80139,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "12908:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 80138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12900:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12900:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12900:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80135,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "12885:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "12885:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12885:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12862:55:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80144,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80104,
                        "src": "12936:13:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80145,
                        "name": "balanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80134,
                        "src": "12951:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80143,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "12927:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12927:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80147,
                  "nodeType": "ExpressionStatement",
                  "src": "12927:37:167"
                }
              ]
            },
            "documentation": {
              "id": 80088,
              "nodeType": "StructuredDocumentation",
              "src": "12378:80:167",
              "text": "User Story 1: triggerRebase() fails when block timestamp is before epoch end"
            },
            "functionSelector": "b826e29f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_triggerRebaseStory1",
            "nameLocation": "12472:24:167",
            "parameters": {
              "id": 80089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12496:2:167"
            },
            "returnParameters": {
              "id": 80090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12506:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80213,
            "nodeType": "FunctionDefinition",
            "src": "13069:470:167",
            "nodes": [],
            "body": {
              "id": 80212,
              "nodeType": "Block",
              "src": "13112:427:167",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set up",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32323030",
                        "id": 80156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13149:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        },
                        "value": "2200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        }
                      ],
                      "expression": {
                        "id": 80153,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13141:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "13141:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13141:13:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80158,
                  "nodeType": "ExpressionStatement",
                  "src": "13141:13:167"
                },
                {
                  "assignments": [
                    null,
                    null,
                    80160,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 80160,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "13177:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80212,
                      "src": "13169:11:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13169:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80164,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80161,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78775,
                        "src": "13186:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStaking_$66053",
                          "typeString": "contract MockStaking"
                        }
                      },
                      "id": 80162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "epoch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65800,
                      "src": "13186:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 80163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13186:15:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13164:37:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80166,
                        "name": "end",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80160,
                        "src": "13220:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 80167,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13225:5:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 80168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13225:15:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80165,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1768,
                        1793,
                        1823,
                        1848
                      ],
                      "referencedDeclaration": 1768,
                      "src": "13211:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13211:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80170,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:30:167"
                },
                {
                  "assignments": [
                    80172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80172,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "13260:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80212,
                      "src": "13252:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13252:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80180,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80177,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "13299:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 80176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13291:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13291:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13291:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80173,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "13276:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "13276:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13276:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13252:56:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80181,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "13318:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "13318:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13318:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80185,
                  "nodeType": "ExpressionStatement",
                  "src": "13318:27:167"
                },
                {
                  "assignments": [
                    80187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80187,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "13363:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80212,
                      "src": "13355:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80186,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13355:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80195,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80192,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78775,
                            "src": "13401:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStaking_$66053",
                              "typeString": "contract MockStaking"
                            }
                          ],
                          "id": 80191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13393:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13393:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13393:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80188,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "13378:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "13378:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13378:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13355:55:167"
                },
                {
                  "assignments": [
                    80197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80197,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "13429:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80212,
                      "src": "13421:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13421:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80204,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80198,
                            "name": "balanceBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80172,
                            "src": "13441:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 80199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13457:4:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "13441:20:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80201,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13440:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 80202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13465:9:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "13440:34:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13421:53:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80206,
                          "name": "balanceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80187,
                          "src": "13493:12:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 80207,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80172,
                          "src": "13508:13:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13493:28:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80209,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80197,
                        "src": "13523:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80205,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "13484:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13484:48:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80211,
                  "nodeType": "ExpressionStatement",
                  "src": "13484:48:167"
                }
              ]
            },
            "documentation": {
              "id": 80150,
              "nodeType": "StructuredDocumentation",
              "src": "12977:87:167",
              "text": "User Story 2: triggerRebase() mints GDAO to the staking contract when epoch is over"
            },
            "functionSelector": "fd24774e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_triggerRebaseStory2",
            "nameLocation": "13078:24:167",
            "parameters": {
              "id": 80151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13102:2:167"
            },
            "returnParameters": {
              "id": 80152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13112:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80255,
            "nodeType": "FunctionDefinition",
            "src": "13634:383:167",
            "nodes": [],
            "body": {
              "id": 80254,
              "nodeType": "Block",
              "src": "13677:340:167",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Set up",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32323030",
                        "id": 80220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13714:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        },
                        "value": "2200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        }
                      ],
                      "expression": {
                        "id": 80217,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13706:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "13706:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13706:13:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80222,
                  "nodeType": "ExpressionStatement",
                  "src": "13706:13:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80223,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "13729:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "13729:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13729:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80227,
                  "nodeType": "ExpressionStatement",
                  "src": "13729:27:167"
                },
                {
                  "documentation": "Move forward a little bit",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32353030",
                        "id": 80231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13813:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2500_by_1",
                          "typeString": "int_const 2500"
                        },
                        "value": "2500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2500_by_1",
                          "typeString": "int_const 2500"
                        }
                      ],
                      "expression": {
                        "id": 80228,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13805:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "13805:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13805:13:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80233,
                  "nodeType": "ExpressionStatement",
                  "src": "13805:13:167"
                },
                {
                  "assignments": [
                    80235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80235,
                      "mutability": "mutable",
                      "name": "err",
                      "nameLocation": "13841:3:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80254,
                      "src": "13828:16:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80234,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13828:5:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80242,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 80238,
                            "name": "Distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46496,
                            "src": "13883:11:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Distributor_$46496_$",
                              "typeString": "type(contract Distributor)"
                            }
                          },
                          "id": 80239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Distributor_NoRebaseOccurred",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45970,
                          "src": "13883:40:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 80240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "13883:49:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 80236,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13847:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "13847:22:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 80241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13847:95:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13828:114:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80246,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80235,
                        "src": "13968:3:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80243,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "13952:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7089,
                      "src": "13952:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 80247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13952:20:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80248,
                  "nodeType": "ExpressionStatement",
                  "src": "13952:20:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80249,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "13983:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "13983:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13983:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80253,
                  "nodeType": "ExpressionStatement",
                  "src": "13983:27:167"
                }
              ]
            },
            "documentation": {
              "id": 80214,
              "nodeType": "StructuredDocumentation",
              "src": "13545:84:167",
              "text": "User Story 3: triggerRebase() reverts when attempted to call twice in same epoch"
            },
            "functionSelector": "d961b1ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_triggerRebaseStory3",
            "nameLocation": "13643:24:167",
            "parameters": {
              "id": 80215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13667:2:167"
            },
            "returnParameters": {
              "id": 80216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13677:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80377,
            "nodeType": "FunctionDefinition",
            "src": "14125:928:167",
            "nodes": [],
            "body": {
              "id": 80376,
              "nodeType": "Block",
              "src": "14168:885:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80263,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "14214:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14197:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14197:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80262,
                        "nodeType": "ArrayTypeName",
                        "src": "14197:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 80269,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 80267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14239:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 80266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14225:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14229:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80265,
                        "nodeType": "ArrayTypeName",
                        "src": "14229:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 80268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14225:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14197:44:167"
                },
                {
                  "expression": {
                    "id": 80277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80270,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80263,
                        "src": "14251:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 80272,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 80271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14260:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14251:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80275,
                          "name": "gdaoDai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78779,
                          "src": "14273:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        ],
                        "id": 80274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14265:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14265:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14265:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14251:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80278,
                  "nodeType": "ExpressionStatement",
                  "src": "14251:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80282,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80263,
                        "src": "14312:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 80279,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "14291:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "14291:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 80283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14291:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80284,
                  "nodeType": "ExpressionStatement",
                  "src": "14291:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32323030",
                        "id": 80288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14339:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        },
                        "value": "2200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        }
                      ],
                      "expression": {
                        "id": 80285,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "14331:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "14331:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14331:13:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80290,
                  "nodeType": "ExpressionStatement",
                  "src": "14331:13:167"
                },
                {
                  "assignments": [
                    80292,
                    80294,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80292,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "14364:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14356:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14356:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80294,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "14382:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14374:16:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14374:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80298,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80295,
                        "name": "gdaoDai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78779,
                        "src": "14396:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 80296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67047,
                      "src": "14396:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 80297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14396:21:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14355:62:167"
                },
                {
                  "assignments": [
                    80300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80300,
                      "mutability": "mutable",
                      "name": "priceBefore",
                      "nameLocation": "14435:11:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14427:19:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14427:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80307,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80301,
                      "name": "reserve1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80294,
                      "src": "14449:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80302,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80292,
                            "src": "14461:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14472:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "14461:21:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80305,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14460:23:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14449:34:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14427:56:167"
                },
                {
                  "assignments": [
                    80309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80309,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "14501:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14493:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14493:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80314,
                            "name": "gdaoDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78779,
                            "src": "14540:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14532:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14532:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14532:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80310,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "14517:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "14517:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14517:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14493:56:167"
                },
                {
                  "assignments": [
                    80319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80319,
                      "mutability": "mutable",
                      "name": "expectedBalanceAfter",
                      "nameLocation": "14567:20:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14559:28:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14559:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80328,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80320,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80309,
                      "src": "14590:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80321,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80309,
                              "src": "14607:13:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 80322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14623:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "14607:20:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 80324,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14606:22:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "315f3030305f303030",
                        "id": 80325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14631:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      },
                      "src": "14606:34:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14590:50:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14559:81:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80329,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "14651:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "14651:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14651:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80333,
                  "nodeType": "ExpressionStatement",
                  "src": "14651:27:167"
                },
                {
                  "assignments": [
                    80335,
                    80337,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80335,
                      "mutability": "mutable",
                      "name": "reserve0After",
                      "nameLocation": "14698:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14690:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14690:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80337,
                      "mutability": "mutable",
                      "name": "reserve1After",
                      "nameLocation": "14721:13:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14713:21:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14713:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80341,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80338,
                        "name": "gdaoDai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78779,
                        "src": "14740:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 80339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67047,
                      "src": "14740:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 80340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14740:21:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14689:72:167"
                },
                {
                  "assignments": [
                    80343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80343,
                      "mutability": "mutable",
                      "name": "priceAfter",
                      "nameLocation": "14779:10:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14771:18:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14771:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80350,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80344,
                      "name": "reserve1After",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80337,
                      "src": "14792:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80345,
                            "name": "reserve0After",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80335,
                            "src": "14809:13:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14825:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "14809:26:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80348,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14808:28:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14792:44:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14771:65:167"
                },
                {
                  "assignments": [
                    80352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80352,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "14854:12:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80376,
                      "src": "14846:20:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14846:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80360,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80357,
                            "name": "gdaoDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78779,
                            "src": "14892:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14884:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14884:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14884:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80353,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "14869:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "14869:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14869:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14846:55:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80362,
                        "name": "balanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80352,
                        "src": "14921:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80363,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80309,
                        "src": "14935:13:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80361,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "14912:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14912:37:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80365,
                  "nodeType": "ExpressionStatement",
                  "src": "14912:37:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80367,
                        "name": "balanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80352,
                        "src": "14968:12:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80368,
                        "name": "expectedBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80319,
                        "src": "14982:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80366,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "14959:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14959:44:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80370,
                  "nodeType": "ExpressionStatement",
                  "src": "14959:44:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80372,
                        "name": "priceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80300,
                        "src": "15022:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80373,
                        "name": "priceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80343,
                        "src": "15035:10:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80371,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "15013:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15013:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80375,
                  "nodeType": "ExpressionStatement",
                  "src": "15013:33:167"
                }
              ]
            },
            "documentation": {
              "id": 80256,
              "nodeType": "StructuredDocumentation",
              "src": "14023:97:167",
              "text": "User Story 4: triggerRebase() mints GDAO to the staking contract and a single Uniswap V2 pool"
            },
            "functionSelector": "4f454fd1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_triggerRebaseStory4",
            "nameLocation": "14134:24:167",
            "parameters": {
              "id": 80257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14158:2:167"
            },
            "returnParameters": {
              "id": 80258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14168:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80588,
            "nodeType": "FunctionDefinition",
            "src": "15162:1928:167",
            "nodes": [],
            "body": {
              "id": 80587,
              "nodeType": "Block",
              "src": "15205:1885:167",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80385,
                      "mutability": "mutable",
                      "name": "newPools",
                      "nameLocation": "15251:8:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15234:25:167",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15234:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80384,
                        "nodeType": "ArrayTypeName",
                        "src": "15234:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Set up",
                  "id": 80391,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 80389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15276:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 80388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15262:13:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80386,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15266:7:167",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80387,
                        "nodeType": "ArrayTypeName",
                        "src": "15266:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 80390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15262:16:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15234:44:167"
                },
                {
                  "expression": {
                    "id": 80399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80392,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80385,
                        "src": "15288:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 80394,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 80393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15297:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15288:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80397,
                          "name": "gdaoDai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78779,
                          "src": "15310:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        ],
                        "id": 80396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15302:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15302:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15302:16:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15288:30:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80400,
                  "nodeType": "ExpressionStatement",
                  "src": "15288:30:167"
                },
                {
                  "expression": {
                    "id": 80408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80401,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80385,
                        "src": "15328:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 80403,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 80402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15337:1:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15328:11:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80406,
                          "name": "gdaoWeth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78782,
                          "src": "15350:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        ],
                        "id": 80405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15342:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15342:7:167",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15342:17:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15328:31:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80409,
                  "nodeType": "ExpressionStatement",
                  "src": "15328:31:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80413,
                        "name": "newPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80385,
                        "src": "15390:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 80410,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "15369:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46416,
                      "src": "15369:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 80414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15369:30:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80415,
                  "nodeType": "ExpressionStatement",
                  "src": "15369:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32323030",
                        "id": 80419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15417:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        },
                        "value": "2200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2200_by_1",
                          "typeString": "int_const 2200"
                        }
                      ],
                      "expression": {
                        "id": 80416,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2322,
                        "src": "15409:2:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7535",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6837,
                      "src": "15409:7:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15409:13:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80421,
                  "nodeType": "ExpressionStatement",
                  "src": "15409:13:167"
                },
                {
                  "assignments": [
                    80423,
                    80425,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80423,
                      "mutability": "mutable",
                      "name": "gdaoDaiReserve0",
                      "nameLocation": "15442:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15434:23:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15434:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80425,
                      "mutability": "mutable",
                      "name": "gdaoDaiReserve1",
                      "nameLocation": "15467:15:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15459:23:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15459:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80429,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80426,
                        "name": "gdaoDai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78779,
                        "src": "15488:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 80427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67047,
                      "src": "15488:19:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 80428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15488:21:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15433:76:167"
                },
                {
                  "assignments": [
                    80431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80431,
                      "mutability": "mutable",
                      "name": "gdaoDaiPriceBefore",
                      "nameLocation": "15527:18:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15519:26:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15519:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80438,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80432,
                      "name": "gdaoDaiReserve1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80425,
                      "src": "15548:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80433,
                            "name": "gdaoDaiReserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80423,
                            "src": "15567:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15585:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "15567:28:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80436,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15566:30:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15548:48:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15519:77:167"
                },
                {
                  "assignments": [
                    80440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80440,
                      "mutability": "mutable",
                      "name": "gdaoDaiBalanceBefore",
                      "nameLocation": "15614:20:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15606:28:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15606:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80448,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80445,
                            "name": "gdaoDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78779,
                            "src": "15660:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15652:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15652:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15652:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80441,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "15637:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "15637:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15637:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15606:63:167"
                },
                {
                  "assignments": [
                    80450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80450,
                      "mutability": "mutable",
                      "name": "expectedGdaoDaiBalanceAfter",
                      "nameLocation": "15687:27:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15679:35:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15679:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80459,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80451,
                      "name": "gdaoDaiBalanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80440,
                      "src": "15717:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80452,
                              "name": "gdaoDaiBalanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80440,
                              "src": "15753:20:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 80453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15776:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "15753:27:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 80455,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15752:29:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "315f3030305f303030",
                        "id": 80456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15796:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      },
                      "src": "15752:53:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15717:88:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15679:126:167"
                },
                {
                  "assignments": [
                    80461,
                    80463,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80461,
                      "mutability": "mutable",
                      "name": "gdaoWethReserve0",
                      "nameLocation": "15825:16:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15817:24:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15817:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80463,
                      "mutability": "mutable",
                      "name": "gdaoWethReserve1",
                      "nameLocation": "15851:16:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15843:24:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15843:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 80467,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80464,
                        "name": "gdaoWeth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78782,
                        "src": "15873:8:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                          "typeString": "contract MockUniV2Pair"
                        }
                      },
                      "id": 80465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67047,
                      "src": "15873:20:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 80466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15873:22:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15816:79:167"
                },
                {
                  "assignments": [
                    80469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80469,
                      "mutability": "mutable",
                      "name": "gdaoWethPriceBefore",
                      "nameLocation": "15913:19:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15905:27:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15905:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80476,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80470,
                      "name": "gdaoWethReserve1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80463,
                      "src": "15935:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80471,
                            "name": "gdaoWethReserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80461,
                            "src": "15955:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15974:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "15955:29:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80474,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15954:31:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15935:50:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15905:80:167"
                },
                {
                  "assignments": [
                    80478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80478,
                      "mutability": "mutable",
                      "name": "gdaoWethBalanceBefore",
                      "nameLocation": "16003:21:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "15995:29:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15995:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80486,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80483,
                            "name": "gdaoWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78782,
                            "src": "16050:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16042:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80481,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16042:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16042:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80479,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "16027:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "16027:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16027:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15995:65:167"
                },
                {
                  "assignments": [
                    80488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80488,
                      "mutability": "mutable",
                      "name": "expectedGdaoWethBalanceAfter",
                      "nameLocation": "16078:28:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "16070:36:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16070:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80497,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80489,
                      "name": "gdaoWethBalanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80478,
                      "src": "16109:21:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80490,
                              "name": "gdaoWethBalanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80478,
                              "src": "16146:21:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 80491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16170:4:167",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "16146:28:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 80493,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16145:30:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "315f3030305f303030",
                        "id": 80494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16190:9:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      },
                      "src": "16145:54:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16109:90:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16070:129:167"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80498,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78752,
                        "src": "16210:11:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Distributor_$46496",
                          "typeString": "contract Distributor"
                        }
                      },
                      "id": 80500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "triggerRebase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46226,
                      "src": "16210:25:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16210:27:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80502,
                  "nodeType": "ExpressionStatement",
                  "src": "16210:27:167"
                },
                {
                  "expression": {
                    "id": 80509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 80503,
                          "name": "gdaoDaiReserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80423,
                          "src": "16249:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80504,
                          "name": "gdaoDaiReserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80425,
                          "src": "16266:15:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 80505,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16248:36:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 80506,
                          "name": "gdaoDai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78779,
                          "src": "16287:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "id": 80507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67047,
                        "src": "16287:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 80508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16287:21:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "16248:60:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80510,
                  "nodeType": "ExpressionStatement",
                  "src": "16248:60:167"
                },
                {
                  "assignments": [
                    80512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80512,
                      "mutability": "mutable",
                      "name": "gdaoDaiPriceAfter",
                      "nameLocation": "16326:17:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "16318:25:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16318:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80519,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80513,
                      "name": "gdaoDaiReserve1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80425,
                      "src": "16346:15:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80514,
                            "name": "gdaoDaiReserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80423,
                            "src": "16365:15:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16383:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "16365:28:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80517,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16364:30:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16346:48:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16318:76:167"
                },
                {
                  "assignments": [
                    80521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80521,
                      "mutability": "mutable",
                      "name": "gdaoDaiBalanceAfter",
                      "nameLocation": "16412:19:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "16404:27:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16404:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80526,
                            "name": "gdaoDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78779,
                            "src": "16457:7:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16449:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80524,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16449:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16449:16:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80522,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "16434:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "16434:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16434:32:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16404:62:167"
                },
                {
                  "expression": {
                    "id": 80536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 80530,
                          "name": "gdaoWethReserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80461,
                          "src": "16478:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80531,
                          "name": "gdaoWethReserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80463,
                          "src": "16496:16:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 80532,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16477:38:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                        "typeString": "tuple(uint256,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 80533,
                          "name": "gdaoWeth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78782,
                          "src": "16518:8:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                            "typeString": "contract MockUniV2Pair"
                          }
                        },
                        "id": 80534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67047,
                        "src": "16518:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 80535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16518:22:167",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "16477:63:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80537,
                  "nodeType": "ExpressionStatement",
                  "src": "16477:63:167"
                },
                {
                  "assignments": [
                    80539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80539,
                      "mutability": "mutable",
                      "name": "gdaoWethPriceAfter",
                      "nameLocation": "16558:18:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "16550:26:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16550:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80546,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80540,
                      "name": "gdaoWethReserve1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80463,
                      "src": "16579:16:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80541,
                            "name": "gdaoWethReserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80461,
                            "src": "16599:16:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030303030303030",
                            "id": 80542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16618:10:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1000000000"
                          },
                          "src": "16599:29:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 80544,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16598:31:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16579:50:167",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16550:79:167"
                },
                {
                  "assignments": [
                    80548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80548,
                      "mutability": "mutable",
                      "name": "gdaoWethBalanceAfter",
                      "nameLocation": "16647:20:167",
                      "nodeType": "VariableDeclaration",
                      "scope": 80587,
                      "src": "16639:28:167",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80547,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16639:7:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80556,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80553,
                            "name": "gdaoWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78782,
                            "src": "16693:8:167",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUniV2Pair_$67090",
                              "typeString": "contract MockUniV2Pair"
                            }
                          ],
                          "id": 80552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16685:7:167",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16685:7:167",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16685:17:167",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80549,
                        "name": "gdao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78759,
                        "src": "16670:4:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$24679",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 80550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25382,
                      "src": "16670:14:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16670:33:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16639:64:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80558,
                        "name": "gdaoDaiBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80521,
                        "src": "16723:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80559,
                        "name": "gdaoDaiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80440,
                        "src": "16744:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80557,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "16714:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16714:51:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80561,
                  "nodeType": "ExpressionStatement",
                  "src": "16714:51:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80563,
                        "name": "gdaoDaiBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80521,
                        "src": "16784:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80564,
                        "name": "expectedGdaoDaiBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80450,
                        "src": "16805:27:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80562,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16775:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16775:58:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80566,
                  "nodeType": "ExpressionStatement",
                  "src": "16775:58:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80568,
                        "name": "gdaoDaiPriceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80431,
                        "src": "16852:18:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80569,
                        "name": "gdaoDaiPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80512,
                        "src": "16872:17:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80567,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "16843:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16843:47:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80571,
                  "nodeType": "ExpressionStatement",
                  "src": "16843:47:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80573,
                        "name": "gdaoWethBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80548,
                        "src": "16910:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80574,
                        "name": "gdaoWethBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80478,
                        "src": "16932:21:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80572,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "16901:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16901:53:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80576,
                  "nodeType": "ExpressionStatement",
                  "src": "16901:53:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80578,
                        "name": "gdaoWethBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80548,
                        "src": "16973:20:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80579,
                        "name": "expectedGdaoWethBalanceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80488,
                        "src": "16995:28:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80577,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3672,
                        3697,
                        3710,
                        3726,
                        3768,
                        3810,
                        3852,
                        3889,
                        3926,
                        3963,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "16964:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16964:60:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80581,
                  "nodeType": "ExpressionStatement",
                  "src": "16964:60:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80583,
                        "name": "gdaoWethPriceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80469,
                        "src": "17043:19:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80584,
                        "name": "gdaoWethPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80539,
                        "src": "17064:18:167",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80582,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1066,
                        1091,
                        1121,
                        1146
                      ],
                      "referencedDeclaration": 1066,
                      "src": "17034:8:167",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 80585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17034:49:167",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80586,
                  "nodeType": "ExpressionStatement",
                  "src": "17034:49:167"
                }
              ]
            },
            "documentation": {
              "id": 80378,
              "nodeType": "StructuredDocumentation",
              "src": "15059:98:167",
              "text": "User Story 5: triggerRebase() mints GDAO to the staking contract and multiple Uniswap V2 pools"
            },
            "functionSelector": "e3456aad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_triggerRebaseStory5",
            "nameLocation": "15171:24:167",
            "parameters": {
              "id": 80379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15195:2:167"
            },
            "returnParameters": {
              "id": 80380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15205:0:167"
            },
            "scope": 80589,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78735,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5484,
              "src": "964:4:167"
            },
            "id": 78736,
            "nodeType": "InheritanceSpecifier",
            "src": "964:4:167"
          }
        ],
        "canonicalName": "DistributorTest",
        "contractDependencies": [
          24679,
          29497,
          38611,
          40791,
          41409,
          46496,
          51234,
          65778,
          66053,
          67090
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80589,
          5484,
          2554,
          2291
        ],
        "name": "DistributorTest",
        "nameLocation": "945:15:167",
        "scope": 80590,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 167
}